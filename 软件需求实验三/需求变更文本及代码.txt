---------------------------0---------------------------
需求名称: 4.15 update for org.eclipse.pde.junit.runtime.tests
创建时间: 2019-12-15	16:51:58
修改时间: 2019-12-15	18:01:43

原文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: PDE JUnit Runtime Tests
 Bundle-SymbolicName: org.eclipse.pde.junit.runtime.tests;singleton:=true
-Bundle-Version: 3.5.500.qualifier
+Bundle-Version: 3.5.600.qualifier
 Automatic-Module-Name: org.eclipse.pde.junit.runtime.tests
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Bundle-Vendor: Eclipse.org

原文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml
位置:  -25,7 +25,7  
 	</parent>
 	<groupId>org.eclipse.pde</groupId>
 	<artifactId>org.eclipse.pde.junit.runtime.tests</artifactId>
-	<version>3.5.500-SNAPSHOT</version>
+	<version>3.5.600-SNAPSHOT</version>
 	<packaging>eclipse-test-plugin</packaging>
 
 	<properties>

---------------------------1---------------------------
需求名称: 4.15 update for org.eclipse.pde.ds.core
创建时间: 2019-12-13	10:12:44
修改时间: 2019-12-13	10:43:39

原文件: ds/org.eclipse.pde.ds.core/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.core/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ds.core;singleton:=true
-Bundle-Version: 1.1.700.qualifier
+Bundle-Version: 1.1.800.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ds.core.Activator
 Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.core.filebuffers;bundle-version=

原文件: ds/org.eclipse.pde.ds.core/pom.xml 
新文件: ds/org.eclipse.pde.ds.core/pom.xml
位置:  -20,6 +20,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.core</artifactId>
-  <version>1.1.700-SNAPSHOT</version>
+  <version>1.1.800-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

---------------------------2---------------------------
需求名称: 41.5 update for org.eclipse.pde.ds.annotations
创建时间: 2019-12-13	10:11:50
修改时间: 2019-12-13	10:43:25

原文件: ds/org.eclipse.pde.ds.annotations/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.annotations/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.ds.annotations;singleton:=true
-Bundle-Version: 1.1.600.qualifier
+Bundle-Version: 1.1.700.qualifier
 Bundle-Activator: org.eclipse.pde.ds.internal.annotations.Activator
 Bundle-Vendor: %Bundle-Vendor
 Require-Bundle: org.eclipse.ui;bundle-version=

原文件: ds/org.eclipse.pde.ds.annotations/pom.xml 
新文件: ds/org.eclipse.pde.ds.annotations/pom.xml
位置:  -21,6 +21,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.annotations</artifactId>
-  <version>1.1.600-SNAPSHOT</version>
+  <version>1.1.700-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

---------------------------3---------------------------
需求名称: Bug 553795 - Remove unnecessary dependencies in PDE 
创建时间: 2019-12-05	00:35:23
修改时间: 2019-12-12	05:43:44

原文件: apitools/org.eclipse.pde.api.tools.tests/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.tests/META-INF/MANIFEST.MF
位置:  -2,12 +2,11   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.api.tools.tests
-Bundle-Version: 1.1.700.qualifier
+Bundle-Version: 1.1.800.qualifier
 Bundle-Vendor: %Bundle-Vendor
 Require-Bundle: org.eclipse.core.runtime,
  org.junit,
  org.eclipse.pde.api.tools;bundle-version=
- org.eclipse.core.resources,
  com.ibm.icu,
  org.eclipse.jdt.launching;bundle-version=
  org.eclipse.debug.core,
位置:  -21,10 +20,7   Require-Bundle: org.eclipse.core.runtime,
  org.eclipse.test.performance,
  org.eclipse.jdt.core.tests.builder;bundle-version=
  org.eclipse.jdt.core.tests.compiler;bundle-version=
- org.eclipse.ant.core,
- org.objectweb.asm;bundle-version=
- org.eclipse.jface;bundle-version=
- org.objectweb.asm.tree;bundle-version=
+ org.eclipse.ant.core
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Export-Package: org.eclipse.pde.api.tools.anttasks.tests,
  org.eclipse.pde.api.tools.apiusescan.tests,

原文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools.tests</artifactId>
-  <version>1.1.700-SNAPSHOT</version>
+  <version>1.1.800-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 
 	<build>

原文件: apitools/org.eclipse.pde.api.tools.ui/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ui/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ui; singleton:=true
-Bundle-Version: 1.1.900.qualifier
+Bundle-Version: 1.1.1000.qualifier
 Bundle-Localization: plugin
 Eclipse-LazyStart: true
 Bundle-ActivationPolicy: lazy
位置:  -14,19 +14,13   Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.ui;bundle-version=
  org.eclipse.jdt.ui;bundle-version=
  org.eclipse.jface.text;bundle-version=
- org.eclipse.jdt.launching;bundle-version=
- org.eclipse.core.resources;bundle-version=
  org.eclipse.ui.forms;bundle-version=
  org.eclipse.ui.ide;bundle-version=
- org.eclipse.search;bundle-version=
  org.eclipse.ui.editors;bundle-version=
  org.eclipse.ltk.core.refactoring;bundle-version=
  org.eclipse.ltk.ui.refactoring;bundle-version=
- org.eclipse.core.expressions;bundle-version=
- org.eclipse.equinox.frameworkadmin;bundle-version=
- org.eclipse.debug.core;bundle-version=
  org.eclipse.debug.ui;bundle-version=
- org.eclipse.ui.trace;bundle-version=
+ org.eclipse.equinox.frameworkadmin;bundle-version=
  org.eclipse.jdt.core.manipulation;bundle-version=
  org.eclipse.core.filesystem;bundle-version=
  org.eclipse.equinox.bidi;bundle-version=

原文件: apitools/org.eclipse.pde.api.tools/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools/META-INF/MANIFEST.MF
位置:  -2,21 +2,17   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.api.tools;singleton:=true
-Bundle-Version: 1.1.1100.qualifier
+Bundle-Version: 1.1.1200.qualifier
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin
-Require-Bundle: org.eclipse.osgi;bundle-version=
- org.eclipse.core.runtime;bundle-version=
+Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.pde.core;bundle-version=
  org.eclipse.jdt.core;bundle-version=
  org.eclipse.jdt.launching;bundle-version=
  org.eclipse.core.resources;bundle-version=
  org.eclipse.text;bundle-version=
  org.eclipse.core.filebuffers;bundle-version=
- org.eclipse.ant.core;bundle-version=
  org.objectweb.asm;bundle-version=
- org.eclipse.team.core;bundle-version=
- org.eclipse.core.filesystem;bundle-version=
  org.eclipse.equinox.frameworkadmin;bundle-version=
  org.eclipse.core.variables;bundle-version=
  org.objectweb.asm.tree;bundle-version=

原文件: apitools/org.eclipse.pde.api.tools/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools/pom.xml
位置:  -18,7 +18,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools</artifactId>
-  <version>1.1.1100-SNAPSHOT</version>
+  <version>1.1.1200-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <defaultSigning-excludeInnerJars>true</defaultSigning-excludeInnerJars>

原文件: ds/org.eclipse.pde.ds.annotations.tests/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.annotations.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: DS Annotations Tests
 Bundle-SymbolicName: org.eclipse.pde.ds.annotations.tests
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Activator: org.eclipse.pde.ds.internal.annotations.tests.Activator
 Bundle-Vendor: Eclipse.org
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
位置:  -13,7 +13,6   Require-Bundle: org.eclipse.pde.ds.annotations;bundle-version=
  org.junit;bundle-version=
  org.eclipse.core.resources;bundle-version=
  org.eclipse.core.runtime;bundle-version=
- org.eclipse.jdt.core;bundle-version=
  org.eclipse.text;bundle-version=
 Export-Package: org.eclipse.pde.ds.internal.annotations.tests;x-internal:=true
 Eclipse-BundleShape: dir

原文件: ds/org.eclipse.pde.ds.annotations.tests/pom.xml 
新文件: ds/org.eclipse.pde.ds.annotations.tests/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.annotations.tests</artifactId>
-  <version>1.1.300-SNAPSHOT</version>
+  <version>1.1.400-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 </project>

原文件: ui/org.eclipse.pde.core/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.core/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.core; singleton:=true
-Bundle-Version: 3.13.200.qualifier
+Bundle-Version: 3.13.300.qualifier
 Bundle-Activator: org.eclipse.pde.internal.core.PDECore
 Bundle-Vendor: %provider-name
 Bundle-Localization: plugin
位置:  -76,7 +76,6   Export-Package:
  org.eclipse.pde.internal.core.variables;x-internal:=true
 Require-Bundle: 
  org.eclipse.core.runtime;bundle-version=
- org.eclipse.core.resources;bundle-version=
  org.eclipse.e4.core.contexts;bundle-version=
  org.eclipse.e4.core.services;bundle-version=
  org.eclipse.jdt.core;bundle-version=
位置:  -95,16 +94,13   Require-Bundle:
  org.eclipse.equinox.p2.core;bundle-version=
  org.eclipse.equinox.p2.metadata;bundle-version=
  org.eclipse.equinox.p2.director;bundle-version=
- org.eclipse.equinox.p2.artifact.repository;bundle-version=
  org.eclipse.equinox.p2.repository;bundle-version=
  org.eclipse.equinox.p2.repository.tools;bundle-version=
- org.eclipse.equinox.p2.metadata.repository;bundle-version=
  org.eclipse.equinox.p2.garbagecollector;bundle-version=
  org.eclipse.equinox.p2.touchpoint.eclipse;bundle-version=
  org.eclipse.core.expressions;bundle-version=
  org.eclipse.core.filesystem;bundle-version=
 Eclipse-LazyStart: true
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
-Import-Package: com.ibm.icu.util
 Bundle-ActivationPolicy: lazy
 Automatic-Module-Name: org.eclipse.pde.core

原文件: ui/org.eclipse.pde.core/pom.xml 
新文件: ui/org.eclipse.pde.core/pom.xml
位置:  -20,7 +20,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.core</artifactId>
-  <version>3.13.200-SNAPSHOT</version>
+  <version>3.13.300-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <defaultSigning-excludeInnerJars>true</defaultSigning-excludeInnerJars>

原文件: ui/org.eclipse.pde.genericeditor.extension/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.genericeditor.extension/META-INF/MANIFEST.MF
位置:  -2,19 +2,16   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.genericeditor.extension;singleton:=true
-Bundle-Version: 1.0.600.qualifier
+Bundle-Version: 1.0.700.qualifier
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.core.runtime,
  org.eclipse.jface.text,
- org.eclipse.ui.genericeditor,
- org.eclipse.pde;bundle-version=
  org.eclipse.pde.ui;bundle-version=
  org.eclipse.equinox.p2.metadata;bundle-version=
  org.eclipse.equinox.p2.core;bundle-version=
  org.eclipse.equinox.p2.repository;bundle-version=
  org.eclipse.ui;bundle-version=
  org.eclipse.ui.workbench.texteditor,
- org.eclipse.ui.forms,
  org.eclipse.core.expressions,
  org.eclipse.core.filebuffers,
  org.eclipse.core.filesystem,

原文件: ui/org.eclipse.pde.genericeditor.extension/pom.xml 
新文件: ui/org.eclipse.pde.genericeditor.extension/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.pde.ui</groupId>
   <artifactId>org.eclipse.pde.genericeditor.extension</artifactId>
-  <version>1.0.600-SNAPSHOT</version>
+  <version>1.0.700-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.pde.launching/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.launching/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.launching;singleton:=true
-Bundle-Version: 3.8.0.qualifier
+Bundle-Version: 3.8.100.qualifier
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Bundle-Vendor: %provider-name
 Require-Bundle: org.eclipse.jdt.junit.core;bundle-version=
位置:  -14,8 +14,7   Require-Bundle: org.eclipse.jdt.junit.core;bundle-version=
  org.eclipse.pde.build;bundle-version=
  org.eclipse.pde.core;bundle-version=
  org.eclipse.jdt.debug;bundle-version=
- org.eclipse.core.filesystem;bundle-version=
- org.eclipse.core.resources;bundle-version=
+ org.eclipse.core.filesystem;bundle-version=
 Bundle-Activator: org.eclipse.pde.internal.launching.PDELaunchingPlugin
 Export-Package: org.eclipse.pde.internal.launching;x-friends:=
  org.eclipse.pde.internal.launching.launcher;x-friends:=

原文件: ui/org.eclipse.pde.launching/pom.xml 
新文件: ui/org.eclipse.pde.launching/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.launching</artifactId>
-  <version>3.8.0-SNAPSHOT</version>
+  <version>3.8.100-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <code.ignoredWarnings>-warn:-deprecation,unavoidableGenericProblems</code.ignoredWarnings>

原文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF
位置:  -6,15 +6,10   Bundle-Version: 3.6.800.qualifier
 Bundle-Activator: org.eclipse.pde.internal.runtime.PDERuntimePlugin
 Bundle-Vendor: %provider-name
 Bundle-Localization: plugin
-Require-Bundle: org.eclipse.core.databinding;bundle-version=
- org.eclipse.core.databinding.observable;bundle-version=
- org.eclipse.core.databinding.property;bundle-version=
- org.eclipse.core.runtime;bundle-version=
+Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.ui;bundle-version=
  org.eclipse.ui.forms;bundle-version=
- org.eclipse.jdt.annotation;bundle-version=
  org.eclipse.jdt.core;bundle-version=
- org.eclipse.jface.databinding;bundle-version=
  org.eclipse.core.resources;bundle-version=
  org.eclipse.jdt.ui;bundle-version=
  org.eclipse.pde.ui;bundle-version=

原文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.ui; singleton:=true
-Bundle-Version: 3.11.200.qualifier
+Bundle-Version: 3.11.300.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ui.PDEPlugin
 Bundle-Vendor: %provider-name
 Bundle-Localization: plugin

原文件: ui/org.eclipse.pde.ui/pom.xml 
新文件: ui/org.eclipse.pde.ui/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ui</artifactId>
-  <version>3.11.200-SNAPSHOT</version>
+  <version>3.11.300-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.ui.trace/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.ui.trace/META-INF/MANIFEST.MF
位置:  -2,14 +2,13   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.ui.trace;singleton:=true
-Bundle-Version: 1.1.700.qualifier
+Bundle-Version: 1.1.800.qualifier
 Bundle-Activator: org.eclipse.ui.trace.internal.TracingUIActivator
 Bundle-Vendor: %providerName
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Bundle-ActivationPolicy: lazy
 Bundle-Localization: plugin
-Require-Bundle: org.eclipse.osgi;bundle-version=
- org.eclipse.core.runtime;bundle-version=
+Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.ui;bundle-version=
 Export-Package: org.eclipse.ui.trace.internal;x-internal:=true,
  org.eclipse.ui.trace.internal.datamodel;x-internal:=true,

原文件: ui/org.eclipse.ui.trace/pom.xml 
新文件: ui/org.eclipse.ui.trace/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.ui</groupId>
   <artifactId>org.eclipse.ui.trace</artifactId>
-  <version>1.1.700-SNAPSHOT</version>
+  <version>1.1.800-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

---------------------------4---------------------------
需求名称: Bug 30314 - [Viewers] Check for possible uses of ArrayContentProvider
创建时间: 2019-12-04	16:38:00
修改时间: 2019-12-12	04:51:30

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/ShowResultsAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/ShowResultsAction.java
位置:  -16,7 +16,7   package org.eclipse.pde.internal.ui.search.dependencies;
 import org.eclipse.jface.action.Action;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.dialogs.MessageDialog;
-import org.eclipse.jface.viewers.IStructuredContentProvider;
+import org.eclipse.jface.viewers.ArrayContentProvider;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
 import org.eclipse.pde.internal.ui.PDEPlugin;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
位置:  -58,14 +58,9   public class ShowResultsAction extends Action {
 	private Dialog getUnusedDependeciesInfoDialog() {
 		ListDialog dialog = new ListDialog(PDEPlugin.getActiveWorkbenchShell());
 		dialog.setAddCancelButton(false);
-		dialog.setContentProvider(new IStructuredContentProvider() {
-			@Override
-			public Object[] getElements(Object inputElement) {
-				return fUnusedImports;
-			}
-		});
+		dialog.setContentProvider(ArrayContentProvider.getInstance());
 		dialog.setLabelProvider(PDEPlugin.getDefault().getLabelProvider());
-		dialog.setInput(this);
+		dialog.setInput(fUnusedImports);
 		dialog.create();
 		dialog.getTableViewer().setComparator(new UnusedImportsDialog.Comparator());
 		return dialog;

---------------------------5---------------------------
需求名称: Resolve raw type warnings
创建时间: 2019-12-03	17:03:51
修改时间: 2019-12-11	07:08:57

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/RegistryBrowser.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/RegistryBrowser.java
位置:  -259,6 +259,7   public class RegistryBrowser extends ViewPart {
 		fTreeViewer.setLabelProvider(fLabelProvider);
 		fTreeViewer.setUseHashlookup(true);
 		fTreeViewer.setComparator(new ViewerComparator() {
+			@SuppressWarnings({ 
 			@Override
 			public int compare(Viewer viewer, Object e1, Object e2) {
 				// let Comparables compare themselves

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/spy/sections/ActivePartSection.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/spy/sections/ActivePartSection.java
位置:  -86,11 +86,12   public class ActivePartSection implements ISpySection {
 			Class<?> clazz = site.getClass().getSuperclass();
 			Field field = clazz.getDeclaredField(
 			field.setAccessible(true);
-			List list = (List) field.get(site);
+			@SuppressWarnings(
+			List<PopupMenuExtender> list = (List<PopupMenuExtender>) field.get(site);
 			if (list != null &amp;&amp; !list.isEmpty()) {
 				Set<String> menuIds = new LinkedHashSet<>();
 				for (int i = 0; i < list.size(); i++) {
-					PopupMenuExtender extender = (PopupMenuExtender) list.get(i);
+					PopupMenuExtender extender = list.get(i);
 					menuIds.addAll(extender.getMenuIds());
 				}
 				buffer.append(

---------------------------6---------------------------
需求名称: 4.15 version update for org.eclipse.pde.runtime
创建时间: 2019-12-11	07:07:39
修改时间: 2019-12-11	07:08:46

原文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.runtime; singleton:=true
-Bundle-Version: 3.6.700.qualifier
+Bundle-Version: 3.6.800.qualifier
 Bundle-Activator: org.eclipse.pde.internal.runtime.PDERuntimePlugin
 Bundle-Vendor: %provider-name
 Bundle-Localization: plugin

原文件: ui/org.eclipse.pde.runtime/pom.xml 
新文件: ui/org.eclipse.pde.runtime/pom.xml
位置:  -20,7 +20,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.runtime</artifactId>
-  <version>3.6.700-SNAPSHOT</version>
+  <version>3.6.800-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
   <properties>

---------------------------7---------------------------
需求名称: Use File.separatorChar instead of System.getProperty("file.separator")
创建时间: 2019-11-19	03:34:16
修改时间: 2019-12-11	04:32:53

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/ApiModelFactory.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/ApiModelFactory.java
位置:  -418,7 +418,7   public class ApiModelFactory {
 		}
 		int seqEnd = -1;
 		if (location.charAt(TARGET_PREFIX.length()) != IPath.SEPARATOR) {
-			location = location.replace(System.getProperty(
+			location = location.replace(File.separatorChar, '/');
 			if (location.charAt(TARGET_PREFIX.length()) != IPath.SEPARATOR) {
 				return false;
 			}

---------------------------8---------------------------
需求名称: 4.15 update for org.eclipse.pde.api.tools
创建时间: 2019-12-11	03:46:12
修改时间: 2019-12-11	03:46:12

原文件: apitools/org.eclipse.pde.api.tools/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.api.tools;singleton:=true
-Bundle-Version: 1.1.1000.qualifier
+Bundle-Version: 1.1.1100.qualifier
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.osgi;bundle-version=

原文件: apitools/org.eclipse.pde.api.tools/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools/pom.xml
位置:  -18,7 +18,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools</artifactId>
-  <version>1.1.1000-SNAPSHOT</version>
+  <version>1.1.1100-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <defaultSigning-excludeInnerJars>true</defaultSigning-excludeInnerJars>

---------------------------9---------------------------
需求名称: Bug 553749: Version bumps for 4.15 stream
创建时间: 2019-12-10	03:21:31
修改时间: 2019-12-10	03:21:31

原文件: features/org.eclipse.pde-feature/feature.xml 
新文件: features/org.eclipse.pde-feature/feature.xml
位置:  -2,7 +2,7  
 <feature
       id=
       label=
-      version=
+      version=
       provider-name=
       license-feature=
       license-feature-version=

原文件: features/org.eclipse.pde-feature/pom.xml 
新文件: features/org.eclipse.pde-feature/pom.xml
位置:  -1,6 +1,6  
 <?xml version=
 <!--
-  Copyright (c) 2012, 2017 Eclipse Foundation and others.
+  Copyright (c) 2012, 2019 Eclipse Foundation and others.
   All rights reserved. This program and the accompanying materials
   are made available under the terms of the Eclipse Distribution License v1.0
   which accompanies this distribution, and is available at
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde.feature</groupId>
   <artifactId>org.eclipse.pde</artifactId>
-  <version>3.14.200-SNAPSHOT</version>
+  <version>3.14.300-SNAPSHOT</version>
   <packaging>eclipse-feature</packaging>
 
   <build>

原文件: ui/org.eclipse.pde/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde/META-INF/MANIFEST.MF
位置:  -2,6 +2,6   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde;singleton:=true
-Bundle-Version: 3.13.800.qualifier
+Bundle-Version: 3.13.900.qualifier
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin

原文件: ui/org.eclipse.pde/pom.xml 
新文件: ui/org.eclipse.pde/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde</artifactId>
-  <version>3.13.800-SNAPSHOT</version>
+  <version>3.13.900-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
   <build>

---------------------------10---------------------------
需求名称: Bug 553742 - POM and product version change for 4.15 release
创建时间: 2019-12-06	07:09:29
修改时间: 2019-12-06	07:09:29

原文件: apitools/org.eclipse.pde.api.tools.annotations/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools.annotations/pom.xml
位置:  -11,7 +11,7  
   <parent>
     <artifactId>eclipse.pde.ui.apitools</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools.annotations</artifactId>

原文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: apitools/org.eclipse.pde.api.tools/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui.apitools</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools</artifactId>

原文件: apitools/pom.xml 
新文件: apitools/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
   </parent>
   <artifactId>eclipse.pde.ui.apitools</artifactId>
   <packaging>pom</packaging>

原文件: ds/org.eclipse.pde.ds.annotations.tests/pom.xml 
新文件: ds/org.eclipse.pde.ds.annotations.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.annotations/pom.xml 
新文件: ds/org.eclipse.pde.ds.annotations/pom.xml
位置:  -16,7 +16,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.core/pom.xml 
新文件: ds/org.eclipse.pde.ds.core/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.lib/pom.xml 
新文件: ds/org.eclipse.pde.ds.li新文件: pom.xml
位置:  -16,7 +16,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.tests/pom.xml 
新文件: ds/org.eclipse.pde.ds.tests/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.ui/pom.xml 
新文件: ds/org.eclipse.pde.ds.ui/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds1_2.lib/pom.xml 
新文件: ds/org.eclipse.pde.ds1_2.li新文件: pom.xml
位置:  -17,7 +17,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: features/org.eclipse.pde-feature/pom.xml 
新文件: features/org.eclipse.pde-feature/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde.feature</groupId>

原文件: pom.xml 
新文件: pom.xml
位置:  -17,13 +17,13  
   <parent>
     <groupId>org.eclipse</groupId>
     <artifactId>eclipse-platform-parent</artifactId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../eclipse-platform-parent</relativePath>
   </parent>
 
   <groupId>eclipse.pde.ui</groupId>
   <artifactId>eclipse.pde.ui</artifactId>
-  <version>4.14.0-SNAPSHOT</version>
+  <version>4.15.0-SNAPSHOT</version>
   <packaging>pom</packaging>
 
   <properties>

原文件: tests-pom/pom.xml 
新文件: tests-pom/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
   </parent>
   <artifactId>tests-pom</artifactId>
   <packaging>pom</packaging>

原文件: u
原文件: org.eclipse.pde.ua.core/pom.xml 
新文件: ua/org.eclipse.pde.ua.core/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: u
原文件: org.eclipse.pde.ua.tests/pom.xml 
新文件: ua/org.eclipse.pde.ua.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: u
原文件: org.eclipse.pde.ua.ui/pom.xml 
新文件: ua/org.eclipse.pde.ua.ui/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.core/pom.xml 
新文件: ui/org.eclipse.pde.core/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.genericeditor.extension.tests/pom.xml 
新文件: ui/org.eclipse.pde.genericeditor.extension.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.genericeditor.extension/pom.xml 
新文件: ui/org.eclipse.pde.genericeditor.extension/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde.ui</groupId>

原文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml
位置:  -20,7 +20,7  
 	<parent>
 		<artifactId>tests-pom</artifactId>
 		<groupId>eclipse.pde.ui</groupId>
-		<version>4.14.0-SNAPSHOT</version>
+		<version>4.15.0-SNAPSHOT</version>
 		<relativePath>../../tests-pom/</relativePath>
 	</parent>
 	<groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.junit.runtime/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.launching/pom.xml 
新文件: ui/org.eclipse.pde.launching/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.runtime/pom.xml 
新文件: ui/org.eclipse.pde.runtime/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui.templates.tests/pom.xml 
新文件: ui/org.eclipse.pde.ui.templates.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui.templates/pom.xml 
新文件: ui/org.eclipse.pde.ui.templates/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui.tests.smartimport/pom.xml 
新文件: ui/org.eclipse.pde.ui.tests.smartimport/pom.xml
位置:  -11,7 +11,7  
 	<parent>
 		<artifactId>tests-pom</artifactId>
 		<groupId>eclipse.pde.ui</groupId>
-		<version>4.14.0-SNAPSHOT</version>
+		<version>4.15.0-SNAPSHOT</version>
 		<relativePath>../../tests-pom/</relativePath>
 	</parent>
 	<groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui.tests/pom.xml 
新文件: ui/org.eclipse.pde.ui.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui/pom.xml 
新文件: ui/org.eclipse.pde.ui/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde/pom.xml 
新文件: ui/org.eclipse.pde/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.tools.layout.spy/pom.xml 
新文件: ui/org.eclipse.tools.layout.spy/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.ui.trace/pom.xml 
新文件: ui/org.eclipse.ui.trace/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.14.0-SNAPSHOT</version>
+    <version>4.15.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.ui</groupId>

---------------------------11---------------------------
需求名称: Bug 544977 - Change default for missing exports back to ignore
创建时间: 2019-12-02	16:33:57
修改时间: 2019-12-02	16:35:40

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PreferenceInitializer.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PreferenceInitializer.java
位置:  -53,7 +53,7   public class PreferenceInitializer extends AbstractPreferenceInitializer {
 		prefs.putInt(CompilerFlags.P_BUILD_ENCODINGS, CompilerFlags.IGNORE);
 
 		prefs.putInt(CompilerFlags.P_INCOMPATIBLE_ENV, CompilerFlags.WARNING);
-		prefs.putInt(CompilerFlags.P_MISSING_EXPORT_PKGS, CompilerFlags.WARNING);
+		prefs.putInt(CompilerFlags.P_MISSING_EXPORT_PKGS, CompilerFlags.IGNORE);
 
 		prefs.putInt(CompilerFlags.P_MISSING_VERSION_EXP_PKG, CompilerFlags.IGNORE);
 		prefs.putInt(CompilerFlags.P_MISSING_VERSION_IMP_PKG, CompilerFlags.IGNORE);

---------------------------12---------------------------
需求名称: Bug 553276 - If directory has spaces, then add API baseline doesnt work-
创建时间: 2019-11-25	01:28:11
修改时间: 2019-11-25	01:28:11

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginPathFinder.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginPathFinder.java
位置:  -18,12 +18,9   import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
 import java.net.MalformedURLException;
-import java.net.URI;
 import java.net.URL;
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.HashSet;
-import java.util.Map;
 import java.util.Properties;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
位置:  -271,7 +268,7   public class PluginPathFinder {
 	 * @return URLs to plugins/features
 	 */
 	public static URL[] scanLocations(File[] sites) {
-		Map<URI, URL> result = new HashMap<>();
+		HashSet<URL> result = new HashSet<>();
 		for (int i = 0; i < sites.length; i++) {
 			if (!sites[i].exists()) {
 				continue;
位置:  -280,14 +277,13   public class PluginPathFinder {
 			if (children != null) {
 				for (File element : children) {
 					try {
-						URI elementUri = element.toURI();
-						result.put(elementUri, elementUri.toURL());
+						result.add(element.toURL());
 					} catch (MalformedURLException e) {
 					}
 				}
 			}
 		}
-		return result.values().toArray(new URL[result.size()]);
+		return result.toArray(new URL[result.size()]);
 	}
 
 	public static boolean isDevLaunchMode() {

---------------------------13---------------------------
需求名称: Bug 551402 - Missing pack200 files in I-builds repository
创建时间: 2019-11-19	02:26:31
修改时间: 2019-11-19	04:43:35

原文件: ds/org.eclipse.pde.ds.lib/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.li新文件: META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.ds.lib
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-ClassPath: annotations.jar
 Bundle-Vendor: %Bundle-Vendor
 Export-Package: org.osgi.service.component.annotations;version=

原文件: ds/org.eclipse.pde.ds.lib/pom.xml 
新文件: ds/org.eclipse.pde.ds.li新文件: pom.xml
位置:  -21,7 +21,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.lib</artifactId>
-  <version>1.1.300-SNAPSHOT</version>
+  <version>1.1.400-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <build>
     <plugins>

原文件: ds/org.eclipse.pde.ds1_2.lib/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds1_2.li新文件: META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.ds1_2.lib
-Bundle-Version: 1.0.300.qualifier
+Bundle-Version: 1.0.400.qualifier
 Bundle-ClassPath: annotations.jar
 Bundle-Vendor: %Bundle-Vendor
 Export-Package: org.osgi.service.component.annotations;version=

原文件: ds/org.eclipse.pde.ds1_2.lib/pom.xml 
新文件: ds/org.eclipse.pde.ds1_2.li新文件: pom.xml
位置:  -22,7 +22,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds1_2.lib</artifactId>
-  <version>1.0.300-SNAPSHOT</version>
+  <version>1.0.400-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <build>
     <plugins>

---------------------------14---------------------------
需求名称: Fixed CHKPII errors
创建时间: 2019-11-17	10:31:43
修改时间: 2019-11-17	10:31:43

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties
位置:  -1,5 +1,5  
 ###############################################################################
-# Copyright (c) 2000, 2018 IBM Corporation and others.
+# Copyright (c) 2000, 2019 IBM Corporation and others.
 #
 # This program and the accompanying materials
 # are made available under the terms of the Eclipse Public License 2.0
位置:  -174,7 +174,7   BundleErrorReporter_missingPackagesInProject=This plug-in does not export all of
 BundleErrorReporter_BundleRangeInvalidInBundleVersion=Unsatisfied version constraint: ''{0}''
 BundleErrorReporter_NotExistPDE=Bundle ''{0}'' cannot be resolved
 BundleErrorReporter_EmptyTargetPlatform=Target Platform is not set
-BundleErrorReporter_ExecEnv_tooLow=One of the plug-in's dependencies requires an execution environment of {0}, hence this plug-in's execution environment should be at least {1}.
+BundleErrorReporter_ExecEnv_tooLow=One of the plug-in''s dependencies requires an execution environment of {0}, hence this plug-in''s execution environment should be at least {1}.
 BundleErrorReporter_exportNoJRE=Cannot export packages prefixed with 'java'
 BundleErrorReporter_importNoJRE=Cannot import packages prefixed with 'java'
 BundleErrorReporter_HostNotExistPDE=Host bundle ''{0}'' cannot be resolved

---------------------------15---------------------------
需求名称: Make API Tools completion declare it's not requiring UI
创建时间: 2019-10-23	05:09:56
修改时间: 2019-11-15	16:41:15

原文件: apitools/org.eclipse.pde.api.tools.ui/plugin.xml 
新文件: apitools/org.eclipse.pde.api.tools.ui/plugin.xml
位置:  -22,7 +22,8  
       <javaCompletionProposalComputer
             activate=
             categoryId=
-            class=
+            class=
+            requiresUIThread=
          <partition
                type=
          </partition>

---------------------------16---------------------------
需求名称: Bug 552896 - Use varargs in AbstractLaunchConfigurationTabGroup
创建时间: 2019-11-11	05:07:52
修改时间: 2019-11-14	14:39:01

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/use/ApiUseTabGroup.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/use/ApiUseTabGroup.java
位置:  -16,7 +16,6   package org.eclipse.pde.api.tools.ui.internal.use;
 import org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup;
 import org.eclipse.debug.ui.CommonTab;
 import org.eclipse.debug.ui.ILaunchConfigurationDialog;
-import org.eclipse.debug.ui.ILaunchConfigurationTab;
 
 /**
  * The tab group for API use scanning
位置:  -27,8 +26,7   public class ApiUseTabGroup extends AbstractLaunchConfigurationTabGroup {
 
 	@Override
 	public void createTabs(ILaunchConfigurationDialog dialog, String mode) {
-		setTabs(new ILaunchConfigurationTab[] {
-				new ApiUseScanTab(), new ApiUsePatternTab(), new CommonTab() });
+		setTabs(new ApiUseScanTab(), new ApiUsePatternTab(), new CommonTab());
 	}
 
 }

---------------------------17---------------------------
需求名称: Bug 552937 - Improve message "no longer API" to "no longer an API" 
创建时间: 2019-11-12	04:29:04
修改时间: 2019-11-13	07:55:08

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties
位置:  -140,13 +140,13   ENUM_ELEMENT_TYPE=an enum
 104 = The member type {0} in {1} has been removed
 105 = The type parameter {1} has been removed for {0}
 108 = The constant value {2} has been removed for {0}.{1}
-113 = The type {0} in {1} is no longer API
-125 = The field {0}.{1} is no longer API
-126 = The method {0}.{1} is no longer API
-127 = The constructor {0}.{1} is no longer API
-128 = The enum constant {0}.{1} is no longer API
-129 = The method {0}.{1} with a default value is no longer API
-130 = The method {0}.{1} without a default value is no longer API
+113 = The type {0} in {1} is no longer an API
+125 = The field {0}.{1} is no longer an API
+126 = The method {0}.{1} is no longer an API
+127 = The constructor {0}.{1} is no longer an API
+128 = The enum constant {0}.{1} is no longer an API
+129 = The method {0}.{1} with a default value is no longer an API
+130 = The method {0}.{1} without a default value is no longer an API
 
 #additions
 #{0} = Javadoc tag name, {1} = java member (class, field, method, etc)
位置:  -156,7 +156,7   ENUM_ELEMENT_TYPE=an enum
 132 = The @nooverride restriction has been added for method {0}.{1}
 133 = The interface {1} adds method {2} to {0} that is not tagged as @noimplement
 99 = API analysis aborted: {0} has unresolved constraints: {1}
-134 = The re-exported type {0} in {1} is no longer API
+134 = The re-exported type {0} in {1} is no longer an API
 135 = The re-exported type {0} has been removed from {1}
 
 #API Use Scan breakage error messages 

---------------------------18---------------------------
需求名称: Bug 536592: only report build-relevant dependencies for build order
创建时间: 2019-10-29	11:54:09
修改时间: 2019-11-12	02:46:35

原文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/model/tests/ApiBaselineTests.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/model/tests/ApiBaselineTests.java
位置:  -311,25 +311,6   public class ApiBaselineTests {
 	}
 
 	/**
-	 * Tests component dependents.
-	 *
-	 * @throws CoreException
-	 */
-	@Test
-	public void testDependents() throws CoreException {
-		IApiComponent component = fBaseline.getApiComponent(COMPONENT_A);
-		IApiComponent[] dependents = fBaseline.getDependentComponents(new IApiComponent[] { component });
-		assertEquals(
-		for (IApiComponent apiComponent : dependents) {
-			if (apiComponent.getSymbolicName().equals(COMPONENT_B)) {
-				// done
-				return;
-			}
-		}
-		assertEquals(
-	}
-
-	/**
 	 * Tests getting the location from an 'old' baseline
 	 */
 	@Test

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/ApiBaseline.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/ApiBaseline.java
位置:  -67,6 +67,7   import org.eclipse.pde.api.tools.internal.provisional.model.IApiBaseline;
 import org.eclipse.pde.api.tools.internal.provisional.model.IApiComponent;
 import org.eclipse.pde.api.tools.internal.provisional.model.IApiElement;
 import org.eclipse.pde.api.tools.internal.util.Util;
+import org.eclipse.pde.internal.core.BuildDependencyCollector;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.Constants;
 import org.osgi.framework.Version;
位置:  -666,7 +667,7   public class ApiBaseline extends ApiElement implements IApiBaseline, IVMInstallC
 				}
 			}
 		}
-		return getApiComponents(visible.toArray(new BundleDescription[visible.size()]));
+		return getApiComponents(visible);
 	}
 
 	/**
位置:  -864,13 +865,6   public class ApiBaseline extends ApiElement implements IApiBaseline, IVMInstallC
 		ApiModelCache.getCache().removeElementInfo(this);
 	}
 
-	@Override
-	public IApiComponent[] getDependentComponents(IApiComponent[] components) throws CoreException {
-		ArrayList<BundleDescription> bundles = getBundleDescriptions(components);
-		BundleDescription[] bundleDescriptions = getState().getStateHelper().getDependentBundles(bundles.toArray(new BundleDescription[bundles.size()]));
-		return getApiComponents(bundleDescriptions);
-	}
-
 	/**
 	 * Returns an array of API components corresponding to the given bundle
 	 * descriptions.
位置:  -878,8 +872,8   public class ApiBaseline extends ApiElement implements IApiBaseline, IVMInstallC
 	 * @param bundles bundle descriptions
 	 * @return corresponding API components
 	 */
-	private IApiComponent[] getApiComponents(BundleDescription[] bundles) {
-		ArrayList<IApiComponent> dependents = new ArrayList<>(bundles.length);
+	private IApiComponent[] getApiComponents(Collection<BundleDescription> bundles) {
+		ArrayList<IApiComponent> dependents = new ArrayList<>(bundles.size());
 		for (BundleDescription bundle : bundles) {
 			IApiComponent component = getApiComponent(bundle.getSymbolicName());
 			if (component != null) {
位置:  -909,8 +903,7   public class ApiBaseline extends ApiElement implements IApiBaseline, IVMInstallC
 	@Override
 	public IApiComponent[] getPrerequisiteComponents(IApiComponent[] components) throws CoreException {
 		ArrayList<BundleDescription> bundles = getBundleDescriptions(components);
-		BundleDescription[] bundlesDescriptions = getState().getStateHelper().getPrerequisites(bundles.toArray(new BundleDescription[bundles.size()]));
-		return getApiComponents(bundlesDescriptions);
+		return getApiComponents(BuildDependencyCollector.collectBuildRelevantDependencies(bundles));
 	}
 
 	/**

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/provisional/model/IApiBaseline.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/provisional/model/IApiBaseline.java
位置:  -139,18 +139,6   public interface IApiBaseline extends IApiElement {
 	public void close() throws CoreException;
 
 	/**
-	 * Returns all components in this baseline depending on the given
-	 * components. The returned collection includes the given components and all
-	 * dependents.
-	 *
-	 * @param components the initial set of components
-	 * @return an array of components for the given roots and all components in
-	 *         the state that depend on them
-	 * @throws CoreException if the baseline is disposed
-	 */
-	public IApiComponent[] getDependentComponents(IApiComponent[] components) throws CoreException;
-
-	/**
 	 * Returns all the prerequisite components in this baseline for the given
 	 * components. The returned collection includes the given components and all
 	 * prerequisites.

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/BuildDependencyCollector.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/BuildDependencyCollector.java
位置:  -0,0 +1,87  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.core;
+
+import java.util.ArrayDeque;
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Queue;
+import org.eclipse.osgi.service.resolver.BaseDescription;
+import org.eclipse.osgi.service.resolver.BundleDescription;
+import org.eclipse.osgi.service.resolver.BundleSpecification;
+import org.eclipse.osgi.service.resolver.ExportPackageDescription;
+import org.eclipse.osgi.service.resolver.HostSpecification;
+import org.eclipse.osgi.service.resolver.ImportPackageSpecification;
+
+public class BuildDependencyCollector {
+	private final Collection<BundleDescription> fDependencies = new HashSet<>();
+	private final Queue<BundleDescription> fQueue = new ArrayDeque<>();
+
+	private BuildDependencyCollector(Collection<BundleDescription> roots) {
+		fQueue.addAll(roots);
+		fDependencies.addAll(roots);
+	}
+
+	/**
+	 * Returns all transitive dependencies that are relevant for building
+	 * {@code roots}, including {@code roots} themselves.
+	 */
+	public static Collection<BundleDescription> collectBuildRelevantDependencies(Collection<BundleDescription> roots) {
+		BuildDependencyCollector collector = new BuildDependencyCollector(roots);
+		collector.collect();
+		return collector.fDependencies;
+	}
+
+	private void collect() {
+		while (!fQueue.isEmpty()) {
+			BundleDescription bundleDescription = fQueue.remove();
+
+			collectRequiredBundles(bundleDescription);
+			collectImportedPackages(bundleDescription);
+			collectFragmentHost(bundleDescription);
+		}
+	}
+
+	private void collectRequiredBundles(BundleDescription bundle) {
+		for (BundleSpecification required : bundle.getRequiredBundles()) {
+			BundleDescription supplier = (BundleDescription) required.getSupplier();
+			enqueueDependency(supplier);
+		}
+	}
+
+	private void collectImportedPackages(BundleDescription bundle) {
+		for (ImportPackageSpecification importPackage : bundle.getImportPackages()) {
+			BaseDescription supplier = importPackage.getSupplier();
+			if (supplier instanceof ExportPackageDescription) {
+				enqueueDependency(((ExportPackageDescription) supplier).getExporter());
+			}
+		}
+	}
+
+	private void collectFragmentHost(BundleDescription bundle) {
+		HostSpecification host = bundle.getHost();
+		if (host != null) {
+			BaseDescription supplier = host.getSupplier();
+			if (supplier instanceof BundleDescription) {
+				enqueueDependency((BundleDescription) supplier);
+			}
+		}
+	}
+
+	private void enqueueDependency(BundleDescription dependency) {
+		if (dependency != null &amp;&amp; fDependencies.add(dependency)) {
+			fQueue.add(dependency);
+		}
+	}
+}
\ No newline at end of file

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/DynamicPluginProjectReferences.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/DynamicPluginProjectReferences.java
位置:  -13,7 +13,9  
  *******************************************************************************/
 package org.eclipse.pde.internal.core;
 
-import java.util.ArrayList;
+import static java.util.Collections.singleton;
+import static java.util.stream.Collectors.toList;
+
 import java.util.Collections;
 import java.util.List;
 import org.eclipse.core.resources.IBuildConfiguration;
位置:  -24,8 +26,6   import org.eclipse.core.runtime.CoreException;
 import org.eclipse.jdt.core.IJavaProject;
 import org.eclipse.jdt.core.JavaCore;
 import org.eclipse.osgi.service.resolver.BundleDescription;
-import org.eclipse.osgi.service.resolver.State;
-import org.eclipse.osgi.service.resolver.StateObjectFactory;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
 
 /**
位置:  -34,8 +34,6   import org.eclipse.pde.core.plugin.IPluginModelBase;
  */
 public class DynamicPluginProjectReferences implements IDynamicReferenceProvider {
 
-	public static State state;
-
 	public DynamicPluginProjectReferences() {
 		super();
 	}
位置:  -47,26 +45,14   public class DynamicPluginProjectReferences implements IDynamicReferenceProvider
 		if (javaProject != null) {
 			IPluginModelBase model = PDECore.getDefault().getModelManager().findModel(javaProject.getProject());
 			if (model != null) {
-				List<IProject> allProj = new ArrayList<>();
 				BundleDescription currentBundle = model.getBundleDescription();
-				if (state == null) {
-					state = StateObjectFactory.defaultFactory.createState(true);
-				}
-				if (state != null &amp;&amp; currentBundle != null) {
-					BundleDescription[] bundlePrereq = state.getStateHelper()
-							.getPrerequisites(new BundleDescription[] { currentBundle });
-					for (BundleDescription bundle : bundlePrereq) {
-						if (bundle.equals(currentBundle)) {
-							continue;
-						}
-						IWorkspaceRoot root = PDECore.getWorkspace().getRoot();
-						IProject project = root.getProject(bundle.getName());
-						if (project.exists() &amp;&amp; !allProj.contains(project)) {
-							allProj.add(project);
-						}
-					}
+				if (currentBundle != null) {
+					IWorkspaceRoot root = PDECore.getWorkspace().getRoot();
+					return BuildDependencyCollector.collectBuildRelevantDependencies(singleton(currentBundle)).stream()
+							.filter(dependency -> dependency != currentBundle)
+							.map(dependency -> root.getProject(dependency.getName())).filter(IProject::exists)
+							.distinct().collect(toList());
 				}
-				return allProj;
 			}
 		}
 		return Collections.emptyList();

原文件: ui/org.eclipse.pde.ui.tests/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/META-INF/MANIFEST.MF
位置:  -40,7 +40,8   Require-Bundle: org.junit,
  org.eclipse.ui.views.log,
  org.eclipse.debug.core,
  org.eclipse.pde.genericeditor.extension,
- org.eclipse.equinox.simpleconfigurator.manipulator;bundle-version=
+ org.eclipse.equinox.simpleconfigurator.manipulator;bundle-version=
+ org.hamcrest.library;bundle-version=
 Eclipse-LazyStart: true
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Eclipse-BundleShape: dir

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/AllPDEMinimalTests.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/AllPDEMinimalTests.java
位置:  -43,7 +43,8   import org.junit.runners.Suite.SuiteClasses;
 	AllPDERuntimeTests.class,
 	// ExportBundleTests.class,
 	AllLauncherTests.class, AllLogViewTests.class, ProjectCreationTests.class, BundleRootTests.class,
-		PluginRegistryTestsMinimal.class, ClasspathResolverTest.class, PDESchemaHelperTest.class
+	PluginRegistryTestsMinimal.class, ClasspathResolverTest.class, PDESchemaHelperTest.class,
+	DynamicPluginProjectReferencesTest.class
 	// ClasspathContributorTest.class
 })
 public class AllPDEMinimalTests {

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/AllPDETests.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/AllPDETests.java
位置:  -50,7 +50,8   import org.junit.runners.Suite.SuiteClasses;
 	BundleRootTests.class,
 	PluginRegistryTests.class,
 	ClasspathResolverTest.class,
-	ClasspathContributorTest.class
+	ClasspathContributorTest.class,
+	DynamicPluginProjectReferencesTest.class
 })
 public class AllPDETests {
 

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/project/DynamicPluginProjectReferencesTest.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/project/DynamicPluginProjectReferencesTest.java
位置:  -0,0 +1,116  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.ui.tests.project;
+
+import static org.hamcrest.MatcherAssert.assertThat;
+import static org.hamcrest.Matchers.emptyArray;
+import static org.hamcrest.Matchers.is;
+
+import java.io.IOException;
+import java.util.Arrays;
+import org.eclipse.core.resources.*;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.core.plugin.PluginRegistry;
+import org.eclipse.pde.internal.ui.wizards.imports.PluginImportOperation;
+import org.eclipse.pde.ui.tests.util.ProjectUtils;
+import org.junit.*;
+
+public class DynamicPluginProjectReferencesTest {
+
+	@After
+	public void clearWorkspace() throws Exception {
+		for (IProject project : ResourcesPlugin.getWorkspace().getRoot().getProjects()) {
+			project.delete(false, true, null);
+		}
+	}
+
+	@Test
+	public void testFragmentHost_required() throws Exception {
+		checkHostToFragmentDependencies(
+	}
+
+	@Test
+	public void testFragmentHost_imported() throws Exception {
+		checkHostToFragmentDependencies(
+	}
+
+	private void checkHostToFragmentDependencies(String type) throws IOException, CoreException {
+		IProject host = ProjectUtils.importTestProject(
+		ProjectUtils.importTestProject(
+		ProjectUtils.importTestProject(
+
+		IBuildConfiguration[] referenced = host.getReferencedBuildConfigs(host.getActiveBuildConfig().getName(), false);
+		assertThat(referenced, is(emptyArray()));
+	}
+
+	@Test
+	public void testHopViaTargetPlatform_required() throws Exception {
+		IPluginModelBase osgiModel = PluginRegistry.findModel(
+		IPluginModelBase coreCommandsModel = PluginRegistry.findModel(
+
+		PluginImportOperation operation = new PluginImportOperation(
+				new IPluginModelBase[] { osgiModel, coreCommandsModel }, PluginImportOperation.IMPORT_BINARY, false);
+		operation.schedule();
+		operation.join();
+
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
+		IProject coreCommandsProject = root.getProject(coreCommandsModel.getPluginBase().getId());
+		IProject osgiProject = root.getProject(osgiModel.getPluginBase().getId());
+
+		IBuildConfiguration[] referencedBuildConfigs = coreCommandsProject
+				.getReferencedBuildConfigs(coreCommandsProject.getActiveBuildConfig().getName(), false);
+		for (IBuildConfiguration reference : referencedBuildConfigs) {
+			if (reference.getProject() == osgiProject)
+				return;
+		}
+
+		Assert.fail(
+	}
+
+	@Test
+	public void testHopViaTargetPlatform_imported() throws Exception {
+		IPluginModelBase osgiModel = PluginRegistry.findModel(
+
+		PluginImportOperation operation = new PluginImportOperation(new IPluginModelBase[] { osgiModel },
+				PluginImportOperation.IMPORT_BINARY, false);
+		operation.schedule();
+		operation.join();
+
+		IProject importingTargetBundle = ProjectUtils.importTestProject(
+
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
+		IProject osgiProject = root.getProject(osgiModel.getPluginBase().getId());
+
+		IBuildConfiguration[] referencedBuildConfigs = importingTargetBundle
+				.getReferencedBuildConfigs(importingTargetBundle.getActiveBuildConfig().getName(), false);
+		for (IBuildConfiguration reference : referencedBuildConfigs) {
+			if (reference.getProject() == osgiProject)
+				return;
+		}
+
+		Assert.fail(
+	}
+
+	@Test
+	public void testIgnoreCapabilities() throws Exception {
+		ProjectUtils.importTestProject(
+		IProject consumer = ProjectUtils.importTestProject(
+
+		IBuildConfiguration[] referenced = consumer.getReferencedBuildConfigs(consumer.getActiveBuildConfig().getName(),
+				false);
+		assertThat(referenced, is(emptyArray()));
+	}
+
+}

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/util/ProjectUtils.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/util/ProjectUtils.java
位置:  -13,8 +13,9  
  *******************************************************************************/
 package org.eclipse.pde.ui.tests.util;
 
-import org.eclipse.core.resources.IProject;
-import org.eclipse.core.resources.ResourcesPlugin;
+import java.io.IOException;
+import java.net.URL;
+import org.eclipse.core.resources.*;
 import org.eclipse.core.runtime.*;
 import org.eclipse.jdt.core.IJavaProject;
 import org.eclipse.jdt.core.JavaCore;
位置:  -26,6 +27,7   import org.eclipse.pde.ui.IBundleContentWizard;
 import org.eclipse.pde.ui.templates.AbstractNewPluginTemplateWizard;
 import org.eclipse.pde.ui.templates.ITemplateSection;
 import org.eclipse.pde.ui.tests.runtime.TestUtils;
+import org.osgi.framework.FrameworkUtil;
 
 /**
  * Utility class for project related operations
位置:  -41,6 +43,7   public class ProjectUtils {
 		TestProjectProvider(String projectName) {
 			fProjectName = projectName;
 		}
+
 		@Override
 		public IPath getLocationPath() {
 			return ResourcesPlugin.getWorkspace().getRoot().getLocation();
位置:  -90,7 +93,9   public class ProjectUtils {
 	 * Create a plugin project with the given name and execution environment.
 	 *
 	 * @param projectName
-	 * @param env environment for build path or <code>null</code> if default system JRE
+	 * @param env
+	 *            environment for build path or <code>null</code> if default
+	 *            system JRE
 	 * @return a new plugin project
 	 * @throws CoreException
 	 */
位置:  -125,5 +130,21   public class ProjectUtils {
 		return javaProject;
 	}
 
+	public static IProject importTestProject(String path) throws IOException, CoreException {
+		URL entry = FileLocator.toFileURL(FrameworkUtil.getBundle(ProjectUtils.class).getEntry(path));
+		if (entry == null) {
+			throw new IllegalArgumentException(path + 
+		}
+		Path src = new Path(entry.getPath());
+
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
+		IProjectDescription projectDescription = ResourcesPlugin.getWorkspace()
+				.loadProjectDescription(src.append(IProjectDescription.DESCRIPTION_FILE_NAME));
+		IProject project = root.getProject(projectDescription.getName());
+		project.create(projectDescription, null);
+		project.open(null);
+
+		return project;
+	}
 
 }

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/.gitignore 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/.gitignore
位置:  -0,0 +1  
+bin

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/.classpath 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/.classpath
位置:  -0,0 +1,7  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/.project 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>capabilities.consumer</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/META-INF/MANIFEST.MF
位置:  -0,0 +1,8  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Consumer
+Bundle-SymbolicName: capabilities.consumer
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: capabilities.consumer
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Require-Capability: some.test.capability

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/build.properties 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.consumer/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/.classpath 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/.classpath
位置:  -0,0 +1,7  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/.project 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>capabilities.provider</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/META-INF/MANIFEST.MF
位置:  -0,0 +1,8  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Provider
+Bundle-SymbolicName: capabilities.provider
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: capabilities.provider
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Provide-Capability: some.test.capability

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/build.properties 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/capabilities/capabilities.provider/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/.classpath 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/.classpath
位置:  -0,0 +1,7  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/.project 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>fragment.imported.bundle</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/META-INF/MANIFEST.MF
位置:  -0,0 +1,8  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Host
+Bundle-SymbolicName: fragment.imported.bundle
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: host_import
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Export-Package: fragment.imported.bundle

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/build.properties 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/src/fragment/imported/bundle/Test.java 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/bundle/src/fragment/imported/bundle/Test.java
位置:  -0,0 +1,5  
+package fragment.imported.bundle;
+
+public class Test {
+
+}

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/.classpath 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/.classpath
位置:  -0,0 +1,7  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/.project 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>fragment.imported.testfragment</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/META-INF/MANIFEST.MF
位置:  -0,0 +1,9  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Fragment
+Bundle-SymbolicName: fragment.imported.testfragment
+Bundle-Version: 1.0.0.qualifier
+Fragment-Host: fragment.imported.bundle
+Automatic-Module-Name: fragment_import
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Import-Package: fragment.imported.testframework

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/build.properties 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testfragment/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/.classpath 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/.classpath
位置:  -0,0 +1,7  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/.project 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>fragment.imported.testframework</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/META-INF/MANIFEST.MF
位置:  -0,0 +1,9  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Testframework
+Bundle-SymbolicName: fragment.imported.testframework
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: testframework_import
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Export-Package: fragment.imported.testframework
+Import-Package: fragment.imported.bundle

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/build.properties 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/src/fragment/imported/testframework/Test.java 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-imported/testframework/src/fragment/imported/testframework/Test.java
位置:  -0,0 +1,5  
+package fragment.imported.testframework;
+
+public class Test {
+
+}

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/.classpath 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/.classpath
位置:  -0,0 +1,7  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/.project 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>fragment.required.bundle</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/META-INF/MANIFEST.MF
位置:  -0,0 +1,7  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Host
+Bundle-SymbolicName: fragment.required.bundle
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: host
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/build.properties 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/bundle/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/.classpath 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/.classpath
位置:  -0,0 +1,7  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/.project 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>fragment.required.testfragment</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/META-INF/MANIFEST.MF
位置:  -0,0 +1,9  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Fragment
+Bundle-SymbolicName: fragment.required.testfragment
+Bundle-Version: 1.0.0.qualifier
+Fragment-Host: fragment.required.bundle
+Automatic-Module-Name: fragment
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Require-Bundle: fragment.required.testframework;bundle-version=

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/build.properties 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testfragment/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/.classpath 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/.classpath
位置:  -0,0 +1,7  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/.project 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>fragment.required.testframework</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/META-INF/MANIFEST.MF
位置:  -0,0 +1,8  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Testframework
+Bundle-SymbolicName: fragment.required.testframework
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: testframework
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Require-Bundle: fragment.required.bundle;bundle-version=

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/build.properties 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/host-fragment-required/testframework/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/.classpath 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/.classpath
位置:  -0,0 +1,7  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/.project 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>importing.targetbundle</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/META-INF/MANIFEST.MF
位置:  -0,0 +1,8  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Targetbundle
+Bundle-SymbolicName: importing.targetbundle
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: importing.targetbundle
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Import-Package: org.eclipse.core.runtime;version=

原文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/build.properties 
新文件: ui/org.eclipse.pde.ui.tests/tests/projects/importing.targetbundle/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

---------------------------19---------------------------
需求名称: Bug 231099 - [launching] Make launch config files more SCM friendly
创建时间: 2019-11-12	01:06:26
修改时间: 2019-11-12	01:55:44

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/IPDELauncherConstants.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/IPDELauncherConstants.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2005, 2015 IBM Corporation and others.
+ * Copyright (c) 2005, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -192,7 +192,7   public interface IPDELauncherConstants {
 	 * a comma-separated list of IDs of target platform plug-ins to launch with.
 	 * This value is only used when the Automatic Add option is off.
 	 * 
-	 * @deprecated Use {@link IPDELauncherConstants.SELECTED_TARGET_BUNDLES}
+	 * @deprecated Use {@link IPDELauncherConstants#SELECTED_TARGET_BUNDLES}
 	 */
 	@Deprecated
 	String SELECTED_TARGET_PLUGINS = 

---------------------------20---------------------------
需求名称: Bug 552194 - Add PDE compiler preference for BREE lower than deps BREE
创建时间: 2019-11-05	10:22:07
修改时间: 2019-11-12	01:26:40

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PreferenceInitializer.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PreferenceInitializer.java
位置:  -40,6 +40,7   public class PreferenceInitializer extends AbstractPreferenceInitializer {
 		prefs.putInt(CompilerFlags.P_NOT_EXTERNALIZED, CompilerFlags.IGNORE);
 		prefs.putInt(CompilerFlags.P_SERVICE_COMP_WITHOUT_LAZY_ACT, CompilerFlags.WARNING);
 		prefs.putInt(CompilerFlags.P_NO_AUTOMATIC_MODULE, CompilerFlags.WARNING);
+		prefs.putInt(CompilerFlags.P_EXEC_ENV_TOO_LOW, CompilerFlags.WARNING);
 
 		prefs.putInt(CompilerFlags.P_BUILD, CompilerFlags.WARNING);
 		prefs.putInt(CompilerFlags.P_BUILD_MISSING_OUTPUT, CompilerFlags.IGNORE);

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java
位置:  -650,26 +650,57   public class BundleErrorReporter extends JarManifestErrorReporter {
 		}
 
 		// Check for highest BREE of bundle dependencies
+		int compilerFlag = CompilerFlags.getFlag(fProject, CompilerFlags.P_EXEC_ENV_TOO_LOW);
+		if (compilerFlag != CompilerFlags.IGNORE) {
 		String highestDependencyEE = checkBREE(desc);
 		String highestBundleEE = getHighestBREE(bundleEnvs);
 		try {
 			if (highestBundleEE != getHighestEE(highestDependencyEE, highestBundleEE)) {
-				VirtualMarker marker = report(
-						NLS.bind(PDECoreMessages.BundleErrorReporter_ExecEnv_tooLow,
-								highestDependencyEE, highestDependencyEE),
-						getLine(header, highestBundleEE), sev, PDEMarkerFactory.M_EXEC_ENV_TOO_LOW,
-						PDEMarkerFactory.CAT_EE);
-				addMarkerAttribute(marker, PDEMarkerFactory.REQUIRED_EXEC_ENV, highestDependencyEE);
+
+					VirtualMarker marker = report(
+							NLS.bind(PDECoreMessages.BundleErrorReporter_ExecEnv_tooLow, highestDependencyEE,
+									highestDependencyEE),
+							getLine(header, highestBundleEE), compilerFlag, PDEMarkerFactory.M_EXEC_ENV_TOO_LOW,
+							PDEMarkerFactory.CAT_EE);
+					addMarkerAttribute(marker, PDEMarkerFactory.compilerKey, CompilerFlags.P_EXEC_ENV_TOO_LOW);
+					addMarkerAttribute(marker, PDEMarkerFactory.REQUIRED_EXEC_ENV, highestDependencyEE);
 			}
 		} catch (Exception e) {
 			PDECore.log(e);
 		}
+		}
 	}
 
 	static final List<String> EXECUTION_ENVIRONMENT_NAMES = Arrays.asList(
 			
 			
 
+	/**
+	 * <p>
+	 * Returns the highest Execution Environment between two given Execution
+	 * Environments. An Execution Environment is <b>higher</b> than another
+	 * Execution Environment if it's name occurs at a later index in
+	 * {@link #EXECUTION_ENVIRONMENT_NAMES}, or if the names are equal and it's
+	 * major version is greater, or if the names and major version are equal and
+	 * it's minor version is greater.
+	 * </p>
+	 * <p>
+	 * For example, the name component of JavaSE-1.8 is 'JavaSE', it's major
+	 * version is 1 and it's minor version is 8. Thus JavaSE-1.8 is a higher
+	 * Execution Environment than JRE-1.1 since it's name occurs at later index
+	 * than 'JRE' in {@link #EXECUTION_ENVIRONMENT_NAMES}.
+	 * </p>
+	 *
+	 * @param execEnv1
+	 *            String representation of the first Execution Environment to
+	 *            compare
+	 * @param execEnv2
+	 *            String representation of the second Execution Environment to
+	 *            compare
+	 * @return The string representation of the highest Execution Environment
+	 *         between the two Execution Environments
+	 * @throws IllegalArgumentException
+	 */
 	private static String getHighestEE(String execEnv1, String execEnv2) throws IllegalArgumentException {
 		if (execEnv1 == null) {
 			return execEnv2;
位置:  -730,6 +761,16   public class BundleErrorReporter extends JarManifestErrorReporter {
 		return execEnv1;
 	}
 
+	/**
+	 * Compares all the Execution Environments in an array of Execution
+	 * Environments strings and returns the highest one.
+	 *
+	 * @param executionEnvironments
+	 *            Array of Execution Environment strings to compare
+	 * @return The highest Execution Environment in the array of Execution
+	 *         Environments, null if an error occurred or if an empty array is
+	 *         given
+	 */
 	private String getHighestBREE(String[] executionEnvironments) {
 		if (executionEnvironments.length == 0) {
 			return null;
位置:  -750,6 +791,16   public class BundleErrorReporter extends JarManifestErrorReporter {
 		return highestExecEnv;
 	}
 
+	/**
+	 * Gets the highest Execution Environment required by a bundle or any of
+	 * it's transitive dependencies.
+	 *
+	 * @param desc
+	 *            The bundle description of the bundle which we wish to check
+	 *            for it's highest required Execution Environment
+	 * @return The highest Execution Environment required by the bundle or any
+	 *         of it's dependencies
+	 */
 	private String checkBREE(BundleDescription desc) {
 		String highestBREE = getHighestBREE(desc.getExecutionEnvironments());
 		HashSet<BundleDescription> visitedBundles = new HashSet<>();

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/CompilerFlags.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/CompilerFlags.java
位置:  -73,6 +73,7   public class CompilerFlags {
 	public static final String P_INTERNAL = 
 	public static final String P_SERVICE_COMP_WITHOUT_LAZY_ACT = 
 	public static final String P_NO_AUTOMATIC_MODULE = 
+	public static final String P_EXEC_ENV_TOO_LOW = 
 
 	public static final String P_MISSING_VERSION_EXP_PKG = 
 	public static final String P_MISSING_VERSION_IMP_PKG = 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties
位置:  -174,7 +174,7   BundleErrorReporter_missingPackagesInProject=This plug-in does not export all of
 BundleErrorReporter_BundleRangeInvalidInBundleVersion=Unsatisfied version constraint: ''{0}''
 BundleErrorReporter_NotExistPDE=Bundle ''{0}'' cannot be resolved
 BundleErrorReporter_EmptyTargetPlatform=Target Platform is not set
-BundleErrorReporter_ExecEnv_tooLow=One of the bundles dependencies requires an Execution Environment of {0}, thus this bundles Execution Environment should be set to at least {1}.
+BundleErrorReporter_ExecEnv_tooLow=One of the plug-in's dependencies requires an execution environment of {0}, hence this plug-in's execution environment should be at least {1}.
 BundleErrorReporter_exportNoJRE=Cannot export packages prefixed with 'java'
 BundleErrorReporter_importNoJRE=Cannot import packages prefixed with 'java'
 BundleErrorReporter_HostNotExistPDE=Host bundle ''{0}'' cannot be resolved

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java
位置:  -1835,6 +1835,8   public class PDEUIMessages extends NLS {
 	public static String compilers_s_create_docs;
 	public static String compilers_s_doc_folder;
 	public static String compilers_s_open_tags;
+	public static String compilers_p_exec_env_too_low;
+
 	public static String compilers_p_exported_pkgs;
 
 	public static String compilers_f_unresolved_plugins;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/messages.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/messages.properties
位置:  -7,4 +7,4  
 #  Contributors:
 #     Andrew Obuchowicz <aobuchow@redhat.com>
 ###############################################################################
-ReplaceExecEnvironment_Marker_Label=Replace Bundle Execution Environment with ''{0}''
\ No newline at end of file
+ReplaceExecEnvironment_Marker_Label=Replace plug-in execution environment with ''{0}''
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties
位置:  -1611,6 +1611,7   compilers_p_service_component_without_lazy_act = Usage of service component with
 compilers_p_no_automatic_module_name = No aut&amp;omatic module name:
 compilers_p_deprecated = Usage of deprecated attributes and &amp;elements:
 compilers_p_internal = Usage o&amp;f internal extension points:
+compilers_p_exec_env_too_low=Bundle BREE lower than its dependencies:
 compilers_p_exported_pkgs = Unexported pac&amp;kage:
 compilers_p_missing_exp_pkg = Missing versions on exported packages:
 compilers_p_missing_imp_pkg = Missing versions on imported packages:

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/PDECompilersConfigurationBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/PDECompilersConfigurationBlock.java
位置:  -239,6 +239,7   public class PDECompilersConfigurationBlock extends ConfigurationBlock {
 	private static final Key KEY_P_VERSION_EXP_PKG = getPDEPrefKey(CompilerFlags.P_MISSING_VERSION_EXP_PKG);
 	private static final Key KEY_P_VERSION_IMP_PKG = getPDEPrefKey(CompilerFlags.P_MISSING_VERSION_IMP_PKG);
 	private static final Key KEY_P_VERSION_REQ_BUNDLE = getPDEPrefKey(CompilerFlags.P_MISSING_VERSION_REQ_BUNDLE);
+	private static final Key KEY_P_VERSION_EXEC_ENV_TOO_LOW = getPDEPrefKey(CompilerFlags.P_EXEC_ENV_TOO_LOW);
 
 	private static final Key KEY_S_CREATE_DOCS = getPDEPrefKey(CompilerFlags.S_CREATE_DOCS);
 	private static final Key KEY_S_DOC_FOLDER = getPDEPrefKey(CompilerFlags.S_DOC_FOLDER);
位置:  -246,7 +247,7   public class PDECompilersConfigurationBlock extends ConfigurationBlock {
 
 	private static String[] SEVERITIES = {PDEUIMessages.PDECompilersConfigurationBlock_error, PDEUIMessages.PDECompilersConfigurationBlock_warning, PDEUIMessages.PDECompilersConfigurationBlock_ignore};
 
-	private static Key[] fgAllKeys = {KEY_F_UNRESOLVED_FEATURES, KEY_F_UNRESOLVED_PLUGINS, KEY_P_BUILD, KEY_P_BUILD_MISSING_OUTPUT, KEY_P_BUILD_SOURCE_LIBRARY, KEY_P_BUILD_OUTPUT_LIBRARY, KEY_P_BUILD_SRC_INCLUDES, KEY_P_BUILD_BIN_INCLUDES, KEY_P_BUILD_JAVA_COMPLIANCE, KEY_P_BUILD_JAVA_COMPILER, KEY_P_BUILD_ENCODINGS, KEY_P_INTERNAL, KEY_P_SERVICE_COMP_WITHOUT_LAZY, KEY_P_NO_AUTOMATIC_MODULE_NAME, KEY_P_DEPRECATED, KEY_P_DISCOURAGED_CLASS, KEY_P_INCOMPATIBLE_ENV, KEY_P_MISSING_EXPORT_PKGS, KEY_P_NO_REQUIRED_ATT, KEY_P_NOT_EXTERNALIZED, KEY_P_UNKNOWN_ATTRIBUTE, KEY_P_UNKNOWN_CLASS, KEY_P_UNKNOWN_ELEMENT, KEY_P_UNKNOWN_IDENTIFIER, KEY_P_UNKNOWN_RESOURCE, KEY_P_UNRESOLVED_EX_POINTS, KEY_P_UNRESOLVED_IMPORTS, KEY_P_VERSION_EXP_PKG, KEY_P_VERSION_IMP_PKG, KEY_P_VERSION_REQ_BUNDLE, KEY_S_CREATE_DOCS, KEY_S_DOC_FOLDER, KEY_S_OPEN_TAGS };
+	private static Key[] fgAllKeys = {KEY_F_UNRESOLVED_FEATURES, KEY_F_UNRESOLVED_PLUGINS, KEY_P_BUILD, KEY_P_BUILD_MISSING_OUTPUT, KEY_P_BUILD_SOURCE_LIBRARY, KEY_P_BUILD_OUTPUT_LIBRARY, KEY_P_BUILD_SRC_INCLUDES, KEY_P_BUILD_BIN_INCLUDES, KEY_P_BUILD_JAVA_COMPLIANCE, KEY_P_BUILD_JAVA_COMPILER, KEY_P_BUILD_ENCODINGS, KEY_P_INTERNAL, KEY_P_SERVICE_COMP_WITHOUT_LAZY, KEY_P_NO_AUTOMATIC_MODULE_NAME, KEY_P_DEPRECATED, KEY_P_DISCOURAGED_CLASS, KEY_P_INCOMPATIBLE_ENV, KEY_P_MISSING_EXPORT_PKGS, KEY_P_NO_REQUIRED_ATT, KEY_P_NOT_EXTERNALIZED, KEY_P_UNKNOWN_ATTRIBUTE, KEY_P_UNKNOWN_CLASS, KEY_P_UNKNOWN_ELEMENT, KEY_P_UNKNOWN_IDENTIFIER, KEY_P_UNKNOWN_RESOURCE, KEY_P_UNRESOLVED_EX_POINTS, KEY_P_UNRESOLVED_IMPORTS, KEY_P_VERSION_EXP_PKG, KEY_P_VERSION_IMP_PKG, KEY_P_VERSION_REQ_BUNDLE, KEY_P_VERSION_EXEC_ENV_TOO_LOW, KEY_S_CREATE_DOCS, KEY_S_DOC_FOLDER, KEY_S_OPEN_TAGS };
 
 	/**
 	 * Constant representing the {@link IDialogSettings} section for this block
位置:  -541,7 +542,7   public class PDECompilersConfigurationBlock extends ConfigurationBlock {
 				initializeComboControls(client, new String[] {PDEUIMessages.PDECompilersConfigurationBlock_1, PDEUIMessages.PDECompilersConfigurationBlock_2, PDEUIMessages.PDECompilersConfigurationBlock_0, PDEUIMessages.PDECompilersConfigurationBlock_3, PDEUIMessages.PDECompilersConfigurationBlock_4, PDEUIMessages.PDECompilersConfigurationBlock_5, PDEUIMessages.PDECompilersConfigurationBlock_6, PDEUIMessages.PDECompilersConfigurationBlock_7, PDEUIMessages.CompilersConfigurationTab_buildPropertiesErrors}, new Key[] {KEY_P_BUILD_SOURCE_LIBRARY, KEY_P_BUILD_OUTPUT_LIBRARY, KEY_P_BUILD_MISSING_OUTPUT, KEY_P_BUILD_BIN_INCLUDES, KEY_P_BUILD_SRC_INCLUDES, KEY_P_BUILD_JAVA_COMPLIANCE, KEY_P_BUILD_JAVA_COMPILER, KEY_P_BUILD_ENCODINGS, KEY_P_BUILD}, CompilerFlags.PLUGIN_FLAGS);
 				// Versioning
 				client = createExpansibleComposite(sbody, PDEUIMessages.PDECompilersConfigurationBlock_versioning);
-				initializeComboControls(client, new String[] {PDEUIMessages.compilers_p_missing_require_bundle, PDEUIMessages.compilers_p_missing_exp_pkg, PDEUIMessages.compilers_p_missing_imp_pkg}, new Key[] {KEY_P_VERSION_REQ_BUNDLE, KEY_P_VERSION_EXP_PKG, KEY_P_VERSION_IMP_PKG}, CompilerFlags.PLUGIN_FLAGS);
+				initializeComboControls(client, new String[] {PDEUIMessages.compilers_p_missing_require_bundle, PDEUIMessages.compilers_p_missing_exp_pkg, PDEUIMessages.compilers_p_missing_imp_pkg, PDEUIMessages.compilers_p_exec_env_too_low}, new Key[] {KEY_P_VERSION_REQ_BUNDLE, KEY_P_VERSION_EXP_PKG, KEY_P_VERSION_IMP_PKG, KEY_P_VERSION_EXEC_ENV_TOO_LOW}, CompilerFlags.PLUGIN_FLAGS);
 				// Usage
 				client = createExpansibleComposite(sbody, PDEUIMessages.PDECompilersConfigurationBlock_usage);
 				initializeComboControls(client, new String[] { PDEUIMessages.compilers_p_unresolved_import, PDEUIMessages.compilers_p_unresolved_ex_points, PDEUIMessages.compilers_p_internal, PDEUIMessages.compilers_p_deprecated, PDEUIMessages.compilers_p_not_externalized_att, PDEUIMessages.compilers_p_service_component_without_lazy_act }, new Key[] { KEY_P_UNRESOLVED_IMPORTS, KEY_P_UNRESOLVED_EX_POINTS, KEY_P_INTERNAL, KEY_P_DEPRECATED, KEY_P_NOT_EXTERNALIZED, KEY_P_SERVICE_COMP_WITHOUT_LAZY }, CompilerFlags.PLUGIN_FLAGS);

---------------------------21---------------------------
需求名称: Bug 552523: removed constant attribute parameters
创建时间: 2019-11-11	09:11:51
修改时间: 2019-11-11	09:11:51

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/BundleLauncherHelper.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/BundleLauncherHelper.java
位置:  -43,11 +43,11   public class BundleLauncherHelper {
 	public static final char VERSION_SEPARATOR = '*';
 
 	public static Map<IPluginModelBase, String> getWorkspaceBundleMap(ILaunchConfiguration configuration) throws CoreException {
-		return getWorkspaceBundleMap(configuration, null, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
+		return getWorkspaceBundleMap(configuration, null);
 	}
 
 	public static Map<IPluginModelBase, String> getTargetBundleMap(ILaunchConfiguration configuration) throws CoreException {
-		return getTargetBundleMap(configuration, null, IPDELauncherConstants.SELECTED_TARGET_BUNDLES);
+		return getTargetBundleMap(configuration, null);
 	}
 
 	public static Map<IPluginModelBase, String> getMergedBundleMap(ILaunchConfiguration configuration, boolean osgi) throws CoreException {
位置:  -208,8 +208,8   public class BundleLauncherHelper {
 		}
 
 		Set<String> set = new HashSet<>();
-		map = getWorkspaceBundleMap(configuration, set, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
-		map.putAll(getTargetBundleMap(configuration, set, IPDELauncherConstants.SELECTED_TARGET_BUNDLES));
+		map = getWorkspaceBundleMap(configuration, set);
+		map.putAll(getTargetBundleMap(configuration, set));
 		return map;
 	}
 
位置:  -300,8 +300,8   public class BundleLauncherHelper {
 		return map.keySet().toArray(new IPluginModelBase[map.size()]);
 	}
 
-	public static Map<IPluginModelBase, String> getWorkspaceBundleMap(ILaunchConfiguration configuration, Set<String> set, String attribute) throws CoreException {
-		Set<String> selected = configuration.getAttribute(attribute, Collections.emptySet());
+	public static Map<IPluginModelBase, String> getWorkspaceBundleMap(ILaunchConfiguration configuration, Set<String> set) throws CoreException {
+		Set<String> selected = configuration.getAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES, Collections.emptySet());
 		Map<IPluginModelBase, String> map = new LinkedHashMap<>();
 		for (String token : selected) {
 			int index = token.indexOf('@');
位置:  -425,8 +425,8   public class BundleLauncherHelper {
 
 	}
 
-	public static Map<IPluginModelBase, String> getTargetBundleMap(ILaunchConfiguration configuration, Set<String> set, String attribute) throws CoreException {
-		Set<String> selected = configuration.getAttribute(attribute, Collections.emptySet());
+	public static Map<IPluginModelBase, String> getTargetBundleMap(ILaunchConfiguration configuration, Set<String> set) throws CoreException {
+		Set<String> selected = configuration.getAttribute(IPDELauncherConstants.SELECTED_TARGET_BUNDLES, Collections.emptySet());
 		Map<IPluginModelBase, String> map = new LinkedHashMap<>();
 		for (String token : selected) {
 			int index = token.indexOf('@');

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LaunchPluginValidator.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LaunchPluginValidator.java
位置:  -38,7 +38,7   public class LaunchPluginValidator {
 			return models;
 
 		Collection<IPluginModelBase> result = null;
-		Map<IPluginModelBase, String> bundles = BundleLauncherHelper.getWorkspaceBundleMap(configuration, null, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
+		Map<IPluginModelBase, String> bundles = BundleLauncherHelper.getWorkspaceBundleMap(configuration, null);
 		result = bundles.keySet();
 		return result.toArray(new IPluginModelBase[result.size()]);
 	}

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java
位置:  -265,7 +265,7   public class LauncherUtils {
 	}
 
 	private static void handleSelectedPlugins(ILaunchConfiguration config, String timeStamp, ArrayList<IProject> projects) throws CoreException {
-		Map<IPluginModelBase, String> selectedPlugins = BundleLauncherHelper.getWorkspaceBundleMap(config, null, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
+		Map<IPluginModelBase, String> selectedPlugins = BundleLauncherHelper.getWorkspaceBundleMap(config, null);
 		Iterator<IPluginModelBase> it = selectedPlugins.keySet().iterator();
 		while (it.hasNext()) {
 			IPluginModelBase model = it.next();
位置:  -280,7 +280,7   public class LauncherUtils {
 	}
 
 	private static void handleDeselectedPlugins(ILaunchConfiguration config, String launcherTimeStamp, ArrayList<IProject> projects) throws CoreException {
-		Map<IPluginModelBase, String> deSelectedPlugins = BundleLauncherHelper.getWorkspaceBundleMap(config, null, IPDELauncherConstants.DESELECTED_WORKSPACE_BUNDLES);
+		Map<IPluginModelBase, String> deSelectedPlugins = BundleLauncherHelper.getWorkspaceBundleMap(config, null);
 		IProject[] projs = ResourcesPlugin.getWorkspace().getRoot().getProjects();
 		for (int i = 0; i < projs.length; i++) {
 			if (!WorkspaceModelManager.isPluginProject(projs[i]))

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/OSGiBundleBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/OSGiBundleBlock.java
位置:  -76,8 +76,7   public class OSGiBundleBlock extends AbstractPluginBlock {
 	private void initializePluginsState(ILaunchConfiguration configuration) throws CoreException {
 		Map<IPluginModelBase, String> selected = new HashMap<>();
 		selected.putAll(BundleLauncherHelper.getWorkspaceBundleMap(configuration));
-		selected.putAll(BundleLauncherHelper.getTargetBundleMap(configuration, null,
-				IPDELauncherConstants.SELECTED_TARGET_BUNDLES));
+		selected.putAll(BundleLauncherHelper.getTargetBundleMap(configuration, null));
 
 		initializePluginsState(selected);
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginBlock.java
位置:  -92,10 +92,8   public class PluginBlock extends AbstractPluginBlock {
 
 	private void initializePluginsState(ILaunchConfiguration config) throws CoreException {
 		Map<IPluginModelBase, String> selected = new HashMap<>();
-		selected.putAll(BundleLauncherHelper.getWorkspaceBundleMap(config, null,
-				IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES));
-		selected.putAll(BundleLauncherHelper.getTargetBundleMap(config, null,
-				IPDELauncherConstants.SELECTED_TARGET_BUNDLES));
+		selected.putAll(BundleLauncherHelper.getWorkspaceBundleMap(config, null));
+		selected.putAll(BundleLauncherHelper.getTargetBundleMap(config, null));
 
 		initializePluginsState(selected);
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/product/ProductFromConfigOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/product/ProductFromConfigOperation.java
位置:  -75,10 +75,8   public class ProductFromConfigOperation extends BaseProductCreationOperation {
 
 			// fetch the plug-ins models
 			Set<String> set = new HashSet<>();
-			Map<IPluginModelBase, String> map = BundleLauncherHelper.getWorkspaceBundleMap(fLaunchConfiguration, set,
-					IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
-			map.putAll(BundleLauncherHelper.getTargetBundleMap(fLaunchConfiguration, set,
-					IPDELauncherConstants.SELECTED_TARGET_BUNDLES));
+			Map<IPluginModelBase, String> map = BundleLauncherHelper.getWorkspaceBundleMap(fLaunchConfiguration, set);
+			map.putAll(BundleLauncherHelper.getTargetBundleMap(fLaunchConfiguration, set));
 
 			addPlugins(factory, product, map);
 

---------------------------22---------------------------
需求名称: Bug 231099: Use sorted sets in launch configurations
创建时间: 2019-10-28	10:41:02
修改时间: 2019-11-11	02:02:29

原文件: ui/org.eclipse.pde.launching/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.launching/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.launching;singleton:=true
-Bundle-Version: 3.7.800.qualifier
+Bundle-Version: 3.8.0.qualifier
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Bundle-Vendor: %provider-name
 Require-Bundle: org.eclipse.jdt.junit.core;bundle-version=

原文件: ui/org.eclipse.pde.launching/pom.xml 
新文件: ui/org.eclipse.pde.launching/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.launching</artifactId>
-  <version>3.7.800-SNAPSHOT</version>
+  <version>3.8.0-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <code.ignoredWarnings>-warn:-deprecation,unavoidableGenericProblems</code.ignoredWarnings>

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/BundleLauncherHelper.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/BundleLauncherHelper.java
位置:  -43,20 +43,19   public class BundleLauncherHelper {
 	public static final char VERSION_SEPARATOR = '*';
 
 	public static Map<IPluginModelBase, String> getWorkspaceBundleMap(ILaunchConfiguration configuration) throws CoreException {
-		return getWorkspaceBundleMap(configuration, null, IPDELauncherConstants.WORKSPACE_BUNDLES);
+		return getWorkspaceBundleMap(configuration, null, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
 	}
 
 	public static Map<IPluginModelBase, String> getTargetBundleMap(ILaunchConfiguration configuration) throws CoreException {
-		return getTargetBundleMap(configuration, null, IPDELauncherConstants.TARGET_BUNDLES);
+		return getTargetBundleMap(configuration, null, IPDELauncherConstants.SELECTED_TARGET_BUNDLES);
 	}
 
 	public static Map<IPluginModelBase, String> getMergedBundleMap(ILaunchConfiguration configuration, boolean osgi) throws CoreException {
 		Map<IPluginModelBase, String> map = new LinkedHashMap<>();
 
-		// if we are using the eclipse-based launcher, we need special checks
 		if (!osgi) {
 
-			checkBackwardCompatibility(configuration, true);
+			migrateLaunchConfiguration(configuration);
 
 			if (configuration.getAttribute(IPDELauncherConstants.USE_DEFAULT, true)) {
 				IPluginModelBase[] models = PluginRegistry.getActiveModels();
位置:  -65,6 +64,9   public class BundleLauncherHelper {
 				}
 				return map;
 			}
+
+		} else {
+			migrateOsgiLaunchConfiguration(configuration);
 		}
 
 		if (configuration.getAttribute(IPDELauncherConstants.USE_CUSTOM_FEATURES, false)) {
位置:  -205,11 +207,9   public class BundleLauncherHelper {
 			return map;
 		}
 
-		String workspace = osgi == false ? IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS : IPDELauncherConstants.WORKSPACE_BUNDLES;
-		String target = osgi == false ? IPDELauncherConstants.SELECTED_TARGET_PLUGINS : IPDELauncherConstants.TARGET_BUNDLES;
 		Set<String> set = new HashSet<>();
-		map = getWorkspaceBundleMap(configuration, set, workspace);
-		map.putAll(getTargetBundleMap(configuration, set, target));
+		map = getWorkspaceBundleMap(configuration, set, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
+		map.putAll(getTargetBundleMap(configuration, set, IPDELauncherConstants.SELECTED_TARGET_BUNDLES));
 		return map;
 	}
 
位置:  -301,11 +301,9   public class BundleLauncherHelper {
 	}
 
 	public static Map<IPluginModelBase, String> getWorkspaceBundleMap(ILaunchConfiguration configuration, Set<String> set, String attribute) throws CoreException {
-		String selected = configuration.getAttribute(attribute, 
+		Set<String> selected = configuration.getAttribute(attribute, Collections.emptySet());
 		Map<IPluginModelBase, String> map = new LinkedHashMap<>();
-		StringTokenizer tok = new StringTokenizer(selected, 
-		while (tok.hasMoreTokens()) {
-			String token = tok.nextToken();
+		for (String token : selected) {
 			int index = token.indexOf('@');
 			if (index < 0) { // if no start levels, assume default
 				token = token.concat(
位置:  -338,7 +336,7   public class BundleLauncherHelper {
 		}
 
 		if (configuration.getAttribute(IPDELauncherConstants.AUTOMATIC_ADD, true)) {
-			Set<IPluginModelBase> deselectedPlugins = LaunchPluginValidator.parsePlugins(configuration, IPDELauncherConstants.DESELECTED_WORKSPACE_PLUGINS);
+			Set<IPluginModelBase> deselectedPlugins = LaunchPluginValidator.parsePlugins(configuration, IPDELauncherConstants.DESELECTED_WORKSPACE_BUNDLES);
 			IPluginModelBase[] models = PluginRegistry.getWorkspaceModels();
 			for (int i = 0; i < models.length; i++) {
 				String id = models[i].getPluginBase().getId();
位置:  -428,11 +426,9   public class BundleLauncherHelper {
 	}
 
 	public static Map<IPluginModelBase, String> getTargetBundleMap(ILaunchConfiguration configuration, Set<String> set, String attribute) throws CoreException {
-		String selected = configuration.getAttribute(attribute, 
+		Set<String> selected = configuration.getAttribute(attribute, Collections.emptySet());
 		Map<IPluginModelBase, String> map = new LinkedHashMap<>();
-		StringTokenizer tok = new StringTokenizer(selected, 
-		while (tok.hasMoreTokens()) {
-			String token = tok.nextToken();
+		for (String token : selected) {
 			int index = token.indexOf('@');
 			if (index < 0) { // if no start levels, assume default
 				token = token.concat(
位置:  -488,13 +484,9   public class BundleLauncherHelper {
 		return buffer.toString();
 	}
 
-	public static void checkBackwardCompatibility(ILaunchConfiguration configuration, boolean save) throws CoreException {
-		ILaunchConfigurationWorkingCopy wc = null;
-		if (configuration.isWorkingCopy()) {
-			wc = (ILaunchConfigurationWorkingCopy) configuration;
-		} else {
-			wc = configuration.getWorkingCopy();
-		}
+	@SuppressWarnings(
+	public static void migrateLaunchConfiguration(ILaunchConfiguration configuration) throws CoreException {
+		ILaunchConfigurationWorkingCopy wc = getWorkingCopy(configuration);
 
 		String value = configuration.getAttribute(
 		if (value != null) {
位置:  -571,8 +563,43   public class BundleLauncherHelper {
 			}
 		}
 
-		if (save &amp;&amp; (value != null || value2 != null || upgrade))
+		convertToSet(wc, IPDELauncherConstants.SELECTED_TARGET_PLUGINS, IPDELauncherConstants.SELECTED_TARGET_BUNDLES);
+		convertToSet(wc, IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
+		convertToSet(wc, IPDELauncherConstants.DESELECTED_WORKSPACE_PLUGINS, IPDELauncherConstants.DESELECTED_WORKSPACE_BUNDLES);
+
+		if (wc.isDirty()) {
 			wc.doSave();
+		}
+	}
+
+	private static ILaunchConfigurationWorkingCopy getWorkingCopy(ILaunchConfiguration configuration) throws CoreException {
+		if (configuration.isWorkingCopy()) {
+			return (ILaunchConfigurationWorkingCopy) configuration;
+		}
+		return configuration.getWorkingCopy();
+	}
+
+	@SuppressWarnings(
+	public static void migrateOsgiLaunchConfiguration(ILaunchConfiguration configuration) throws CoreException {
+		ILaunchConfigurationWorkingCopy wc = getWorkingCopy(configuration);
+
+		convertToSet(wc, IPDELauncherConstants.WORKSPACE_BUNDLES, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
+		convertToSet(wc, IPDELauncherConstants.TARGET_BUNDLES, IPDELauncherConstants.SELECTED_TARGET_BUNDLES);
+		convertToSet(wc, IPDELauncherConstants.DESELECTED_WORKSPACE_PLUGINS, IPDELauncherConstants.DESELECTED_WORKSPACE_BUNDLES);
+
+		if (wc.isDirty()) {
+			wc.doSave();
+		}
+	}
+
+	private static void convertToSet(ILaunchConfigurationWorkingCopy wc, String stringAttribute, String listAttribute) throws CoreException {
+		String value = wc.getAttribute(stringAttribute, (String) null);
+		if (value != null) {
+			wc.setAttribute(stringAttribute, (String) null);
+			String[] itemArray = value.split(
+			Set<String> itemSet = new HashSet<>(Arrays.asList(itemArray));
+			wc.setAttribute(listAttribute, itemSet);
+		}
 	}
 
 	/**

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LaunchPluginValidator.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LaunchPluginValidator.java
位置:  -38,7 +38,7   public class LaunchPluginValidator {
 			return models;
 
 		Collection<IPluginModelBase> result = null;
-		Map<IPluginModelBase, String> bundles = BundleLauncherHelper.getWorkspaceBundleMap(configuration, null, IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS);
+		Map<IPluginModelBase, String> bundles = BundleLauncherHelper.getWorkspaceBundleMap(configuration, null, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
 		result = bundles.keySet();
 		return result.toArray(new IPluginModelBase[result.size()]);
 	}
位置:  -52,43 +52,42   public class LaunchPluginValidator {
 	 */
 	public static Set<IPluginModelBase> parsePlugins(ILaunchConfiguration configuration, String attribute) throws CoreException {
 		HashSet<IPluginModelBase> set = new HashSet<>();
-		String ids = configuration.getAttribute(attribute, (String) null);
-		if (ids != null) {
-			String[] entries = ids.split(
-			Map<String, IPluginModelBase> unmatchedEntries = new HashMap<>();
-			for (int i = 0; i < entries.length; i++) {
-				int index = entries[i].indexOf('@');
-				if (index < 0) { // if no start levels, assume default
-					entries[i] = entries[i].concat(
-					index = entries[i].indexOf('@');
-				}
-				String idVersion = entries[i].substring(0, index);
-				int versionIndex = entries[i].indexOf(BundleLauncherHelper.VERSION_SEPARATOR);
-				String id = (versionIndex > 0) ? idVersion.substring(0, versionIndex) : idVersion;
-				String version = (versionIndex > 0) ? idVersion.substring(versionIndex + 1) : null;
-				ModelEntry entry = PluginRegistry.findEntry(id);
-				if (entry != null) {
-					IPluginModelBase matchingModels[] = attribute.equals(IPDELauncherConstants.SELECTED_TARGET_PLUGINS) ? entry.getExternalModels() : entry.getWorkspaceModels();
-					for (IPluginModelBase matchingModel : matchingModels) {
-						if (matchingModel.isEnabled()) {
-							// TODO Very similar logic to BundleLauncherHelper
-							// the logic here is this (see bug 225644)
-							// a) if we come across a bundle that has the right version, immediately add it
-							// b) if there's no version, add it
-							// c) if there's only one instance of that bundle in the list of ids... add it
-							if (version == null || matchingModel.getPluginBase().getVersion().equals(version)) {
-								set.add(matchingModel);
-							} else if (matchingModels.length == 1) {
-								if (unmatchedEntries.remove(id) == null) {
-									unmatchedEntries.put(id, matchingModel);
-								}
+		Map<String, IPluginModelBase> unmatchedEntries = new HashMap<>();
+		Set<String> entries = configuration.getAttribute(attribute, Collections.emptySet());
+
+		for (String token : entries) {
+			int index = token.indexOf('@');
+			if (index < 0) { // if no start levels, assume default
+				token = token.concat(
+				index = token.indexOf('@');
+			}
+			String idVersion = token.substring(0, index);
+			int versionIndex = token.indexOf(BundleLauncherHelper.VERSION_SEPARATOR);
+			String id = (versionIndex > 0) ? idVersion.substring(0, versionIndex) : idVersion;
+			String version = (versionIndex > 0) ? idVersion.substring(versionIndex + 1) : null;
+			ModelEntry entry = PluginRegistry.findEntry(id);
+			if (entry != null) {
+				IPluginModelBase matchingModels[] = attribute.equals(IPDELauncherConstants.SELECTED_TARGET_BUNDLES) ? entry.getExternalModels() : entry.getWorkspaceModels();
+				for (IPluginModelBase matchingModel : matchingModels) {
+					if (matchingModel.isEnabled()) {
+						// TODO Very similar logic to BundleLauncherHelper
+						// the logic here is this (see bug 225644)
+						// a) if we come across a bundle that has the right version, immediately add it
+						// b) if there's no version, add it
+						// c) if there's only one instance of that bundle in the list of ids... add it
+						if (version == null || matchingModel.getPluginBase().getVersion().equals(version)) {
+							set.add(matchingModel);
+						} else if (matchingModels.length == 1) {
+							if (unmatchedEntries.remove(id) == null) {
+								unmatchedEntries.put(id, matchingModel);
 							}
 						}
 					}
 				}
 			}
-			set.addAll(unmatchedEntries.values());
 		}
+
+		set.addAll(unmatchedEntries.values());
 		return set;
 	}
 

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java
位置:  -265,7 +265,7   public class LauncherUtils {
 	}
 
 	private static void handleSelectedPlugins(ILaunchConfiguration config, String timeStamp, ArrayList<IProject> projects) throws CoreException {
-		Map<IPluginModelBase, String> selectedPlugins = BundleLauncherHelper.getWorkspaceBundleMap(config, null, IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS);
+		Map<IPluginModelBase, String> selectedPlugins = BundleLauncherHelper.getWorkspaceBundleMap(config, null, IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
 		Iterator<IPluginModelBase> it = selectedPlugins.keySet().iterator();
 		while (it.hasNext()) {
 			IPluginModelBase model = it.next();
位置:  -280,7 +280,7   public class LauncherUtils {
 	}
 
 	private static void handleDeselectedPlugins(ILaunchConfiguration config, String launcherTimeStamp, ArrayList<IProject> projects) throws CoreException {
-		Map<IPluginModelBase, String> deSelectedPlugins = BundleLauncherHelper.getWorkspaceBundleMap(config, null, IPDELauncherConstants.DESELECTED_WORKSPACE_PLUGINS);
+		Map<IPluginModelBase, String> deSelectedPlugins = BundleLauncherHelper.getWorkspaceBundleMap(config, null, IPDELauncherConstants.DESELECTED_WORKSPACE_BUNDLES);
 		IProject[] projs = ResourcesPlugin.getWorkspace().getRoot().getProjects();
 		for (int i = 0; i < projs.length; i++) {
 			if (!WorkspaceModelManager.isPluginProject(projs[i]))

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/IPDELauncherConstants.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/IPDELauncherConstants.java
位置:  -123,30 +123,58   public interface IPDELauncherConstants {
 	 * a comma-separated list of IDs of workspace plug-ins to launch with.
 	 * This value is only used when the Automatic Add option is off.
 	 *
-	 * @see IPDELauncherConstants#AUTOMATIC_ADD
+	 * @deprecated Use {@link IPDELauncherConstants#SELECTED_WORKSPACE_BUNDLES}
 	 */
+	@Deprecated
 	String SELECTED_WORKSPACE_PLUGINS = 
 
 	/**
+	 * Launch configuration attribute key. The value is a set specifying
+	 * IDs of workspace bundles to launch with.
+	 * This value is only used when the Automatic Add option is off.
+	 * 
+	 * Each item in the set is of the format:
+	 * &amp;lt;plugin-id&amp;gt;@&amp;lt;start-level&amp;gt;:&amp;lt;auto-start&amp;gt;
+	 * 
+	 * @see IPDELauncherConstants#AUTOMATIC_ADD
+	 * @see IPDELauncherConstants#DEFAULT_AUTO_START
+	 * @see IPDELauncherConstants#DEFAULT_START_LEVEL
+	 * 
+	 * @since 3.8
+	 */
+	String SELECTED_WORKSPACE_BUNDLES = 
+
+	/**
 	 * Launch configuration attribute key. The value is a string specifying
 	 * a comma-separated list of IDs of workspace plug-ins that are to be excluded from
 	 * the launch.
 	 * This value is only used when the Automatic Add option is on.
 	 *
-	 * @see IPDELauncherConstants#AUTOMATIC_ADD
+	 * @deprecated Use {@link IPDELauncherConstants#DESELECTED_WORKSPACE_BUNDLES}
 	 */
+	@Deprecated
 	String DESELECTED_WORKSPACE_PLUGINS = 
 
 	/**
+	 * Launch configuration attribute key. The value is a set specifying
+	 * IDs of workspace bundles that are to be excluded from the launch.
+	 * This value is only used when the Automatic Add option is on.
+	 * 
+	 * @see IPDELauncherConstants#AUTOMATIC_ADD
+	 * @since 3.8
+	 */
+	String DESELECTED_WORKSPACE_BUNDLES = 
+
+	/**
 	 * Launch configuration attribute key. The value is a boolean specifying
 	 * whether workspace plug-in created after the creation of a launch configuration
 	 * should be added to the list of plug-ins to launch with.
 	 *
-	 * If the value is <code>true</code>, then DESELECTED_WORKSPACE_PLUGINS should be used.
-	 * Otherwise, SELECTED_WORKSPACE_PLUGINS should be used.
+	 * If the value is <code>true</code>, then DESELECTED_WORKSPACE_BUNDLES should be used.
+	 * Otherwise, SELECTED_WORKSPACE_BUNDLES should be used.
 	 *
-	 * @see IPDELauncherConstants#DESELECTED_WORKSPACE_PLUGINS
-	 * @see IPDELauncherConstants#SELECTED_WORKSPACE_PLUGINS
+	 * @see IPDELauncherConstants#DESELECTED_WORKSPACE_BUNDLES
+	 * @see IPDELauncherConstants#SELECTED_WORKSPACE_BUNDLES
 	 */
 	String AUTOMATIC_ADD = 
 
位置:  -163,10 +191,27   public interface IPDELauncherConstants {
 	 * Launch configuration attribute key. The value is a string specifying
 	 * a comma-separated list of IDs of target platform plug-ins to launch with.
 	 * This value is only used when the Automatic Add option is off.
+	 * 
+	 * @deprecated Use {@link IPDELauncherConstants.SELECTED_TARGET_BUNDLES}
 	 */
+	@Deprecated
 	String SELECTED_TARGET_PLUGINS = 
 
 	/**
+	 * Launch configuration attribute key. The value is a set specifying
+	 * the IDs of non-workspace bundles to launch with.
+	 * This value is only used when the Automatic Add option is off.
+	 * 
+	 * Each item in the set is of the format:
+	 * &amp;lt;plugin-id&amp;gt;@&amp;lt;start-level&amp;gt;:&amp;lt;auto-start&amp;gt;
+	 * 
+	 * @see IPDELauncherConstants#DEFAULT_AUTO_START
+	 * @see IPDELauncherConstants#DEFAULT_START_LEVEL
+	 * @since 3.8
+	 */
+	String SELECTED_TARGET_BUNDLES = 
+
+	/**
 	 * Launch configuration attribute key. The value is a boolean indicating
 	 * whether the computation of required plug-ins on the Plug-ins tab should include
 	 * the traversal of optional dependencies.
位置:  -297,9 +342,9   public interface IPDELauncherConstants {
 	 * Each token in the list is of the format:
 	 * &amp;lt;plugin-id&amp;gt;@&amp;lt;start-level&amp;gt;:&amp;lt;auto-start&amp;gt;
 	 *
-	 * @see IPDELauncherConstants#DEFAULT_AUTO_START
-	 * @see IPDELauncherConstants#DEFAULT_START_LEVEL
+	 * @deprecated Use {@link IPDELauncherConstants#SELECTED_WORKSPACE_BUNDLES}
 	 */
+	@Deprecated
 	String WORKSPACE_BUNDLES = 
 
 	/**
位置:  -309,9 +354,9   public interface IPDELauncherConstants {
 	 * Each token in the list is of the format:
 	 * &amp;lt;plugin-id&amp;gt;@&amp;lt;start-level&amp;gt;:&amp;lt;auto-start&amp;gt;
 	 *
-	 * @see IPDELauncherConstants#DEFAULT_AUTO_START
-	 * @see IPDELauncherConstants#DEFAULT_START_LEVEL
+	 * @deprecated Use {@link IPDELauncherConstants#SELECTED_TARGET_BUNDLES}
 	 */
+	@Deprecated
 	String TARGET_BUNDLES = 
 
 	/**

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/OSGiLaunchConfigurationInitializer.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/OSGiLaunchConfigurationInitializer.java
位置:  -13,6 +13,8  
  *******************************************************************************/
 package org.eclipse.pde.launching;
 
+import java.util.HashSet;
+import java.util.Set;
 import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
 import org.eclipse.jdt.launching.IJavaLaunchConfigurationConstants;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
位置:  -75,24 +77,22   public class OSGiLaunchConfigurationInitializer {
 	 * 			the launch configuration
 	 */
 	protected void initializeBundleState(ILaunchConfigurationWorkingCopy configuration) {
-		StringBuilder explugins = new StringBuilder();
-		StringBuilder wsplugins = new StringBuilder();
+		Set<String> targetBundles = new HashSet<>();
+		Set<String> workspaceBundles = new HashSet<>();
 		IPluginModelBase[] models = PluginRegistry.getActiveModels();
 		for (IPluginModelBase model : models) {
 			boolean inWorkspace = model.getUnderlyingResource() != null;
-			appendBundle(inWorkspace ? wsplugins : explugins, model);
+			appendBundle(inWorkspace ? workspaceBundles : targetBundles, model);
 		}
-		configuration.setAttribute(IPDELauncherConstants.WORKSPACE_BUNDLES, wsplugins.toString());
-		configuration.setAttribute(IPDELauncherConstants.TARGET_BUNDLES, explugins.toString());
+		configuration.setAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES, workspaceBundles);
+		configuration.setAttribute(IPDELauncherConstants.SELECTED_TARGET_BUNDLES, targetBundles);
 		configuration.setAttribute(IPDELauncherConstants.AUTOMATIC_ADD, true);
 	}
 
-	private void appendBundle(StringBuilder buffer, IPluginModelBase model) {
-		if (buffer.length() > 0)
-			buffer.append(
+	private void appendBundle(Set<String> bundleSet, IPluginModelBase model) {
 		String id = model.getPluginBase().getId();
 		String value = BundleLauncherHelper.writeBundleEntry(model, getStartLevel(id), getAutoStart(id));
-		buffer.append(value);
+		bundleSet.add(value);
 	}
 
 	/**

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/AbstractLaunchTest.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/AbstractLaunchTest.java
位置:  -0,0 +1,66  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *     Andras Peteri <apeteri@b2international.com> - extracted common superclass
+ *******************************************************************************/
+package org.eclipse.pde.ui.tests.launcher;
+
+import java.io.InputStream;
+import java.net.URL;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.util.ArrayList;
+import java.util.Collections;
+import org.eclipse.core.resources.*;
+import org.eclipse.core.runtime.FileLocator;
+import org.eclipse.debug.core.*;
+import org.eclipse.pde.ui.tests.util.TargetPlatformUtil;
+import org.junit.Before;
+import org.junit.BeforeClass;
+import org.osgi.framework.Bundle;
+import org.osgi.framework.FrameworkUtil;
+
+public abstract class AbstractLaunchTest {
+
+	private IProject project;
+
+	@BeforeClass
+	public static void setupTargetPlatform() throws Exception {
+		TargetPlatformUtil.setRunningPlatformAsTarget();
+	}
+
+	@Before
+	public void setupLaunchConfigurations() throws Exception {
+		IWorkspace workspace = ResourcesPlugin.getWorkspace();
+		project = workspace.getRoot().getProject(getClass().getSimpleName());
+		if (project.exists()) {
+			project.delete(true, null);
+		}
+
+		project.create(null);
+		project.open(null);
+		Bundle bundle = FrameworkUtil.getBundle(getClass());
+		ArrayList<URL> resources = Collections.list(bundle.findEntries(
+		for (URL url : resources) {
+			Path path = Paths.get(FileLocator.toFileURL(url).toURI());
+			IFile file = project.getFile(path.getFileName().toString());
+			try (InputStream in = url.openStream()) {
+				file.create(in, true, null);
+			}
+		}
+	}
+
+	protected ILaunchConfiguration getLaunchConfiguration(String name) {
+		ILaunchManager launchManager = DebugPlugin.getDefault().getLaunchManager();
+		return launchManager.getLaunchConfiguration(project.getFile(name));
+	}
+}

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/AllLauncherTests.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/AllLauncherTests.java
位置:  -21,7 +21,8   import org.junit.runners.Suite.SuiteClasses;
  * @since 3.5
  */
 @RunWith(Suite.class)
-@SuiteClasses({ FeatureBasedLaunchTest.class, LaunchConfigurationHelperTestCase.class })
+@SuiteClasses({ FeatureBasedLaunchTest.class, LaunchConfigurationHelperTestCase.class,
+		LaunchConfigurationMigrationTest.class })
 public class AllLauncherTests {
 
 }

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/FeatureBasedLaunchTest.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/FeatureBasedLaunchTest.java
位置:  -10,6 +10,7  
  *
  *  Contributors:
  *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *     Andras Peteri <apeteri@b2international.com> - extracted common superclass
  *******************************************************************************/
 package org.eclipse.pde.ui.tests.launcher;
 
位置:  -17,55 +18,22   import static org.hamcrest.MatcherAssert.assertThat;
 import static org.hamcrest.core.Is.is;
 import static org.hamcrest.core.IsEqual.equalTo;
 
-import java.io.InputStream;
-import java.net.URL;
-import java.nio.file.Path;
-import java.nio.file.Paths;
-import java.util.*;
+import java.util.Map;
 import junit.framework.AssertionFailedError;
-import org.eclipse.core.resources.*;
 import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.FileLocator;
-import org.eclipse.debug.core.*;
+import org.eclipse.debug.core.ILaunchConfiguration;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
 import org.eclipse.pde.internal.launching.launcher.BundleLauncherHelper;
-import org.eclipse.pde.ui.tests.util.TargetPlatformUtil;
-import org.junit.*;
-import org.osgi.framework.Bundle;
-import org.osgi.framework.FrameworkUtil;
+import org.junit.Before;
+import org.junit.Test;
 
-public class FeatureBasedLaunchTest {
+public class FeatureBasedLaunchTest extends AbstractLaunchTest {
 
 	private ILaunchConfiguration fFeatureBasedWithStartLevels;
 
-	@BeforeClass
-	public static void setupTargetPlatform() throws Exception {
-		TargetPlatformUtil.setRunningPlatformAsTarget();
-	}
-
 	@Before
 	public void setupLaunchConfig() throws Exception {
-		IWorkspace workspace = ResourcesPlugin.getWorkspace();
-		IProject project = workspace.getRoot().getProject(getClass().getSimpleName());
-		if (project.exists()) {
-			project.delete(true, null);
-		}
-
-		project.create(null);
-		project.open(null);
-		Bundle bundle = FrameworkUtil.getBundle(getClass());
-		ArrayList<URL> resources = Collections.list(bundle.findEntries(
-		for (URL url : resources) {
-			Path path = Paths.get(FileLocator.toFileURL(url).toURI());
-			IFile file = project.getFile(path.getFileName().toString());
-			try (InputStream in = url.openStream()) {
-				file.create(in, true, null);
-			}
-		}
-
-		ILaunchManager launchManager = DebugPlugin.getDefault().getLaunchManager();
-		fFeatureBasedWithStartLevels = launchManager
-				.getLaunchConfiguration(project.getFile(
+		fFeatureBasedWithStartLevels = getLaunchConfiguration(
 	}
 
 	@Test

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/LaunchConfigurationMigrationTest.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/LaunchConfigurationMigrationTest.java
位置:  -0,0 +1,135  
+/**************************************************************************************
+ *  Copyright (c) 2019 Andras Peteri
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Andras Peteri <apeteri@b2international.com> - initial API and implementation
+ **************************************************************************************/
+package org.eclipse.pde.ui.tests.launcher;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertTrue;
+
+import java.util.Map;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.debug.core.ILaunchConfiguration;
+import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
+import org.eclipse.pde.core.plugin.*;
+import org.eclipse.pde.core.project.IBundleProjectDescription;
+import org.eclipse.pde.internal.launching.launcher.BundleLauncherHelper;
+import org.eclipse.pde.launching.IPDELauncherConstants;
+import org.eclipse.pde.ui.tests.project.ProjectCreationTests;
+import org.junit.Before;
+import org.junit.Test;
+
+public class LaunchConfigurationMigrationTest extends AbstractLaunchTest {
+
+	@Before
+	public void setupPluginProjects() throws Exception {
+		createProject(
+		createProject(
+	}
+
+	private void createProject(String bundleName) throws CoreException {
+		IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(bundleName);
+		if (project.exists()) {
+			project.delete(true, null);
+		}
+
+		IBundleProjectDescription description = ProjectCreationTests.getBundleProjectService().getDescription(project);
+		description.setSymbolicName(project.getName());
+		description.apply(null);
+	}
+
+	@Test
+	public void testPluginBasedWithoutAutomaticAdd() throws Exception {
+		ILaunchConfiguration configuration = getLaunchConfiguration(
+
+		ILaunchConfigurationWorkingCopy wc = configuration.getWorkingCopy();
+		BundleLauncherHelper.migrateLaunchConfiguration(wc);
+
+		assertOldPropertiesRemoved(wc);
+
+		Map<IPluginModelBase, String> workspaceBundles = BundleLauncherHelper.getWorkspaceBundleMap(wc);
+		assertEquals(
+		assertEquals(
+
+		Map<IPluginModelBase, String> targetBundles = BundleLauncherHelper.getTargetBundleMap(wc);
+		assertEquals(
+		assertEquals(
+	}
+
+	@Test
+	public void testPluginBasedWithAutomaticAdd() throws Exception {
+		ILaunchConfiguration configuration = getLaunchConfiguration(
+
+		ILaunchConfigurationWorkingCopy wc = configuration.getWorkingCopy();
+		BundleLauncherHelper.migrateLaunchConfiguration(wc);
+
+		assertOldPropertiesRemoved(wc);
+
+		Map<IPluginModelBase, String> workspaceBundles = BundleLauncherHelper.getWorkspaceBundleMap(wc);
+		assertEquals(
+
+		Map<IPluginModelBase, String> targetBundles = BundleLauncherHelper.getTargetBundleMap(wc);
+		assertEquals(
+		assertEquals(
+	}
+
+	@Test
+	public void testBundleBased() throws Exception {
+		ILaunchConfiguration configuration = getLaunchConfiguration(
+
+		ILaunchConfigurationWorkingCopy wc = configuration.getWorkingCopy();
+		BundleLauncherHelper.migrateOsgiLaunchConfiguration(wc);
+
+		assertOldOsgiPropertiesRemoved(wc);
+
+		Map<IPluginModelBase, String> workspaceBundles = BundleLauncherHelper.getWorkspaceBundleMap(wc);
+		assertEquals(
+		assertEquals(
+
+		Map<IPluginModelBase, String> targetBundles = BundleLauncherHelper.getTargetBundleMap(wc);
+		assertEquals(
+		assertEquals(
+	}
+
+	@SuppressWarnings(
+	private void assertOldPropertiesRemoved(ILaunchConfigurationWorkingCopy wc) throws CoreException {
+		assertFalse(
+				wc.hasAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS));
+		assertFalse(
+				wc.hasAttribute(IPDELauncherConstants.SELECTED_TARGET_PLUGINS));
+	}
+
+	@SuppressWarnings(
+	private void assertOldOsgiPropertiesRemoved(ILaunchConfigurationWorkingCopy wc) throws CoreException {
+		assertFalse(
+				wc.hasAttribute(IPDELauncherConstants.WORKSPACE_BUNDLES));
+		assertFalse(
+	}
+
+	private IPluginModelBase findWorkspaceModel(String id) {
+		ModelEntry entry = PluginRegistry.findEntry(id);
+		assertNotNull(
+		assertTrue(
+		return entry.getWorkspaceModels()[0];
+	}
+
+	private IPluginModelBase findTargetModel(String id) {
+		ModelEntry entry = PluginRegistry.findEntry(id);
+		assertNotNull(
+		assertTrue(
+		return entry.getExternalModels()[0];
+	}
+}

原文件: ui/org.eclipse.pde.ui.tests/tests/launch/bundle-based.launch 
新文件: ui/org.eclipse.pde.ui.tests/tests/launch/bundle-based.launch
位置:  -0,0 +1,26  
+<?xml version=
+<launchConfiguration type=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <intAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+</launchConfiguration>

原文件: ui/org.eclipse.pde.ui.tests/tests/launch/plugin-based-with-automatic-add.launch 
新文件: ui/org.eclipse.pde.ui.tests/tests/launch/plugin-based-with-automatic-add.launch
位置:  -0,0 +1,32  
+<?xml version=
+<launchConfiguration type=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<setAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+</launchConfiguration>

原文件: ui/org.eclipse.pde.ui.tests/tests/launch/plugin-based-without-automatic-add.launch 
新文件: ui/org.eclipse.pde.ui.tests/tests/launch/plugin-based-without-automatic-add.launch
位置:  -0,0 +1,32  
+<?xml version=
+<launchConfiguration type=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<setAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<stringAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+	<booleanAttribute key=
+</launchConfiguration>

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/AbstractPluginBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/AbstractPluginBlock.java
位置:  -20,7 +20,6   package org.eclipse.pde.internal.ui.launcher;
 import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
 
 import java.util.*;
-import java.util.List;
 import java.util.Map.Entry;
 import java.util.stream.Collectors;
 import org.eclipse.core.resources.IProject;
位置:  -104,15 +103,15   public abstract class AbstractPluginBlock {
 	private PluginStatusDialog fDialog;
 
 	class PluginModelNameBuffer {
-		private List<String> nameList;
+		private Set<String> nameSet;
 
 		PluginModelNameBuffer() {
 			super();
-			nameList = new ArrayList<>();
+			nameSet = new HashSet<>();
 		}
 
 		void add(IPluginModelBase model) {
-			nameList.add(getPluginName(model));
+			nameSet.add(getPluginName(model));
 		}
 
 		private String getPluginName(IPluginModelBase model) {
位置:  -125,22 +124,13   public abstract class AbstractPluginBlock {
 			return BundleLauncherHelper.writeBundleEntry(model, startLevel, autoStart);
 		}
 
+		public Set<String> getNameSet() {
+			return nameSet;
+		}
+
 		@Override
 		public String toString() {
-			Collections.sort(nameList);
-			StringBuilder result = new StringBuilder();
-			for (String name : nameList) {
-				if (result.length() > 0) {
-					result.append(',');
-				}
-				result.append(name);
-			}
-
-			if (result.length() == 0) {
-				return null;
-			}
-
-			return result.toString();
+			return String.join(
 		}
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LaunchAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LaunchAction.java
位置:  -101,8 +101,8   public class LaunchAction extends Action {
 		wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_VM_ARGUMENTS, getVMArguments(os, arch));
 		wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_PROGRAM_ARGUMENTS, getProgramArguments(os, arch));
 		wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_JRE_CONTAINER_PATH, getJREContainer(os));
-		StringBuilder wsplugins = new StringBuilder();
-		StringBuilder explugins = new StringBuilder();
+		Set<String> wsplugins = new HashSet<>();
+		Set<String> explugins = new HashSet<>();
 		IPluginModelBase[] models = getModels();
 		for (IPluginModelBase model : models) {
 			if (model.getUnderlyingResource() == null) {
位置:  -111,8 +111,8   public class LaunchAction extends Action {
 				appendBundle(wsplugins, model);
 			}
 		}
-		wc.setAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS, wsplugins.toString());
-		wc.setAttribute(IPDELauncherConstants.SELECTED_TARGET_PLUGINS, explugins.toString());
+		wc.setAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES, wsplugins);
+		wc.setAttribute(IPDELauncherConstants.SELECTED_TARGET_BUNDLES, explugins);
 		String configIni = getTemplateConfigIni(os);
 		wc.setAttribute(IPDELauncherConstants.CONFIG_GENERATE_DEFAULT, configIni == null);
 		if (configIni != null)
位置:  -138,12 +138,11   public class LaunchAction extends Action {
 		wc.setAttribute(IPDELauncherConstants.ADDITIONAL_PLUGINS, additionalPlugins);
 	}
 
-	private void appendBundle(StringBuilder buffer, IPluginModelBase model) {
+	private void appendBundle(Set<String> plugins, IPluginModelBase model) {
 		AdditionalPluginData configuration = getPluginConfiguration(model).orElse(FeatureBlock.DEFAULT_PLUGIN_DATA);
 		String entry = BundleLauncherHelper.writeBundleEntry(model, configuration.fStartLevel,
 				configuration.fAutoStart);
-		buffer.append(entry);
-		buffer.append(',');
+		plugins.add(entry);
 	}
 
 	private Optional<AdditionalPluginData> getPluginConfiguration(IPluginModelBase model) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/OSGiBundleBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/OSGiBundleBlock.java
位置:  -50,8 +50,8   public class OSGiBundleBlock extends AbstractPluginBlock {
 			}
 		}
 
-		config.setAttribute(IPDELauncherConstants.WORKSPACE_BUNDLES, wBuffer.toString());
-		config.setAttribute(IPDELauncherConstants.TARGET_BUNDLES, tBuffer.toString());
+		config.setAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES, wBuffer.getNameSet());
+		config.setAttribute(IPDELauncherConstants.SELECTED_TARGET_BUNDLES, tBuffer.getNameSet());
 
 		PluginModelNameBuffer buffer = new PluginModelNameBuffer();
 		if (fAddWorkspaceButton.getSelection()) {
位置:  -62,7 +62,7   public class OSGiBundleBlock extends AbstractPluginBlock {
 				}
 			}
 		}
-		config.setAttribute(IPDELauncherConstants.DESELECTED_WORKSPACE_PLUGINS, buffer.toString());
+		config.setAttribute(IPDELauncherConstants.DESELECTED_WORKSPACE_BUNDLES, buffer.getNameSet());
 	}
 
 	public void initializeFrom(ILaunchConfiguration configuration) throws CoreException {
位置:  -76,8 +76,8   public class OSGiBundleBlock extends AbstractPluginBlock {
 	private void initializePluginsState(ILaunchConfiguration configuration) throws CoreException {
 		Map<IPluginModelBase, String> selected = new HashMap<>();
 		selected.putAll(BundleLauncherHelper.getWorkspaceBundleMap(configuration));
-		selected.putAll(
-				BundleLauncherHelper.getTargetBundleMap(configuration, null, IPDELauncherConstants.TARGET_BUNDLES));
+		selected.putAll(BundleLauncherHelper.getTargetBundleMap(configuration, null,
+				IPDELauncherConstants.SELECTED_TARGET_BUNDLES));
 
 		initializePluginsState(selected);
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginBlock.java
位置:  -82,7 +82,9   public class PluginBlock extends AbstractPluginBlock {
 	public void initialize(boolean enable) throws CoreException {
 		// To support lazy loading of the table we need to set some launch configuration attributes when the combo changes
 		if (fLaunchConfig != null) {
-			fInitDefaultCheckState = enable &amp;&amp; !fLaunchConfig.hasAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS) &amp;&amp; !fLaunchConfig.hasAttribute(IPDELauncherConstants.SELECTED_TARGET_PLUGINS);
+			fInitDefaultCheckState = enable
+					&amp;&amp; !fLaunchConfig.hasAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES)
+					&amp;&amp; !fLaunchConfig.hasAttribute(IPDELauncherConstants.SELECTED_TARGET_BUNDLES);
 			fTab.updateLaunchConfigurationDialog();
 			initializeFrom(fLaunchConfig, enable);
 		}
位置:  -91,9 +93,9   public class PluginBlock extends AbstractPluginBlock {
 	private void initializePluginsState(ILaunchConfiguration config) throws CoreException {
 		Map<IPluginModelBase, String> selected = new HashMap<>();
 		selected.putAll(BundleLauncherHelper.getWorkspaceBundleMap(config, null,
-				IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS));
-		selected.putAll(
-				BundleLauncherHelper.getTargetBundleMap(config, null, IPDELauncherConstants.SELECTED_TARGET_PLUGINS));
+				IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES));
+		selected.putAll(BundleLauncherHelper.getTargetBundleMap(config, null,
+				IPDELauncherConstants.SELECTED_TARGET_BUNDLES));
 
 		initializePluginsState(selected);
 	}
位置:  -145,8 +147,8   public class PluginBlock extends AbstractPluginBlock {
 				}
 
 			}
-			config.setAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS, wBuffer.toString());
-			config.setAttribute(IPDELauncherConstants.SELECTED_TARGET_PLUGINS, tBuffer.toString());
+			config.setAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES, wBuffer.getNameSet());
+			config.setAttribute(IPDELauncherConstants.SELECTED_TARGET_BUNDLES, tBuffer.getNameSet());
 
 			PluginModelNameBuffer buffer = new PluginModelNameBuffer();
 			if (fAddWorkspaceButton.getSelection()) {
位置:  -157,7 +159,7   public class PluginBlock extends AbstractPluginBlock {
 					}
 				}
 			}
-			config.setAttribute(IPDELauncherConstants.DESELECTED_WORKSPACE_PLUGINS, buffer.toString());
+			config.setAttribute(IPDELauncherConstants.DESELECTED_WORKSPACE_BUNDLES, buffer.getNameSet());
 		}
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/product/ProductFromConfigOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/product/ProductFromConfigOperation.java
位置:  -74,15 +74,11   public class ProductFromConfigOperation extends BaseProductCreationOperation {
 			}
 
 			// fetch the plug-ins models
-			String workspaceId = IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS;
-			String targetId = IPDELauncherConstants.SELECTED_TARGET_PLUGINS;
-			if (fLaunchConfiguration.getType().getIdentifier().equals(IPDELauncherConstants.OSGI_CONFIGURATION_TYPE)) {
-				workspaceId = IPDELauncherConstants.WORKSPACE_BUNDLES;
-				targetId = IPDELauncherConstants.TARGET_BUNDLES;
-			}
 			Set<String> set = new HashSet<>();
-			Map<IPluginModelBase, String> map = BundleLauncherHelper.getWorkspaceBundleMap(fLaunchConfiguration, set, workspaceId);
-			map.putAll(BundleLauncherHelper.getTargetBundleMap(fLaunchConfiguration, set, targetId));
+			Map<IPluginModelBase, String> map = BundleLauncherHelper.getWorkspaceBundleMap(fLaunchConfiguration, set,
+					IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES);
+			map.putAll(BundleLauncherHelper.getTargetBundleMap(fLaunchConfiguration, set,
+					IPDELauncherConstants.SELECTED_TARGET_BUNDLES));
 
 			addPlugins(factory, product, map);
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/AbstractPDELaunchConfigurationTabGroup.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/AbstractPDELaunchConfigurationTabGroup.java
位置:  -55,7 +55,7   public abstract class AbstractPDELaunchConfigurationTabGroup extends AbstractLau
 		BusyIndicator.showWhile(Display.getCurrent(), () -> {
 			try {
 				if (config instanceof ILaunchConfigurationWorkingCopy) {
-					checkBackwardCompatibility((ILaunchConfigurationWorkingCopy) config);
+					migrateLaunchConfiguration((ILaunchConfigurationWorkingCopy) config);
 				}
 			} catch (CoreException e) {
 			}
位置:  -74,7 +74,7   public abstract class AbstractPDELaunchConfigurationTabGroup extends AbstractLau
 	 * 			a CoreException is thrown if there was an error retrieving launch
 	 * 			configuration attributes
 	 */
-	private void checkBackwardCompatibility(ILaunchConfigurationWorkingCopy wc) throws CoreException {
+	private void migrateLaunchConfiguration(ILaunchConfigurationWorkingCopy wc) throws CoreException {
 		String id = wc.getAttribute(IJavaLaunchConfigurationConstants.ATTR_SOURCE_PATH_PROVIDER, (String) null);
 		if (id == null) {
 			wc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_SOURCE_PATH_PROVIDER, PDESourcePathProvider.ID);
位置:  -98,10 +98,7   public abstract class AbstractPDELaunchConfigurationTabGroup extends AbstractLau
 			wc.setAttribute(IPDELauncherConstants.LOCATION, value);
 		}
 
-		BundleLauncherHelper.checkBackwardCompatibility(wc, false);
-		if (wc.isDirty()) {
-			wc.doSave();
-		}
+		BundleLauncherHelper.migrateLaunchConfiguration(wc);
 	}
 
 	/**

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/EclipseLaunchShortcut.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/EclipseLaunchShortcut.java
位置:  -284,8 +284,8   public class EclipseLaunchShortcut extends AbstractLaunchShortcut {
 	}
 
 	private void initializePluginsList(ILaunchConfigurationWorkingCopy wc) {
-		StringBuilder wsplugins = new StringBuilder();
-		StringBuilder explugins = new StringBuilder();
+		Set<String> wsplugins = new HashSet<>();
+		Set<String> explugins = new HashSet<>();
 		Set<?> plugins = DependencyManager.getSelfAndDependencies(fModel, null);
 		Iterator<?> iter = plugins.iterator();
 		while (iter.hasNext()) {
位置:  -299,15 +299,15   public class EclipseLaunchShortcut extends AbstractLaunchShortcut {
 				appendPlugin(wsplugins, model);
 			}
 		}
-		wc.setAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS, wsplugins.toString());
-		wc.setAttribute(IPDELauncherConstants.SELECTED_TARGET_PLUGINS, explugins.toString());
+		wc.setAttribute(IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES, wsplugins);
+		wc.setAttribute(IPDELauncherConstants.SELECTED_TARGET_BUNDLES, explugins);
 	}
 
-	private void appendPlugin(StringBuilder buffer, IPluginModelBase model) {
-		if (buffer.length() > 0)
-			buffer.append(',');
-		buffer.append(model.getPluginBase().getId());
-		buffer.append(BundleLauncherHelper.VERSION_SEPARATOR);
-		buffer.append(model.getPluginBase().getVersion());
+	private void appendPlugin(Set<String> plugins, IPluginModelBase model) {
+		final StringBuilder builder = new StringBuilder();
+		builder.append(model.getPluginBase().getId());
+		builder.append(BundleLauncherHelper.VERSION_SEPARATOR);
+		builder.append(model.getPluginBase().getVersion());
+		plugins.add(builder.toString());
 	}
 }

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/OSGiLauncherTabGroup.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/OSGiLauncherTabGroup.java
位置:  -13,11 +13,16  
  *******************************************************************************/
 package org.eclipse.pde.ui.launcher;
 
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.debug.core.ILaunchConfiguration;
 import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
 import org.eclipse.debug.ui.*;
 import org.eclipse.jdt.debug.ui.launchConfigurations.JavaArgumentsTab;
 import org.eclipse.pde.internal.launching.PDELaunchingPlugin;
+import org.eclipse.pde.internal.launching.launcher.BundleLauncherHelper;
 import org.eclipse.pde.internal.launching.launcher.OSGiFrameworkManager;
+import org.eclipse.swt.custom.BusyIndicator;
+import org.eclipse.swt.widgets.Display;
 
 /**
  * Creates and initializes the tabs on the OSGi Framework launch configuration.
位置:  -31,6 +36,26   import org.eclipse.pde.internal.launching.launcher.OSGiFrameworkManager;
  */
 public class OSGiLauncherTabGroup extends AbstractLaunchConfigurationTabGroup {
 
+	/**
+	 * The tab group delegates to all tabs in the group. Prior to the
+	 * delegation, it migrates all launch configurations.
+	 *
+	 * @see org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup#initializeFrom(org.eclipse.debug.core.ILaunchConfiguration)
+	 */
+	@Override
+	public void initializeFrom(ILaunchConfiguration configuration) {
+		final ILaunchConfiguration config = configuration;
+		BusyIndicator.showWhile(Display.getCurrent(), () -> {
+			try {
+				if (config instanceof ILaunchConfigurationWorkingCopy) {
+					BundleLauncherHelper.migrateOsgiLaunchConfiguration(config);
+				}
+			} catch (CoreException e) {
+			}
+			super.initializeFrom(configuration);
+		});
+	}
+
 	@Override
 	public void createTabs(ILaunchConfigurationDialog dialog, String mode) {
 		ILaunchConfigurationTab[] tabs = new ILaunchConfigurationTab[] {new BundlesTab(), new JavaArgumentsTab(), new OSGiSettingsTab(), new TracingTab(), new EnvironmentTab(), new CommonTab()};

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/PluginsTab.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/PluginsTab.java
位置:  -240,11 +240,12   public class PluginsTab extends AbstractLauncherTab {
 		getAttributesLabelsForPrototype().put(IPDELauncherConstants.USE_CUSTOM_FEATURES, PDEUIMessages.PluginsTab_AttributeLabel_UseCustomFeatures);
 		getAttributesLabelsForPrototype().put(IPDELauncherConstants.DEFAULT_AUTO_START, PDEUIMessages.PluginsTab_AttributeLabel_DefaultAutoStart);
 		getAttributesLabelsForPrototype().put(IPDELauncherConstants.DEFAULT_START_LEVEL, PDEUIMessages.PluginsTab_AttributeLabel_DefaultStartLevel);
-		getAttributesLabelsForPrototype().put(IPDELauncherConstants.DESELECTED_WORKSPACE_PLUGINS, PDEUIMessages.PluginsTab_AttributeLabel_DeselectedWorkspacePlugins);
-		getAttributesLabelsForPrototype().put(IPDELauncherConstants.WORKSPACE_BUNDLES, PDEUIMessages.PluginsTab_AttributeLabel_WorkspaceBundles);
-		getAttributesLabelsForPrototype().put(IPDELauncherConstants.TARGET_BUNDLES, PDEUIMessages.PluginsTab_AttributeLabel_TargetBundles);
-		getAttributesLabelsForPrototype().put(IPDELauncherConstants.SELECTED_WORKSPACE_PLUGINS, PDEUIMessages.PluginsTab_AttributeLabel_SelectedWorkspacePlugins);
-		getAttributesLabelsForPrototype().put(IPDELauncherConstants.SELECTED_TARGET_PLUGINS, PDEUIMessages.PluginsTab_AttributeLabel_SelectedTargetPlugins);
+		getAttributesLabelsForPrototype().put(IPDELauncherConstants.DESELECTED_WORKSPACE_BUNDLES,
+				PDEUIMessages.PluginsTab_AttributeLabel_DeselectedWorkspacePlugins);
+		getAttributesLabelsForPrototype().put(IPDELauncherConstants.SELECTED_WORKSPACE_BUNDLES,
+				PDEUIMessages.PluginsTab_AttributeLabel_SelectedWorkspacePlugins);
+		getAttributesLabelsForPrototype().put(IPDELauncherConstants.SELECTED_TARGET_BUNDLES,
+				PDEUIMessages.PluginsTab_AttributeLabel_SelectedTargetPlugins);
 		getAttributesLabelsForPrototype().put(IPDELauncherConstants.FEATURE_PLUGIN_RESOLUTION, PDEUIMessages.PluginsTab_AttributeLabel_FeaturePluginResolution);
 		getAttributesLabelsForPrototype().put(IPDELauncherConstants.FEATURE_DEFAULT_LOCATION, PDEUIMessages.PluginsTab_AttributeLabel_FeatureDefaultLocation);
 		getAttributesLabelsForPrototype().put(IPDELauncherConstants.AUTOMATIC_VALIDATE, PDEUIMessages.PluginsTab_AttributeLabel_AutomaticValidate);

---------------------------23---------------------------
需求名称: Bug 552869 - Remove duplicate entries in markermessage.properties
创建时间: 2019-11-09	03:22:21
修改时间: 2019-11-11	01:07:16

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/MarkerMessages.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/MarkerMessages.java
位置:  -86,18 +86,12   public class MarkerMessages extends NLS {
 	public static String VersionNumberingResolution_minor0;
 	public static String VersionNumberingResolution_major1;
 	public static String VersionNumberingResolution_minor1;
-	public static String VersionNumberingResolution_major2;
-	public static String VersionNumberingResolution_minor2;
 	public static String VersionNumberingResolution_minorNoNewAPI0;
 	public static String VersionNumberingResolution_minorNoNewAPI1;
 	public static String VersionNumberingResolution_minorNoNewAPI2;
 
 	public static String VersionNumberingResolution_reexportedMajor0;
-	public static String VersionNumberingResolution_reexportedMajor1;
-	public static String VersionNumberingResolution_reexportedMajor2;
 	public static String VersionNumberingResolution_reexportedMinor0;
-	public static String VersionNumberingResolution_reexportedMinor1;
-	public static String VersionNumberingResolution_reexportedMinor2;
 	public static String VersionNumberingResolution_unnecessaryMicroIncrease;
 	public static String VersionNumberingResolution_unnecessaryMinorIncrease;
 	public static String VersionNumberingResolution_breeMinor;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/VersionNumberingResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/VersionNumberingResolution.java
位置:  -87,7 +87,7   public class VersionNumberingResolution implements IMarkerResolution2 {
 			case IApiProblem.MINOR_VERSION_CHANGE_NO_NEW_API:
 				return NLS.bind(MarkerMessages.VersionNumberingResolution_minorNoNewAPI1, this.newVersionValue);
 			case IApiProblem.REEXPORTED_MAJOR_VERSION_CHANGE:
-				return NLS.bind(MarkerMessages.VersionNumberingResolution_reexportedMajor1, this.newVersionValue);
+				return NLS.bind(MarkerMessages.VersionNumberingResolution_major1, this.newVersionValue);
 			case IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY:
 				return MarkerMessages.VersionNumberingResolution_unnecessaryMicroIncrease;
 			case IApiProblem.MINOR_VERSION_CHANGE_UNNECESSARILY:
位置:  -95,7 +95,7   public class VersionNumberingResolution implements IMarkerResolution2 {
 
 			default:
 				// IApiProblem.REEXPORTED_MINOR_VERSION_CHANGE
-				return NLS.bind(MarkerMessages.VersionNumberingResolution_reexportedMinor1, this.newVersionValue);
+				return NLS.bind(MarkerMessages.VersionNumberingResolution_minor1, this.newVersionValue);
 		}
 	}
 
位置:  -104,19 +104,19   public class VersionNumberingResolution implements IMarkerResolution2 {
 		String title = null;
 		switch (this.kind) {
 			case IApiProblem.MAJOR_VERSION_CHANGE:
-				title = NLS.bind(MarkerMessages.VersionNumberingResolution_major2, this.newVersionValue);
+				title = NLS.bind(MarkerMessages.VersionNumberingResolution_major1, this.newVersionValue);
 				break;
 			case IApiProblem.MINOR_VERSION_CHANGE:
-				title = NLS.bind(MarkerMessages.VersionNumberingResolution_minor2, this.newVersionValue);
+				title = NLS.bind(MarkerMessages.VersionNumberingResolution_minor1, this.newVersionValue);
 				break;
 			case IApiProblem.MAJOR_VERSION_CHANGE_NO_BREAKAGE:
-				title = NLS.bind(MarkerMessages.VersionNumberingResolution_major2, this.newVersionValue);
+				title = NLS.bind(MarkerMessages.VersionNumberingResolution_major1, this.newVersionValue);
 				break;
 			case IApiProblem.MINOR_VERSION_CHANGE_NO_NEW_API:
 				title = NLS.bind(MarkerMessages.VersionNumberingResolution_minorNoNewAPI2, this.newVersionValue);
 				break;
 			case IApiProblem.REEXPORTED_MAJOR_VERSION_CHANGE:
-				title = NLS.bind(MarkerMessages.VersionNumberingResolution_reexportedMajor2, this.newVersionValue);
+				title = NLS.bind(MarkerMessages.VersionNumberingResolution_major1, this.newVersionValue);
 				break;
 			case IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY:
 				title = MarkerMessages.VersionNumberingResolution_unnecessaryMicroIncrease;
位置:  -126,7 +126,7   public class VersionNumberingResolution implements IMarkerResolution2 {
 				break;
 			default:
 				// IApiProblem.REEXPORTED_MINOR_VERSION_CHANGE
-				title = NLS.bind(MarkerMessages.VersionNumberingResolution_reexportedMinor2, this.newVersionValue);
+				title = NLS.bind(MarkerMessages.VersionNumberingResolution_minor1, this.newVersionValue);
 		}
 		Job job = new Job(title) {
 			@Override

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/markermessages.properties 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/markermessages.properties
位置:  -74,19 +74,13   VersionNumberingResolution_major0=List of breaking changes:<br>{0}
 VersionNumberingResolution_minor0=List of compatible changes:<br>{0}
 VersionNumberingResolution_major1=Correct the major version to {0}
 VersionNumberingResolution_minor1=Correct the minor version to {0}
-VersionNumberingResolution_major2=Correct the major version to {0}
-VersionNumberingResolution_minor2=Correct the minor version to {0}
 VersionNumberingResolution_minorNoNewAPI0=The minor version should be reverted
 VersionNumberingResolution_minorNoNewAPI1=Correct the version to {0}
 VersionNumberingResolution_minorNoNewAPI2=Correct the version to {0}
 UpdateVersionNumberingOperation_title=Update bundle version
 
 VersionNumberingResolution_reexportedMajor0=A major version change in a reexported bundle requires the major version of this bundle to be incremented
-VersionNumberingResolution_reexportedMajor1=Correct the major version to {0}
-VersionNumberingResolution_reexportedMajor2=Correct the major version to {0}
 VersionNumberingResolution_reexportedMinor0=A minor version change in a reexported bundle requires the minor version of this bundle to be incremented
-VersionNumberingResolution_reexportedMinor1=Correct the minor version to {0}
-VersionNumberingResolution_reexportedMinor2=Correct the minor version to {0}
 VersionNumberingResolution_unnecessaryMicroIncrease=Correct the micro version to 0
 VersionNumberingResolution_unnecessaryMinorIncrease=Correct the minor version to 0
 VersionNumberingResolution_breeMinor=Changed execution environments requires the minor version of this bundle to be incremented

---------------------------24---------------------------
需求名称: Bug 551413 - Unexported package validation might produce invalid marker
创建时间: 2019-11-11	01:02:17
修改时间: 2019-11-11	01:02:17

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java
位置:  -18,6 +18,7  
 package org.eclipse.pde.internal.core.builders;
 
 import java.io.File;
+import java.nio.charset.StandardCharsets;
 import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.Arrays;
位置:  -246,6 +247,12   public class BundleErrorReporter extends JarManifestErrorReporter {
 									if (!containsPackage(header, name)) {
 										packages.append(name);
 										packages.append(
+										byte[] bytes = packages.toString().getBytes(StandardCharsets.UTF_8);
+										// See MarkerInfo::checkValidAttribute
+										if (bytes.length > 65535) {
+											packages.delete(packages.lastIndexOf(name), packages.length());
+											break;
+										}
 									}
 								}
 							}

---------------------------25---------------------------
需求名称: Bug 550182 - Adding filter for API tools problem "The re-exported
创建时间: 2019-11-10	08:28:43
修改时间: 2019-11-10	09:29:08

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java
位置:  -1825,6 +1825,17   public class BaseApiAnalyzer implements IApiAnalyzer {
 				}
 				IProject project = fJavaProject.getProject();
 				resource = Util.getResource(project, type);
+				IProject project2 = resource.getProject();
+				if (!project2.equals(project)) {
+					// marker should be on the same project as fJavaProject
+					int flag = delta.getFlags();
+					if (flag == IDelta.REEXPORTED_API_TYPE) {
+						resource = project.findMember(new Path(JarFile.MANIFEST_NAME));
+						charStart = 0;
+						charEnd = 0;
+						lineNumber = 1;
+					}
+				}
 				if (resource == null) {
 					return null;
 				}

---------------------------26---------------------------
需求名称: Revert "Bug 552620 - Investigate "java builder" removal from ↵
创建时间: 2019-11-08	11:06:55
修改时间: 2019-11-08	11:08:20

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java
位置:  -312,19 +312,19   public class ApiAnalysisApplication implements IApplication {
 			res.setDescription(projectDescription, 0, new NullProgressMonitor());
 		}
 		ICommand[] buildSpec = projectDescription.getBuildSpec();
-		List<ICommand> newBuilders = removeManifestSchemaAndJavaBuilders(buildSpec);
+		List<ICommand> newBuilders = removeManifestAndSchemaBuilders(buildSpec);
 		projectDescription.setBuildSpec(
 				newBuilders.toArray(new ICommand[newBuilders.size()]));
 		res.setDescription(projectDescription, new NullProgressMonitor());
 		return res;
 	}
 
-	private static List<ICommand> removeManifestSchemaAndJavaBuilders(ICommand[] buildSpec) {
-		// remove manifest, schema and java builders
+	private static List<ICommand> removeManifestAndSchemaBuilders(ICommand[] buildSpec) {
+		// remove manifest and schema builders
 		return Arrays.stream(buildSpec)
 				.filter(x -> !(
-						|| 
-				|| 
+				|| 
+
 				).collect(Collectors.toList());
 	}
 

---------------------------27---------------------------
需求名称: Move away of deprecated
创建时间: 2019-11-07	01:48:48
修改时间: 2019-11-07	01:48:48

原文件: ui/org.eclipse.pde.genericeditor.extension/src/org/eclipse/pde/internal/genericeditor/target/extension/autocomplete/TargetDefinitionContentAssist.java 
新文件: ui/org.eclipse.pde.genericeditor.extension/src/org/eclipse/pde/internal/genericeditor/target/extension/autocomplete/TargetDefinitionContentAssist.java
位置:  -26,11 +26,11   import org.eclipse.jface.resource.JFaceResources;
 import org.eclipse.jface.text.BadLocationException;
 import org.eclipse.jface.text.IDocument;
 import org.eclipse.jface.text.ITextViewer;
-import org.eclipse.jface.text.contentassist.BoldStylerProvider;
 import org.eclipse.jface.text.contentassist.ICompletionProposal;
 import org.eclipse.jface.text.contentassist.IContentAssistProcessor;
 import org.eclipse.jface.text.contentassist.IContextInformation;
 import org.eclipse.jface.text.contentassist.IContextInformationValidator;
+import org.eclipse.jface.viewers.BoldStylerProvider;
 import org.eclipse.jface.viewers.StyledString;
 import org.eclipse.jface.viewers.StyledString.Styler;
 import org.eclipse.pde.internal.genericeditor.target.extension.autocomplete.processors.AttributeNameCompletionProcessor;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dialogs/FilteredPluginArtifactsSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dialogs/FilteredPluginArtifactsSelectionDialog.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- *  Copyright (c) 2007, 2015 IBM Corporation and others.
+ *  Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  *  This program and the accompanying materials
  *  are made available under the terms of the Eclipse Public License 2.0
位置:  -24,7 +24,6   import org.eclipse.core.runtime.*;
 import org.eclipse.jdt.ui.JavaUI;
 import org.eclipse.jface.action.*;
 import org.eclipse.jface.dialogs.IDialogSettings;
-import org.eclipse.jface.text.contentassist.BoldStylerProvider;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.IStyledLabelProvider;
 import org.eclipse.osgi.service.resolver.BundleDescription;

---------------------------28---------------------------
需求名称: Generify Comparable implementations.
创建时间: 2019-11-07	01:27:46
修改时间: 2019-11-07	01:34:29

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/model/Property.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/model/Property.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2009 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -16,7 +16,7   package org.eclipse.pde.internal.runtime.registry.model;
 
 import org.osgi.framework.Constants;
 
-public class Property extends ModelObject implements Comparable {
+public class Property extends ModelObject implements Comparable<Property> {
 	public static final String PREFIX_SERVICE = 
 	public static final String PREFIX_COMPONENT = 
 
位置:  -50,15 +50,16   public class Property extends ModelObject implements Comparable {
 	}
 
 	/**
-	 * Compare properties for order. Returns a negative integer, zero, or a positive
-	 * integer as the first argument is less than, equal to, or greater than the second.
+	 * Compare properties for order. Returns a negative integer, zero, or a
+	 * positive integer as the first argument is less than, equal to, or greater
+	 * than the second.
 	 *
 	 * <p>
 	 * The {@link Property}s are compared according to the following rules:
 	 * <ul>
 	 * <li>objectClass is always less than everything else</li>
 	 * <li>properties with names starting with 
-	 * 		than other properties.</li>
+	 * than other properties.</li>
 	 * <li>regular properties are considered 
 	 * </ul>
 	 * </p>
位置:  -79,19 +80,14   public class Property extends ModelObject implements Comparable {
 	 * </ul>
 	 * </p>
 	 *
-	 * @param obj other property to be compared against
+	 * @param other
+	 *            other property to be compared against
 	 *
 	 * @return a negative integer, zero, or a positive integer as the first
-	 * 			argument is less than, equal to, or greater than the second.
+	 *         argument is less than, equal to, or greater than the second.
 	 */
 	@Override
-	public int compareTo(Object obj) {
-		if (!(obj instanceof Property)) {
-			return 0;
-		}
-
-		Property other = (Property) obj;
-
+	public int compareTo(Property other) {
 		String name0 = getName();
 		String name1 = other.getName();
 

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/model/ServiceName.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/model/ServiceName.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corporation and others.
+ * Copyright (c) 2009, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -17,7 +17,7   package org.eclipse.pde.internal.runtime.registry.model;
 import java.util.Arrays;
 import org.osgi.framework.ServiceReference;
 
-public class ServiceName extends ModelObject implements Comparable {
+public class ServiceName extends ModelObject implements Comparable<ServiceName> {
 
 	private String[] classes;
 	private ServiceReference<?> reference;
位置:  -70,16 +70,12   public class ServiceName extends ModelObject implements Comparable {
 	}
 
 	@Override
-	public int compareTo(Object obj) {
-		if (obj instanceof ServiceName) {
-			// compare first class
-			ServiceName other = (ServiceName) obj;
-			String myClass = classes[0];
-			String otherClass = other.getClasses()[0];
+	public int compareTo(ServiceName other) {
+		// compare first class
+		String myClass = classes[0];
+		String otherClass = other.getClasses()[0];
 
-			return myClass.compareTo(otherClass);
-		}
-		return 0;
+		return myClass.compareTo(otherClass);
 
 	}
 }

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/model/ServiceRegistration.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/model/ServiceRegistration.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- *  Copyright (c) 2008, 2017 IBM Corporation and others.
+ *  Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  *  This program and the accompanying materials
  *  are made available under the terms of the Eclipse Public License 2.0
位置:  -17,7 +17,7   package org.eclipse.pde.internal.runtime.registry.model;
 import java.util.HashSet;
 import java.util.Set;
 
-public class ServiceRegistration extends ModelObject implements Comparable {
+public class ServiceRegistration extends ModelObject implements Comparable<ServiceRegistration> {
 
 	private long id;
 	private String bundle;
位置:  -143,11 +143,7   public class ServiceRegistration extends ModelObject implements Comparable {
 	}
 
 	@Override
-	public int compareTo(Object obj) {
-		if (obj instanceof ServiceRegistration) {
-			ServiceRegistration other = (ServiceRegistration) obj;
-			return name.compareTo(other.getName());
-		}
-		return 0;
+	public int compareTo(ServiceRegistration other) {
+		return name.compareTo(other.getName());
 	}
 }

---------------------------29---------------------------
需求名称: Bug 552620 - Investigate "java builder" removal from
创建时间: 2019-11-01	08:30:24
修改时间: 2019-11-07	00:55:42

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java
位置:  -312,19 +312,19   public class ApiAnalysisApplication implements IApplication {
 			res.setDescription(projectDescription, 0, new NullProgressMonitor());
 		}
 		ICommand[] buildSpec = projectDescription.getBuildSpec();
-		List<ICommand> newBuilders = removeManifestAndSchemaBuilders(buildSpec);
+		List<ICommand> newBuilders = removeManifestSchemaAndJavaBuilders(buildSpec);
 		projectDescription.setBuildSpec(
 				newBuilders.toArray(new ICommand[newBuilders.size()]));
 		res.setDescription(projectDescription, new NullProgressMonitor());
 		return res;
 	}
 
-	private static List<ICommand> removeManifestAndSchemaBuilders(ICommand[] buildSpec) {
-		// remove manifest and schema builders
+	private static List<ICommand> removeManifestSchemaAndJavaBuilders(ICommand[] buildSpec) {
+		// remove manifest, schema and java builders
 		return Arrays.stream(buildSpec)
 				.filter(x -> !(
-				|| 
-
+						|| 
+				|| 
 				).collect(Collectors.toList());
 	}
 

---------------------------30---------------------------
需求名称: Bug 551197 - Report error on unnecessary version increment 
创建时间: 2019-09-20	07:29:35
修改时间: 2019-11-06	10:13:43

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/MarkerMessages.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/MarkerMessages.java
位置:  -98,7 +98,10   public class MarkerMessages extends NLS {
 	public static String VersionNumberingResolution_reexportedMinor0;
 	public static String VersionNumberingResolution_reexportedMinor1;
 	public static String VersionNumberingResolution_reexportedMinor2;
+	public static String VersionNumberingResolution_unnecessaryMicroIncrease;
+	public static String VersionNumberingResolution_unnecessaryMinorIncrease;
 	public static String VersionNumberingResolution_breeMinor;
+	public static String VersionNumberingResolution_unnecessary;
 
 	public static String UpdateVersionNumberingOperation_title;
 

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/VersionNumberingResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/VersionNumberingResolution.java
位置:  -60,6 +60,10   public class VersionNumberingResolution implements IMarkerResolution2 {
 				return MarkerMessages.VersionNumberingResolution_reexportedMajor0;
 			case IApiProblem.MINOR_VERSION_CHANGE_EXECUTION_ENV_CHANGED:
 				return MarkerMessages.VersionNumberingResolution_breeMinor;
+			case IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY:
+				return MarkerMessages.VersionNumberingResolution_unnecessaryMicroIncrease;
+			case IApiProblem.MINOR_VERSION_CHANGE_UNNECESSARILY:
+				return MarkerMessages.VersionNumberingResolution_unnecessaryMinorIncrease;
 			default:
 				// reexported minor
 				return MarkerMessages.VersionNumberingResolution_reexportedMinor0;
位置:  -84,6 +88,11   public class VersionNumberingResolution implements IMarkerResolution2 {
 				return NLS.bind(MarkerMessages.VersionNumberingResolution_minorNoNewAPI1, this.newVersionValue);
 			case IApiProblem.REEXPORTED_MAJOR_VERSION_CHANGE:
 				return NLS.bind(MarkerMessages.VersionNumberingResolution_reexportedMajor1, this.newVersionValue);
+			case IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY:
+				return MarkerMessages.VersionNumberingResolution_unnecessaryMicroIncrease;
+			case IApiProblem.MINOR_VERSION_CHANGE_UNNECESSARILY:
+				return MarkerMessages.VersionNumberingResolution_unnecessaryMinorIncrease;
+
 			default:
 				// IApiProblem.REEXPORTED_MINOR_VERSION_CHANGE
 				return NLS.bind(MarkerMessages.VersionNumberingResolution_reexportedMinor1, this.newVersionValue);
位置:  -109,6 +118,12   public class VersionNumberingResolution implements IMarkerResolution2 {
 			case IApiProblem.REEXPORTED_MAJOR_VERSION_CHANGE:
 				title = NLS.bind(MarkerMessages.VersionNumberingResolution_reexportedMajor2, this.newVersionValue);
 				break;
+			case IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY:
+				title = MarkerMessages.VersionNumberingResolution_unnecessaryMicroIncrease;
+				break;
+			case IApiProblem.MINOR_VERSION_CHANGE_UNNECESSARILY:
+				title = MarkerMessages.VersionNumberingResolution_unnecessaryMinorIncrease;
+				break;
 			default:
 				// IApiProblem.REEXPORTED_MINOR_VERSION_CHANGE
 				title = NLS.bind(MarkerMessages.VersionNumberingResolution_reexportedMinor2, this.newVersionValue);

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/markermessages.properties 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/markermessages.properties
位置:  -87,4 +87,7   VersionNumberingResolution_reexportedMajor2=Correct the major version to {0}
 VersionNumberingResolution_reexportedMinor0=A minor version change in a reexported bundle requires the minor version of this bundle to be incremented
 VersionNumberingResolution_reexportedMinor1=Correct the minor version to {0}
 VersionNumberingResolution_reexportedMinor2=Correct the minor version to {0}
+VersionNumberingResolution_unnecessaryMicroIncrease=Correct the micro version to 0
+VersionNumberingResolution_unnecessaryMinorIncrease=Correct the minor version to 0
 VersionNumberingResolution_breeMinor=Changed execution environments requires the minor version of this bundle to be incremented
+VersionNumberingResolution_unnecessary=Minor or micro version is increased when major or major/minor version was already increased

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/preferencemessages.properties 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/preferencemessages.properties
位置:  -172,7 +172,7   VersionManagementReportInvalidApiComponentVersion=Report in&amp;compatible bundle ve
 VersionManagementReportChangedExecutionEnv=Report changed &amp;execution environment incompatibility:
 VersionManagementReportMalformedSinceTags=Report ma&amp;lformed '@since' tags:
 VersionManagementReportInvalidSinceTagVersion=Report invalid '@since' ta&amp;g version:
-VersionManagementReportInvalidApiComponentVersionReportMinorWithoutApiChange=Report minor version change without API c&amp;hanges:
+VersionManagementReportInvalidApiComponentVersionReportMinorWithoutApiChange=Report unnecessary minor or micro version c&amp;hange:
 VersionManagementReportInvalidApiComponentVersionReportMajorWithoutBreakingChange=Report major version change without API b&amp;reakage:
 ApiProblemSeveritiesConfigurationBlock_checkable_ees=Execution Environment Descriptions:
 ApiProblemSeveritiesConfigurationBlock_checkable_ees_tooltip=Click to install one or more execution environment descriptions

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java
位置:  -1053,7 +1053,7   public class BaseApiAnalyzer implements IApiAnalyzer {
 		return ApiPlugin.getDefault().getSeverityLevel(IApiProblemTypes.INCOMPATIBLE_API_COMPONENT_VERSION, fJavaProject.getProject().getProject()) == ApiPlugin.SEVERITY_IGNORE;
 	}
 
-	private boolean reportMinorVersionCheckWithoutApiChange() {
+	private boolean reportUnnecessaryMinorMicroVersionCheck() {
 		if (fJavaProject == null) {
 			// we ignore it for non-OSGi case
 			return true;
位置:  -2093,6 +2093,7   public class BaseApiAnalyzer implements IApiAnalyzer {
 			System.out.println(
 		}
 		IDelta[] breakingChanges = fBuildState.getBreakingChanges();
+		IDelta[] compatibleChanges = fBuildState.getCompatibleChanges();
 		if (breakingChanges.length != 0) {
 			// make sure that the major version has been incremented
 			if (compversion.getMajor() <= refversion.getMajor()) {
位置:  -2101,7 +2102,6   public class BaseApiAnalyzer implements IApiAnalyzer {
 						compversionval, refversionval }, String.valueOf(newversion), collectDetails(breakingChanges));
 			}
 		} else {
-			IDelta[] compatibleChanges = fBuildState.getCompatibleChanges();
 			if (compatibleChanges.length != 0) {
 				// only new API have been added
 				if (compversion.getMajor() != refversion.getMajor()) {
位置:  -2126,7 +2126,7   public class BaseApiAnalyzer implements IApiAnalyzer {
 				}
 			} else if (compversion.getMinor() != refversion.getMinor()) {
 				// the minor version should not be incremented
-				if (reportMinorVersionCheckWithoutApiChange() &amp;&amp; !hasExecutionEnvironmentChanged(reference, component)) {
+				if (reportUnnecessaryMinorMicroVersionCheck() &amp;&amp; !hasExecutionEnvironmentChanged(reference, component)) {
 					newversion = new Version(refversion.getMajor(), refversion.getMinor(), refversion.getMicro(), refversion.getQualifier() != null ? QUALIFIER : null);
 					problem = createVersionProblem(IApiProblem.MINOR_VERSION_CHANGE_NO_NEW_API, new String[] {
 							compversionval, refversionval }, String.valueOf(newversion), Util.EMPTY_STRING);
位置:  -2254,6 +2254,73   public class BaseApiAnalyzer implements IApiAnalyzer {
 		if (problem != null) {
 			addProblem(problem);
 		}
+		if (problem == null) {
+			if (breakingChanges.length > 0 || compatibleChanges.length > 0) {
+				// check if major or minor version is increased
+				if (reportUnnecessaryMinorMicroVersionCheck()
+						&amp;&amp; checkIfMajorOrMinorVersionIncreased(compversion, refversion)) {
+					if (hasMicroVersionIncreased(compversion)) {
+						newversion = new Version(compversion.getMajor(), compversion.getMinor(), 0,
+								compversion.getQualifier() != null ? QUALIFIER : null);
+						problem = createVersionProblem(IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY,
+								new String[] { compversionval, refversionval }, String.valueOf(newversion),
+								Util.EMPTY_STRING);
+						if (problem != null) {
+							addProblem(problem);
+						}
+					}
+				}
+			}
+			if (breakingChanges.length > 0) {
+				// check if major version is increased
+				if (reportUnnecessaryMinorMicroVersionCheck()
+						&amp;&amp; checkIfMajorVersionIncreased(compversion, refversion)) {
+					if (hasMinorVersionIncreased(compversion)) {
+						newversion = new Version(compversion.getMajor(), 0, 0,
+								compversion.getQualifier() != null ? QUALIFIER : null);
+						problem = createVersionProblem(IApiProblem.MINOR_VERSION_CHANGE_UNNECESSARILY,
+								new String[] { compversionval, refversionval }, String.valueOf(newversion),
+								Util.EMPTY_STRING);
+						if (problem != null) {
+							addProblem(problem);
+						}
+					}
+				}
+			}
+		}
+	}
+
+	private boolean hasMinorVersionIncreased(Version compversion) {
+		if (compversion.getMinor() > 0) {
+			return true;
+		}
+		return false;
+	}
+
+	private boolean checkIfMajorVersionIncreased(Version compversion, Version refversion) {
+		if (compversion.getMajor() > refversion.getMajor()) {
+			return true;
+		}
+
+		return false;
+	}
+
+	private boolean hasMicroVersionIncreased(Version compversion) {
+		if (compversion.getMicro() > 0) {
+			return true;
+		}
+		return false;
+	}
+
+	private boolean checkIfMajorOrMinorVersionIncreased(Version compversion, Version refversion) {
+		if (compversion.getMajor() > refversion.getMajor()) {
+			return true;
+		}
+		if (compversion.getMinor() > refversion.getMinor()) {
+			return true;
+		}
+		return false;
+
 	}
 
 	/**

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/ApiProblem.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/ApiProblem.java
位置:  -406,6 +406,8   public class ApiProblem implements IApiProblem {
 			case IApiProblem.MAJOR_VERSION_CHANGE_NO_BREAKAGE:
 				return 
 			case IApiProblem.MINOR_VERSION_CHANGE_NO_NEW_API:
+			case IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY:
+			case IApiProblem.MINOR_VERSION_CHANGE_UNNECESSARILY:
 				return 
 			case IApiProblem.REEXPORTED_MAJOR_VERSION_CHANGE:
 				return 

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/ApiProblemFactory.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/ApiProblemFactory.java
位置:  -620,6 +620,10   public class ApiProblemFactory {
 						return 20;
 					case IApiProblem.MINOR_VERSION_CHANGE_EXECUTION_ENV_CHANGED:
 						return 43;
+					case IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY:
+						return 58;
+					case IApiProblem.MINOR_VERSION_CHANGE_UNNECESSARILY:
+						return 59;
 
 					default:
 						break;
位置:  -1048,6 +1052,8   public class ApiProblemFactory {
 			case IApiProblem.CATEGORY_VERSION: {
 				switch (problem.getKind()) {
 					case IApiProblem.MINOR_VERSION_CHANGE_NO_NEW_API:
+					case IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY:
+					case IApiProblem.MINOR_VERSION_CHANGE_UNNECESSARILY:
 						return IApiProblemTypes.INCOMPATIBLE_API_COMPONENT_VERSION_REPORT_MINOR_WITHOUT_API_CHANGE;
 					case IApiProblem.MAJOR_VERSION_CHANGE_NO_BREAKAGE:
 						return IApiProblemTypes.INCOMPATIBLE_API_COMPONENT_VERSION_REPORT_MAJOR_WITHOUT_BREAKING_CHANGE;

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties
位置:  -11,7 +11,7  
 # Contributors:
 #     IBM Corporation - initial API and implementation
 ###############################################################################
-# available message ids    58, 59, 60, 62, 63, 65, 68, 70, 71, 75, 80,
+# available message ids     59, 60, 62, 63, 65, 68, 70, 71, 75, 80,
 # 82, 83, 88, 90, 93
 
 #API baseline 
位置:  -30,6 +30,8  
 6 = The major version should be the same for version {0}, since no API breakage occurred since version {1}
 7 = The minor version should be incremented in version {0}, since new APIs have been added since version {1}
 43 = The minor version should be incremented in version {0}, since execution environments have been changed since version {1}
+58 = The micro version is increased unnecessarily since either major or minor version is already increased
+59 = The minor version is increased unnecessarily since  major  version is already increased
 56 = The minor version should be the same for version {0}, since no new APIs have been added since version {1}
 19 = The major version should be incremented in version {0}, because the modification of the version range for the re-exported bundle {1} requires a major version change
 20 = The minor version should be incremented in version {0}, because the modification of the version range for the re-exported bundle {1} requires a minor version change

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/provisional/problems/IApiProblem.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/provisional/problems/IApiProblem.java
位置:  -204,6 +204,25   public interface IApiProblem {
 	public static final int MINOR_VERSION_CHANGE_EXECUTION_ENV_CHANGED = 7;
 
 	/**
+	 * Constant representing the value of the micro version change (inspite of
+	 * major/minor change) {@link IApiProblem} kind. <br>
+	 * Value is: <code>8</code>
+	 *
+	 * @see #getKind()
+	 * @see #CATEGORY_VERSION
+	 */
+	public static final int MICRO_VERSION_CHANGE_UNNECESSARILY = 8;
+	/**
+	 * Constant representing the value of the minor version change (inspite of major
+	 * change) {@link IApiProblem} kind. <br>
+	 * Value is: <code>8</code>
+	 *
+	 * @see #getKind()
+	 * @see #CATEGORY_VERSION
+	 */
+	public static final int MINOR_VERSION_CHANGE_UNNECESSARILY = 9;
+
+	/**
 	 * Constant representing the value of an illegal extend {@link IApiProblem}
 	 * kind. <br>
 	 * Value is: <code>1</code>

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/Util.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/Util.java
位置:  -2768,6 +2768,8   public final class Util {
 						return IApiProblemTypes.INCOMPATIBLE_API_COMPONENT_VERSION_REPORT_MAJOR_WITHOUT_BREAKING_CHANGE;
 
 					case IApiProblem.MINOR_VERSION_CHANGE_NO_NEW_API:
+					case IApiProblem.MICRO_VERSION_CHANGE_UNNECESSARILY:
+					case IApiProblem.MINOR_VERSION_CHANGE_UNNECESSARILY:
 						return IApiProblemTypes.INCOMPATIBLE_API_COMPONENT_VERSION_REPORT_MINOR_WITHOUT_API_CHANGE;
 
 					case IApiProblem.MINOR_VERSION_CHANGE_EXECUTION_ENV_CHANGED:

---------------------------31---------------------------
需求名称: Remove redundant type arguments in ui.trace
创建时间: 2019-11-05	04:10:48
修改时间: 2019-11-05	11:19:24

原文件: ui/org.eclipse.ui.trace/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.ui.trace/.settings/org.eclipse.jdt.core.prefs
位置:  -8,10 +8,15   org.eclipse.jdt.core.circularClasspath=error
 org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
 org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
 org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
 org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
 org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
 org.eclipse.jdt.core.compiler.annotation.nonnullisdefault=disabled
 org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
 org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
 org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
 org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
位置:  -22,6 +27,7   org.eclipse.jdt.core.compiler.debug.localVariable=generate
 org.eclipse.jdt.core.compiler.debug.sourceFile=generate
 org.eclipse.jdt.core.compiler.doc.comment.support=enabled
 org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
 org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
 org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
 org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
位置:  -50,7 +56,9   org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
 org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
 org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
 org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
 org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
 org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
 org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
 org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
位置:  -65,11 +73,16   org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignor
 org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
 org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
 org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
 org.eclipse.jdt.core.compiler.problem.nullReference=error
 org.eclipse.jdt.core.compiler.problem.nullSpecInsufficientInfo=warning
 org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
 org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
 org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
 org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
 org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
 org.eclipse.jdt.core.compiler.problem.potentialNullSpecViolation=error
位置:  -77,7 +90,7   org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
 org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
 org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
 org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
 org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
 org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
 org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
位置:  -85,21 +98,29   org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
 org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
 org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
 org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.suppressWarningsNotFullyAnalysed=info
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
 org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
 org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
 org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
 org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
 org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
 org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
 org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
 org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
 org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
 org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
 org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
 org.eclipse.jdt.core.compiler.problem.unusedImport=error
 org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
 org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
位置:  -109,6 +130,7   org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=
 org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
 org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
 org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
 org.eclipse.jdt.core.compiler.problem.unusedWarningToken=ignore
 org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
 org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentViewerFilter.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentViewerFilter.java
位置:  -31,8 +31,8   public class TracingComponentViewerFilter extends PatternFilter {
 	 */
 	public TracingComponentViewerFilter() {
 
-		visibleTracingComponentsCache = new HashMap<TracingComponent, Boolean>();
-		visibleTracingDebugOptions = new HashMap<TracingComponentDebugOption, Boolean>();
+		visibleTracingComponentsCache = new HashMap<>();
+		visibleTracingDebugOptions = new HashMap<>();
 	}
 
 	@Override

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingPreferencePage.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingPreferencePage.java
位置:  -535,7 +535,7   public class TracingPreferencePage extends PreferencePage implements IWorkbenchP
 		if (displayableTracingComponents != null) {
 			purgeModel();
 		}
-		displayableTracingComponents = new HashMap<String, TracingComponent>();
+		displayableTracingComponents = new HashMap<>();
 		// look for extension points
 		IExtensionRegistry registry = Platform.getExtensionRegistry();
 		IConfigurationElement[] cf = registry.getConfigurationElementsFor(TracingConstants.BUNDLE_ID, TracingConstants.TRACING_EXTENSION_POINT_NAME);
位置:  -633,7 +633,7   public class TracingPreferencePage extends PreferencePage implements IWorkbenchP
 		DebugOptionsHandler.setDebugEnabled(enableTracing);
 		DebugOptionsHandler.getDebugOptions().setFile(standardOutputStreamButton.getSelection() ? null : new File(tracingFileText.getText()));
 		if (enableTracing) {
-			Map<String, String> newOptions = new HashMap<String, String>();
+			Map<String, String> newOptions = new HashMap<>();
 			// get the set of options available
 			Map<String, String> currentOptions = DebugOptionsHandler.getDebugOptions().getOptions();
 			newOptions.putAll(currentOptions);
位置:  -674,7 +674,7   public class TracingPreferencePage extends PreferencePage implements IWorkbenchP
 	 * Save the property page preferences.
 	 */
 	protected void savePreferences(boolean tracingEnabled) {
-		Map<String, String> prefValues = new HashMap<String, String>(5);
+		Map<String, String> prefValues = new HashMap<>(5);
 		prefValues.put(TracingConstants.PREFERENCE_ENABLEMENT_IDENTIFIER, Boolean.toString(tracingEnabled));
 		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_COUNT_IDENTIFIER, Integer.toString(maximumFileCountSpinner.getSelection()));
 		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_SIZE_IDENTIFIER, Integer.toString(maximumFileSizeSpinner.getSelection()));

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingUIActivator.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingUIActivator.java
位置:  -65,7 +65,7   public class TracingUIActivator extends Plugin {
 			if (instanceLocation == null || !instanceLocation.isSet()) {
 				// register a startup monitor to notify us when the application is running
 				final TracingStartupMonitor startupMonitor = new TracingStartupMonitor();
-				final Dictionary<String, ?> properties = new Hashtable<String, Object>(1);
+				final Dictionary<String, ?> properties = new Hashtable<>(1);
 				ServiceRegistration<StartupMonitor> registration = context.registerService(StartupMonitor.class, startupMonitor, properties);
 				startupMonitor.setRegistration(registration);
 			} else {

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/AbstractTracingNode.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/AbstractTracingNode.java
位置:  -25,7 +25,7   public abstract class AbstractTracingNode implements TracingNode {
 	 * Constructor to create the empty list of children
 	 */
 	public AbstractTracingNode() {
-		children = new ArrayList<TracingNode>();
+		children = new ArrayList<>();
 	}
 
 	protected abstract void populateChildren();

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/ModifiedDebugOptions.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/ModifiedDebugOptions.java
位置:  -25,8 +25,8   public class ModifiedDebugOptions {
 	 * Construct a new ModifiedDebugOptions object
 	 */
 	public ModifiedDebugOptions() {
-		debugOptionsToAdd = new ArrayList<TracingComponentDebugOption>();
-		debugOptionsToRemove = new ArrayList<TracingComponentDebugOption>();
+		debugOptionsToAdd = new ArrayList<>();
+		debugOptionsToRemove = new ArrayList<>();
 	}
 
 	/**

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingCollections.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingCollections.java
位置:  -29,11 +29,11   public class TracingCollections {
 	 */
 	protected TracingCollections() {
 
-		this.fComponentCollection = new HashMap<String, TracingComponent>();
-		this.fDebugOptionCollection = new HashMap<String, List<TracingComponentDebugOption>>();
-		this.fBundleOptionsCollection = new HashMap<Bundle, Properties>();
-		this.fBundleConsumedCollection = new HashMap<Bundle, Boolean>();
-		this.fBundleComponentCollection = new HashMap<Bundle, List<TracingComponent>>();
+		this.fComponentCollection = new HashMap<>();
+		this.fDebugOptionCollection = new HashMap<>();
+		this.fBundleOptionsCollection = new HashMap<>();
+		this.fBundleConsumedCollection = new HashMap<>();
+		this.fBundleComponentCollection = new HashMap<>();
 		this.fModifiedDebugOptions = new ModifiedDebugOptions();
 	}
 
位置:  -70,7 +70,7   public class TracingCollections {
 			List<TracingComponentDebugOption> debugOptions = this.fDebugOptionCollection.get(newDebugOption.getOptionPath());
 			if (debugOptions == null) {
 				// create the list of {@link TracingComponentDebugOption} elements
-				debugOptions = new ArrayList<TracingComponentDebugOption>();
+				debugOptions = new ArrayList<>();
 				fDebugOptionCollection.put(newDebugOption.getOptionPath(), debugOptions);
 			}
 			// add the newly created {@link TracingComponentDebugOption}
位置:  -202,7 +202,7   public class TracingCollections {
 		if ((bundle != null) &amp;&amp; (component != null)) {
 			List<TracingComponent> components = fBundleComponentCollection.get(bundle);
 			if (components == null) {
-				components = new ArrayList<TracingComponent>();
+				components = new ArrayList<>();
 				fBundleComponentCollection.put(bundle, components);
 			}
 			components.add(component);

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingComponent.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingComponent.java
位置:  -40,7 +40,7   public class TracingComponent extends AbstractTracingNode {
 		// set the label
 		setLabel(element.getAttribute(TracingConstants.TRACING_EXTENSION_LABEL_ATTRIBUTE));
 		// set the bundles
-		bundles = new ArrayList<Bundle>();
+		bundles = new ArrayList<>();
 		addBundles(element);
 	}
 

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/PreferenceHandler.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/PreferenceHandler.java
位置:  -62,7 +62,7   public class PreferenceHandler extends AbstractPreferenceInitializer {
 	 * Set the default preferences
 	 */
 	public static void setDefaultPreferences() {
-		final Map<String, String> prefValues = new HashMap<String, String>(5);
+		final Map<String, String> prefValues = new HashMap<>(5);
 		// tracing is off by default
 		prefValues.put(TracingConstants.PREFERENCE_ENABLEMENT_IDENTIFIER, Boolean.toString(false));
 		// see org.eclipse.osgi.framework.debug.EclipseDebugTrace#DEFAULT_TRACE_FILES

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/TracingUtils.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/TracingUtils.java
位置:  -86,7 +86,7   public class TracingUtils {
 	 * @return A {@link Map} object containing the key=value pairs in the encoded debug options {@link String}
 	 */
 	public static Map<String, String> convertToMap(final String debugOptions) {
-		final Map<String, String> result = new HashMap<String, String>();
+		final Map<String, String> result = new HashMap<>();
 		if (debugOptions != null) {
 			StringTokenizer optionTokens = new StringTokenizer(debugOptions, TracingConstants.DEBUG_OPTION_PREFERENCE_SEPARATOR);
 			while (optionTokens.hasMoreTokens()) {

---------------------------32---------------------------
需求名称: Bug 550139 - PDE validation dialog should also be centered
创建时间: 2019-11-04	12:04:53
修改时间: 2019-11-05	11:00:05

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java
位置:  -38,7 +38,7   import org.eclipse.pde.launching.IPDELauncherConstants;
 import org.eclipse.pde.ui.launcher.MainTab;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.*;
+import org.eclipse.ui.PlatformUI;
 
 public class LauncherUtilsStatusHandler implements IStatusHandler {
 
位置:  -137,17 +137,7   public class LauncherUtilsStatusHandler implements IStatusHandler {
 	}
 
 	public final static Shell getActiveShell() {
-		IWorkbench workbench = PlatformUI.getWorkbench();
-		IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
-		if (window == null) {
-			IWorkbenchWindow[] windows = workbench.getWorkbenchWindows();
-			if (windows.length > 0) {
-				return windows[0].getShell();
-			}
-		} else {
-			return window.getShell();
-		}
-		return getDisplay().getActiveShell();
+		return PlatformUI.getWorkbench().getModalDialogShellProvider().getShell();
 	}
 
 	private static void initializeProcessor(OrganizeManifestsProcessor processor) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginStatusDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginStatusDialog.java
位置:  -94,6 +94,20   public class PluginStatusDialog extends TrayDialog {
 	}
 
 	@Override
+	protected IDialogSettings getDialogBoundsSettings() {
+		IDialogSettings settings = PDEPlugin.getDefault().getDialogSettings();
+		IDialogSettings section = settings.getSection(getDialogSectionName());
+		if (section == null)
+			section = settings.addNewSection(getDialogSectionName());
+		return section;
+	}
+
+	@Override
+	protected int getDialogBoundsStrategy() {
+		return DIALOG_PERSISTSIZE;
+	}
+
+	@Override
 	protected void createButtonsForButtonBar(Composite parent) {
 		createButton(parent, IDialogConstants.OK_ID, PDEUIMessages.PluginStatusDialog_continueButtonLabel, true);
 		if (fShowCancelButton) {
位置:  -136,22 +150,11   public class PluginStatusDialog extends TrayDialog {
 		return super.close();
 	}
 
-	private IDialogSettings getDialogSettings() {
-		IDialogSettings settings = PDEPlugin.getDefault().getDialogSettings();
-		IDialogSettings section = settings.getSection(getDialogSectionName());
-		if (section == null)
-			section = settings.addNewSection(getDialogSectionName());
-		return section;
-	}
 
 	protected String getDialogSectionName() {
 		return PDEPlugin.getPluginId() + 
 	}
 
-	@Override
-	protected IDialogSettings getDialogBoundsSettings() {
-		return getDialogSettings();
-	}
 
 	public void refresh(Map<?, ?> input) {
 		fInput = input;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginValidationStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginValidationStatusHandler.java
位置:  -18,6 +18,7   package org.eclipse.pde.internal.ui.launcher;
 import org.eclipse.core.runtime.*;
 import org.eclipse.debug.core.IStatusHandler;
 import org.eclipse.jface.dialogs.IDialogConstants;
+import org.eclipse.jface.window.IShellProvider;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.internal.launching.PDEMessages;
 import org.eclipse.pde.internal.launching.launcher.*;
位置:  -25,6 +26,7   import org.eclipse.pde.internal.ui.*;
 import org.eclipse.pde.internal.ui.elements.NamedElement;
 import org.eclipse.swt.graphics.Image;
 import org.eclipse.swt.widgets.Display;
+import org.eclipse.ui.PlatformUI;
 
 public class PluginValidationStatusHandler implements IStatusHandler {
 	@Override
位置:  -47,7 +49,8   public class PluginValidationStatusHandler implements IStatusHandler {
 		final int[] result = new int[1];
 		final Display display = LauncherUtilsStatusHandler.getDisplay();
 		display.syncExec(() -> {
-			PluginStatusDialog dialog = new PluginStatusDialog(display.getActiveShell());
+			IShellProvider shellProvider = PlatformUI.getWorkbench().getModalDialogShellProvider();
+			PluginStatusDialog dialog = new PluginStatusDialog(shellProvider.getShell());
 			dialog.showCancelButton(true);
 			dialog.setInput(op.getInput());
 			result[0] = dialog.open();

---------------------------33---------------------------
需求名称: Bug 551990: Update minimum dependency version for
创建时间: 2019-11-05	03:30:38
修改时间: 2019-11-05	04:47:58

原文件: ui/org.eclipse.pde.junit.runtime/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime/META-INF/MANIFEST.MF
位置:  -5,7 +5,7   Bundle-SymbolicName: org.eclipse.pde.junit.runtime; singleton:=true
 Bundle-Version: 3.5.600.qualifier
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin
-Require-Bundle: org.eclipse.jdt.junit.runtime;bundle-version=
+Require-Bundle: org.eclipse.jdt.junit.runtime;bundle-version=
  org.junit;bundle-version=
  org.eclipse.core.runtime;bundle-version=
  org.eclipse.ui;bundle-version=

---------------------------34---------------------------
需求名称: Bug 550317 - Guard against null IDs/versions during model-initialisation
创建时间: 2019-10-20	10:27:26
修改时间: 2019-11-05	02:13:43

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureElementComparer.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureElementComparer.java
位置:  -13,6 +13,7  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.views.features.viewer;
 
+import java.util.Objects;
 import org.eclipse.jface.viewers.IElementComparer;
 import org.eclipse.pde.internal.core.ifeature.*;
 import org.eclipse.pde.internal.core.iproduct.*;
位置:  -24,30 +25,30   public class FeatureElementComparer implements IElementComparer {
 		if (areInstances(aObj, bObj, IFeatureModel.class)) {
 			IFeature a = ((IFeatureModel) aObj).getFeature();
 			IFeature b = ((IFeatureModel) bObj).getFeature();
-			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion());
+			return Objects.equals(a.getId(), b.getId()) &amp;&amp; Objects.equals(a.getVersion(), b.getVersion());
 		} else if (areInstances(aObj, bObj, IProductModel.class)) {
 			IProduct a = ((IProductModel) aObj).getProduct();
 			IProduct b = ((IProductModel) bObj).getProduct();
-			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion());
+			return Objects.equals(a.getId(), b.getId()) &amp;&amp; Objects.equals(a.getVersion(), b.getVersion());
 		} else if (areInstances(aObj, bObj, IProductFeature.class)) {
 			IProductFeature a = (IProductFeature) aObj;
 			IProductFeature b = (IProductFeature) bObj;
-			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+			return Objects.equals(a.getId(), b.getId()) &amp;&amp; Objects.equals(a.getVersion(), b.getVersion())
 					&amp;&amp; equals(a.getModel(), b.getModel());
 		} else if (areInstances(aObj, bObj, IProductPlugin.class)) {
 			IProductPlugin a = (IProductPlugin) aObj;
 			IProductPlugin b = (IProductPlugin) bObj;
-			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+			return Objects.equals(a.getId(), b.getId()) &amp;&amp; Objects.equals(a.getVersion(), b.getVersion())
 					&amp;&amp; equals(a.getModel(), b.getModel());
 		} else if (areInstances(aObj, bObj, IFeatureChild.class)) {
 			IFeatureChild a = (IFeatureChild) aObj;
 			IFeatureChild b = (IFeatureChild) bObj;
-			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+			return Objects.equals(a.getId(), b.getId()) &amp;&amp; Objects.equals(a.getVersion(), b.getVersion())
 					&amp;&amp; equals(a.getModel(), b.getModel());
 		} else if (areInstances(aObj, bObj, IFeaturePlugin.class)) {
 			IFeaturePlugin a = (IFeaturePlugin) aObj;
 			IFeaturePlugin b = (IFeaturePlugin) bObj;
-			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+			return Objects.equals(a.getId(), b.getId()) &amp;&amp; Objects.equals(a.getVersion(), b.getVersion())
 					&amp;&amp; equals(a.getModel(), b.getModel());
 		} else {
 			return aObj.equals(bObj);

---------------------------35---------------------------
需求名称: Bug 550317 - Show plugins/products using ViewerFilters
创建时间: 2019-10-20	16:52:15
修改时间: 2019-11-05	02:13:33

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java
位置:  -48,13 +48,15   public class FeaturesView extends ViewPart {
 		}
 	};
 
-	private final Collection<ViewerFilterAction> fViewerFilterActions = new ArrayList<>();
-
 	private final Collection<ViewerFilter> fViewerFilters = new ArrayList<>();
 
 	private PatternFilter fPatternFilter;
 
-	private Action fShowPluginsAction;
+	private ViewerFilterAction fFilterFeatureChildAction;
+
+	private ViewerFilterAction fShowPluginsAction;
+
+	private ViewerFilterAction fShowProductsAction;
 
 	private TreeViewer fViewer;
 
位置:  -71,7 +73,6   public class FeaturesView extends ViewPart {
 		FilteredTree filteredTree = createFilteredTree(parent);
 		fViewer = filteredTree.getViewer();
 		fPatternFilter = filteredTree.getPatternFilter();
-		fViewerFilters.add(fPatternFilter);
 
 		fClipboard = new Clipboard(parent.getDisplay());
 		fCopyAction = new FeatureAndPluginCopyAction(fViewer, fClipboard, fInput);
位置:  -103,6 +104,7   public class FeaturesView extends ViewPart {
 		patternFilter.setIncludeLeadingWildcard(true);
 
 		TreeViewer viewer = filteredTree.getViewer();
+		viewer.setExpandPreCheckFilters(true);
 		viewer.setComparer(new FeatureElementComparer());
 		viewer.setLabelProvider(new PDELabelProvider());
 
位置:  -123,9 +125,22   public class FeaturesView extends ViewPart {
 	}
 
 	private void resetViewerFilters() {
+		fViewerFilters.clear();
+
+		fViewerFilters.add(fPatternFilter);
+		addViewerFilter(fViewerFilters, fFilterFeatureChildAction);
+		addViewerFilter(fViewerFilters, fShowPluginsAction);
+		addViewerFilter(fViewerFilters, fShowProductsAction);
+
 		fViewer.setFilters(fViewerFilters.toArray(new ViewerFilter[fViewerFilters.size()]));
 	}
 
+	private void addViewerFilter(Collection<ViewerFilter> viewerFilters, ViewerFilterAction viewerFilterAction) {
+		if (viewerFilterAction.isEnabled() &amp;&amp; !viewerFilterAction.isChecked()) {
+			viewerFilters.add(viewerFilterAction.getViewerFilter());
+		}
+	}
+
 	public void toggle(ViewerFilter filter) {
 		if (fViewerFilters.contains(filter)) {
 			fViewerFilters.remove(filter);
位置:  -139,24 +154,15   public class FeaturesView extends ViewPart {
 		return fViewerFilters.contains(filter);
 	}
 
-	private void setContentProvider(IContentProvider contentProvider, boolean supportsFilters,
-			boolean supportsPlugins) {
+	private void setContentProvider(IContentProvider contentProvider, boolean supportsFeatureChildFilter,
+			boolean supportsPlugins, boolean supportsProducts) {
 		fViewer.setContentProvider(contentProvider);
 
-		setViewerFilterActionsEnabled(supportsFilters);
+		fFilterFeatureChildAction.setEnabled(supportsFeatureChildFilter);
 		fShowPluginsAction.setEnabled(supportsPlugins);
+		fShowProductsAction.setEnabled(supportsProducts);
 
-		if (supportsFilters) {
-			resetViewerFilters();
-		} else {
-			fViewer.setFilters(new ViewerFilter[] { fPatternFilter });
-		}
-	}
-
-	private void setViewerFilterActionsEnabled(boolean supportsFilters) {
-		for (ViewerFilterAction viewerFilterAction : fViewerFilterActions) {
-			viewerFilterAction.setEnabled(supportsFilters);
-		}
+		resetViewerFilters();
 	}
 
 	public void configureContent(Consumer<FeaturesViewInput> configurator) {
位置:  -185,18 +191,17   public class FeaturesView extends ViewPart {
 		toolBarManager.add(callersAction);
 		toolBarManager.add(new Separator());
 
-		ViewerFilterAction filterFeatureChildAction = new FilterFeatureChildAction(this);
-		filterFeatureChildAction.setChecked(true);
-		toolBarManager.add(filterFeatureChildAction);
+		fFilterFeatureChildAction = new FilterFeatureChildAction(this);
+		fFilterFeatureChildAction.setChecked(true);
+		toolBarManager.add(fFilterFeatureChildAction);
 
-		fShowPluginsAction = new ShowPluginsAction(this);
+		fShowPluginsAction = new ShowPluginsAction(this, fInput);
 		toolBarManager.add(fShowPluginsAction);
-		Action showProductsAction = new ShowProductsAction(this);
-		toolBarManager.add(showProductsAction);
+		fShowProductsAction = new ShowProductsAction(this, fInput);
+		toolBarManager.add(fShowProductsAction);
 
 		setContentProvider(calleesAction);
 		setContentProvider(callersAction);
-		registerFilterAction(filterFeatureChildAction);
 
 		actionBars.updateActionBars();
 	}
位置:  -222,17 +227,10   public class FeaturesView extends ViewPart {
 		manager.add(fCopyAction);
 	}
 
-	private void registerFilterAction(ViewerFilterAction filterAction) {
-		fViewerFilterActions.add(filterAction);
-		if (!filterAction.isChecked()) {
-			fViewerFilters.add(filterAction.getViewerFilter());
-		}
-	}
-
 	public void setContentProvider(ContentProviderAction contentProviderAction) {
 		if (contentProviderAction.isChecked()) {
-			setContentProvider(contentProviderAction.createContentProvider(), contentProviderAction.isSupportsFilters(),
-					contentProviderAction.isSupportsPlugins());
+			setContentProvider(contentProviderAction.createContentProvider(), contentProviderAction.isSupportsFeatureChildFilter(),
+					contentProviderAction.isSupportsPlugins(), contentProviderAction.isSupportsProducts());
 		}
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java
位置:  -37,8 +37,10   public abstract class ContentProviderAction extends Action {
 		fFeaturesView.setContentProvider(this);
 	}
 
-	public abstract boolean isSupportsFilters();
+	public abstract boolean isSupportsFeatureChildFilter();
 
 	public abstract boolean isSupportsPlugins();
 
+	public abstract boolean isSupportsProducts();
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java
位置:  -36,7 +36,7   public class ShowCalleesContentProviderAction extends ContentProviderAction {
 	}
 
 	@Override
-	public boolean isSupportsFilters() {
+	public boolean isSupportsFeatureChildFilter() {
 		return true;
 	}
 
位置:  -45,4 +45,9   public class ShowCalleesContentProviderAction extends ContentProviderAction {
 		return true;
 	}
 
+	@Override
+	public boolean isSupportsProducts() {
+		return true;
+	}
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java
位置:  -36,7 +36,7   public class ShowCallersContentProviderAction extends ContentProviderAction {
 	}
 
 	@Override
-	public boolean isSupportsFilters() {
+	public boolean isSupportsFeatureChildFilter() {
 		return false;
 	}
 
位置:  -45,4 +45,9   public class ShowCallersContentProviderAction extends ContentProviderAction {
 		return false;
 	}
 
+	@Override
+	public boolean isSupportsProducts() {
+		return true;
+	}
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowPluginsAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowPluginsAction.java
位置:  -13,18 +13,19  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.views.features.action;
 
-import org.eclipse.jface.action.Action;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
+import org.eclipse.pde.internal.ui.views.features.viewer.PluginViewerFilter;
 
-public class ShowPluginsAction extends Action {
+public class ShowPluginsAction extends ViewerFilterAction {
 
-	private final FeaturesView fFeaturesView;
+	private final FeaturesViewInput fFeaturesViewInput;
 
-	public ShowPluginsAction(FeaturesView featuresView) {
-		super(null, AS_CHECK_BOX);
-		fFeaturesView = featuresView;
+	public ShowPluginsAction(FeaturesView featuresView, FeaturesViewInput featuresViewInput) {
+		super(featuresView, new PluginViewerFilter());
+		fFeaturesViewInput = featuresViewInput;
 
 		setDescription(PDEUIMessages.FeaturesView_ShowPluginsAction_description);
 		setToolTipText(PDEUIMessages.FeaturesView_ShowPluginsAction_tooltip);
位置:  -33,7 +34,8   public class ShowPluginsAction extends Action {
 
 	@Override
 	public void run() {
-		fFeaturesView.configureContent(featuresViewInput -> featuresViewInput.setIncludePlugins(isChecked()));
+		fFeaturesViewInput.setIncludePlugins(isChecked());
+		super.run();
 	}
 
 }

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowProductsAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowProductsAction.java
位置:  -13,18 +13,19  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.views.features.action;
 
-import org.eclipse.jface.action.Action;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
+import org.eclipse.pde.internal.ui.views.features.viewer.ProductViewerFilter;
 
-public class ShowProductsAction extends Action {
+public class ShowProductsAction extends ViewerFilterAction {
 
-	private final FeaturesView fFeaturesView;
+	private final FeaturesViewInput fFeaturesViewInput;
 
-	public ShowProductsAction(FeaturesView featuresView) {
-		super(null, AS_CHECK_BOX);
-		fFeaturesView = featuresView;
+	public ShowProductsAction(FeaturesView featuresView, FeaturesViewInput featuresViewInput) {
+		super(featuresView, new ProductViewerFilter());
+		fFeaturesViewInput = featuresViewInput;
 
 		setDescription(PDEUIMessages.FeaturesView_ShowProductsAction_description);
 		setToolTipText(PDEUIMessages.FeaturesView_ShowProductsAction_tooltip);
位置:  -33,7 +34,8   public class ShowProductsAction extends Action {
 
 	@Override
 	public void run() {
-		fFeaturesView.configureContent(featuresViewInput -> featuresViewInput.setIncludeProducts(isChecked()));
+		fFeaturesViewInput.setIncludeProducts(isChecked());
+		super.run();
 	}
 
 }

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeaturesViewInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeaturesViewInput.java
位置:  -40,10 +40,6   public class FeaturesViewInput {
 	}
 
 	public IModel[] getModels() {
-		if (!isIncludeProducts()) {
-			return getFeatures();
-		}
-
 		IFeatureModel[] featureModels = getFeatures();
 		IProductModel[] productModels = getProducts();
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java
位置:  -30,12 +30,8   public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeConten
 	public Object[] getChildren(Object parentElement) {
 		if (parentElement instanceof IProductModel) {
 			IProductModel productModel = (IProductModel) parentElement;
-			Object[] features = productModel.getProduct().getFeatures();
-
-			if (!fInput.getFeaturesViewInput().isIncludePlugins()) {
-				return features;
-			}
 
+			Object[] features = productModel.getProduct().getFeatures();
 			Object[] plugins = productModel.getProduct().getPlugins();
 
 			List<Object> all = new ArrayList<>(features.length + plugins.length);
位置:  -45,12 +41,8   public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeConten
 			return all.toArray();
 		} else if (parentElement instanceof IFeatureModel) {
 			IFeatureModel featureModel = (IFeatureModel) parentElement;
-			Object[] features = featureModel.getFeature().getIncludedFeatures();
-
-			if (!fInput.getFeaturesViewInput().isIncludePlugins()) {
-				return features;
-			}
 
+			Object[] features = featureModel.getFeature().getIncludedFeatures();
 			Object[] plugins = featureModel.getFeature().getPlugins();
 
 			List<Object> all = new ArrayList<>(features.length + plugins.length);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java
位置:  -29,12 +29,8   public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeConten
 		if (parentElement instanceof IFeatureModel) {
 			IFeatureModel featureModel = (IFeatureModel) parentElement;
 			String featureId = featureModel.getFeature().getId();
-			Collection<IFeatureModel> features = fInput.getFeaturesViewInput().getIncludingFeatures(featureId);
-
-			if (!fInput.getFeaturesViewInput().isIncludeProducts()) {
-				return features.toArray();
-			}
 
+			Collection<IFeatureModel> features = fInput.getFeaturesViewInput().getIncludingFeatures(featureId);
 			Collection<IProductModel> products = fInput.getFeaturesViewInput().getIncludingProducts(featureId);
 
 			List<Object> all = new ArrayList<>(features.size() + products.size());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/PluginViewerFilter.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/PluginViewerFilter.java
位置:  -0,0 +1,32  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.jface.viewers.ViewerFilter;
+import org.eclipse.pde.internal.core.ifeature.IFeaturePlugin;
+import org.eclipse.pde.internal.core.iproduct.IProductPlugin;
+
+public class PluginViewerFilter extends ViewerFilter {
+
+	@Override
+	public boolean select(Viewer viewer, Object parentElement, Object element) {
+		if (element instanceof IFeaturePlugin || element instanceof IProductPlugin) {
+			return false;
+		}
+
+		return true;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/ProductViewerFilter.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/ProductViewerFilter.java
位置:  -0,0 +1,31  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.jface.viewers.ViewerFilter;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
+
+public class ProductViewerFilter extends ViewerFilter {
+
+	@Override
+	public boolean select(Viewer viewer, Object parentElement, Object element) {
+		if (element instanceof IProductModel) {
+			return false;
+		}
+
+		return true;
+	}
+
+}

---------------------------36---------------------------
需求名称: Bug 550317 - Add products to Features view
创建时间: 2019-10-26	12:52:31
修改时间: 2019-11-05	02:12:56

原文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF
位置:  -51,6 +51,7   Export-Package:
  org.eclipse.pde.internal.ui.views.imagebrowser.repositories;x-internal:=true,
  org.eclipse.pde.internal.ui.views.features;x-internal:=true,
  org.eclipse.pde.internal.ui.views.features.action;x-internal:=true,
+ org.eclipse.pde.internal.ui.views.features.model;x-internal:=true,
  org.eclipse.pde.internal.ui.views.features.support;x-internal:=true,
  org.eclipse.pde.internal.ui.views.features.viewer;x-internal:=true,
  org.eclipse.pde.internal.ui.views.plugins;x-internal:=true,

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDELabelProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDELabelProvider.java
位置:  -33,8 +33,7   import org.eclipse.pde.internal.core.*;
 import org.eclipse.pde.internal.core.builders.CompilerFlags;
 import org.eclipse.pde.internal.core.feature.*;
 import org.eclipse.pde.internal.core.ifeature.*;
-import org.eclipse.pde.internal.core.iproduct.IProductFeature;
-import org.eclipse.pde.internal.core.iproduct.IProductPlugin;
+import org.eclipse.pde.internal.core.iproduct.*;
 import org.eclipse.pde.internal.core.ischema.*;
 import org.eclipse.pde.internal.core.isite.*;
 import org.eclipse.pde.internal.core.plugin.ImportObject;
位置:  -104,6 +103,9   public class PDELabelProvider extends SharedLabelProvider {
 		if (obj instanceof IProductFeature) {
 			return getObjectText((IProductFeature) obj);
 		}
+		if (obj instanceof IProductModel) {
+			return getObjectText((IProductModel) obj);
+		}
 		if (obj instanceof ISiteFeature) {
 			return getObjectText((ISiteFeature) obj);
 		}
位置:  -314,6 +316,18   public class PDELabelProvider extends SharedLabelProvider {
 		return name + ' ' + formatVersion(obj.getVersion());
 	}
 
+	private String getObjectText(IProductModel obj) {
+		IProduct product = obj.getProduct();
+		String name = preventNull(product.getId());
+		if (name.isEmpty()) {
+			name = preventNull(product.getName());
+		}
+		if (VersionUtil.isEmptyVersion(product.getVersion())) {
+			return name;
+		}
+		return name + ' ' + formatVersion(product.getVersion());
+	}
+
 	public String getObjectText(ISiteFeature obj) {
 		IFeatureModel model = PDECore.getDefault().getFeatureModelManager().findFeatureModel(obj.getId(), obj.getVersion() != null ? obj.getVersion() : ICoreConstants.DEFAULT_VERSION);
 		if (model != null)
位置:  -445,6 +459,9   public class PDELabelProvider extends SharedLabelProvider {
 		if (obj instanceof IFeatureInfo) {
 			return getObjectImage((IFeatureInfo) obj);
 		}
+		if (obj instanceof IProductModel) {
+			return getObjectImage((IProductModel) obj);
+		}
 		if (obj instanceof IBuildEntry) {
 			return get(PDEPluginImages.DESC_BUILD_VAR_OBJ);
 		}
位置:  -772,6 +789,10   public class PDELabelProvider extends SharedLabelProvider {
 		return get(PDEPluginImages.DESC_DOC_SECTION_OBJ, flags);
 	}
 
+	private Image getObjectImage(IProductModel productModel) {
+		return get(PDEPluginImages.DESC_PRODUCT_DEFINITION);
+	}
+
 	public Image getObjectImage(ISiteFeature obj) {
 		int flags = 0;
 		if (obj.getArchiveFile() != null) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java
位置:  -1722,6 +1722,8   public class PDEUIMessages extends NLS {
 	public static String FeaturesView_ShowCallersContentProviderAction_tooltip;
 	public static String FeaturesView_ShowPluginsAction_description;
 	public static String FeaturesView_ShowPluginsAction_tooltip;
+	public static String FeaturesView_ShowProductsAction_description;
+	public static String FeaturesView_ShowProductsAction_tooltip;
 	public static String FeaturesView_OpenAction_label;
 	public static String FeaturesView_loadingDescription;
 	public static String FeaturesView_searchPlaceholder;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties
位置:  -1458,6 +1458,8   FeaturesView_ShowCallersContentProviderAction_description=Show Features Includin
 FeaturesView_ShowCallersContentProviderAction_tooltip=Show Features Including Each Feature
 FeaturesView_ShowPluginsAction_description=Show Included Plugins and Fragments
 FeaturesView_ShowPluginsAction_tooltip=Show Included Plugins and Fragments
+FeaturesView_ShowProductsAction_description=Show Workspace Products
+FeaturesView_ShowProductsAction_tooltip=Show Workspace Products
 FeaturesView_OpenAction_label=Open
 FeaturesView_loadingDescription=feature model
 FeaturesView_searchPlaceholder=type filter text

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java
位置:  -19,15 +19,15   import java.util.function.Consumer;
 import org.eclipse.jface.action.*;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
-import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
 import org.eclipse.pde.internal.ui.PDELabelProvider;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.editor.feature.FeatureEditor;
 import org.eclipse.pde.internal.ui.editor.plugin.ManifestEditor;
 import org.eclipse.pde.internal.ui.views.dependencies.OpenPluginDependenciesAction;
 import org.eclipse.pde.internal.ui.views.features.action.*;
-import org.eclipse.pde.internal.ui.views.features.support.*;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 import org.eclipse.pde.internal.ui.views.features.viewer.*;
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.dnd.Clipboard;
位置:  -62,12 +62,11   public class FeaturesView extends ViewPart {
 
 	private Action fCopyAction;
 
-	private FeatureInput fInput;
+	private FeaturesViewInput fInput;
 
 	@Override
 	public void createPartControl(Composite parent) {
-		FeatureModelManager featureModelManager = FeatureSupport.getManager();
-		fInput = new FeatureInput(featureModelManager);
+		fInput = new FeaturesViewInput();
 
 		FilteredTree filteredTree = createFilteredTree(parent);
 		fViewer = filteredTree.getViewer();
位置:  -75,10 +74,10   public class FeaturesView extends ViewPart {
 		fViewerFilters.add(fPatternFilter);
 
 		fClipboard = new Clipboard(parent.getDisplay());
-		fCopyAction = new FeatureAndPluginCopyAction(fViewer, fClipboard);
+		fCopyAction = new FeatureAndPluginCopyAction(fViewer, fClipboard, fInput);
 
 		registerGlobalActions();
-		contributeToActionBar(featureModelManager);
+		contributeToActionBar();
 		hookContextMenu();
 
 		initializeViewer();
位置:  -119,8 +118,8   public class FeaturesView extends ViewPart {
 
 	private void initializeViewer() {
 		resetViewerFilters();
-		fViewer.setComparator(new FeatureViewerComparator());
-		fViewer.setInput(new DeferredFeatureInput(fInput));
+		fViewer.setComparator(new FeatureViewerComparator(fInput));
+		fViewer.setInput(new DeferredFeaturesViewInput(fInput));
 	}
 
 	private void resetViewerFilters() {
位置:  -160,9 +159,9   public class FeaturesView extends ViewPart {
 		}
 	}
 
-	public void configureContent(Consumer<FeatureInput> configurator) {
-		DeferredFeatureInput deferredFeatureInput = (DeferredFeatureInput) fViewer.getInput();
-		configurator.accept(deferredFeatureInput.getFeatureInput());
+	public void configureContent(Consumer<FeaturesViewInput> configurator) {
+		DeferredFeaturesViewInput deferredInput = (DeferredFeaturesViewInput) fViewer.getInput();
+		configurator.accept(deferredInput.getFeaturesViewInput());
 		fViewer.refresh();
 	}
 
位置:  -171,18 +170,18   public class FeaturesView extends ViewPart {
 		actionBars.setGlobalActionHandler(ActionFactory.COPY.getId(), fCopyAction);
 	}
 
-	private void contributeToActionBar(FeatureModelManager featureModelManager) {
+	private void contributeToActionBar() {
 		IActionBars actionBars = getViewSite().getActionBars();
 		IToolBarManager toolBarManager = actionBars.getToolBarManager();
 
 		toolBarManager.add(new CollapseAllAction(fViewer));
 		toolBarManager.add(new Separator());
 
-		ContentProviderAction calleesAction = new ShowCalleesContentProviderAction(this, featureModelManager);
+		ContentProviderAction calleesAction = new ShowCalleesContentProviderAction(this, fInput);
 		calleesAction.setChecked(true);
 		toolBarManager.add(calleesAction);
 
-		ContentProviderAction callersAction = new ShowCallersContentProviderAction(this, featureModelManager);
+		ContentProviderAction callersAction = new ShowCallersContentProviderAction(this, fInput);
 		toolBarManager.add(callersAction);
 		toolBarManager.add(new Separator());
 
位置:  -192,6 +191,8   public class FeaturesView extends ViewPart {
 
 		fShowPluginsAction = new ShowPluginsAction(this);
 		toolBarManager.add(fShowPluginsAction);
+		Action showProductsAction = new ShowProductsAction(this);
+		toolBarManager.add(showProductsAction);
 
 		setContentProvider(calleesAction);
 		setContentProvider(callersAction);
位置:  -237,17 +238,22   public class FeaturesView extends ViewPart {
 
 	private void handleOpen() {
 		for (Object selection : getViewerSelection()) {
-			IFeatureModel featureModel = FeatureSupport.toFeatureModel(selection);
+			IFeatureModel featureModel = fInput.getFeatureSupport().toFeatureModel(selection);
 			if (featureModel != null) {
 				FeatureEditor.openFeatureEditor(featureModel);
 				continue;
 			}
 
-			IPluginModelBase pluginModel = PluginSupport.toPluginModel(selection);
+			IPluginModelBase pluginModel = fInput.getPluginSupport().toPluginModel(selection);
 			if (pluginModel != null) {
 				ManifestEditor.openPluginEditor(pluginModel);
 				continue;
 			}
+
+			IProductModel productModel = fInput.getProductSupport().toProductModel(selection);
+			if (productModel != null) {
+				fInput.getProductSupport().openProductEditor(productModel);
+			}
 		}
 	}
 
位置:  -256,7 +262,7   public class FeaturesView extends ViewPart {
 	}
 
 	private IPluginModelBase getSelectedPluginModel() {
-		return PluginSupport.toSinglePluginModel(fViewer.getStructuredSelection());
+		return fInput.getPluginSupport().toSinglePluginModel(fViewer.getStructuredSelection());
 	}
 
 }

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java
位置:  -15,19 +15,19   package org.eclipse.pde.internal.ui.views.features.action;
 
 import org.eclipse.jface.action.Action;
 import org.eclipse.jface.viewers.IContentProvider;
-import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 
 public abstract class ContentProviderAction extends Action {
 
 	private final FeaturesView fFeaturesView;
 
-	protected final FeatureModelManager fFeatureModelManager;
+	protected final FeaturesViewInput fFeaturesViewInput;
 
-	public ContentProviderAction(FeaturesView featuresView, FeatureModelManager featureModelManager) {
+	public ContentProviderAction(FeaturesView featuresView, FeaturesViewInput featuresViewInput) {
 		super(null, AS_RADIO_BUTTON);
 		fFeaturesView = featuresView;
-		fFeatureModelManager = featureModelManager;
+		fFeaturesViewInput = featuresViewInput;
 	}
 
 	public abstract IContentProvider createContentProvider();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FeatureAndPluginCopyAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FeatureAndPluginCopyAction.java
位置:  -22,9 +22,9   import org.eclipse.jface.viewers.StructuredViewer;
 import org.eclipse.pde.core.IModel;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureSupport;
-import org.eclipse.pde.internal.ui.views.features.support.PluginSupport;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 import org.eclipse.swt.dnd.*;
 import org.eclipse.swt.widgets.Event;
 import org.eclipse.ui.ISharedImages;
位置:  -38,11 +38,15   public class FeatureAndPluginCopyAction extends Action {
 
 	private final Clipboard fClipboard;
 
-	public FeatureAndPluginCopyAction(StructuredViewer structuredViewer, Clipboard clipboard) {
+	private final FeaturesViewInput fFeaturesViewInput;
+
+	public FeatureAndPluginCopyAction(StructuredViewer structuredViewer, Clipboard clipboard,
+			FeaturesViewInput featuresViewInput) {
 		super(PDEUIMessages.FeaturesView_FeatureAndPluginCopyAction_label,
 				PlatformUI.getWorkbench().getSharedImages().getImageDescriptor(ISharedImages.IMG_TOOL_COPY));
 		fStructuredViewer = structuredViewer;
 		fClipboard = clipboard;
+		fFeaturesViewInput = featuresViewInput;
 
 		setActionDefinitionId(ActionFactory.COPY.getCommandId());
 	}
位置:  -71,9 +75,12   public class FeatureAndPluginCopyAction extends Action {
 	}
 
 	private IModel toModel(Object element) {
-		IModel model = FeatureSupport.toFeatureModel(element);
+		IModel model = fFeaturesViewInput.getFeatureSupport().toFeatureModel(element);
+		if (model == null) {
+			model = fFeaturesViewInput.getPluginSupport().toPluginModel(element);
+		}
 		if (model == null) {
-			model = PluginSupport.toPluginModel(element);
+			model = fFeaturesViewInput.getProductSupport().toProductModel(element);
 		}
 
 		return model;
位置:  -90,6 +97,8   public class FeatureAndPluginCopyAction extends Action {
 			return ((IFeatureModel) model).getFeature().getId();
 		} else if (model instanceof IPluginModelBase) {
 			return ((IPluginModelBase) model).getPluginBase().getId();
+		} else if (model instanceof IProductModel) {
+			return ((IProductModel) model).getProduct().getId();
 		}
 
 		return null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java
位置:  -14,17 +14,16  
 package org.eclipse.pde.internal.ui.views.features.action;
 
 import org.eclipse.jface.viewers.IContentProvider;
-import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 import org.eclipse.pde.internal.ui.views.features.viewer.FeatureTreeCalleesContentProvider;
 
 public class ShowCalleesContentProviderAction extends ContentProviderAction {
 
-	public ShowCalleesContentProviderAction(FeaturesView featuresView,
-			FeatureModelManager featureModelManager) {
-		super(featuresView, featureModelManager);
+	public ShowCalleesContentProviderAction(FeaturesView featuresView, FeaturesViewInput featuresViewInput) {
+		super(featuresView, featuresViewInput);
 
 		setDescription(PDEUIMessages.FeaturesView_ShowCalleesContentProviderAction_description);
 		setToolTipText(PDEUIMessages.FeaturesView_ShowCalleesContentProviderAction_tooltip);
位置:  -33,7 +32,7   public class ShowCalleesContentProviderAction extends ContentProviderAction {
 
 	@Override
 	public IContentProvider createContentProvider() {
-		return new FeatureTreeCalleesContentProvider(fFeatureModelManager);
+		return new FeatureTreeCalleesContentProvider(fFeaturesViewInput);
 	}
 
 	@Override

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java
位置:  -14,16 +14,16  
 package org.eclipse.pde.internal.ui.views.features.action;
 
 import org.eclipse.jface.viewers.IContentProvider;
-import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 import org.eclipse.pde.internal.ui.views.features.viewer.FeatureTreeCallersContentProvider;
 
 public class ShowCallersContentProviderAction extends ContentProviderAction {
 
-	public ShowCallersContentProviderAction(FeaturesView featuresView, FeatureModelManager featureModelManager) {
-		super(featuresView, featureModelManager);
+	public ShowCallersContentProviderAction(FeaturesView featuresView, FeaturesViewInput fFeaturesViewInput) {
+		super(featuresView, fFeaturesViewInput);
 
 		setDescription(PDEUIMessages.FeaturesView_ShowCallersContentProviderAction_description);
 		setToolTipText(PDEUIMessages.FeaturesView_ShowCallersContentProviderAction_tooltip);
位置:  -32,7 +32,7   public class ShowCallersContentProviderAction extends ContentProviderAction {
 
 	@Override
 	public IContentProvider createContentProvider() {
-		return new FeatureTreeCallersContentProvider(fFeatureModelManager);
+		return new FeatureTreeCallersContentProvider(fFeaturesViewInput);
 	}
 
 	@Override

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowPluginsAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowPluginsAction.java
位置:  -33,7 +33,7   public class ShowPluginsAction extends Action {
 
 	@Override
 	public void run() {
-		fFeaturesView.configureContent(featureInput -> featureInput.setIncludePlugins(isChecked()));
+		fFeaturesView.configureContent(featuresViewInput -> featuresViewInput.setIncludePlugins(isChecked()));
 	}
 
 }

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowProductsAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowProductsAction.java
位置:  -0,0 +1,39  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+
+public class ShowProductsAction extends Action {
+
+	private final FeaturesView fFeaturesView;
+
+	public ShowProductsAction(FeaturesView featuresView) {
+		super(null, AS_CHECK_BOX);
+		fFeaturesView = featuresView;
+
+		setDescription(PDEUIMessages.FeaturesView_ShowProductsAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_ShowProductsAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_PRODUCT_DEFINITION);
+	}
+
+	@Override
+	public void run() {
+		fFeaturesView.configureContent(featuresViewInput -> featuresViewInput.setIncludeProducts(isChecked()));
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/model/IProductModelListener.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/model/IProductModelListener.java
位置:  -0,0 +1,20  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.model;
+
+public interface IProductModelListener {
+
+	void modelsChanged();
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/model/ProductModelManager.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/model/ProductModelManager.java
位置:  -0,0 +1,89  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.model;
+
+import java.util.*;
+import org.eclipse.pde.core.IModel;
+import org.eclipse.pde.core.IModelProviderEvent;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
+
+public class ProductModelManager {
+
+	private final Collection<IProductModelListener> fListeners = new ArrayList<>();
+
+	private final WorkspaceProductModelManager fWorkspaceProductModelManager;
+
+	private Map<String, IProductModel> fProductModels;
+
+	public ProductModelManager() {
+		fWorkspaceProductModelManager = new WorkspaceProductModelManager();
+		fWorkspaceProductModelManager.addModelProviderListener(this::handleModelProviderChange);
+	}
+
+	private void handleModelProviderChange(IModelProviderEvent event) {
+		ensureInitialized();
+
+		for (IModel model : event.getRemovedModels()) {
+			IProductModel productModel = (IProductModel) model;
+			fProductModels.remove(productModel.getProduct().getId());
+		}
+		for (IModel model : event.getAddedModels()) {
+			IProductModel productModel = (IProductModel) model;
+			fProductModels.put(productModel.getProduct().getId(), productModel);
+		}
+		for (IModel model : event.getChangedModels()) {
+			IProductModel productModel = (IProductModel) model;
+			fProductModels.put(productModel.getProduct().getId(), productModel);
+		}
+		for (IProductModelListener listener : fListeners) {
+			listener.modelsChanged();
+		}
+	}
+
+	public boolean isInitialized() {
+		return (fProductModels != null);
+	}
+
+	private void ensureInitialized() {
+		if (fProductModels == null) {
+			fProductModels = new HashMap<>();
+			for (IProductModel productModel : fWorkspaceProductModelManager.getProductModels()) {
+				fProductModels.put(productModel.getProduct().getId(), productModel);
+			}
+		}
+	}
+
+	public IProductModel findProductModel(String id) {
+		ensureInitialized();
+		return fProductModels.get(id);
+	}
+
+	public IProductModel[] getModels() {
+		ensureInitialized();
+		return fWorkspaceProductModelManager.getProductModels();
+	}
+
+	public void addProductModelListener(IProductModelListener listener) {
+		fListeners.add(listener);
+	}
+
+	public void removeProductModelListener(IProductModelListener listener) {
+		fListeners.remove(listener);
+	}
+
+	public synchronized void shutdown() {
+		fWorkspaceProductModelManager.shutdown();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/model/WorkspaceProductModelManager.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/model/WorkspaceProductModelManager.java
位置:  -0,0 +1,162  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.model;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import org.eclipse.core.resources.*;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.pde.core.IModelProviderEvent;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.WorkspaceModelManager;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
+import org.eclipse.pde.internal.core.product.WorkspaceProductModel;
+
+public class WorkspaceProductModelManager extends WorkspaceModelManager<Collection<IProductModel>> {
+
+	public final static String PRODUCT_FILENAME_SUFFIX = 
+
+	@Override
+	protected boolean isInterestingProject(IProject project) {
+		return (project.isOpen() &amp;&amp; !findProductFiles(project, false).isEmpty());
+	}
+
+	@Override
+	protected boolean isInterestingFolder(IFolder folder) {
+		return true;
+	}
+
+	@Override
+	protected void createModel(IProject project, boolean notify) {
+		for (IFile product : findProductFiles(project, true)) {
+			createSingleModel(project, product, notify);
+		}
+	}
+
+	private void createSingleModel(IProject project, IFile product, boolean notify) {
+		IProductModel model = new WorkspaceProductModel(product, true);
+		loadModel(model, false);
+
+		Collection<IProductModel> models = getModelsMap().computeIfAbsent(project, key -> new ArrayList<>());
+		models.add(model);
+
+		if (notify) {
+			addChange(model, IModelProviderEvent.MODELS_ADDED);
+		}
+	}
+
+	@Override
+	protected Collection<IProductModel> removeModel(IProject project) {
+		Collection<IProductModel> models = getModelsMap().remove(project);
+		if (models != null) {
+			for (IProductModel model : models) {
+				addChange(model, IModelProviderEvent.MODELS_REMOVED);
+			}
+		}
+		return models;
+	}
+
+	private Collection<IProductModel> removeSingleModel(IProject project, IProductModel model) {
+		Collection<IProductModel> models = getModelsMap().get(project);
+		if (models != null) {
+			if (models.remove(model)) {
+				addChange(model, IModelProviderEvent.MODELS_REMOVED);
+			}
+			if (models.isEmpty()) {
+				getModelsMap().remove(project);
+			}
+		}
+		return models;
+	}
+
+	private IProductModel getSingleModel(IFile productFile) {
+		Collection<IProductModel> models = getModel(productFile.getProject());
+		if (models != null) {
+			for (IProductModel model : models) {
+				if (model.getUnderlyingResource().equals(productFile)) {
+					return model;
+				}
+			}
+		}
+		return null;
+	}
+
+	@Override
+	protected void handleFileDelta(IResourceDelta delta) {
+		if (isProductFile(delta.getResource())) {
+			IFile file = (IFile) delta.getResource();
+			IProject project = file.getProject();
+
+			IProductModel model = getSingleModel(file);
+			int kind = delta.getKind();
+			if (kind == IResourceDelta.REMOVED &amp;&amp; model != null) {
+				removeSingleModel(project, model);
+			} else if (kind == IResourceDelta.ADDED &amp;&amp; model == null) {
+				createSingleModel(project, file, true);
+			} else if (kind == IResourceDelta.CHANGED &amp;&amp; (IResourceDelta.CONTENT &amp; delta.getFlags()) != 0) {
+				loadModel(model, true);
+				addChange(model, IModelProviderEvent.MODELS_CHANGED);
+			}
+		}
+	}
+
+	@Override
+	protected void addListeners() {
+		int event = IResourceChangeEvent.PRE_CLOSE | IResourceChangeEvent.POST_CHANGE;
+		PDECore.getWorkspace().addResourceChangeListener(this, event);
+	}
+
+	@Override
+	protected void removeListeners() {
+		PDECore.getWorkspace().removeResourceChangeListener(this);
+		super.removeListeners();
+	}
+
+	protected IProductModel[] getProductModels() {
+		initialize();
+
+		Collection<IProductModel> flattenedModels = new ArrayList<>();
+		for (Collection<IProductModel> models : getModelsMap().values()) {
+			flattenedModels.addAll(models);
+		}
+
+		return flattenedModels.toArray(new IProductModel[flattenedModels.size()]);
+	}
+
+	private static boolean isProductFile(IResourceProxy proxy) {
+		return proxy.getType() == IResource.FILE &amp;&amp; proxy.getName().endsWith(PRODUCT_FILENAME_SUFFIX);
+	}
+
+	private static boolean isProductFile(IResource resource) {
+		return resource.getType() == IResource.FILE &amp;&amp; resource.getName().endsWith(PRODUCT_FILENAME_SUFFIX);
+	}
+
+	private static Collection<IFile> findProductFiles(IContainer container, boolean findAll) {
+		try {
+			Collection<IFile> products = new ArrayList<>();
+
+			container.accept(proxy -> {
+				if (isProductFile(proxy) &amp;&amp; (findAll || products.isEmpty())) {
+					products.add((IFile) proxy.requestResource());
+				}
+				return (findAll || products.isEmpty());
+			}, IResource.NONE);
+
+			return products;
+		} catch (CoreException e) {
+			throw new RuntimeException(e);
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java
位置:  -17,20 +17,30   import java.util.*;
 import org.eclipse.pde.internal.core.*;
 import org.eclipse.pde.internal.core.ifeature.IFeatureChild;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.core.iproduct.IProductFeature;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
+import org.eclipse.pde.internal.ui.views.features.model.IProductModelListener;
+import org.eclipse.pde.internal.ui.views.features.model.ProductModelManager;
 
-public class FeatureIndex implements IFeatureModelListener {
+public class FeatureIndex implements IFeatureModelListener, IProductModelListener {
 
 	private final FeatureModelManager fFeatureModelManager;
 
+	private final ProductModelManager fProductModelManager;
+
 	private volatile Map<String, Collection<IFeatureModel>> fIncludingFeatures;
 
-	public FeatureIndex(FeatureModelManager featureModelManager) {
+	private volatile Map<String, Collection<IProductModel>> fIncludingProducts;
+
+	public FeatureIndex(FeatureModelManager featureModelManager, ProductModelManager productModelManager) {
 		fFeatureModelManager = featureModelManager;
 		fFeatureModelManager.addFeatureModelListener(this);
+		fProductModelManager = productModelManager;
+		fProductModelManager.addProductModelListener(this);
 	}
 
 	public boolean isInitialized() {
-		return (fIncludingFeatures != null);
+		return (fIncludingFeatures != null &amp;&amp; fIncludingProducts != null);
 	}
 
 	public void ensureInitialized() {
位置:  -44,12 +54,19   public class FeatureIndex implements IFeatureModelListener {
 		return fIncludingFeatures.getOrDefault(childId, Collections.emptySet());
 	}
 
+	public Collection<IProductModel> getIncludingProducts(String featureId) {
+		ensureInitialized();
+		return fIncludingProducts.getOrDefault(featureId, Collections.emptySet());
+	}
+
 	public void dispose() {
 		fFeatureModelManager.removeFeatureModelListener(this);
+		fProductModelManager.removeProductModelListener(this);
 	}
 
 	private void reIndex() {
 		Map<String, Collection<IFeatureModel>> includingFeatures = new HashMap<>();
+		Map<String, Collection<IProductModel>> includingProducts = new HashMap<>();
 
 		for (IFeatureModel parentModel : fFeatureModelManager.getModels()) {
 			for (IFeatureChild child : parentModel.getFeature().getIncludedFeatures()) {
位置:  -60,7 +77,17   public class FeatureIndex implements IFeatureModelListener {
 			}
 		}
 
+		for (IProductModel productModel : fProductModelManager.getModels()) {
+			for (IProductFeature productFeature : productModel.getProduct().getFeatures()) {
+				IFeatureModel featureModel = fFeatureModelManager.findFeatureModel(productFeature.getId());
+				if (featureModel != null) {
+					index(includingProducts, featureModel, productModel);
+				}
+			}
+		}
+
 		fIncludingFeatures = includingFeatures;
+		fIncludingProducts = includingProducts;
 	}
 
 	private void index(Map<String, Collection<IFeatureModel>> includingFeatures, IFeatureModel childModel,
位置:  -71,9 +98,22   public class FeatureIndex implements IFeatureModelListener {
 		parents.add(parentModel);
 	}
 
+	private void index(Map<String, Collection<IProductModel>> includingProducts, IFeatureModel childModel,
+			IProductModel productModel) {
+		String featureId = childModel.getFeature().getId();
+
+		Collection<IProductModel> products = includingProducts.computeIfAbsent(featureId, key -> new HashSet<>());
+		products.add(productModel);
+	}
+
 	@Override
 	public void modelsChanged(IFeatureModelDelta delta) {
 		reIndex();
 	}
 
+	@Override
+	public void modelsChanged() {
+		reIndex();
+	}
+
 }

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java
位置:  -1,63 +0,0  
-/*******************************************************************************
- * Copyright (c) 2019 Ed Scadding.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.ui.views.features.support;
-
-import java.util.Collection;
-import org.eclipse.pde.internal.core.FeatureModelManager;
-import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
-
-public class FeatureInput {
-
-	private final FeatureModelManager fFeatureModelManager;
-
-	private final FeatureIndex fIndex;
-
-	private boolean fIncludePlugins;
-
-	public FeatureInput(FeatureModelManager featureModelManager) {
-		fFeatureModelManager = featureModelManager;
-		fIndex = new FeatureIndex(featureModelManager);
-	}
-
-	public boolean isInitialized() {
-		return fFeatureModelManager.isInitialized() &amp;&amp; fIndex.isInitialized();
-	}
-
-	public IFeatureModel[] getFeatures() {
-		ensureInitialized();
-		return fFeatureModelManager.getModels();
-	}
-
-	public Collection<IFeatureModel> getIncludingFeatures(String childId) {
-		ensureInitialized();
-		return fIndex.getIncludingFeatures(childId);
-	}
-
-	private void ensureInitialized() {
-		fIndex.ensureInitialized();
-	}
-
-	public boolean isIncludePlugins() {
-		return fIncludePlugins;
-	}
-
-	public void setIncludePlugins(boolean includePlugins) {
-		fIncludePlugins = includePlugins;
-	}
-
-	public void dispose() {
-		fIndex.dispose();
-	}
-
-}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureSupport.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureSupport.java
位置:  -18,13 +18,11   import org.eclipse.pde.core.IIdentifiable;
 import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.core.PDECore;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.core.iproduct.IProductFeature;
 
 public class FeatureSupport {
 
-	private FeatureSupport() {
-	}
-
-	public static IFeatureModel toFeatureModel(Object obj) {
+	public IFeatureModel toFeatureModel(Object obj) {
 		if (obj instanceof IFeatureModel) {
 			return (IFeatureModel) obj;
 		} else if (obj instanceof IIdentifiable) {
位置:  -32,12 +30,15   public class FeatureSupport {
 			return getManager().findFeatureModel(featureOrChild.getId());
 		} else if (obj instanceof IProject) {
 			return getManager().getFeatureModel((IProject) obj);
+		} else if (obj instanceof IProductFeature) {
+			IProductFeature productFeature = (IProductFeature) obj;
+			return getManager().findFeatureModel(productFeature.getId());
 		} else {
 			return null;
 		}
 	}
 
-	public static FeatureModelManager getManager() {
+	public FeatureModelManager getManager() {
 		return PDECore.getDefault().getFeatureModelManager();
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeaturesViewInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeaturesViewInput.java
位置:  -0,0 +1,119  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import java.util.*;
+import org.eclipse.pde.core.IModel;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
+
+public class FeaturesViewInput {
+
+	private final FeatureSupport fFeatureSupport;
+
+	private final ProductSupport fProductSupport;
+
+	private final PluginSupport fPluginSupport;
+
+	private final FeatureIndex fIndex;
+
+	private boolean fIncludeProducts;
+
+	private boolean fIncludePlugins;
+
+	public FeaturesViewInput() {
+		fFeatureSupport = new FeatureSupport();
+		fProductSupport = new ProductSupport();
+		fPluginSupport = new PluginSupport();
+		fIndex = new FeatureIndex(fFeatureSupport.getManager(), fProductSupport.getManager());
+	}
+
+	public IModel[] getModels() {
+		if (!isIncludeProducts()) {
+			return getFeatures();
+		}
+
+		IFeatureModel[] featureModels = getFeatures();
+		IProductModel[] productModels = getProducts();
+
+		List<IModel> all = new ArrayList<>(productModels.length + featureModels.length);
+		all.addAll(Arrays.asList(productModels));
+		all.addAll(Arrays.asList(featureModels));
+
+		return all.toArray(new IModel[all.size()]);
+	}
+
+	private IFeatureModel[] getFeatures() {
+		ensureInitialized();
+		return fFeatureSupport.getManager().getModels();
+	}
+
+	private IProductModel[] getProducts() {
+		ensureInitialized();
+		return fProductSupport.getManager().getModels();
+	}
+
+	public Collection<IFeatureModel> getIncludingFeatures(String childId) {
+		ensureInitialized();
+		return fIndex.getIncludingFeatures(childId);
+	}
+
+	public Collection<IProductModel> getIncludingProducts(String featureId) {
+		ensureInitialized();
+		return fIndex.getIncludingProducts(featureId);
+	}
+
+	public boolean isInitialized() {
+		return fFeatureSupport.getManager().isInitialized() &amp;&amp; fProductSupport.getManager().isInitialized()
+				&amp;&amp; fIndex.isInitialized();
+	}
+
+	private void ensureInitialized() {
+		fIndex.ensureInitialized();
+	}
+
+	public boolean isIncludeProducts() {
+		return fIncludeProducts;
+	}
+
+	public void setIncludeProducts(boolean includeProducts) {
+		fIncludeProducts = includeProducts;
+	}
+
+	public boolean isIncludePlugins() {
+		return fIncludePlugins;
+	}
+
+	public void setIncludePlugins(boolean includePlugins) {
+		fIncludePlugins = includePlugins;
+	}
+
+	public FeatureSupport getFeatureSupport() {
+		return fFeatureSupport;
+	}
+
+	public ProductSupport getProductSupport() {
+		return fProductSupport;
+	}
+
+	public PluginSupport getPluginSupport() {
+		return fPluginSupport;
+	}
+
+	public void dispose() {
+		fIndex.dispose();
+		fProductSupport.dispose();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/PluginSupport.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/PluginSupport.java
位置:  -20,13 +20,11   import org.eclipse.pde.core.plugin.IPluginModelBase;
 import org.eclipse.pde.internal.core.PDECore;
 import org.eclipse.pde.internal.core.PluginModelManager;
 import org.eclipse.pde.internal.core.ifeature.IFeaturePlugin;
+import org.eclipse.pde.internal.core.iproduct.IProductPlugin;
 
 public class PluginSupport {
 
-	private PluginSupport() {
-	}
-
-	public static IPluginModelBase toSinglePluginModel(IStructuredSelection selection) {
+	public IPluginModelBase toSinglePluginModel(IStructuredSelection selection) {
 		if (selection.size() != 1) {
 			return null;
 		}
位置:  -35,12 +33,15   public class PluginSupport {
 		return toPluginModel(firstElement);
 	}
 
-	public static IPluginModelBase toPluginModel(Object obj) {
+	public IPluginModelBase toPluginModel(Object obj) {
 		if (obj instanceof IPluginModelBase) {
 			return (IPluginModelBase) obj;
 		} else if (obj instanceof IFeaturePlugin) {
 			IFeaturePlugin featurePlugin = (IFeaturePlugin) obj;
 			return getManager().findModel(featurePlugin.getId());
+		} else if (obj instanceof IProductPlugin) {
+			IProductPlugin productPlugin = (IProductPlugin) obj;
+			return getManager().findModel(productPlugin.getId());
 		} else if (obj instanceof IProject) {
 			return getManager().findModel((IProject) obj);
 		} else if (obj instanceof IJavaProject) {
位置:  -50,7 +51,7   public class PluginSupport {
 		}
 	}
 
-	public static PluginModelManager getManager() {
+	public PluginModelManager getManager() {
 		return PDECore.getDefault().getModelManager();
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/ProductSupport.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/ProductSupport.java
位置:  -0,0 +1,68  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.pde.internal.core.iproduct.IProduct;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
+import org.eclipse.pde.internal.ui.IPDEUIConstants;
+import org.eclipse.pde.internal.ui.PDEPlugin;
+import org.eclipse.pde.internal.ui.views.features.model.ProductModelManager;
+import org.eclipse.ui.IEditorInput;
+import org.eclipse.ui.PartInitException;
+import org.eclipse.ui.ide.IDE;
+import org.eclipse.ui.part.FileEditorInput;
+
+public class ProductSupport {
+
+	private final ProductModelManager fManager;
+
+	public ProductSupport() {
+		fManager = new ProductModelManager();
+	}
+
+	public void openProductEditor(IProductModel productModel) {
+		IResource resource = productModel.getUnderlyingResource();
+		try {
+			IEditorInput input = null;
+			if (resource != null) {
+				input = new FileEditorInput((IFile) resource);
+				IDE.openEditor(PDEPlugin.getActivePage(), input, IPDEUIConstants.PRODUCT_EDITOR_ID, true);
+			}
+		} catch (PartInitException e) {
+			PDEPlugin.logException(e);
+		}
+	}
+
+	public IProductModel toProductModel(Object obj) {
+		if (obj instanceof IProduct) {
+			IProduct product = (IProduct) obj;
+			return getManager().findProductModel(product.getId());
+		} else if (obj instanceof IProductModel) {
+			return (IProductModel) obj;
+		} else {
+			return null;
+		}
+	}
+
+	public ProductModelManager getManager() {
+		return fManager;
+	}
+
+	public void dispose() {
+		fManager.shutdown();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java
位置:  -17,23 +17,31   import org.eclipse.core.runtime.jobs.IJobChangeEvent;
 import org.eclipse.core.runtime.jobs.JobChangeAdapter;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.pde.internal.core.*;
+import org.eclipse.pde.internal.ui.views.features.model.IProductModelListener;
+import org.eclipse.pde.internal.ui.views.features.model.ProductModelManager;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 import org.eclipse.swt.widgets.Tree;
 import org.eclipse.swt.widgets.TreeItem;
 import org.eclipse.ui.progress.DeferredTreeContentManager;
 
-public abstract class AbstractFeatureTreeContentProvider implements ITreeContentProvider, IFeatureModelListener {
+public abstract class AbstractFeatureTreeContentProvider
+		implements ITreeContentProvider, IFeatureModelListener, IProductModelListener {
 
 	protected final FeatureModelManager fFeatureModelManager;
 
-	protected DeferredFeatureInput fInput;
+	protected final ProductModelManager fProductModelManager;
+
+	protected DeferredFeaturesViewInput fInput;
 
 	protected DeferredTreeContentManager fDeferredTreeContentManager;
 
 	private TreeViewer fViewer;
 
-	public AbstractFeatureTreeContentProvider(FeatureModelManager featureModelManager) {
-		fFeatureModelManager = featureModelManager;
+	public AbstractFeatureTreeContentProvider(FeaturesViewInput featuresViewInput) {
+		fFeatureModelManager = featuresViewInput.getFeatureSupport().getManager();
 		fFeatureModelManager.addFeatureModelListener(this);
+		fProductModelManager = featuresViewInput.getProductSupport().getManager();
+		fProductModelManager.addProductModelListener(this);
 	}
 
 	@Override
位置:  -47,8 +55,8   public abstract class AbstractFeatureTreeContentProvider implements ITreeContent
 			}
 		});
 
-		if (newInput instanceof DeferredFeatureInput) {
-			fInput = (DeferredFeatureInput) newInput;
+		if (newInput instanceof DeferredFeaturesViewInput) {
+			fInput = (DeferredFeaturesViewInput) newInput;
 		}
 	}
 
位置:  -64,9 +72,9   public abstract class AbstractFeatureTreeContentProvider implements ITreeContent
 
 	@Override
 	public Object[] getElements(Object inputElement) {
-		if (inputElement instanceof DeferredFeatureInput) {
-			DeferredFeatureInput deferredFeatureInput = (DeferredFeatureInput) inputElement;
-			return deferredFeatureInput.isInitialized() ? deferredFeatureInput.getChildren(inputElement)
+		if (inputElement instanceof DeferredFeaturesViewInput) {
+			DeferredFeaturesViewInput deferredFeaturesViewInput = (DeferredFeaturesViewInput) inputElement;
+			return deferredFeaturesViewInput.isInitialized() ? deferredFeaturesViewInput.getChildren(inputElement)
 					: fDeferredTreeContentManager.getChildren(inputElement);
 		}
 
位置:  -76,6 +84,7   public abstract class AbstractFeatureTreeContentProvider implements ITreeContent
 	@Override
 	public void dispose() {
 		fFeatureModelManager.removeFeatureModelListener(this);
+		fProductModelManager.removeProductModelListener(this);
 	}
 
 	@Override
位置:  -83,6 +92,11   public abstract class AbstractFeatureTreeContentProvider implements ITreeContent
 		refreshViewer();
 	}
 
+	@Override
+	public void modelsChanged() {
+		refreshViewer();
+	}
+
 	private void refreshViewer() {
 		runViewerTask(fViewer::refresh);
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/DeferredFeatureInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/DeferredFeaturesViewInput.java
位置:  -16,20 +16,20   package org.eclipse.pde.internal.ui.views.features.viewer;
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.jobs.ISchedulingRule;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 import org.eclipse.ui.model.WorkbenchAdapter;
 import org.eclipse.ui.progress.IDeferredWorkbenchAdapter;
 import org.eclipse.ui.progress.IElementCollector;
 
-public class DeferredFeatureInput extends WorkbenchAdapter implements IDeferredWorkbenchAdapter {
+public class DeferredFeaturesViewInput extends WorkbenchAdapter implements IDeferredWorkbenchAdapter {
 
-	private final FeatureInput fInput;
+	private final FeaturesViewInput fInput;
 
-	public DeferredFeatureInput(FeatureInput input) {
+	public DeferredFeaturesViewInput(FeaturesViewInput input) {
 		fInput = input;
 	}
 
-	public FeatureInput getFeatureInput() {
+	public FeaturesViewInput getFeaturesViewInput() {
 		return fInput;
 	}
 
位置:  -45,7 +45,7   public class DeferredFeatureInput extends WorkbenchAdapter implements IDeferredW
 
 	@Override
 	public Object[] getChildren(Object object) {
-		return fInput.getFeatures();
+		return fInput.getModels();
 	}
 
 	private void updateTree(IElementCollector collector, IProgressMonitor monitor, Object[] children) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java
位置:  -21,14 +21,20   public class FeatureChildViewerFilter extends ViewerFilter {
 
 	@Override
 	public boolean select(Viewer viewer, Object parentElement, Object element) {
-		if (parentElement instanceof DeferredFeatureInput &amp;&amp; element instanceof IFeatureModel) {
-			DeferredFeatureInput input = (DeferredFeatureInput) parentElement;
+		if (parentElement instanceof DeferredFeaturesViewInput &amp;&amp; element instanceof IFeatureModel) {
+			DeferredFeaturesViewInput input = (DeferredFeaturesViewInput) parentElement;
 			IFeatureModel featureModel = (IFeatureModel) element;
+			boolean showProducts = input.getFeaturesViewInput().isIncludeProducts();
 
 			String featureId = featureModel.getFeature().getId();
-			boolean includedInFeature = !input.getFeatureInput().getIncludingFeatures(featureId).isEmpty();
+			boolean includedInFeature = !input.getFeaturesViewInput().getIncludingFeatures(featureId).isEmpty();
+			boolean includedInProduct = !input.getFeaturesViewInput().getIncludingProducts(featureId).isEmpty();
 
-			return !includedInFeature;
+			if (includedInFeature) {
+				return false;
+			} else if (showProducts &amp;&amp; includedInProduct) {
+				return false;
+			}
 		}
 
 		return true;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureElementComparer.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureElementComparer.java
位置:  -15,6 +15,7   package org.eclipse.pde.internal.ui.views.features.viewer;
 
 import org.eclipse.jface.viewers.IElementComparer;
 import org.eclipse.pde.internal.core.ifeature.*;
+import org.eclipse.pde.internal.core.iproduct.*;
 
 public class FeatureElementComparer implements IElementComparer {
 
位置:  -24,6 +25,20   public class FeatureElementComparer implements IElementComparer {
 			IFeature a = ((IFeatureModel) aObj).getFeature();
 			IFeature b = ((IFeatureModel) bObj).getFeature();
 			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion());
+		} else if (areInstances(aObj, bObj, IProductModel.class)) {
+			IProduct a = ((IProductModel) aObj).getProduct();
+			IProduct b = ((IProductModel) bObj).getProduct();
+			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion());
+		} else if (areInstances(aObj, bObj, IProductFeature.class)) {
+			IProductFeature a = (IProductFeature) aObj;
+			IProductFeature b = (IProductFeature) bObj;
+			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+					&amp;&amp; equals(a.getModel(), b.getModel());
+		} else if (areInstances(aObj, bObj, IProductPlugin.class)) {
+			IProductPlugin a = (IProductPlugin) aObj;
+			IProductPlugin b = (IProductPlugin) bObj;
+			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+					&amp;&amp; equals(a.getModel(), b.getModel());
 		} else if (areInstances(aObj, bObj, IFeatureChild.class)) {
 			IFeatureChild a = (IFeatureChild) aObj;
 			IFeatureChild b = (IFeatureChild) bObj;
位置:  -43,6 +58,12   public class FeatureElementComparer implements IElementComparer {
 	public int hashCode(Object element) {
 		if (element instanceof IFeatureModel) {
 			return ((IFeatureModel) element).getFeature().getId().hashCode();
+		} else if (element instanceof IProductModel) {
+			return ((IProductModel) element).getProduct().getId().hashCode();
+		} else if (element instanceof IProductFeature) {
+			return ((IProductFeature) element).getId().hashCode();
+		} else if (element instanceof IProductPlugin) {
+			return ((IProductPlugin) element).getId().hashCode();
 		} else if (element instanceof IFeatureChild) {
 			return ((IFeatureChild) element).getId().hashCode();
 		} else if (element instanceof IFeaturePlugin) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java
位置:  -14,23 +14,40  
 package org.eclipse.pde.internal.ui.views.features.viewer;
 
 import java.util.*;
-import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.core.ifeature.IFeatureChild;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.core.iproduct.IProductFeature;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 
 public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeContentProvider {
 
-	public FeatureTreeCalleesContentProvider(FeatureModelManager featureModelManager) {
-		super(featureModelManager);
+	public FeatureTreeCalleesContentProvider(FeaturesViewInput featuresViewInput) {
+		super(featuresViewInput);
 	}
 
 	@Override
 	public Object[] getChildren(Object parentElement) {
-		if (parentElement instanceof IFeatureModel) {
+		if (parentElement instanceof IProductModel) {
+			IProductModel productModel = (IProductModel) parentElement;
+			Object[] features = productModel.getProduct().getFeatures();
+
+			if (!fInput.getFeaturesViewInput().isIncludePlugins()) {
+				return features;
+			}
+
+			Object[] plugins = productModel.getProduct().getPlugins();
+
+			List<Object> all = new ArrayList<>(features.length + plugins.length);
+			all.addAll(Arrays.asList(features));
+			all.addAll(Arrays.asList(plugins));
+
+			return all.toArray();
+		} else if (parentElement instanceof IFeatureModel) {
 			IFeatureModel featureModel = (IFeatureModel) parentElement;
 			Object[] features = featureModel.getFeature().getIncludedFeatures();
 
-			if (!fInput.getFeatureInput().isIncludePlugins()) {
+			if (!fInput.getFeaturesViewInput().isIncludePlugins()) {
 				return features;
 			}
 
位置:  -45,6 +62,10   public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeConten
 			IFeatureChild featureChild = (IFeatureChild) parentElement;
 			IFeatureModel featureModel = fFeatureModelManager.findFeatureModel(featureChild.getId());
 			return getChildren(featureModel);
+		} else if (parentElement instanceof IProductFeature) {
+			IProductFeature productFeature = (IProductFeature) parentElement;
+			IFeatureModel featureModel = fFeatureModelManager.findFeatureModel(productFeature.getId());
+			return getChildren(featureModel);
 		}
 
 		return new Object[0];

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java
位置:  -13,13 +13,15  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.views.features.viewer;
 
-import org.eclipse.pde.internal.core.FeatureModelManager;
+import java.util.*;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.core.iproduct.IProductModel;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 
 public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeContentProvider {
 
-	public FeatureTreeCallersContentProvider(FeatureModelManager featureModelManager) {
-		super(featureModelManager);
+	public FeatureTreeCallersContentProvider(FeaturesViewInput featuresViewInput) {
+		super(featuresViewInput);
 	}
 
 	@Override
位置:  -27,7 +29,19   public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeConten
 		if (parentElement instanceof IFeatureModel) {
 			IFeatureModel featureModel = (IFeatureModel) parentElement;
 			String featureId = featureModel.getFeature().getId();
-			return fInput.getFeatureInput().getIncludingFeatures(featureId).toArray();
+			Collection<IFeatureModel> features = fInput.getFeaturesViewInput().getIncludingFeatures(featureId);
+
+			if (!fInput.getFeaturesViewInput().isIncludeProducts()) {
+				return features.toArray();
+			}
+
+			Collection<IProductModel> products = fInput.getFeaturesViewInput().getIncludingProducts(featureId);
+
+			List<Object> all = new ArrayList<>(features.size() + products.size());
+			all.addAll(features);
+			all.addAll(products);
+
+			return all.toArray();
 		}
 
 		return new Object[0];

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureViewerComparator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureViewerComparator.java
位置:  -15,27 +15,37   package org.eclipse.pde.internal.ui.views.features.viewer;
 
 import org.eclipse.jface.viewers.ViewerComparator;
 import org.eclipse.pde.internal.core.ifeature.*;
+import org.eclipse.pde.internal.core.iproduct.*;
 import org.eclipse.pde.internal.ui.views.features.support.FeatureSupport;
+import org.eclipse.pde.internal.ui.views.features.support.FeaturesViewInput;
 
 public class FeatureViewerComparator extends ViewerComparator {
 
+	private final FeatureSupport fFeatureSupport;
+
+	public FeatureViewerComparator(FeaturesViewInput featuresViewInput) {
+		fFeatureSupport = featuresViewInput.getFeatureSupport();
+	}
+
 	@Override
 	public int category(Object element) {
-		if (element instanceof IFeatureChild) {
-			element = FeatureSupport.toFeatureModel(element);
+		if (element instanceof IFeatureChild || element instanceof IProductFeature) {
+			element = fFeatureSupport.toFeatureModel(element);
 			if (element == null) {
-				return 2;
+				return 3;
 			}
 		}
 
-		if (element instanceof IFeatureModel) {
+		if (element instanceof IProductModel) {
+			return 0;
+		} else if (element instanceof IFeatureModel) {
 			IFeatureModel featureModel = (IFeatureModel) element;
-			return (featureModel.isEditable() ? 0 : 1);
-		} else if (element instanceof IFeaturePlugin) {
-			return 3;
+			return (featureModel.isEditable() ? 1 : 2);
+		} else if (element instanceof IFeaturePlugin || element instanceof IProductPlugin) {
+			return 4;
 		}
 
-		return 4;
+		return 5;
 	}
 
 }

---------------------------37---------------------------
需求名称: Bug 550317 - Generify WorkspaceModelManager
创建时间: 2019-10-31	16:39:28
修改时间: 2019-11-05	02:12:43

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/FeatureModelManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/FeatureModelManager.java
位置:  -164,7 +164,7   public class FeatureModelManager {
 
 	public IFeatureModel getFeatureModel(IProject project) {
 		init();
-		return fWorkspaceManager.getFeatureModel(project);
+		return fWorkspaceManager.getModel(project);
 	}
 
 	/**

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginModelManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginModelManager.java
位置:  -623,7 +623,8   public class PluginModelManager implements IModelProviderListener {
 		subMon.split(15);
 
 		if (PDECore.DEBUG_MODEL) {
-			System.out.println(fWorkspaceManager.getModels().length + 
+			System.out.println(fWorkspaceManager.getModelsMap().size() + 
+					+ (System.currentTimeMillis() - startWorkspaceAdditions) + 
 		}
 
 		// Resolve the state for all external and workspace models
位置:  -1050,7 +1051,7   public class PluginModelManager implements IModelProviderListener {
 	 */
 	public IPluginModelBase findModel(IProject project) {
 		initializeTable(null);
-		return fWorkspaceManager.getPluginModel(project);
+		return fWorkspaceManager.getModel(project);
 	}
 
 	/**
位置:  -1249,7 +1250,7   public class PluginModelManager implements IModelProviderListener {
 		fWorkspaceManager.removeModel(project);
 		if (fWorkspaceManager.isInterestingProject(project)) {
 			fWorkspaceManager.createModel(project, false);
-			Object model = fWorkspaceManager.getModel(project);
+			IPluginModelBase model = fWorkspaceManager.getModel(project);
 			fWorkspaceManager.addChange(model, IModelProviderEvent.MODELS_CHANGED);
 		}
 		fWorkspaceManager.processModelChanges();

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspaceFeatureModelManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspaceFeatureModelManager.java
位置:  -18,13 +18,12   import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.IResourceChangeEvent;
 import org.eclipse.core.resources.IResourceDelta;
-import org.eclipse.pde.core.IModel;
 import org.eclipse.pde.core.IModelProviderEvent;
 import org.eclipse.pde.internal.core.feature.WorkspaceFeatureModel;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
 import org.eclipse.pde.internal.core.project.PDEProject;
 
-public class WorkspaceFeatureModelManager extends WorkspaceModelManager {
+public class WorkspaceFeatureModelManager extends WorkspaceModelManager<IFeatureModel> {
 
 	@Override
 	protected boolean isInterestingProject(IProject project) {
位置:  -35,7 +34,7   public class WorkspaceFeatureModelManager extends WorkspaceModelManager {
 	protected void createModel(IProject project, boolean notify) {
 		IFile featureXml = PDEProject.getFeatureXml(project);
 		if (featureXml.exists()) {
-			IModel model = new WorkspaceFeatureModel(featureXml);
+			IFeatureModel model = new WorkspaceFeatureModel(featureXml);
 			loadModel(model, false);
 			getModelsMap().put(project, model);
 			if (notify) {
位置:  -45,19 +44,26   public class WorkspaceFeatureModelManager extends WorkspaceModelManager {
 	}
 
 	@Override
+	protected IFeatureModel removeModel(IProject project) {
+		IFeatureModel model = getModelsMap().remove(project);
+		addChange(model, IModelProviderEvent.MODELS_REMOVED);
+		return model;
+	}
+
+	@Override
 	protected void handleFileDelta(IResourceDelta delta) {
 		IFile file = (IFile) delta.getResource();
 		IProject project = file.getProject();
 		IFile featureXml = PDEProject.getFeatureXml(project);
 		if (file.equals(featureXml)) {
-			Object model = getModel(project);
+			IFeatureModel model = getModel(project);
 			int kind = delta.getKind();
 			if (kind == IResourceDelta.REMOVED &amp;&amp; model != null) {
 				removeModel(project);
 			} else if (kind == IResourceDelta.ADDED || model == null) {
 				createModel(file.getProject(), true);
 			} else if (kind == IResourceDelta.CHANGED &amp;&amp; (IResourceDelta.CONTENT &amp; delta.getFlags()) != 0) {
-				loadModel((IFeatureModel) model, true);
+				loadModel(model, true);
 				addChange(model, IModelProviderEvent.MODELS_CHANGED);
 			}
 		}
位置:  -80,12 +86,8   public class WorkspaceFeatureModelManager extends WorkspaceModelManager {
 		return getModelsMap().values().toArray(new IFeatureModel[getModelsMap().size()]);
 	}
 
-	protected IFeatureModel getFeatureModel(IProject project) {
-		return (IFeatureModel) getModel(project);
-	}
-
 	public void removeModel(IFeatureModel iFeatureModel) {
-		for (Entry<IProject, Object> entry : getModelsMap().entrySet()) {
+		for (Entry<IProject, IFeatureModel> entry : getModelsMap().entrySet()) {
 			if (entry.getValue() == iFeatureModel) {
 				this.removeModel(entry.getKey());
 				break;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspaceModelManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspaceModelManager.java
位置:  -36,7 +36,8   import org.eclipse.pde.core.IModelProviderEvent;
 import org.eclipse.pde.internal.core.project.PDEProject;
 import org.eclipse.team.core.RepositoryProvider;
 
-public abstract class WorkspaceModelManager extends AbstractModelManager implements IResourceChangeListener, IResourceDeltaVisitor {
+public abstract class WorkspaceModelManager<T> extends AbstractModelManager
+		implements IResourceChangeListener, IResourceDeltaVisitor {
 
 	public static boolean isPluginProject(IProject project) {
 		if (project == null) {
位置:  -71,7 +72,7   public abstract class WorkspaceModelManager extends AbstractModelManager impleme
 		return RepositoryProvider.getProvider(project) == null || isBinaryProject(project);
 	}
 
-	class ModelChange {
+	static class ModelChange {
 		IModel model;
 		int type;
 
位置:  -92,17 +93,17   public abstract class WorkspaceModelManager extends AbstractModelManager impleme
 		}
 	}
 
-	private Map<IProject, Object> fModels = null;
+	private Map<IProject, T> fModels = null;
 	private ArrayList<ModelChange> fChangedModels;
 
-	protected Map<IProject, Object> getModelsMap() {
+	protected Map<IProject, T> getModelsMap() {
 		ensureModelsMapCreated();
 		return fModels;
 	}
 
 	private void ensureModelsMapCreated() {
 		if (fModels == null) {
-			fModels = Collections.synchronizedMap(new LinkedHashMap<IProject, Object>());
+			fModels = Collections.synchronizedMap(new LinkedHashMap<IProject, T>());
 		}
 	}
 
位置:  -126,18 +127,15   public abstract class WorkspaceModelManager extends AbstractModelManager impleme
 
 	protected abstract void createModel(IProject project, boolean notify);
 
+	protected abstract T removeModel(IProject project);
+
 	protected abstract void addListeners();
 
-	protected Object getModel(IProject project) {
+	protected T getModel(IProject project) {
 		initialize();
 		return fModels.get(project);
 	}
 
-	protected Object[] getModels() {
-		initialize();
-		return fModels.values().toArray();
-	}
-
 	@Override
 	public void resourceChanged(IResourceChangeEvent event) {
 		switch (event.getType()) {
位置:  -206,18 +204,12   public abstract class WorkspaceModelManager extends AbstractModelManager impleme
 
 	protected abstract void handleFileDelta(IResourceDelta delta);
 
-	protected Object removeModel(IProject project) {
-		Object model = fModels != null ? fModels.remove(project) : null;
-		addChange(model, IModelProviderEvent.MODELS_REMOVED);
-		return model;
-	}
-
-	protected void addChange(Object model, int eventType) {
-		if (model instanceof IModel) {
+	protected void addChange(IModel model, int eventType) {
+		if (model != null) {
 			if (fChangedModels == null) {
 				fChangedModels = new ArrayList<>();
 			}
-			ModelChange change = new ModelChange((IModel) model, eventType);
+			ModelChange change = new ModelChange(model, eventType);
 			if (!fChangedModels.contains(change)) {
 				fChangedModels.add(change);
 			}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspacePluginModelManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspacePluginModelManager.java
位置:  -60,7 +60,7   import org.eclipse.pde.internal.core.project.PDEProject;
 import org.eclipse.pde.internal.core.schema.SchemaDescriptor;
 import org.osgi.framework.Constants;
 
-public class WorkspacePluginModelManager extends WorkspaceModelManager {
+public class WorkspacePluginModelManager extends WorkspaceModelManager<IPluginModelBase> {
 
 	@SuppressWarnings(
 	private static final Collection<String> RELEVANT_HEADERS = Collections
位置:  -171,13 +171,13   public class WorkspacePluginModelManager extends WorkspaceModelManager {
 			// change in build.properties should trigger a Classpath Update
 			// we therefore fire a notification
 			//TODO this is inefficient.  we could do better.
-			Object model = getModel(project);
+			IPluginModelBase model = getModel(project);
 			if (model != null) {
 				addChange(model, IModelProviderEvent.MODELS_CHANGED);
 			}
 		} else if (file.equals(PDEProject.getLocalizationFile(project))) {
 			// reset bundle resource if localization file has changed.
-			IPluginModelBase model = getPluginModel(project);
+			IPluginModelBase model = getModel(project);
 			if (model != null) {
 				((AbstractNLModel) model).resetNLResourceHelper();
 			}
位置:  -281,7 +281,7   public class WorkspacePluginModelManager extends WorkspaceModelManager {
 	 */
 	private void handleExtensionFileDelta(IFile file, IResourceDelta delta) {
 		int kind = delta.getKind();
-		IPluginModelBase model = (IPluginModelBase) getModel(file.getProject());
+		IPluginModelBase model = getModel(file.getProject());
 		if (kind == IResourceDelta.REMOVED) {
 			if (model instanceof IBundlePluginModelBase) {
 				((IBundlePluginModelBase) model).setExtensionsModel(null);
位置:  -335,7 +335,7   public class WorkspacePluginModelManager extends WorkspaceModelManager {
 	private void handleBundleManifestDelta(IFile file, IResourceDelta delta) {
 		int kind = delta.getKind();
 		IProject project = file.getProject();
-		Object model = getModel(project);
+		IPluginModelBase model = getModel(project);
 		if (kind == IResourceDelta.REMOVED &amp;&amp; model != null) {
 			removeModel(project);
 			// switch to legacy plugin structure, if applicable
位置:  -401,18 +401,20   public class WorkspacePluginModelManager extends WorkspaceModelManager {
 	 * if the given project is a plug-in project
 	 */
 	@Override
-	protected Object removeModel(IProject project) {
-		Object model = super.removeModel(project);
+	protected IPluginModelBase removeModel(IProject project) {
+		IPluginModelBase model = getModelsMap().remove(project);
+		addChange(model, IModelProviderEvent.MODELS_REMOVED);
+
 		if (model != null &amp;&amp; PDEProject.getOptionsFile(project).exists()) {
 			PDECore.getDefault().getTracingOptionsManager().reset();
 		}
-		if (model instanceof IPluginModelBase) {
+		if (model != null) {
 			// PluginModelManager will remove IPluginModelBase form ModelEntry before triggering IModelChangedEvent
 			// Therefore, if we want to track a removed model we need to create an entry for it in the ExtensionDeltaEvent
 			//			String id = ((IPluginModelBase)model).getPluginBase().getId();
 			//			ModelEntry entry = PluginRegistry.findEntry(id);
 			//			if (entry.getWorkspaceModels().length + entry.getExternalModels().length < 2)
-			addExtensionChange((IPluginModelBase) model, IModelProviderEvent.MODELS_REMOVED);
+			addExtensionChange(model, IModelProviderEvent.MODELS_REMOVED);
 		}
 		return model;
 	}
位置:  -427,8 +429,9   public class WorkspacePluginModelManager extends WorkspaceModelManager {
 	 * @return a plug-in model associated with the given project or <code>null</code>
 	 * if no such valid model exists
 	 */
-	protected IPluginModelBase getPluginModel(IProject project) {
-		return (IPluginModelBase) getModel(project);
+	@Override
+	protected IPluginModelBase getModel(IProject project) {
+		return super.getModel(project);
 	}
 
 	/**

---------------------------38---------------------------
需求名称: Bug 343156 - Default target platform doesn't list all installed bundles
创建时间: 2019-10-20	13:50:11
修改时间: 2019-11-05	02:12:32

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ProfileBundleContainer.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ProfileBundleContainer.java
位置:  -21,8 +21,10   import java.io.FileInputStream;
 import java.io.IOException;
 import java.net.MalformedURLException;
 import java.net.URI;
+import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Objects;
 import java.util.Properties;
位置:  -129,6 +131,16   public class ProfileBundleContainer extends AbstractBundleContainer {
 
 		BundleInfo[] infos = P2Utils.readBundles(home, configUrl);
 		if (infos == null) {
+			if (configUrl != null) {
+				try {
+					TargetBundle[] osgiBundles = readBundleInfosFromConfigIni(configUrl.toURI());
+					if (osgiBundles != null &amp;&amp; osgiBundles.length > 0) {
+						return osgiBundles;
+					}
+				} catch (URISyntaxException ex) {
+					throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, ex.getMessage(), ex));
+				}
+			}
 			TargetBundle[] platformXML = resolvePlatformXML(definition, home, monitor);
 			if (platformXML != null) {
 				return platformXML;
位置:  -161,6 +173,44   public class ProfileBundleContainer extends AbstractBundleContainer {
 		}).filter(Objects::nonNull).toArray(TargetBundle[]::new);
 	}
 
+	private TargetBundle[] readBundleInfosFromConfigIni(URI configArea) {
+		File configIni = new File(configArea);
+		configIni = new File(configIni, CONFIG_INI);
+		if (!configIni.isFile()) {
+			return null;
+		}
+		Properties configProps = new Properties();
+		try (FileInputStream fis = new FileInputStream(configIni)) {
+			configProps.load(fis);
+		} catch (IOException e) {
+			PDECore.log(e);
+			return null;
+		}
+		String osgiBundles = configProps.getProperty(
+		if (osgiBundles == null || osgiBundles.isEmpty()) {
+			return null;
+		}
+		String osgiFramework = configProps.getProperty(
+		if (osgiFramework != null &amp;&amp; !osgiFramework.isEmpty()) {
+			osgiBundles = osgiFramework + ',' + osgiBundles;
+		}
+		return Arrays.stream(osgiBundles.split(
+				.map(entry -> entry.split(
+				.map(location -> location.startsWith(
+						: location)
+				.map(URI::create) //
+				.filter(URI::isAbsolute) //
+				.map(File::new) //
+				.map(file -> {
+					try {
+						return new TargetBundle(file);
+					} catch (CoreException e) {
+						return new InvalidTargetBundle(new BundleInfo(file.toURI()), e.getStatus());
+					}
+				}).filter(Objects::nonNull) //
+				.toArray(TargetBundle[]::new);
+	}
+
 	@Override
 	protected TargetFeature[] resolveFeatures(ITargetDefinition definition, IProgressMonitor monitor) throws CoreException {
 		if (definition instanceof TargetDefinition) {

原文件: ui/org.eclipse.pde.ui.tests/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/META-INF/MANIFEST.MF
位置:  -39,7 +39,8   Require-Bundle: org.junit,
  org.eclipse.ui.editors,
  org.eclipse.ui.views.log,
  org.eclipse.debug.core,
- org.eclipse.pde.genericeditor.extension
+ org.eclipse.pde.genericeditor.extension,
+ org.eclipse.equinox.simpleconfigurator.manipulator;bundle-version=
 Eclipse-LazyStart: true
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Eclipse-BundleShape: dir

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/target/AllTargetMinimalTests.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/target/AllTargetMinimalTests.java
位置:  -24,11 +24,15   import org.junit.runners.Suite.SuiteClasses;
  */
 @RunWith(Suite.class)
 @SuiteClasses({
-	TargetEnvironmentTestCase.class, TargetPlatformHelperTests.class,
+	TargetEnvironmentTestCase.class, //
+	TargetPlatformHelperTests.class, //
 	// LocalTargetDefinitionTests.class,
 	// WorkspaceTargetDefinitionTests.class
-	MinimalTargetDefinitionPersistenceTests.class, MinimalTargetDefinitionResolutionTests.class,
-	MinimalTargetDefinitionFeatureResolutionTests.class, IUBundleContainerTests.class
+	MinimalTargetDefinitionPersistenceTests.class, //
+	MinimalTargetDefinitionResolutionTests.class, //
+	MinimalTargetDefinitionFeatureResolutionTests.class, //
+	IUBundleContainerTests.class, //
+	ProfileContainerTests.class
 })
 public class AllTargetMinimalTests {
 }

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/target/AllTargetTests.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/target/AllTargetTests.java
位置:  -18,10 +18,15   import org.junit.runners.Suite;
 import org.junit.runners.Suite.SuiteClasses;
 
 @RunWith(Suite.class)
-@SuiteClasses({ TargetEnvironmentTestCase.class, TargetPlatformHelperTests.class, LocalTargetDefinitionTests.class,
-	WorkspaceTargetDefinitionTests.class, TargetDefinitionPersistenceTests.class,
-	TargetDefinitionResolutionTests.class, TargetDefinitionFeatureResolutionTests.class,
-	IUBundleContainerTests.class })
+@SuiteClasses({ TargetEnvironmentTestCase.class, //
+		TargetPlatformHelperTests.class, //
+		LocalTargetDefinitionTests.class, //
+		WorkspaceTargetDefinitionTests.class, //
+		TargetDefinitionPersistenceTests.class, //
+		TargetDefinitionResolutionTests.class, //
+		TargetDefinitionFeatureResolutionTests.class, //
+		IUBundleContainerTests.class, //
+		ProfileContainerTests.class })
 public class AllTargetTests {
 
 }

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/target/ProfileContainerTests.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/target/ProfileContainerTests.java
位置:  -0,0 +1,31  
+/*******************************************************************************
+ * Copyright (c) 2019 Red Hat Inc. and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *******************************************************************************/
+package org.eclipse.pde.ui.tests.target;
+
+import java.io.File;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.equinox.simpleconfigurator.manipulator.SimpleConfiguratorManipulator;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.internal.core.target.ProfileBundleContainer;
+import org.junit.Assume;
+import org.junit.Test;
+
+public class ProfileContainerTests extends AbstractTargetTest {
+
+	@Test
+	public void testBundleResolutionWithConfigIni() {
+		File bundlesInfo = new File(new ProfileBundleContainer(
+		Assume.assumeFalse(
+		ITargetDefinition defaultDefinition = getTargetService().newDefaultTarget();
+		defaultDefinition.resolve(new NullProgressMonitor());
+		assertTrue(defaultDefinition.getBundles().length > 10);
+	}
+}

---------------------------39---------------------------
需求名称: Bug 552194 - Show warning in Manifest when a bundle's dependencies have
创建时间: 2019-11-05	00:22:06
修改时间: 2019-11-05	00:22:06

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java
位置:  -690,10 +690,10   public class BundleErrorReporter extends JarManifestErrorReporter {
 		Integer eeMinorVersion1 = null;
 		Integer eeMinorVersion2 = null;
 
-		if (eeMatcher1.groupCount() > 2) {
+		if (eeMatcher1.groupCount() > 2 &amp;&amp; eeMatcher1.group(3) != null) {
 			eeMinorVersion1 = Integer.valueOf(eeMatcher1.group(3));
 		}
-		if (eeMatcher2.groupCount() > 2) {
+		if (eeMatcher2.groupCount() > 2 &amp;&amp; eeMatcher2.group(3) != null) {
 			eeMinorVersion2 = Integer.valueOf(eeMatcher2.group(3));
 		}
 

---------------------------40---------------------------
需求名称: Bug 552194 - Show warning when bundle's BREE lower than its dependencies
创建时间: 2019-10-23	14:25:02
修改时间: 2019-11-04	14:37:14

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDECoreMessages.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDECoreMessages.java
位置:  -213,6 +213,7   public class PDECoreMessages extends NLS {
 	public static String BundleErrorReporter_R4SyntaxInR3Bundle;
 	public static String BundleErrorReporter_NotExistPDE;
 	public static String BundleErrorReporter_EmptyTargetPlatform;
+	public static String BundleErrorReporter_ExecEnv_tooLow;
 	public static String BundleErrorReporter_HostNotExistPDE;
 	public static String BundleErrorReporter_HostNeeded;
 	public static String BundleErrorReporter_PackageNotExported;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java
位置:  -18,7 +18,10  
 package org.eclipse.pde.internal.core.builders;
 
 import java.io.File;
+import java.util.ArrayDeque;
 import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Deque;
 import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.HashSet;
位置:  -27,6 +30,8   import java.util.List;
 import java.util.Map;
 import java.util.Set;
 import java.util.StringTokenizer;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
 import org.eclipse.core.resources.IContainer;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
位置:  -636,6 +641,128   public class BundleErrorReporter extends JarManifestErrorReporter {
 				break;
 			}
 		}
+
+		// Check for highest BREE of bundle dependencies
+		String highestDependencyEE = checkBREE(desc);
+		String highestBundleEE = getHighestBREE(bundleEnvs);
+		try {
+			if (highestBundleEE != getHighestEE(highestDependencyEE, highestBundleEE)) {
+				VirtualMarker marker = report(
+						NLS.bind(PDECoreMessages.BundleErrorReporter_ExecEnv_tooLow,
+								highestDependencyEE, highestDependencyEE),
+						getLine(header, highestBundleEE), sev, PDEMarkerFactory.M_EXEC_ENV_TOO_LOW,
+						PDEMarkerFactory.CAT_EE);
+				addMarkerAttribute(marker, PDEMarkerFactory.REQUIRED_EXEC_ENV, highestDependencyEE);
+			}
+		} catch (Exception e) {
+			PDECore.log(e);
+		}
+	}
+
+	static final List<String> EXECUTION_ENVIRONMENT_NAMES = Arrays.asList(
+			
+			
+
+	private static String getHighestEE(String execEnv1, String execEnv2) throws IllegalArgumentException {
+		if (execEnv1 == null) {
+			return execEnv2;
+		} else if (execEnv2 == null) {
+			return execEnv1;
+		}
+
+		Pattern p = Pattern.compile(
+		Matcher eeMatcher1 = p.matcher(execEnv1);
+		Matcher eeMatcher2 = p.matcher(execEnv2);
+
+		if (!eeMatcher1.matches()) {
+			throw new IllegalArgumentException(String.format(
+		}
+		if (!eeMatcher2.matches()) {
+			throw new IllegalArgumentException(String.format(
+		}
+
+		String eeName1 = eeMatcher1.group(1);
+		String eeName2 = eeMatcher2.group(1);
+		int eeNameIndex1 = EXECUTION_ENVIRONMENT_NAMES.indexOf(eeName1);
+		int eeNameIndex2 = EXECUTION_ENVIRONMENT_NAMES.indexOf(eeName2);
+		int eeMajorVersion1 = Integer.parseInt(eeMatcher1.group(2));
+		int eeMajorVersion2 = Integer.parseInt(eeMatcher2.group(2));
+		Integer eeMinorVersion1 = null;
+		Integer eeMinorVersion2 = null;
+
+		if (eeMatcher1.groupCount() > 2) {
+			eeMinorVersion1 = Integer.valueOf(eeMatcher1.group(3));
+		}
+		if (eeMatcher2.groupCount() > 2) {
+			eeMinorVersion2 = Integer.valueOf(eeMatcher2.group(3));
+		}
+
+		if (eeNameIndex1 > eeNameIndex2) {
+			return execEnv1;
+		} else if (eeNameIndex1 < eeNameIndex2) {
+			return execEnv2;
+		}
+
+		// EE1 and EE2 have the same EE name
+		if (eeMajorVersion1 > eeMajorVersion2) {
+			return execEnv1;
+		} else if (eeMajorVersion1 < eeMajorVersion2) {
+			return execEnv2;
+		}
+
+		// EE1 and EE2 have the same major version
+		if (eeMinorVersion1 != null &amp;&amp; eeMinorVersion2 != null) {
+			if (eeMinorVersion1 > eeMinorVersion2) {
+				return execEnv1;
+			} else if (eeMinorVersion1 < eeMinorVersion2) {
+				return execEnv2;
+			}
+		}
+
+		// EE1 == EE2
+		return execEnv1;
+	}
+
+	private String getHighestBREE(String[] executionEnvironments) {
+		if (executionEnvironments.length == 0) {
+			return null;
+		}
+		String highestExecEnv = executionEnvironments[0];
+		if (executionEnvironments.length > 1) {
+			for (String execEnv : executionEnvironments) {
+				try {
+				highestExecEnv = getHighestEE(highestExecEnv, execEnv);
+				} catch (Exception e) {
+					PDECore.log(e);
+					return null;
+				}
+
+			}
+		}
+
+		return highestExecEnv;
+	}
+
+	private String checkBREE(BundleDescription desc) {
+		String highestBREE = getHighestBREE(desc.getExecutionEnvironments());
+		HashSet<BundleDescription> visitedBundles = new HashSet<>();
+		Deque<BundleDescription> bundleDescriptions = new ArrayDeque<>();
+		bundleDescriptions.push(desc);
+		while (!bundleDescriptions.isEmpty()) {
+			BundleDescription dependencyDesc = bundleDescriptions.pop();
+			visitedBundles.add(dependencyDesc);
+			for (BundleDescription transitiveDependencyDesc : dependencyDesc.getResolvedRequires()) {
+				if (!visitedBundles.contains(transitiveDependencyDesc)) {
+				bundleDescriptions.push(transitiveDependencyDesc);
+				}
+			}
+			try {
+				highestBREE = getHighestEE(highestBREE, getHighestBREE(dependencyDesc.getExecutionEnvironments()));
+			} catch (Exception e) {
+				PDECore.log(e);
+			}
+		}
+		return highestBREE;
 	}
 
 	/**

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/PDEMarkerFactory.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/PDEMarkerFactory.java
位置:  -77,6 +77,7   public class PDEMarkerFactory {
 	public static final int M_SERVICECOMPONENT_MISSING_LAZY = 0x1026; // other problem
 	public static final int M_ONLY_CONFIG_SEV = 0x1027; // other problem
 	public static final int M_NO_AUTOMATIC_MODULE = 0x1028; // other problem
+	public static final int M_EXEC_ENV_TOO_LOW = 0x1029; // other problem
 
 	// build properties fixes
 	public static final int B_APPEND_SLASH_FOLDER_ENTRY = 0x2001;
位置:  -99,6 +100,7   public class PDEMarkerFactory {
 	public static final String MPK_LOCATION_PATH = 
 	public static final String ATTR_CAN_ADD = 
 	public static final String ATTR_HEADER = 
+	public static final String REQUIRED_EXEC_ENV = 
 	/**
 	 * Boolean attribute for marker added when no newline is found at the end of a manifest. Value is
 	 * <code>true</code> if there is character content on the last line that should be

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties
位置:  -174,6 +174,7   BundleErrorReporter_missingPackagesInProject=This plug-in does not export all of
 BundleErrorReporter_BundleRangeInvalidInBundleVersion=Unsatisfied version constraint: ''{0}''
 BundleErrorReporter_NotExistPDE=Bundle ''{0}'' cannot be resolved
 BundleErrorReporter_EmptyTargetPlatform=Target Platform is not set
+BundleErrorReporter_ExecEnv_tooLow=One of the bundles dependencies requires an Execution Environment of {0}, thus this bundles Execution Environment should be set to at least {1}.
 BundleErrorReporter_exportNoJRE=Cannot export packages prefixed with 'java'
 BundleErrorReporter_importNoJRE=Cannot import packages prefixed with 'java'
 BundleErrorReporter_HostNotExistPDE=Host bundle ''{0}'' cannot be resolved

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/Messages.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/Messages.java
位置:  -0,0 +1,28  
+/*******************************************************************************
+ *  Copyright (c) 2019 IBM Corporation and others.
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Andrew Obuchowicz <aobuchow@redhat.com>
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.correction;
+
+import org.eclipse.osgi.util.NLS;
+
+public class Messages extends NLS {
+	private static final String BUNDLE_NAME = 
+	public static String ReplaceExecEnvironment_Marker_Label;
+	static {
+		// initialize resource bundle
+		NLS.initializeMessages(BUNDLE_NAME, Messages.class);
+	}
+
+	private Messages() {
+	}
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ReplaceExecEnvironment.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ReplaceExecEnvironment.java
位置:  -0,0 +1,61  
+/*******************************************************************************
+ *  Copyright (c) 2019 IBM Corporation and others.
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Andrew Obuchowicz <aobuchow@redhat.com> - Initial Implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.correction;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.jdt.launching.JavaRuntime;
+import org.eclipse.jdt.launching.environments.IExecutionEnvironment;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.internal.core.builders.PDEMarkerFactory;
+import org.eclipse.pde.internal.core.ibundle.IManifestHeader;
+import org.eclipse.pde.internal.core.text.bundle.*;
+import org.osgi.framework.Constants;
+
+public class ReplaceExecEnvironment extends AbstractManifestMarkerResolution {
+
+	String fRequiredEE;
+
+	public ReplaceExecEnvironment(int type, IMarker marker) {
+		super(type, marker);
+		this.fRequiredEE = super.marker.getAttribute(PDEMarkerFactory.REQUIRED_EXEC_ENV, 
+	}
+
+	@Override
+	public String getLabel() {
+		return NLS.bind(Messages.ReplaceExecEnvironment_Marker_Label, this.fRequiredEE);
+	}
+
+	@Override
+	protected void createChange(BundleModel model) {
+		IManifestHeader header = model.getBundle().getManifestHeader(Constants.BUNDLE_REQUIREDEXECUTIONENVIRONMENT);
+		if (header instanceof RequiredExecutionEnvironmentHeader) {
+			RequiredExecutionEnvironmentHeader reqHeader = (RequiredExecutionEnvironmentHeader) header;
+			ExecutionEnvironment[] bundleEnvs = reqHeader.getEnvironments();
+			IExecutionEnvironment[] systemEnvs = JavaRuntime.getExecutionEnvironmentsManager()
+					.getExecutionEnvironments();
+
+			for (IExecutionEnvironment systemEnv : systemEnvs) {
+				if (systemEnv.getId().equals(fRequiredEE)) {
+					for (ExecutionEnvironment bundleEnv : bundleEnvs) {
+						reqHeader.removeExecutionEnvironment(bundleEnv);
+					}
+					reqHeader.addExecutionEnvironment(systemEnv);
+				}
+
+			}
+		}
+
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ResolutionGenerator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ResolutionGenerator.java
位置:  -80,7 +80,11   public class ResolutionGenerator implements IMarkerResolutionGenerator2 {
 			case PDEMarkerFactory.M_MISMATCHED_EXEC_ENV :
 				return new IMarkerResolution[] {new UpdateClasspathResolution(AbstractPDEMarkerResolution.RENAME_TYPE, marker)};
 			case PDEMarkerFactory.M_UNKNOW_EXEC_ENV :
-				return new IMarkerResolution[] {new RemoveUnknownExecEnvironments(AbstractPDEMarkerResolution.REMOVE_TYPE,marker)};
+				return new IMarkerResolution[] {
+						new RemoveUnknownExecEnvironments(AbstractPDEMarkerResolution.REMOVE_TYPE, marker) };
+			case PDEMarkerFactory.M_EXEC_ENV_TOO_LOW:
+				return new IMarkerResolution[] {
+						new ReplaceExecEnvironment(AbstractPDEMarkerResolution.RENAME_TYPE, marker) };
 			case PDEMarkerFactory.M_DEPRECATED_IMPORT_SERVICE :
 				return new IMarkerResolution[] {new RemoveImportExportServicesResolution(AbstractPDEMarkerResolution.REMOVE_TYPE, ICoreConstants.IMPORT_SERVICE, marker)};
 			case PDEMarkerFactory.M_DEPRECATED_EXPORT_SERVICE :

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/messages.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/messages.properties
位置:  -0,0 +1,10  
+###############################################################################
+#  Copyright (c) 2019 IBM Corporation and others.
+#  All rights reserved. This program and the accompanying materials
+#  are made available under the terms of the Eclipse Public License v1.0
+#  which accompanies this distribution, and is available at
+#  http://www.eclipse.org/legal/epl-v10.html
+#  Contributors:
+#     Andrew Obuchowicz <aobuchow@redhat.com>
+###############################################################################
+ReplaceExecEnvironment_Marker_Label=Replace Bundle Execution Environment with ''{0}''
\ No newline at end of file

---------------------------41---------------------------
需求名称: Bug 550317 - Ensure WorkspaceModelManager.fModels always same type
创建时间: 2019-10-20	12:59:01
修改时间: 2019-11-04	11:02:35

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspaceFeatureModelManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspaceFeatureModelManager.java
位置:  -13,7 +13,6  
  *******************************************************************************/
 package org.eclipse.pde.internal.core;
 
-import java.util.LinkedHashMap;
 import java.util.Map.Entry;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
位置:  -38,10 +37,7   public class WorkspaceFeatureModelManager extends WorkspaceModelManager {
 		if (featureXml.exists()) {
 			IModel model = new WorkspaceFeatureModel(featureXml);
 			loadModel(model, false);
-			if (fModels == null) {
-				fModels = new LinkedHashMap<>();
-			}
-			fModels.put(project, model);
+			getModelsMap().put(project, model);
 			if (notify) {
 				addChange(model, IModelProviderEvent.MODELS_ADDED);
 			}
位置:  -81,7 +77,7   public class WorkspaceFeatureModelManager extends WorkspaceModelManager {
 
 	protected IFeatureModel[] getFeatureModels() {
 		initialize();
-		return fModels.values().toArray(new IFeatureModel[fModels.size()]);
+		return getModelsMap().values().toArray(new IFeatureModel[getModelsMap().size()]);
 	}
 
 	protected IFeatureModel getFeatureModel(IProject project) {
位置:  -89,7 +85,7   public class WorkspaceFeatureModelManager extends WorkspaceModelManager {
 	}
 
 	public void removeModel(IFeatureModel iFeatureModel) {
-		for (Entry<IProject, IModel> entry : fModels.entrySet()) {
+		for (Entry<IProject, Object> entry : getModelsMap().entrySet()) {
 			if (entry.getValue() == iFeatureModel) {
 				this.removeModel(entry.getKey());
 				break;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspaceModelManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspaceModelManager.java
位置:  -92,15 +92,27   public abstract class WorkspaceModelManager extends AbstractModelManager impleme
 		}
 	}
 
-	protected Map<IProject, IModel> fModels = null;
+	private Map<IProject, Object> fModels = null;
 	private ArrayList<ModelChange> fChangedModels;
 
+	protected Map<IProject, Object> getModelsMap() {
+		ensureModelsMapCreated();
+		return fModels;
+	}
+
+	private void ensureModelsMapCreated() {
+		if (fModels == null) {
+			fModels = Collections.synchronizedMap(new LinkedHashMap<IProject, Object>());
+		}
+	}
+
 	protected synchronized void initialize() {
 		if (fModels != null) {
 			return;
 		}
 
-		fModels = Collections.synchronizedMap(new LinkedHashMap<IProject, IModel>());
+		ensureModelsMapCreated();
+
 		IProject[] projects = PDECore.getWorkspace().getRoot().getProjects();
 		for (IProject project : projects) {
 			if (isInterestingProject(project)) {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspacePluginModelManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/WorkspacePluginModelManager.java
位置:  -27,7 +27,6   import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashSet;
-import java.util.LinkedHashMap;
 import java.util.ListIterator;
 import java.util.Map;
 import org.eclipse.core.resources.IContainer;
位置:  -151,10 +150,7   public class WorkspacePluginModelManager extends WorkspaceModelManager {
 		}
 
 		if (model != null) {
-			if (fModels == null) {
-				fModels = new LinkedHashMap<>();
-			}
-			fModels.put(project, model);
+			getModelsMap().put(project, model);
 			if (notify) {
 				addChange(model, IModelProviderEvent.MODELS_ADDED);
 			}
位置:  -442,7 +438,7   public class WorkspacePluginModelManager extends WorkspaceModelManager {
 	 */
 	protected IPluginModelBase[] getPluginModels() {
 		initialize();
-		return fModels.values().toArray(new IPluginModelBase[fModels.size()]);
+		return getModelsMap().values().toArray(new IPluginModelBase[getModelsMap().size()]);
 	}
 
 	/**
位置:  -498,29 +494,6   public class WorkspacePluginModelManager extends WorkspaceModelManager {
 	}
 
 	/**
-	 * This method is called when workspace models are read and initialized
-	 * from the cache.  No need to read the workspace plug-ins from scratch.
-	 *
-	 * @param models  the workspace plug-in models
-	 */
-	protected void setModels(IPluginModelBase[] models) {
-		fModels = Collections.synchronizedMap(new LinkedHashMap<IProject, IModel>());
-		for (IPluginModelBase model : models) {
-			IProject project = model.getUnderlyingResource().getProject();
-			fModels.put(project, model);
-		}
-		IProject[] projects = PDECore.getWorkspace().getRoot().getProjects();
-		for (int i = 0; i < projects.length; i++) {
-			// if any projects contained Manifest files and were not included in the PDEState,
-			// we should create models for them now
-			if (!fModels.containsKey(projects[i]) &amp;&amp; isInterestingProject(projects[i])) {
-				createModel(projects[i], false);
-			}
-		}
-		addListeners();
-	}
-
-	/**
 	 * Return URLs to projects in the workspace that have a manifest file (MANIFEST.MF
 	 * or plugin.xml)
 	 *

---------------------------42---------------------------
需求名称: Bug 552294 - [performance] Parallelize work in resolveBundles
创建时间: 2019-10-22	03:04:21
修改时间: 2019-11-04	06:46:17

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ProfileBundleContainer.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ProfileBundleContainer.java
位置:  -13,6 +13,9  
  *******************************************************************************/
 package org.eclipse.pde.internal.core.target;
 
+import static java.util.Arrays.stream;
+import static java.util.stream.Stream.concat;
+
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
位置:  -21,6 +24,7   import java.net.URI;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Objects;
 import java.util.Properties;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
位置:  -140,35 +144,21   public class ProfileBundleContainer extends AbstractBundleContainer {
 		if (source == null) {
 			source = new BundleInfo[0];
 		}
-		List<TargetBundle> all = new ArrayList<>();
 		SubMonitor localMonitor = SubMonitor.convert(monitor, Messages.DirectoryBundleContainer_0, infos.length + source.length);
-		// Add executable bundles
-		for (BundleInfo info : infos) {
-			if (monitor.isCanceled()) {
-				return new TargetBundle[0];
-			}
+
+		return concat(stream(infos), stream(source)).parallel().map(info -> {
 			URI location = info.getLocation();
 			try {
-				all.add(new TargetBundle(URIUtil.toFile(location)));
-			} catch (CoreException e) {
-				all.add(new InvalidTargetBundle(new BundleInfo(location), e.getStatus()));
-			}
-			localMonitor.split(1);
-		}
-		// Add source bundles
-		for (BundleInfo element : source) {
-			if (monitor.isCanceled()) {
-				return new TargetBundle[0];
-			}
-			URI location = element.getLocation();
-			try {
-				all.add(new TargetBundle(URIUtil.toFile(location)));
+				if (monitor.isCanceled()) {
+					return null;
+				}
+				return new TargetBundle(URIUtil.toFile(location));
 			} catch (CoreException e) {
-				all.add(new InvalidTargetBundle(new BundleInfo(location), e.getStatus()));
+				return new InvalidTargetBundle(new BundleInfo(location), e.getStatus());
+			} finally {
+				localMonitor.split(1);
 			}
-			localMonitor.split(1);
-		}
-		return all.toArray(new TargetBundle[all.size()]);
+		}).filter(Objects::nonNull).toArray(TargetBundle[]::new);
 	}
 
 	@Override

---------------------------43---------------------------
需求名称: Bug 551146 - Expanded superset should mention which interface was added
创建时间: 2019-11-03	07:01:41
修改时间: 2019-11-04	01:36:13

原文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/ClassCompatibilityHierarchyTests.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/ClassCompatibilityHierarchyTests.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -197,7 +197,7   public class ClassCompatibilityHierarchyTests extends ClassCompatibilityTests {
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { PACKAGE_PREFIX + 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}
位置:  -220,7 +220,8   public class ClassCompatibilityHierarchyTests extends ClassCompatibilityTests {
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { PACKAGE_PREFIX + 
+				
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}
位置:  -243,7 +244,7   public class ClassCompatibilityHierarchyTests extends ClassCompatibilityTests {
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { PACKAGE_PREFIX + 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}

原文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/EnumCompatibilityTests.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/EnumCompatibilityTests.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -279,7 +279,7   public class EnumCompatibilityTests extends CompatibilityTest {
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { PACKAGE_PREFIX + 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}

原文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/InterfaceCompatibilityMemberTests.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/InterfaceCompatibilityMemberTests.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -458,7 +458,7   public class InterfaceCompatibilityMemberTests extends InterfaceCompatibilityTes
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { PACKAGE_PREFIX + 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}
位置:  -485,7 +485,8   public class InterfaceCompatibilityMemberTests extends InterfaceCompatibilityTes
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { PACKAGE_PREFIX + 
+				
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/ClassFileComparator.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/ClassFileComparator.java
位置:  -349,7 +349,10   public class ClassFileComparator {
 					}
 				}
 
-				this.addDelta(getElementType(this.type1), IDelta.CHANGED, IDelta.EXPANDED_SUPERINTERFACES_SET, this.currentDescriptorRestrictions, this.type1.getModifiers(), this.type2.getModifiers(), this.type1, this.type1.getName(), Util.getDescriptorName(type1));
+				this.addDelta(getElementType(this.type1), IDelta.CHANGED, IDelta.EXPANDED_SUPERINTERFACES_SET,
+						this.currentDescriptorRestrictions, this.type1.getModifiers(), this.type2.getModifiers(),
+						this.type1, this.type1.getName(), new String[] { Util.getDescriptorName(type1),
+								computeDiff(superinterfacesSet1, superinterfacesSet2, true) });
 				if (this.type1.isInterface()) {
 					for (Iterator<IApiType> iterator = superinterfacesSet2.iterator(); iterator.hasNext();) {
 						IApiType type = iterator.next();
位置:  -392,7 +395,10   public class ClassFileComparator {
 				}
 			}
 		} else if (superinterfacesSet2 == null) {
-			this.addDelta(getElementType(this.type1), IDelta.CHANGED, IDelta.CONTRACTED_SUPERINTERFACES_SET, this.currentDescriptorRestrictions, this.type1.getModifiers(), this.type2.getModifiers(), this.type1, this.type1.getName(), Util.getDescriptorName(type1));
+			this.addDelta(getElementType(this.type1), IDelta.CHANGED, IDelta.CONTRACTED_SUPERINTERFACES_SET,
+					this.currentDescriptorRestrictions, this.type1.getModifiers(), this.type2.getModifiers(),
+					this.type1, this.type1.getName(), new String[] { Util.getDescriptorName(type1),
+							computeDiff(superinterfacesSet1, superinterfacesSet2, false) });
 		} else {
 			Set<String> names2 = new HashSet<>();
 			for (Iterator<IApiType> iterator = superinterfacesSet2.iterator(); iterator.hasNext();) {
位置:  -409,7 +415,10   public class ClassFileComparator {
 				}
 			}
 			if (contracted) {
-				this.addDelta(getElementType(this.type1), IDelta.CHANGED, IDelta.CONTRACTED_SUPERINTERFACES_SET, this.currentDescriptorRestrictions, this.type1.getModifiers(), this.type2.getModifiers(), this.type1, this.type1.getName(), Util.getDescriptorName(type1));
+				this.addDelta(getElementType(this.type1), IDelta.CHANGED, IDelta.CONTRACTED_SUPERINTERFACES_SET,
+						this.currentDescriptorRestrictions, this.type1.getModifiers(), this.type2.getModifiers(),
+						this.type1, this.type1.getName(), new String[] { Util.getDescriptorName(type1),
+								computeDiff(superinterfacesSet1, superinterfacesSet2, false) });
 				return;
 			}
 			if (names2.size() > 0) {
位置:  -456,7 +465,10   public class ClassFileComparator {
 					}
 				}
 
-				this.addDelta(getElementType(this.type1), IDelta.CHANGED, IDelta.EXPANDED_SUPERINTERFACES_SET, this.currentDescriptorRestrictions, this.type1.getModifiers(), this.type2.getModifiers(), this.type1, this.type1.getName(), Util.getDescriptorName(type1));
+				this.addDelta(getElementType(this.type1), IDelta.CHANGED, IDelta.EXPANDED_SUPERINTERFACES_SET,
+						this.currentDescriptorRestrictions, this.type1.getModifiers(), this.type2.getModifiers(),
+						this.type1, this.type1.getName(), new String[] { Util.getDescriptorName(type1),
+								computeDiff(superinterfacesSet1, superinterfacesSet2, true) });
 				if (this.type1.isInterface()) {
 					for (Iterator<String> iterator = names2.iterator(); iterator.hasNext();) {
 						String interfaceName = iterator.next();
位置:  -514,6 +526,49   public class ClassFileComparator {
 		}
 	}
 
+	private String computeDiff(Set<IApiType> superinterfacesSet1, Set<IApiType> superinterfacesSet2, boolean expand) {
+		Set<String> namesToReturn = new HashSet<>();
+		if (superinterfacesSet1 == null) {
+			for (Iterator<IApiType> iterator = superinterfacesSet2.iterator(); iterator.hasNext();) {
+				namesToReturn.add(iterator.next().getName());
+			}
+			return processNames(namesToReturn);
+
+		}
+		if (superinterfacesSet2 == null) {
+			for (Iterator<IApiType> iterator = superinterfacesSet1.iterator(); iterator.hasNext();) {
+				namesToReturn.add(iterator.next().getName());
+			}
+			return processNames(namesToReturn);
+
+		}
+		for (Iterator<IApiType> iterator = expand ? superinterfacesSet2.iterator()
+				: superinterfacesSet1.iterator(); iterator.hasNext();) {
+			namesToReturn.add(iterator.next().getName());
+		}
+		Set<String> names1 = new HashSet<>();
+		for (Iterator<IApiType> iterator = expand ? superinterfacesSet1.iterator()
+				: superinterfacesSet2.iterator(); iterator.hasNext();) {
+			names1.add(iterator.next().getName());
+		}
+
+		for (String name : names1) {
+			namesToReturn.remove(name);
+
+		}
+		return processNames(namesToReturn);
+
+	}
+
+	private String processNames(Set<String> namesToReturn) {
+		StringBuilder str = new StringBuilder();
+		for (String string : namesToReturn) {
+			str.append(string);
+			str.append(',');
+		}
+		return str.substring(0, str.length() - 1);
+	}
+
 	private void checkTypeMembers() throws CoreException {
 		IApiType[] typeMembers = this.type1.getMemberTypes();
 		IApiType[] typeMembers2 = this.type2.getMemberTypes();

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/Messages.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/Messages.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2017 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -85,6 +85,12   public class Messages extends NLS {
 			return MessageFormat.format(Messages.problem_message_not_found, String.valueOf(key));
 		}
 		String[] arguments = delta.getArguments();
+		if (arguments != null) {
+			// for expanded and contracted superset
+			if (arguments.length == 2) {
+				return MessageFormat.format(message, (Object[]) arguments);
+			}
+		}
 		if (arguments.length != 0) {
 			return MessageFormat.format(message, (Object[]) arguments);
 		}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/compatible_delta_messages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/compatible_delta_messages.properties
位置:  -50,7 +50,7  
 # {0} type name
 19=The ''abstract'' keyword has been removed from class {0}
 # {0} type name
-21=The superinterfaces set has been expanded for class {0}
+21=The superinterfaces set has been expanded ({1}) for class {0}
 # {0} type name
 22=The ''final'' keyword has been removed from class {0}
 # {0} type name
位置:  -164,7 +164,7  
 # {0} type name, {1} field name
 78=The type of the non-visible field {0}.{1} has been changed
 # {0} type name
-79=The superinterfaces set has been expanded for interface {0}
+79=The superinterfaces set has been expanded ({1}) for interface {0}
 # {0} type name {1} field name
 80=The non-visible field {0}.{1} has been added
 # {0} type name {1} field name

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties
位置:  -91,7 +91,7  
 
 #changed
 52 = The class bound for type parameter {1} in {0} has been changed
-54 = The super interfaces set has been reduced for type {0}
+54 = The super interfaces set has been reduced ({1}) for type {0}
 55 = The visibility of the type {0} has been reduced
 61 = The ''final'' keyword has been removed for a compile-time constant static field {0}.{1}
 64 = The interface bound {2} for type parameter {1} has been changed in {0}

---------------------------44---------------------------
需求名称: Bug 552519: Plugin configuration dialog run level Spinner truncated on GTK
创建时间: 2019-10-29	10:09:31
修改时间: 2019-10-31	04:27:00

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/AbstractPluginBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/AbstractPluginBlock.java
位置:  -55,6 +55,7   import org.eclipse.swt.custom.TreeEditor;
 import org.eclipse.swt.events.SelectionAdapter;
 import org.eclipse.swt.events.SelectionEvent;
 import org.eclipse.swt.graphics.Image;
+import org.eclipse.swt.graphics.Point;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.*;
位置:  -507,6 +508,14   public abstract class AbstractPluginBlock {
 						fTab.updateLaunchConfigurationDialog();
 					}
 				});
+				// Resize column with on GTK to ensure the Spinner widget will
+				// fit. See bug 552519.
+				if (Util.isGtk()) {
+					Point spinnerSize = spinner.computeSize(SWT.DEFAULT, SWT.DEFAULT);
+					levelColumnEditor.minimumWidth = spinnerSize.x;
+					TreeColumn levelColumn = tree.getColumn(1);
+					levelColumn.setWidth(spinnerSize.x);
+				}
 				levelColumnEditor.setEditor(spinner, item, 1);
 
 				final CCombo combo = new CCombo(tree, SWT.BORDER | SWT.READ_ONLY);

---------------------------45---------------------------
需求名称: Bug 552336 - Move to Tycho 1.5.1
创建时间: 2019-10-29	15:17:57
修改时间: 2019-10-29	15:17:57

原文件: .mvn/extensions.xml 
新文件: .mvn/extensions.xml
位置:  -3,6 +3,6  
   <extension>
     <groupId>org.eclipse.tycho.extras</groupId>
     <artifactId>tycho-pomless</artifactId>
-    <version>1.4.0</version>
+    <version>1.5.1</version>
   </extension>
 </extensions>
\ No newline at end of file

---------------------------46---------------------------
需求名称: Bug 551620 - Reset tree scroll-position after deferred input fetched
创建时间: 2019-10-20	06:44:10
修改时间: 2019-10-28	06:35:36

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java
位置:  -13,12 +13,15  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.views.features.viewer;
 
+import org.eclipse.core.runtime.jobs.IJobChangeEvent;
+import org.eclipse.core.runtime.jobs.JobChangeAdapter;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.pde.internal.core.*;
+import org.eclipse.swt.widgets.Tree;
+import org.eclipse.swt.widgets.TreeItem;
 import org.eclipse.ui.progress.DeferredTreeContentManager;
 
-public abstract class AbstractFeatureTreeContentProvider
-		implements ITreeContentProvider, IFeatureModelListener {
+public abstract class AbstractFeatureTreeContentProvider implements ITreeContentProvider, IFeatureModelListener {
 
 	protected final FeatureModelManager fFeatureModelManager;
 
位置:  -26,7 +29,7   public abstract class AbstractFeatureTreeContentProvider
 
 	protected DeferredTreeContentManager fDeferredTreeContentManager;
 
-	private Viewer fViewer;
+	private TreeViewer fViewer;
 
 	public AbstractFeatureTreeContentProvider(FeatureModelManager featureModelManager) {
 		fFeatureModelManager = featureModelManager;
位置:  -35,8 +38,14   public abstract class AbstractFeatureTreeContentProvider
 
 	@Override
 	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
-		fViewer = viewer;
-		fDeferredTreeContentManager = new DeferredTreeContentManager((AbstractTreeViewer) viewer);
+		fViewer = (TreeViewer) viewer;
+		fDeferredTreeContentManager = new DeferredTreeContentManager(fViewer);
+		fDeferredTreeContentManager.addUpdateCompleteListener(new JobChangeAdapter() {
+			@Override
+			public void done(IJobChangeEvent event) {
+				resetViewerScrollPosition();
+			}
+		});
 
 		if (newInput instanceof DeferredFeatureInput) {
 			fInput = (DeferredFeatureInput) newInput;
位置:  -75,13 +84,27   public abstract class AbstractFeatureTreeContentProvider
 	}
 
 	private void refreshViewer() {
-		if (fViewer.getControl().isDisposed()) {
+		runViewerTask(fViewer::refresh);
+	}
+
+	private void resetViewerScrollPosition() {
+		runViewerTask(() -> {
+			Tree tree = fViewer.getTree();
+			if (tree.getItemCount() > 0) {
+				TreeItem firstItem = tree.getItem(0);
+				tree.setTopItem(firstItem);
+			}
+		});
+	}
+
+	private void runViewerTask(Runnable viewerTask) {
+		if (fViewer.getTree().isDisposed()) {
 			return;
 		}
 
-		fViewer.getControl().getDisplay().asyncExec(() -> {
-			if (!fViewer.getControl().isDisposed()) {
-				fViewer.refresh();
+		fViewer.getTree().getDisplay().asyncExec(() -> {
+			if (!fViewer.getTree().isDisposed()) {
+				viewerTask.run();
 			}
 		});
 	}

---------------------------47---------------------------
需求名称: Bug 551620 - Introduce background-thread initialisation of FeatureIndex
创建时间: 2019-10-26	12:34:57
修改时间: 2019-10-28	06:33:23

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java
位置:  -62,13 +62,12   public class FeaturesView extends ViewPart {
 
 	private Action fCopyAction;
 
-	private FeatureIndex fFeatureIndex;
+	private FeatureInput fInput;
 
 	@Override
 	public void createPartControl(Composite parent) {
 		FeatureModelManager featureModelManager = FeatureSupport.getManager();
-		FeatureInput input = new FeatureInput(featureModelManager);
-		fFeatureIndex = new FeatureIndex(featureModelManager);
+		fInput = new FeatureInput(featureModelManager);
 
 		FilteredTree filteredTree = createFilteredTree(parent);
 		fViewer = filteredTree.getViewer();
位置:  -82,7 +81,7   public class FeaturesView extends ViewPart {
 		contributeToActionBar(featureModelManager);
 		hookContextMenu();
 
-		initializeViewer(input);
+		initializeViewer();
 	}
 
 	@Override
位置:  -93,7 +92,7   public class FeaturesView extends ViewPart {
 	@Override
 	public void dispose() {
 		super.dispose();
-		fFeatureIndex.dispose();
+		fInput.dispose();
 		fClipboard.dispose();
 	}
 
位置:  -118,10 +117,10   public class FeaturesView extends ViewPart {
 		return filteredTree;
 	}
 
-	private void initializeViewer(FeatureInput input) {
+	private void initializeViewer() {
 		resetViewerFilters();
 		fViewer.setComparator(new FeatureViewerComparator());
-		fViewer.setInput(new DeferredFeatureInput(input));
+		fViewer.setInput(new DeferredFeatureInput(fInput));
 	}
 
 	private void resetViewerFilters() {
位置:  -183,12 +182,11   public class FeaturesView extends ViewPart {
 		calleesAction.setChecked(true);
 		toolBarManager.add(calleesAction);
 
-		ContentProviderAction callersAction = new ShowCallersContentProviderAction(this, featureModelManager,
-				fFeatureIndex);
+		ContentProviderAction callersAction = new ShowCallersContentProviderAction(this, featureModelManager);
 		toolBarManager.add(callersAction);
 		toolBarManager.add(new Separator());
 
-		ViewerFilterAction filterFeatureChildAction = new FilterFeatureChildAction(this, fFeatureIndex);
+		ViewerFilterAction filterFeatureChildAction = new FilterFeatureChildAction(this);
 		filterFeatureChildAction.setChecked(true);
 		toolBarManager.add(filterFeatureChildAction);
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FilterFeatureChildAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FilterFeatureChildAction.java
位置:  -16,13 +16,12   package org.eclipse.pde.internal.ui.views.features.action;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.views.features.FeaturesView;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
 import org.eclipse.pde.internal.ui.views.features.viewer.FeatureChildViewerFilter;
 
 public class FilterFeatureChildAction extends ViewerFilterAction {
 
-	public FilterFeatureChildAction(FeaturesView featuresView, FeatureIndex featureIndex) {
-		super(featuresView, new FeatureChildViewerFilter(featureIndex));
+	public FilterFeatureChildAction(FeaturesView featuresView) {
+		super(featuresView, new FeatureChildViewerFilter());
 
 		setDescription(PDEUIMessages.FeaturesView_FilterFeatureChildAction_description);
 		setToolTipText(PDEUIMessages.FeaturesView_FilterFeatureChildAction_tooltip);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java
位置:  -18,17 +18,12   import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.views.features.FeaturesView;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
 import org.eclipse.pde.internal.ui.views.features.viewer.FeatureTreeCallersContentProvider;
 
 public class ShowCallersContentProviderAction extends ContentProviderAction {
 
-	private final FeatureIndex fFeatureIndex;
-
-	public ShowCallersContentProviderAction(FeaturesView featuresView,
-			FeatureModelManager featureModelManager, FeatureIndex featureIndex) {
+	public ShowCallersContentProviderAction(FeaturesView featuresView, FeatureModelManager featureModelManager) {
 		super(featuresView, featureModelManager);
-		fFeatureIndex = featureIndex;
 
 		setDescription(PDEUIMessages.FeaturesView_ShowCallersContentProviderAction_description);
 		setToolTipText(PDEUIMessages.FeaturesView_ShowCallersContentProviderAction_tooltip);
位置:  -37,7 +32,7   public class ShowCallersContentProviderAction extends ContentProviderAction {
 
 	@Override
 	public IContentProvider createContentProvider() {
-		return new FeatureTreeCallersContentProvider(fFeatureModelManager, fFeatureIndex);
+		return new FeatureTreeCallersContentProvider(fFeatureModelManager);
 	}
 
 	@Override

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java
位置:  -20,17 +20,27   import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
 
 public class FeatureIndex implements IFeatureModelListener {
 
-	private final Map<String, Collection<IFeatureModel>> fIncludingFeatures = new HashMap<>();
-
 	private final FeatureModelManager fFeatureModelManager;
 
+	private volatile Map<String, Collection<IFeatureModel>> fIncludingFeatures;
+
 	public FeatureIndex(FeatureModelManager featureModelManager) {
 		fFeatureModelManager = featureModelManager;
 		fFeatureModelManager.addFeatureModelListener(this);
-		reIndex();
+	}
+
+	public boolean isInitialized() {
+		return (fIncludingFeatures != null);
+	}
+
+	public void ensureInitialized() {
+		if (!isInitialized()) {
+			reIndex();
+		}
 	}
 
 	public Collection<IFeatureModel> getIncludingFeatures(String childId) {
+		ensureInitialized();
 		return fIncludingFeatures.getOrDefault(childId, Collections.emptySet());
 	}
 
位置:  -39,21 +49,25   public class FeatureIndex implements IFeatureModelListener {
 	}
 
 	private void reIndex() {
-		fIncludingFeatures.clear();
+		Map<String, Collection<IFeatureModel>> includingFeatures = new HashMap<>();
+
 		for (IFeatureModel parentModel : fFeatureModelManager.getModels()) {
 			for (IFeatureChild child : parentModel.getFeature().getIncludedFeatures()) {
 				IFeatureModel childModel = fFeatureModelManager.findFeatureModel(child.getId());
 				if (childModel != null) {
-					index(childModel, parentModel);
+					index(includingFeatures, childModel, parentModel);
 				}
 			}
 		}
+
+		fIncludingFeatures = includingFeatures;
 	}
 
-	private void index(IFeatureModel childModel, IFeatureModel parentModel) {
+	private void index(Map<String, Collection<IFeatureModel>> includingFeatures, IFeatureModel childModel,
+			IFeatureModel parentModel) {
 		String childId = childModel.getFeature().getId();
 
-		Collection<IFeatureModel> parents = fIncludingFeatures.computeIfAbsent(childId, key -> new HashSet<>());
+		Collection<IFeatureModel> parents = includingFeatures.computeIfAbsent(childId, key -> new HashSet<>());
 		parents.add(parentModel);
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java
位置:  -13,24 +13,39  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.views.features.support;
 
+import java.util.Collection;
 import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
 
 public class FeatureInput {
 
 	private final FeatureModelManager fFeatureModelManager;
 
+	private final FeatureIndex fIndex;
+
 	private boolean fIncludePlugins;
 
 	public FeatureInput(FeatureModelManager featureModelManager) {
 		fFeatureModelManager = featureModelManager;
+		fIndex = new FeatureIndex(featureModelManager);
 	}
 
 	public boolean isInitialized() {
-		return fFeatureModelManager.isInitialized();
+		return fFeatureModelManager.isInitialized() &amp;&amp; fIndex.isInitialized();
+	}
+
+	public IFeatureModel[] getFeatures() {
+		ensureInitialized();
+		return fFeatureModelManager.getModels();
 	}
 
-	public FeatureModelManager getFeatureModelManager() {
-		return fFeatureModelManager;
+	public Collection<IFeatureModel> getIncludingFeatures(String childId) {
+		ensureInitialized();
+		return fIndex.getIncludingFeatures(childId);
+	}
+
+	private void ensureInitialized() {
+		fIndex.ensureInitialized();
 	}
 
 	public boolean isIncludePlugins() {
位置:  -41,4 +56,8   public class FeatureInput {
 		fIncludePlugins = includePlugins;
 	}
 
+	public void dispose() {
+		fIndex.dispose();
+	}
+
 }

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/DeferredFeatureInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/DeferredFeatureInput.java
位置:  -45,7 +45,7   public class DeferredFeatureInput extends WorkbenchAdapter implements IDeferredW
 
 	@Override
 	public Object[] getChildren(Object object) {
-		return fInput.getFeatureModelManager().getModels();
+		return fInput.getFeatures();
 	}
 
 	private void updateTree(IElementCollector collector, IProgressMonitor monitor, Object[] children) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java
位置:  -16,22 +16,17   package org.eclipse.pde.internal.ui.views.features.viewer;
 import org.eclipse.jface.viewers.Viewer;
 import org.eclipse.jface.viewers.ViewerFilter;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
 
 public class FeatureChildViewerFilter extends ViewerFilter {
 
-	private final FeatureIndex fFeatureIndex;
-
-	public FeatureChildViewerFilter(FeatureIndex featureIndex) {
-		fFeatureIndex = featureIndex;
-	}
-
 	@Override
 	public boolean select(Viewer viewer, Object parentElement, Object element) {
 		if (parentElement instanceof DeferredFeatureInput &amp;&amp; element instanceof IFeatureModel) {
+			DeferredFeatureInput input = (DeferredFeatureInput) parentElement;
 			IFeatureModel featureModel = (IFeatureModel) element;
+
 			String featureId = featureModel.getFeature().getId();
-			boolean includedInFeature = !fFeatureIndex.getIncludingFeatures(featureId).isEmpty();
+			boolean includedInFeature = !input.getFeatureInput().getIncludingFeatures(featureId).isEmpty();
 
 			return !includedInFeature;
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java
位置:  -15,16 +15,11   package org.eclipse.pde.internal.ui.views.features.viewer;
 
 import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
 
 public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeContentProvider {
 
-	private final FeatureIndex fFeatureIndex;
-
-	public FeatureTreeCallersContentProvider(FeatureModelManager featureModelManager,
-			FeatureIndex featureIndex) {
+	public FeatureTreeCallersContentProvider(FeatureModelManager featureModelManager) {
 		super(featureModelManager);
-		fFeatureIndex = featureIndex;
 	}
 
 	@Override
位置:  -32,7 +27,7   public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeConten
 		if (parentElement instanceof IFeatureModel) {
 			IFeatureModel featureModel = (IFeatureModel) parentElement;
 			String featureId = featureModel.getFeature().getId();
-			return fFeatureIndex.getIncludingFeatures(featureId).toArray();
+			return fInput.getFeatureInput().getIncludingFeatures(featureId).toArray();
 		}
 
 		return new Object[0];

---------------------------48---------------------------
需求名称: Bug 551620 - Introduce background-thread initialisation of FeatureInput
创建时间: 2019-10-20	06:22:44
修改时间: 2019-10-28	04:18:16

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/FeatureModelManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/FeatureModelManager.java
位置:  -79,6 +79,10   public class FeatureModelManager {
 		}
 	}
 
+	public boolean isInitialized() {
+		return (fActiveModels != null &amp;&amp; !fReloadExternalNeeded);
+	}
+
 	private synchronized void init() {
 		if (fActiveModels != null) {
 			if (fReloadExternalNeeded) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java
位置:  -1723,6 +1723,7   public class PDEUIMessages extends NLS {
 	public static String FeaturesView_ShowPluginsAction_description;
 	public static String FeaturesView_ShowPluginsAction_tooltip;
 	public static String FeaturesView_OpenAction_label;
+	public static String FeaturesView_loadingDescription;
 	public static String FeaturesView_searchPlaceholder;
 
 	public static String HistoryAction_description;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties
位置:  -1459,6 +1459,7   FeaturesView_ShowCallersContentProviderAction_tooltip=Show Features Including Ea
 FeaturesView_ShowPluginsAction_description=Show Included Plugins and Fragments
 FeaturesView_ShowPluginsAction_tooltip=Show Included Plugins and Fragments
 FeaturesView_OpenAction_label=Open
+FeaturesView_loadingDescription=feature model
 FeaturesView_searchPlaceholder=type filter text
 
 HistoryAction_description=Open ''{0}'' in Hierarchy

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java
位置:  -82,7 +82,7   public class FeaturesView extends ViewPart {
 		contributeToActionBar(featureModelManager);
 		hookContextMenu();
 
-		initialiseViewer(input);
+		initializeViewer(input);
 	}
 
 	@Override
位置:  -118,10 +118,10   public class FeaturesView extends ViewPart {
 		return filteredTree;
 	}
 
-	private void initialiseViewer(FeatureInput input) {
+	private void initializeViewer(FeatureInput input) {
 		resetViewerFilters();
 		fViewer.setComparator(new FeatureViewerComparator());
-		fViewer.setInput(input);
+		fViewer.setInput(new DeferredFeatureInput(input));
 	}
 
 	private void resetViewerFilters() {
位置:  -162,7 +162,8   public class FeaturesView extends ViewPart {
 	}
 
 	public void configureContent(Consumer<FeatureInput> configurator) {
-		configurator.accept((FeatureInput) fViewer.getInput());
+		DeferredFeatureInput deferredFeatureInput = (DeferredFeatureInput) fViewer.getInput();
+		configurator.accept(deferredFeatureInput.getFeatureInput());
 		fViewer.refresh();
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java
位置:  -25,6 +25,10   public class FeatureInput {
 		fFeatureModelManager = featureModelManager;
 	}
 
+	public boolean isInitialized() {
+		return fFeatureModelManager.isInitialized();
+	}
+
 	public FeatureModelManager getFeatureModelManager() {
 		return fFeatureModelManager;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java
位置:  -13,17 +13,18  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.views.features.viewer;
 
-import org.eclipse.jface.viewers.ITreeContentProvider;
-import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.jface.viewers.*;
 import org.eclipse.pde.internal.core.*;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+import org.eclipse.ui.progress.DeferredTreeContentManager;
 
 public abstract class AbstractFeatureTreeContentProvider
 		implements ITreeContentProvider, IFeatureModelListener {
 
 	protected final FeatureModelManager fFeatureModelManager;
 
-	protected FeatureInput fInput;
+	protected DeferredFeatureInput fInput;
+
+	protected DeferredTreeContentManager fDeferredTreeContentManager;
 
 	private Viewer fViewer;
 
位置:  -35,9 +36,10   public abstract class AbstractFeatureTreeContentProvider
 	@Override
 	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
 		fViewer = viewer;
+		fDeferredTreeContentManager = new DeferredTreeContentManager((AbstractTreeViewer) viewer);
 
-		if (newInput instanceof FeatureInput) {
-			fInput = (FeatureInput) newInput;
+		if (newInput instanceof DeferredFeatureInput) {
+			fInput = (DeferredFeatureInput) newInput;
 		}
 	}
 
位置:  -52,6 +54,17   public abstract class AbstractFeatureTreeContentProvider
 	}
 
 	@Override
+	public Object[] getElements(Object inputElement) {
+		if (inputElement instanceof DeferredFeatureInput) {
+			DeferredFeatureInput deferredFeatureInput = (DeferredFeatureInput) inputElement;
+			return deferredFeatureInput.isInitialized() ? deferredFeatureInput.getChildren(inputElement)
+					: fDeferredTreeContentManager.getChildren(inputElement);
+		}
+
+		return new Object[0];
+	}
+
+	@Override
 	public void dispose() {
 		fFeatureModelManager.removeFeatureModelListener(this);
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/DeferredFeatureInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/DeferredFeatureInput.java
位置:  -0,0 +1,71  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.jobs.ISchedulingRule;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+import org.eclipse.ui.model.WorkbenchAdapter;
+import org.eclipse.ui.progress.IDeferredWorkbenchAdapter;
+import org.eclipse.ui.progress.IElementCollector;
+
+public class DeferredFeatureInput extends WorkbenchAdapter implements IDeferredWorkbenchAdapter {
+
+	private final FeatureInput fInput;
+
+	public DeferredFeatureInput(FeatureInput input) {
+		fInput = input;
+	}
+
+	public FeatureInput getFeatureInput() {
+		return fInput;
+	}
+
+	public boolean isInitialized() {
+		return fInput.isInitialized();
+	}
+
+	@Override
+	public void fetchDeferredChildren(Object object, IElementCollector collector, IProgressMonitor monitor) {
+		Object[] children = getChildren(object);
+		updateTree(collector, monitor, children);
+	}
+
+	@Override
+	public Object[] getChildren(Object object) {
+		return fInput.getFeatureModelManager().getModels();
+	}
+
+	private void updateTree(IElementCollector collector, IProgressMonitor monitor, Object[] children) {
+		collector.add(children, monitor);
+		collector.done();
+	}
+
+	@Override
+	public String getLabel(Object object) {
+		return PDEUIMessages.FeaturesView_loadingDescription;
+	}
+
+	@Override
+	public boolean isContainer() {
+		return true;
+	}
+
+	@Override
+	public ISchedulingRule getRule(Object object) {
+		return null;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java
位置:  -17,7 +17,6   import org.eclipse.jface.viewers.Viewer;
 import org.eclipse.jface.viewers.ViewerFilter;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
 import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
 
 public class FeatureChildViewerFilter extends ViewerFilter {
 
位置:  -29,7 +28,7   public class FeatureChildViewerFilter extends ViewerFilter {
 
 	@Override
 	public boolean select(Viewer viewer, Object parentElement, Object element) {
-		if (parentElement instanceof FeatureInput &amp;&amp; element instanceof IFeatureModel) {
+		if (parentElement instanceof DeferredFeatureInput &amp;&amp; element instanceof IFeatureModel) {
 			IFeatureModel featureModel = (IFeatureModel) element;
 			String featureId = featureModel.getFeature().getId();
 			boolean includedInFeature = !fFeatureIndex.getIncludingFeatures(featureId).isEmpty();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java
位置:  -17,7 +17,6   import java.util.*;
 import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.core.ifeature.IFeatureChild;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
 
 public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeContentProvider {
 
位置:  -31,7 +30,7   public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeConten
 			IFeatureModel featureModel = (IFeatureModel) parentElement;
 			Object[] features = featureModel.getFeature().getIncludedFeatures();
 
-			if (!fInput.isIncludePlugins()) {
+			if (!fInput.getFeatureInput().isIncludePlugins()) {
 				return features;
 			}
 
位置:  -51,15 +50,4   public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeConten
 		return new Object[0];
 	}
 
-	@Override
-	public Object[] getElements(Object inputElement) {
-		if (inputElement instanceof FeatureInput) {
-			FeatureInput input = (FeatureInput) inputElement;
-			FeatureModelManager featureModelManager = input.getFeatureModelManager();
-			return featureModelManager.getModels();
-		}
-
-		return new Object[0];
-	}
-
 }

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java
位置:  -16,7 +16,6   package org.eclipse.pde.internal.ui.views.features.viewer;
 import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
 import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
-import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
 
 public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeContentProvider {
 
位置:  -39,15 +38,4   public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeConten
 		return new Object[0];
 	}
 
-	@Override
-	public Object[] getElements(Object inputElement) {
-		if (inputElement instanceof FeatureInput) {
-			FeatureInput input = (FeatureInput) inputElement;
-			FeatureModelManager featureModelManager = input.getFeatureModelManager();
-			return featureModelManager.getModels();
-		}
-
-		return new Object[0];
-	}
-
 }

---------------------------49---------------------------
需求名称: Avoid animated scrollbars during extension point list refresh
创建时间: 2019-10-25	07:56:50
修改时间: 2019-10-25	07:56:50

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java
位置:  -263,7 +263,7   public class PointSelectionPage extends BaseWizardSelectionPage {
 		fFilterText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
 		fFilterText.addModifyListener(e -> {
 			fWildCardFilter.setMatchText(fFilterText.getText());
-			fPointListViewer.refresh();
+			refreshPointListViewer();
 		});
 		fFilterText.addKeyListener(new KeyListener() {
 			@Override
位置:  -282,7 +282,7   public class PointSelectionPage extends BaseWizardSelectionPage {
 		gd = new GridData(GridData.FILL_HORIZONTAL);
 		fFilterCheck.setLayoutData(gd);
 		fFilterCheck.setSelection(true);
-		fFilterCheck.addSelectionListener(widgetSelectedAdapter(e -> fPointListViewer.refresh()));
+		fFilterCheck.addSelectionListener(widgetSelectedAdapter(e -> refreshPointListViewer()));
 
 		fPointListViewer = new TableViewer(pointContainer, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);
 		fPointListViewer.setContentProvider(new PointContentProvider());
位置:  -386,6 +386,16   public class PointSelectionPage extends BaseWizardSelectionPage {
 		PlatformUI.getWorkbench().getHelpSystem().setHelp(outerContainer.getParent(), IHelpContextIds.ADD_EXTENSIONS_SCHEMA_BASED);
 	}
 
+	private void refreshPointListViewer() {
+		Control control = fPointListViewer.getControl();
+		try {
+			control.setRedraw(false);
+			fPointListViewer.refresh();
+		} finally {
+			control.setRedraw(true);
+		}
+	}
+
 	private Control createWizardsPage(Composite parent) {
 		fWizardsPage = new ExtensionTreeSelectionPage(fWizardCollection, null, PDEUIMessages.PointSelectionPage_categories);
 		fWizardsPage.createControl(parent);

---------------------------50---------------------------
需求名称: Bug 551417 - An application to generate API metadata without Ant
创建时间: 2019-05-17	03:44:39
修改时间: 2019-10-15	11:48:44

原文件: apitools/org.eclipse.pde.api.tools/plugin.xml 
新文件: apitools/org.eclipse.pde.api.tools/plugin.xml
位置:  -316,4 +316,16  
        </run>
     </application>
  </extension>
+ <extension
+       id=
+       point=
+    <application
+          cardinality=
+          thread=
+          visible=
+       <run
+             class=
+       </run>
+    </application>
+ </extension>
 </plugin>

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/APIFileGenerator.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/APIFileGenerator.java
位置:  -0,0 +1,491  
+/*******************************************************************************
+ * Copyright (c) 2019 Red Hat Inc. and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ * - Mickael Istria (Red Hat Inc.)
+ *******************************************************************************/
+package org.eclipse.pde.api.tools.internal;
+
+import java.io.BufferedInputStream;
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileFilter;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.PrintWriter;
+import java.io.StringReader;
+import java.io.StringWriter;
+import java.nio.charset.StandardCharsets;
+import java.util.ArrayList;
+import java.util.Enumeration;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
+
+import javax.xml.parsers.FactoryConfigurationError;
+import javax.xml.parsers.ParserConfigurationException;
+import javax.xml.parsers.SAXParser;
+import javax.xml.parsers.SAXParserFactory;
+
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.jdt.core.JavaCore;
+import org.eclipse.osgi.util.ManifestElement;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.api.tools.internal.model.ArchiveApiTypeContainer;
+import org.eclipse.pde.api.tools.internal.model.CompositeApiTypeContainer;
+import org.eclipse.pde.api.tools.internal.model.DirectoryApiTypeContainer;
+import org.eclipse.pde.api.tools.internal.provisional.ApiPlugin;
+import org.eclipse.pde.api.tools.internal.provisional.model.IApiTypeContainer;
+import org.eclipse.pde.api.tools.internal.provisional.scanner.TagScanner;
+import org.eclipse.pde.api.tools.internal.util.Util;
+import org.osgi.framework.BundleException;
+import org.osgi.framework.Constants;
+import org.xml.sax.Attributes;
+import org.xml.sax.InputSource;
+import org.xml.sax.SAXException;
+import org.xml.sax.SAXParseException;
+import org.xml.sax.helpers.DefaultHandler;
+
+public class APIFileGenerator {
+
+	static class APIToolsNatureDefaultHandler extends DefaultHandler {
+		private static final String NATURE_ELEMENT_NAME = 
+		boolean isAPIToolsNature = false;
+		boolean insideNature = false;
+		StringBuilder buffer;
+
+		@Override
+		public void error(SAXParseException e) throws SAXException {
+			e.printStackTrace();
+		}
+
+		@Override
+		public void startElement(String uri, String localName, String name, Attributes attributes) throws SAXException {
+			if (this.isAPIToolsNature) {
+				return;
+			}
+			this.insideNature = NATURE_ELEMENT_NAME.equals(name);
+			if (this.insideNature) {
+				this.buffer = new StringBuilder();
+			}
+		}
+
+		@Override
+		public void characters(char[] ch, int start, int length) throws SAXException {
+			if (this.insideNature) {
+				this.buffer.append(ch, start, length);
+			}
+		}
+
+		@Override
+		public void endElement(String uri, String localName, String name) throws SAXException {
+			if (this.insideNature) {
+				// check the contents of the characters
+				String natureName = String.valueOf(this.buffer).trim();
+				this.isAPIToolsNature = ApiPlugin.NATURE_ID.equals(natureName);
+			}
+			this.insideNature = false;
+		}
+
+		public boolean isAPIToolsNature() {
+			return this.isAPIToolsNature;
+		}
+	}
+
+	public boolean debug;
+	public String projectName;
+	public String projectLocation;
+	public String targetFolder;
+	public String binaryLocations;
+	public Set<String> apiPackages = new HashSet<>(0);
+	public String manifests;
+	public String sourceLocations;
+	public boolean allowNonApiProject = false;
+	public String encoding;
+
+	private static boolean isZipJarFile(String fileName) {
+		String normalizedFileName = fileName.toLowerCase();
+		return normalizedFileName.endsWith(
+				|| normalizedFileName.endsWith(
+	}
+
+	public void generateAPIFile() {
+		if (this.binaryLocations == null || this.projectName == null || this.projectLocation == null || this.targetFolder == null) {
+			StringWriter out = new StringWriter();
+			PrintWriter writer = new PrintWriter(out);
+			writer.println(NLS.bind(CoreMessages.api_generation_printArguments,
+					new String[] {
+					this.projectName, this.projectLocation,
+					this.binaryLocations, this.targetFolder }));
+			writer.flush();
+			writer.close();
+			throw new IllegalArgumentException(String.valueOf(out.getBuffer()));
+		}
+		if (this.debug) {
+			System.out.println(
+			System.out.println(
+			System.out.println(
+			System.out.println(
+			System.out.println(
+			if (this.manifests != null) {
+				System.out.println(
+			}
+			if (this.sourceLocations != null) {
+				System.out.println(
+			}
+		}
+		// collect all compilation units
+		File root = new File(this.projectLocation);
+		if (!root.exists() || !root.isDirectory()) {
+			if (this.debug) {
+				System.err.println(
+			}
+			throw new IllegalArgumentException(
+					NLS.bind(CoreMessages.api_generation_projectLocationNotADirectory, this.projectLocation));
+		}
+		// check if the project contains the API tools nature
+		File dotProjectFile = new File(root, 
+
+		if (!this.allowNonApiProject &amp;&amp; !isAPIToolsNature(dotProjectFile)) {
+			System.err.println(
+			return;
+		}
+		// check if the .api_description file exists
+		File targetProjectFolder = new File(this.targetFolder);
+		if (!targetProjectFolder.exists()) {
+			targetProjectFolder.mkdirs();
+		} else if (!targetProjectFolder.isDirectory()) {
+			if (this.debug) {
+				System.err.println(
+			}
+			throw new IllegalArgumentException(
+					NLS.bind(CoreMessages.api_generation_targetFolderNotADirectory, this.targetFolder));
+		}
+		File apiDescriptionFile = new File(targetProjectFolder, IApiCoreConstants.API_DESCRIPTION_XML_NAME);
+		if (apiDescriptionFile.exists()) {
+			// get rid of the existing one
+			// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=414053
+			if (this.debug) {
+				System.out.println(
+			}
+			apiDescriptionFile.delete();
+		}
+		File[] allFiles = null;
+		Map<String, String> manifestMap = null;
+		IApiTypeContainer classFileContainer = null;
+		if (!this.projectLocation.endsWith(Util.ORG_ECLIPSE_SWT)) {
+			// create the directory class file container used to resolve
+			// signatures during tag scanning
+			String[] allBinaryLocations = this.binaryLocations.split(File.pathSeparator);
+			List<IApiTypeContainer> allContainers = new ArrayList<>();
+			IApiTypeContainer container = null;
+			for (String allBinaryLocation : allBinaryLocations) {
+				container = getContainer(allBinaryLocation);
+				if (container == null) {
+					throw new IllegalArgumentException(
+							NLS.bind(CoreMessages.api_generation_invalidBinaryLocation, allBinaryLocation));
+				}
+				allContainers.add(container);
+			}
+			classFileContainer = new CompositeApiTypeContainer(null, allContainers);
+			File manifestFile = null;
+			File manifestDir = new File(root, 
+			if (manifestDir.exists() &amp;&amp; manifestDir.isDirectory()) {
+				manifestFile = new File(manifestDir, 
+			}
+			if (manifestFile != null &amp;&amp; manifestFile.exists()) {
+				try (BufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(manifestFile));) {
+					manifestMap = ManifestElement.parseBundleManifest(inputStream, null);
+					this.apiPackages = collectApiPackageNames(manifestMap);
+				} catch (IOException | BundleException e) {
+					ApiPlugin.log(e);
+				}
+			}
+			if (this.manifests != null) {
+				String[] allManifestFiles = this.manifests.split(File.pathSeparator);
+				for (String allManifestFile : allManifestFiles) {
+					File currentManifest = new File(allManifestFile);
+					Set<String> currentApiPackages = null;
+					if (currentManifest.exists()) {
+						BufferedInputStream inputStream = null;
+						ZipFile zipFile = null;
+						try {
+							if (isZipJarFile(currentManifest.getName())) {
+								zipFile = new ZipFile(currentManifest);
+								final ZipEntry entry = zipFile.getEntry(
+								if (entry != null) {
+									inputStream = new BufferedInputStream(zipFile.getInputStream(entry));
+								}
+							} else {
+								inputStream = new BufferedInputStream(new FileInputStream(currentManifest));
+							}
+							if (inputStream != null) {
+								manifestMap = ManifestElement.parseBundleManifest(inputStream, null);
+								currentApiPackages = collectApiPackageNames(manifestMap);
+							}
+						} catch (IOException | BundleException e) {
+							ApiPlugin.log(e);
+						} finally {
+							if (inputStream != null) {
+								try {
+									inputStream.close();
+								} catch (IOException e) {
+									// ignore
+								}
+							}
+							if (zipFile != null) {
+								try {
+									zipFile.close();
+								} catch (IOException e) {
+									// ignore
+								}
+							}
+						}
+					}
+					if (currentApiPackages != null) {
+						if (this.apiPackages == null) {
+							this.apiPackages = currentApiPackages;
+						} else {
+							this.apiPackages.addAll(currentApiPackages);
+						}
+					}
+				}
+			}
+			FileFilter fileFilter = path -> (path.isFile() &amp;&amp; Util.isJavaFileName(path.getName()) &amp;&amp; isApi(path.getParent())) || path.isDirectory();
+			allFiles = Util.getAllFiles(root, fileFilter);
+			if (this.sourceLocations != null) {
+				String[] allSourceLocations = this.sourceLocations.split(File.pathSeparator);
+				for (String currentSourceLocation : allSourceLocations) {
+					File[] allFiles2 = Util.getAllFiles(new File(currentSourceLocation), fileFilter);
+					if (allFiles2 != null) {
+						if (allFiles == null) {
+							allFiles = allFiles2;
+						} else {
+							int length = allFiles.length;
+							int length2 = allFiles2.length;
+							System.arraycopy(allFiles, 0, (allFiles = new File[length + length2]), 0, length);
+							System.arraycopy(allFiles2, 0, allFiles, length, length2);
+						}
+					}
+				}
+			}
+		}
+		ApiDescription apiDescription = new ApiDescription(this.projectName);
+		TagScanner tagScanner = TagScanner.newScanner();
+		if (allFiles != null &amp;&amp; allFiles.length != 0) {
+			Map<String, String> options = JavaCore.getOptions();
+			options.put(JavaCore.COMPILER_COMPLIANCE, resolveCompliance(manifestMap));
+			CompilationUnit unit = null;
+			for (int i = 0, max = allFiles.length; i < max; i++) {
+				unit = new CompilationUnit(allFiles[i].getAbsolutePath(), this.encoding);
+				if (this.debug) {
+					System.out.println(
+				}
+				try {
+					tagScanner.scan(unit, apiDescription, classFileContainer, options, null);
+				} catch (CoreException e) {
+					ApiPlugin.log(e);
+				} finally {
+					try {
+						if (classFileContainer != null) {
+							classFileContainer.close();
+						}
+					} catch (CoreException e) {
+						// ignore
+					}
+				}
+			}
+		}
+		try {
+			ApiDescriptionXmlCreator xmlVisitor = new ApiDescriptionXmlCreator(this.projectName, this.projectName);
+			apiDescription.accept(xmlVisitor, null);
+			String xml = xmlVisitor.getXML();
+			Util.saveFile(apiDescriptionFile, xml);
+		} catch (CoreException | IOException e) {
+			ApiPlugin.log(e);
+		}
+	}
+
+	/**
+	 * Returns if the given path ends with one of the collected API path names
+	 *
+	 * @param path
+	 * @return true if the given path name ends with one of the collected API
+	 *         package names
+	 */
+	boolean isApi(String path) {
+		for (String pkg : apiPackages) {
+			if (path.endsWith(pkg.replace('.', File.separatorChar))) {
+				return true;
+			}
+		}
+		return false;
+	}
+
+	/**
+	 * Collects the names of the packages that are API for the bundle the API
+	 * description is being created for
+	 *
+	 * @param manifestmap
+	 * @return the names of the packages that are API for the bundle the API
+	 *         description is being created for
+	 * @throws BundleException if parsing the manifest map to get API package
+	 *             names fail for some reason
+	 */
+	private Set<String> collectApiPackageNames(Map<String, String> manifestmap) throws BundleException {
+		HashSet<String> set = new HashSet<>();
+		ManifestElement[] packages = ManifestElement.parseHeader(Constants.EXPORT_PACKAGE, manifestmap.get(Constants.EXPORT_PACKAGE));
+		if (packages != null) {
+			for (int i = 0; i < packages.length; i++) {
+				ManifestElement packageName = packages[i];
+				Enumeration<String> directiveKeys = packageName.getDirectiveKeys();
+				if (directiveKeys == null) {
+					set.add(packageName.getValue());
+				} else {
+					boolean include = true;
+					loop: for (; directiveKeys.hasMoreElements();) {
+						Object directive = directiveKeys.nextElement();
+						if (
+							String value = packageName.getDirective((String) directive);
+							if (Boolean.parseBoolean(value)) {
+								include = false;
+								break loop;
+							}
+						}
+						if (
+							include = false;
+							break loop;
+						}
+					}
+					if (include) {
+						set.add(packageName.getValue());
+					}
+				}
+			}
+		}
+		return set;
+	}
+
+	private IApiTypeContainer getContainer(String location) {
+		File f = new File(location);
+		if (!f.exists()) {
+			return null;
+		}
+		if (isZipJarFile(location)) {
+			return new ArchiveApiTypeContainer(null, location);
+		} else {
+			return new DirectoryApiTypeContainer(null, location);
+		}
+	}
+
+	/**
+	 * Resolves the compiler compliance based on the BREE entry in the
+	 * MANIFEST.MF file
+	 *
+	 * @param manifestmap
+	 * @return The derived {@link JavaCore#COMPILER_COMPLIANCE} from the BREE in
+	 *         the manifest map, or {@link JavaCore#VERSION_1_3} if there is no
+	 *         BREE entry in the map or if the BREE entry does not directly map
+	 *         to one of {
+	 */
+	private String resolveCompliance(Map<String, String> manifestmap) {
+		if (manifestmap != null) {
+			String eename = manifestmap.get(Constants.BUNDLE_REQUIREDEXECUTIONENVIRONMENT);
+			if (eename != null) {
+				if (
+					return JavaCore.VERSION_1_4;
+				}
+				if (
+					return JavaCore.VERSION_1_5;
+				}
+				if (
+					return JavaCore.VERSION_1_6;
+				}
+				if (
+					return JavaCore.VERSION_1_7;
+				}
+				if (
+					return JavaCore.VERSION_1_8;
+				}
+			}
+		}
+		return JavaCore.VERSION_1_3;
+	}
+
+	/**
+	 * Resolves if the '.project' file belongs to an API enabled project or not
+	 *
+	 * @param dotProjectFile
+	 * @return true if the '.project' file is for an API enabled project, false
+	 *         otherwise
+	 */
+	private boolean isAPIToolsNature(File dotProjectFile) {
+		if (!dotProjectFile.exists()) {
+			return false;
+		}
+		BufferedInputStream stream = null;
+		try {
+			stream = new BufferedInputStream(new FileInputStream(dotProjectFile));
+			String contents = new String(Util.getInputStreamAsCharArray(stream, -1, StandardCharsets.UTF_8));
+			return containsAPIToolsNature(contents);
+		} catch (IOException e) {
+			e.printStackTrace();
+		} finally {
+			if (stream != null) {
+				try {
+					stream.close();
+				} catch (IOException e) {
+					// ignore
+				}
+			}
+		}
+		return false;
+	}
+
+	/**
+	 * Check if the given source contains an source extension point.
+	 *
+	 * @param pluginXMLContents the given file contents
+	 * @return true if it contains a source extension point, false otherwise
+	 */
+	private boolean containsAPIToolsNature(String pluginXMLContents) {
+		SAXParserFactory factory = null;
+		try {
+			factory = SAXParserFactory.newInstance();
+		} catch (FactoryConfigurationError e) {
+			return false;
+		}
+		SAXParser saxParser = null;
+		try {
+			saxParser = factory.newSAXParser();
+		} catch (ParserConfigurationException | SAXException e) {
+			// ignore
+		}
+
+		if (saxParser == null) {
+			return false;
+		}
+
+		// Parse
+		InputSource inputSource = new InputSource(new BufferedReader(new StringReader(pluginXMLContents)));
+		try {
+			APIToolsNatureDefaultHandler defaultHandler = new APIToolsNatureDefaultHandler();
+			saxParser.parse(inputSource, defaultHandler);
+			return defaultHandler.isAPIToolsNature();
+		} catch (SAXException | IOException e) {
+			// ignore
+		}
+		return false;
+	}
+
+}
\ No newline at end of file

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiFileGenerationApplication.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiFileGenerationApplication.java
位置:  -0,0 +1,64  
+/*******************************************************************************
+ * Copyright (c) 2019 Red Hat Inc. and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ * - Mickael Istria (Red Hat Inc.)
+ *******************************************************************************/
+package org.eclipse.pde.api.tools.internal;
+
+import org.eclipse.equinox.app.IApplication;
+import org.eclipse.equinox.app.IApplicationContext;
+import org.eclipse.pde.api.tools.internal.provisional.ApiPlugin;
+
+public class ApiFileGenerationApplication implements IApplication {
+
+	@Override
+	public Object start(IApplicationContext context) throws Exception {
+		APIFileGenerator generator = new APIFileGenerator();
+		String[] args = (String[]) context.getArguments().get(IApplicationContext.APPLICATION_ARGS);
+		generator.projectName = find(
+		generator.projectLocation = find(
+		generator.binaryLocations = find(
+		generator.targetFolder = find(
+		try {
+			generator.generateAPIFile();
+			return 0;
+		} catch (Exception ex) {
+			ApiPlugin.log(ex);
+			return 1;
+		}
+	}
+
+	private String find(String argName, String[] args) {
+		if (argName == null || argName.isEmpty()) {
+			return null;
+		}
+		String token = argName;
+		if (!argName.startsWith(
+			token = 
+		}
+		int tokenIndex = -1;
+		for (int i = 0; i < args.length &amp;&amp; tokenIndex == -1; i++) {
+			if (token.equals(args[i])) {
+				tokenIndex = i + 1;
+			}
+		}
+		if (tokenIndex >= 0 &amp;&amp; tokenIndex < args.length) {
+			return args[tokenIndex];
+		}
+		return null;
+	}
+
+	@Override
+	public void stop() {
+		// Nothing to do
+	}
+
+}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/CoreMessages.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/CoreMessages.java
位置:  -43,6 +43,11   public class CoreMessages extends NLS {
 	public static String JavadocTagManager_method_no_overried;
 	public static String JavadocTagManager_method_no_reference;
 	public static String ProjectComponent_could_not_locate_model;
+	public static String api_generation_printArguments;
+	public static String api_generation_projectLocationNotADirectory;
+	public static String api_generation_targetFolderNotADirectory;
+	public static String api_generation_invalidBinaryLocation;
+
 	static {
 		// initialize resource bundle
 		NLS.initializeMessages(BUNDLE_NAME, CoreMessages.class);

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/coremessages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/coremessages.properties
位置:  -35,3 +35,11   JavadocTagManager_interface_no_reference=This interface is not intended to be re
 JavadocTagManager_method_no_overried=This method is not intended to be re-implemented or extended by clients.
 JavadocTagManager_method_no_reference=This method is not intended to be referenced by clients.
 ProjectComponent_could_not_locate_model=Could not locate the plug-in model base for project: {0}
+api_generation_printArguments=Missing arguments:\n\
+project name : {0}\n\
+project location : {1}\n\
+binary locations: {2}\n\
+target folder: {3}
+api_generation_projectLocationNotADirectory=The project argument {0} must be a directory
+api_generation_targetFolderNotADirectory=The target argument {0} must be a directory
+api_generation_invalidBinaryLocation=The location {0} specified in the binary argument does not exist

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/ApiFileGenerationTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/ApiFileGenerationTask.java
位置:  -13,128 +13,27  
  *******************************************************************************/
 package org.eclipse.pde.api.tools.internal.tasks;
 
-import java.io.BufferedInputStream;
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileFilter;
-import java.io.FileInputStream;
-import java.io.IOException;
-import java.io.PrintWriter;
-import java.io.StringReader;
-import java.io.StringWriter;
-import java.nio.charset.StandardCharsets;
-import java.util.ArrayList;
-import java.util.Enumeration;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.zip.ZipEntry;
-import java.util.zip.ZipFile;
-
-import javax.xml.parsers.FactoryConfigurationError;
-import javax.xml.parsers.ParserConfigurationException;
-import javax.xml.parsers.SAXParser;
-import javax.xml.parsers.SAXParserFactory;
-
-import org.apache.tools.ant.BuildException;
 import org.apache.tools.ant.Task;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.jdt.core.JavaCore;
-import org.eclipse.osgi.util.ManifestElement;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.api.tools.internal.ApiDescription;
-import org.eclipse.pde.api.tools.internal.ApiDescriptionXmlCreator;
-import org.eclipse.pde.api.tools.internal.CompilationUnit;
-import org.eclipse.pde.api.tools.internal.IApiCoreConstants;
-import org.eclipse.pde.api.tools.internal.model.ArchiveApiTypeContainer;
-import org.eclipse.pde.api.tools.internal.model.CompositeApiTypeContainer;
-import org.eclipse.pde.api.tools.internal.model.DirectoryApiTypeContainer;
-import org.eclipse.pde.api.tools.internal.provisional.ApiPlugin;
-import org.eclipse.pde.api.tools.internal.provisional.model.IApiTypeContainer;
-import org.eclipse.pde.api.tools.internal.provisional.scanner.TagScanner;
-import org.eclipse.pde.api.tools.internal.util.Util;
-import org.osgi.framework.BundleException;
-import org.osgi.framework.Constants;
-import org.xml.sax.Attributes;
-import org.xml.sax.InputSource;
-import org.xml.sax.SAXException;
-import org.xml.sax.SAXParseException;
-import org.xml.sax.helpers.DefaultHandler;
+import org.eclipse.pde.api.tools.internal.APIFileGenerator;
 
 /**
  * Ant task to generate the .api_description file during the Eclipse build.
  */
-public class ApiFileGenerationTask extends Task {
-
-	static class APIToolsNatureDefaultHandler extends DefaultHandler {
-		private static final String NATURE_ELEMENT_NAME = 
-		boolean isAPIToolsNature = false;
-		boolean insideNature = false;
-		StringBuilder buffer;
-
-		@Override
-		public void error(SAXParseException e) throws SAXException {
-			e.printStackTrace();
-		}
-
-		@Override
-		public void startElement(String uri, String localName, String name, Attributes attributes) throws SAXException {
-			if (this.isAPIToolsNature) {
-				return;
-			}
-			this.insideNature = NATURE_ELEMENT_NAME.equals(name);
-			if (this.insideNature) {
-				this.buffer = new StringBuilder();
-			}
-		}
-
-		@Override
-		public void characters(char[] ch, int start, int length) throws SAXException {
-			if (this.insideNature) {
-				this.buffer.append(ch, start, length);
-			}
-		}
+public class ApiFileGenerationTask extends Task/* APIFileGenerator */ {
 
-		@Override
-		public void endElement(String uri, String localName, String name) throws SAXException {
-			if (this.insideNature) {
-				// check the contents of the characters
-				String natureName = String.valueOf(this.buffer).trim();
-				this.isAPIToolsNature = ApiPlugin.NATURE_ID.equals(natureName);
-			}
-			this.insideNature = false;
-		}
+	private APIFileGenerator apiFileGenerator;
 
-		public boolean isAPIToolsNature() {
-			return this.isAPIToolsNature;
-		}
+	public ApiFileGenerationTask() {
+		this.apiFileGenerator = new APIFileGenerator();
 	}
 
-	boolean debug;
-
-	String projectName;
-	String projectLocation;
-	String targetFolder;
-	String binaryLocations;
-	String manifests;
-	String sourceLocations;
-	boolean allowNonApiProject = false;
-	/**
-	 * The encoding to read the source files with
-	 *
-	 * @since 1.0.600
-	 */
-	String encoding;
-	Set<String> apiPackages = new HashSet<>(0);
-
 	/**
 	 * Set the project name.
 	 *
 	 * @param projectName the given project name
 	 */
 	public void setProjectName(String projectName) {
-		this.projectName = projectName;
+		apiFileGenerator.projectName = projectName;
 	}
 
 	/**
位置:  -150,7 +49,7   public class ApiFileGenerationTask extends Task {
 	 * @param projectLocation the given project location
 	 */
 	public void setProject(String projectLocation) {
-		this.projectLocation = projectLocation;
+		apiFileGenerator.projectLocation = projectLocation;
 	}
 
 	/**
位置:  -165,7 +64,7   public class ApiFileGenerationTask extends Task {
 	 * @param targetLocation the given target location
 	 */
 	public void setTarget(String targetLocation) {
-		this.targetFolder = targetLocation;
+		apiFileGenerator.targetFolder = targetLocation;
 	}
 
 	/**
位置:  -182,7 +81,7   public class ApiFileGenerationTask extends Task {
 	 * @param binaryLocations the given binary locations
 	 */
 	public void setBinary(String binaryLocations) {
-		this.binaryLocations = binaryLocations;
+		apiFileGenerator.binaryLocations = binaryLocations;
 	}
 
 	/**
位置:  -199,7 +98,7   public class ApiFileGenerationTask extends Task {
 	 * @param allow
 	 */
 	public void setAllowNonApiProject(String allow) {
-		this.allowNonApiProject = Boolean.parseBoolean(allow);
+		apiFileGenerator.allowNonApiProject = Boolean.parseBoolean(allow);
 	}
 
 	/**
位置:  -209,7 +108,7   public class ApiFileGenerationTask extends Task {
 	 * @since 1.0.600
 	 */
 	public void setEncoding(String encoding) {
-		this.encoding = encoding;
+		apiFileGenerator.encoding = encoding;
 	}
 
 	/**
位置:  -224,7 +123,7   public class ApiFileGenerationTask extends Task {
 	 * @param debugValue the given debug value
 	 */
 	public void setDebug(String debugValue) {
-		this.debug = Boolean.toString(true).equals(debugValue);
+		apiFileGenerator.debug = Boolean.toString(true).equals(debugValue);
 	}
 
 	/**
位置:  -247,7 +146,7   public class ApiFileGenerationTask extends Task {
 	 * @param manifests the given extra manifest files' locations
 	 */
 	public void setExtraManifests(String manifests) {
-		this.manifests = manifests;
+		apiFileGenerator.manifests = manifests;
 	}
 
 	/**
位置:  -263,381 +162,11   public class ApiFileGenerationTask extends Task {
 	 * @param manifests the given extra source locations
 	 */
 	public void setExtraSourceLocations(String sourceLocations) {
-		this.sourceLocations = sourceLocations;
+		apiFileGenerator.sourceLocations = sourceLocations;
 	}
 
-	/**
-	 * Execute the ant task
-	 */
 	@Override
-	public void execute() throws BuildException {
-		if (this.binaryLocations == null || this.projectName == null || this.projectLocation == null || this.targetFolder == null) {
-			StringWriter out = new StringWriter();
-			PrintWriter writer = new PrintWriter(out);
-			writer.println(NLS.bind(Messages.api_generation_printArguments, new String[] {
-					this.projectName, this.projectLocation,
-					this.binaryLocations, this.targetFolder }));
-			writer.flush();
-			writer.close();
-			throw new BuildException(String.valueOf(out.getBuffer()));
-		}
-		if (this.debug) {
-			System.out.println(
-			System.out.println(
-			System.out.println(
-			System.out.println(
-			System.out.println(
-			if (this.manifests != null) {
-				System.out.println(
-			}
-			if (this.sourceLocations != null) {
-				System.out.println(
-			}
-		}
-		// collect all compilation units
-		File root = new File(this.projectLocation);
-		if (!root.exists() || !root.isDirectory()) {
-			if (this.debug) {
-				System.err.println(
-			}
-			throw new BuildException(NLS.bind(Messages.api_generation_projectLocationNotADirectory, this.projectLocation));
-		}
-		// check if the project contains the API tools nature
-		File dotProjectFile = new File(root, 
-
-		if (!this.allowNonApiProject &amp;&amp; !isAPIToolsNature(dotProjectFile)) {
-			System.err.println(
-			return;
-		}
-		// check if the .api_description file exists
-		File targetProjectFolder = new File(this.targetFolder);
-		if (!targetProjectFolder.exists()) {
-			targetProjectFolder.mkdirs();
-		} else if (!targetProjectFolder.isDirectory()) {
-			if (this.debug) {
-				System.err.println(
-			}
-			throw new BuildException(NLS.bind(Messages.api_generation_targetFolderNotADirectory, this.targetFolder));
-		}
-		File apiDescriptionFile = new File(targetProjectFolder, IApiCoreConstants.API_DESCRIPTION_XML_NAME);
-		if (apiDescriptionFile.exists()) {
-			// get rid of the existing one
-			// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=414053
-			if (this.debug) {
-				System.out.println(
-			}
-			apiDescriptionFile.delete();
-		}
-		File[] allFiles = null;
-		Map<String, String> manifestMap = null;
-		IApiTypeContainer classFileContainer = null;
-		if (!this.projectLocation.endsWith(Util.ORG_ECLIPSE_SWT)) {
-			// create the directory class file container used to resolve
-			// signatures during tag scanning
-			String[] allBinaryLocations = this.binaryLocations.split(File.pathSeparator);
-			List<IApiTypeContainer> allContainers = new ArrayList<>();
-			IApiTypeContainer container = null;
-			for (String allBinaryLocation : allBinaryLocations) {
-				container = getContainer(allBinaryLocation);
-				if (container == null) {
-					throw new BuildException(NLS.bind(Messages.api_generation_invalidBinaryLocation, allBinaryLocation));
-				}
-				allContainers.add(container);
-			}
-			classFileContainer = new CompositeApiTypeContainer(null, allContainers);
-			File manifestFile = null;
-			File manifestDir = new File(root, 
-			if (manifestDir.exists() &amp;&amp; manifestDir.isDirectory()) {
-				manifestFile = new File(manifestDir, 
-			}
-			if (manifestFile != null &amp;&amp; manifestFile.exists()) {
-				try (BufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(manifestFile));) {
-					manifestMap = ManifestElement.parseBundleManifest(inputStream, null);
-					this.apiPackages = collectApiPackageNames(manifestMap);
-				} catch (IOException | BundleException e) {
-					ApiPlugin.log(e);
-				}
-			}
-			if (this.manifests != null) {
-				String[] allManifestFiles = this.manifests.split(File.pathSeparator);
-				for (String allManifestFile : allManifestFiles) {
-					File currentManifest = new File(allManifestFile);
-					Set<String> currentApiPackages = null;
-					if (currentManifest.exists()) {
-						BufferedInputStream inputStream = null;
-						ZipFile zipFile = null;
-						try {
-							if (isZipJarFile(currentManifest.getName())) {
-								zipFile = new ZipFile(currentManifest);
-								final ZipEntry entry = zipFile.getEntry(
-								if (entry != null) {
-									inputStream = new BufferedInputStream(zipFile.getInputStream(entry));
-								}
-							} else {
-								inputStream = new BufferedInputStream(new FileInputStream(currentManifest));
-							}
-							if (inputStream != null) {
-								manifestMap = ManifestElement.parseBundleManifest(inputStream, null);
-								currentApiPackages = collectApiPackageNames(manifestMap);
-							}
-						} catch (IOException | BundleException e) {
-							ApiPlugin.log(e);
-						} finally {
-							if (inputStream != null) {
-								try {
-									inputStream.close();
-								} catch (IOException e) {
-									// ignore
-								}
-							}
-							if (zipFile != null) {
-								try {
-									zipFile.close();
-								} catch (IOException e) {
-									// ignore
-								}
-							}
-						}
-					}
-					if (currentApiPackages != null) {
-						if (this.apiPackages == null) {
-							this.apiPackages = currentApiPackages;
-						} else {
-							this.apiPackages.addAll(currentApiPackages);
-						}
-					}
-				}
-			}
-			FileFilter fileFilter = path -> (path.isFile() &amp;&amp; Util.isJavaFileName(path.getName()) &amp;&amp; isApi(path.getParent())) || path.isDirectory();
-			allFiles = Util.getAllFiles(root, fileFilter);
-			if (this.sourceLocations != null) {
-				String[] allSourceLocations = this.sourceLocations.split(File.pathSeparator);
-				for (String currentSourceLocation : allSourceLocations) {
-					File[] allFiles2 = Util.getAllFiles(new File(currentSourceLocation), fileFilter);
-					if (allFiles2 != null) {
-						if (allFiles == null) {
-							allFiles = allFiles2;
-						} else {
-							int length = allFiles.length;
-							int length2 = allFiles2.length;
-							System.arraycopy(allFiles, 0, (allFiles = new File[length + length2]), 0, length);
-							System.arraycopy(allFiles2, 0, allFiles, length, length2);
-						}
-					}
-				}
-			}
-		}
-		ApiDescription apiDescription = new ApiDescription(this.projectName);
-		TagScanner tagScanner = TagScanner.newScanner();
-		if (allFiles != null &amp;&amp; allFiles.length != 0) {
-			Map<String, String> options = JavaCore.getOptions();
-			options.put(JavaCore.COMPILER_COMPLIANCE, resolveCompliance(manifestMap));
-			CompilationUnit unit = null;
-			for (int i = 0, max = allFiles.length; i < max; i++) {
-				unit = new CompilationUnit(allFiles[i].getAbsolutePath(), this.encoding);
-				if (this.debug) {
-					System.out.println(
-				}
-				try {
-					tagScanner.scan(unit, apiDescription, classFileContainer, options, null);
-				} catch (CoreException e) {
-					ApiPlugin.log(e);
-				} finally {
-					try {
-						if (classFileContainer != null) {
-							classFileContainer.close();
-						}
-					} catch (CoreException e) {
-						// ignore
-					}
-				}
-			}
-		}
-		try {
-			ApiDescriptionXmlCreator xmlVisitor = new ApiDescriptionXmlCreator(this.projectName, this.projectName);
-			apiDescription.accept(xmlVisitor, null);
-			String xml = xmlVisitor.getXML();
-			Util.saveFile(apiDescriptionFile, xml);
-		} catch (CoreException | IOException e) {
-			ApiPlugin.log(e);
-		}
-	}
-
-	/**
-	 * Returns if the given path ends with one of the collected API path names
-	 *
-	 * @param path
-	 * @return true if the given path name ends with one of the collected API
-	 *         package names
-	 */
-	boolean isApi(String path) {
-		for (String pkg : apiPackages) {
-			if (path.endsWith(pkg.replace('.', File.separatorChar))) {
-				return true;
-			}
-		}
-		return false;
-	}
-
-	/**
-	 * Collects the names of the packages that are API for the bundle the API
-	 * description is being created for
-	 *
-	 * @param manifestmap
-	 * @return the names of the packages that are API for the bundle the API
-	 *         description is being created for
-	 * @throws BundleException if parsing the manifest map to get API package
-	 *             names fail for some reason
-	 */
-	private Set<String> collectApiPackageNames(Map<String, String> manifestmap) throws BundleException {
-		HashSet<String> set = new HashSet<>();
-		ManifestElement[] packages = ManifestElement.parseHeader(Constants.EXPORT_PACKAGE, manifestmap.get(Constants.EXPORT_PACKAGE));
-		if (packages != null) {
-			for (int i = 0; i < packages.length; i++) {
-				ManifestElement packageName = packages[i];
-				Enumeration<String> directiveKeys = packageName.getDirectiveKeys();
-				if (directiveKeys == null) {
-					set.add(packageName.getValue());
-				} else {
-					boolean include = true;
-					loop: for (; directiveKeys.hasMoreElements();) {
-						Object directive = directiveKeys.nextElement();
-						if (
-							String value = packageName.getDirective((String) directive);
-							if (Boolean.parseBoolean(value)) {
-								include = false;
-								break loop;
-							}
-						}
-						if (
-							include = false;
-							break loop;
-						}
-					}
-					if (include) {
-						set.add(packageName.getValue());
-					}
-				}
-			}
-		}
-		return set;
-	}
-
-	private IApiTypeContainer getContainer(String location) {
-		File f = new File(location);
-		if (!f.exists()) {
-			return null;
-		}
-		if (isZipJarFile(location)) {
-			return new ArchiveApiTypeContainer(null, location);
-		} else {
-			return new DirectoryApiTypeContainer(null, location);
-		}
-	}
-
-	/**
-	 * Resolves the compiler compliance based on the BREE entry in the
-	 * MANIFEST.MF file
-	 *
-	 * @param manifestmap
-	 * @return The derived {@link JavaCore#COMPILER_COMPLIANCE} from the BREE in
-	 *         the manifest map, or {@link JavaCore#VERSION_1_3} if there is no
-	 *         BREE entry in the map or if the BREE entry does not directly map
-	 *         to one of {
-	 */
-	private String resolveCompliance(Map<String, String> manifestmap) {
-		if (manifestmap != null) {
-			String eename = manifestmap.get(Constants.BUNDLE_REQUIREDEXECUTIONENVIRONMENT);
-			if (eename != null) {
-				if (
-					return JavaCore.VERSION_1_4;
-				}
-				if (
-					return JavaCore.VERSION_1_5;
-				}
-				if (
-					return JavaCore.VERSION_1_6;
-				}
-				if (
-					return JavaCore.VERSION_1_7;
-				}
-				if (
-					return JavaCore.VERSION_1_8;
-				}
-			}
-		}
-		return JavaCore.VERSION_1_3;
-	}
-
-	/**
-	 * Resolves if the '.project' file belongs to an API enabled project or not
-	 *
-	 * @param dotProjectFile
-	 * @return true if the '.project' file is for an API enabled project, false
-	 *         otherwise
-	 */
-	private boolean isAPIToolsNature(File dotProjectFile) {
-		if (!dotProjectFile.exists()) {
-			return false;
-		}
-		BufferedInputStream stream = null;
-		try {
-			stream = new BufferedInputStream(new FileInputStream(dotProjectFile));
-			String contents = new String(Util.getInputStreamAsCharArray(stream, -1, StandardCharsets.UTF_8));
-			return containsAPIToolsNature(contents);
-		} catch (IOException e) {
-			e.printStackTrace();
-		} finally {
-			if (stream != null) {
-				try {
-					stream.close();
-				} catch (IOException e) {
-					// ignore
-				}
-			}
-		}
-		return false;
-	}
-
-	private static boolean isZipJarFile(String fileName) {
-		String normalizedFileName = fileName.toLowerCase();
-		return normalizedFileName.endsWith(
-				|| normalizedFileName.endsWith(
-	}
-
-	/**
-	 * Check if the given source contains an source extension point.
-	 *
-	 * @param pluginXMLContents the given file contents
-	 * @return true if it contains a source extension point, false otherwise
-	 */
-	private boolean containsAPIToolsNature(String pluginXMLContents) {
-		SAXParserFactory factory = null;
-		try {
-			factory = SAXParserFactory.newInstance();
-		} catch (FactoryConfigurationError e) {
-			return false;
-		}
-		SAXParser saxParser = null;
-		try {
-			saxParser = factory.newSAXParser();
-		} catch (ParserConfigurationException | SAXException e) {
-			// ignore
-		}
-
-		if (saxParser == null) {
-			return false;
-		}
-
-		// Parse
-		InputSource inputSource = new InputSource(new BufferedReader(new StringReader(pluginXMLContents)));
-		try {
-			APIToolsNatureDefaultHandler defaultHandler = new APIToolsNatureDefaultHandler();
-			saxParser.parse(inputSource, defaultHandler);
-			return defaultHandler.isAPIToolsNature();
-		} catch (SAXException | IOException e) {
-			// ignore
-		}
-		return false;
+	public void execute() {
+		apiFileGenerator.generateAPIFile();
 	}
 }

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/Messages.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/Messages.java
位置:  -86,11 +86,6   public class Messages extends NLS {
 	public static String couldNotUntar;
 	public static String reportLocationHasToBeAFile;
 
-	public static String api_generation_printArguments;
-	public static String api_generation_projectLocationNotADirectory;
-	public static String api_generation_targetFolderNotADirectory;
-	public static String api_generation_invalidBinaryLocation;
-
 	public static String ApiMigrationTask_missing_scan_location;
 	public static String ApiMigrationTask_scan_location_not_dir;
 	public static String ApiMigrationTask_scan_location_not_exist;

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/messages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/messages.properties
位置:  -15,14 +15,6   printArguments=Missing arguments:\n\
 reference location : {0}\n\
 current baseline location : {1}\n\
 report location : {2}
-api_generation_printArguments=Missing arguments:\n\
-project name : {0}\n\
-project location : {1}\n\
-binary locations: {2}\n\
-target folder: {3}
-api_generation_projectLocationNotADirectory=The project argument {0} must be a directory
-api_generation_targetFolderNotADirectory=The target argument {0} must be a directory
-api_generation_invalidBinaryLocation=The location {0} specified in the binary argument does not exist
 ApiMigrationTask_missing_scan_location=Missing Arguments: scanLocation: {0}
 ApiMigrationTask_scan_location_not_dir=Invalid Arguments: scanLocation must be a directory: {0}
 ApiMigrationTask_scan_location_not_exist=Invalid Arguments: scanLocation does not exist: {0}

---------------------------51---------------------------
需求名称: Address SonarQube blockers - URL equals/hashCode performance
创建时间: 2019-09-29	12:43:34
修改时间: 2019-10-15	11:46:56

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java
位置:  -308,7 +308,8   public class SchemaErrorReporter extends XMLErrorReporter {
 					}
 					URL includedSchemaUrl = includedSchema.getURL();
 					URL computedUrl = IncludedSchemaDescriptor.computeURL(fSchema.getSchemaDescriptor(), schemaLocation, null);
-					if (includedSchemaUrl != null &amp;&amp; computedUrl != null &amp;&amp; includedSchemaUrl.equals(computedUrl)) {
+					if (includedSchemaUrl != null &amp;&amp; computedUrl != null
+							&amp;&amp; includedSchemaUrl.toExternalForm().equals(computedUrl.toExternalForm())) {
 						if (!includedSchema.isValid()) {
 							report(NLS.bind(PDECoreMessages.Builders_Schema_includeNotValid, schemaLocation), getLine(element), CompilerFlags.ERROR, PDEMarkerFactory.CAT_OTHER);
 						}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/schem
原文件: SchemaAttribute.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/schema/SchemaAttribute.java
位置:  -270,7 +270,7   public class SchemaAttribute extends SchemaObject implements ISchemaAttribute {
 				return null;
 			}
 		}
-		String hashkey = schema.getURL().hashCode() + 
+		String hashkey = schema.getURL().toExternalForm().hashCode() + 
 		String description = XMLComponentRegistry.Instance().getDescription(hashkey, XMLComponentRegistry.F_ATTRIBUTE_COMPONENT);
 		if (description == null) {
 			SchemaAttributeHandler handler = new SchemaAttributeHandler(elementName, getName());

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/schem
原文件: SchemaElement.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/schema/SchemaElement.java
位置:  -358,7 +358,7   public class SchemaElement extends RepeatableSchemaObject implements ISchemaElem
 			// This can happen when creating a new extension point schema
 			return null;
 		}
-		String hashkey = schema.getURL().hashCode() + 
+		String hashkey = schema.getURL().toExternalForm().hashCode() + 
 		String description = XMLComponentRegistry.Instance().getDescription(hashkey, XMLComponentRegistry.F_ELEMENT_COMPONENT);
 		if (description == null) {
 			SchemaElementHandler handler = new SchemaElementHandler(getName());

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/schem
原文件: SchemaRegistry.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/schema/SchemaRegistry.java
位置:  -164,7 +164,7   public class SchemaRegistry {
 			if (file.isDirectory()) {
 				File schemaFile = new File(file, schema);
 				if (schemaFile.exists()) {
-					return schemaFile.toURL();
+					return schemaFile.toURI().toURL();
 				}
 			} else if (CoreUtility.jarContainsResource(file, schema, false)) {
 				return new URL(
位置:  -175,7 +175,7   public class SchemaRegistry {
 	}
 
 	private boolean hasSchemaChanged(ISchemaDescriptor desc, URL url) {
-		if (!desc.getSchemaURL().equals(url)) {
+		if (!desc.getSchemaURL().toExternalForm().equals(url.toExternalForm())) {
 			return true;
 		}
 		File file = new File(url.getFile());

---------------------------52---------------------------
需求名称: Address SonarQube blockers - URL maps/sets performance
创建时间: 2019-09-29	12:31:15
修改时间: 2019-10-15	11:44:57

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginPathFinder.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginPathFinder.java
位置:  -18,9 +18,12   import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
 import java.net.MalformedURLException;
+import java.net.URI;
 import java.net.URL;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.HashSet;
+import java.util.Map;
 import java.util.Properties;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
位置:  -268,7 +271,7   public class PluginPathFinder {
 	 * @return URLs to plugins/features
 	 */
 	public static URL[] scanLocations(File[] sites) {
-		HashSet<URL> result = new HashSet<>();
+		Map<URI, URL> result = new HashMap<>();
 		for (int i = 0; i < sites.length; i++) {
 			if (!sites[i].exists()) {
 				continue;
位置:  -277,13 +280,14   public class PluginPathFinder {
 			if (children != null) {
 				for (File element : children) {
 					try {
-						result.add(element.toURL());
+						URI elementUri = element.toURI();
+						result.put(elementUri, elementUri.toURL());
 					} catch (MalformedURLException e) {
 					}
 				}
 			}
 		}
-		return result.toArray(new URL[result.size()]);
+		return result.values().toArray(new URL[result.size()]);
 	}
 
 	public static boolean isDevLaunchMode() {

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/target/LocalTargetDefinitionTests.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/target/LocalTargetDefinitionTests.java
位置:  -14,7 +14,7  
 package org.eclipse.pde.ui.tests.target;
 
 import java.io.*;
-import java.net.URL;
+import java.net.*;
 import java.util.*;
 import org.eclipse.core.runtime.*;
 import org.eclipse.equinox.frameworkadmin.BundleInfo;
位置:  -55,19 +55,19   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 
 	/**
 	 * Retrieves all bundles (source and code) in the given target definition
-	 * returning them as a set of URLs.
+	 * returning them as a set of URIs.
 	 *
 	 * @param target target definition
-	 * @return all bundle URLs
+	 * @return all bundle URIs
 	 */
-	protected Set<URL> getAllBundleURLs(ITargetDefinition target) throws Exception {
+	protected Set<URI> getAllBundleURIs(ITargetDefinition target) throws Exception {
 		if (!target.isResolved()) {
 			target.resolve(null);
 		}
 		TargetBundle[] bundles = target.getBundles();
-		Set<URL> urls = new HashSet<>(bundles.length);
+		Set<URI> urls = new HashSet<>(bundles.length);
 		for (TargetBundle bundle : bundles) {
-			urls.add(new File(bundle.getBundleInfo().getLocation()).toURL());
+			urls.add(bundle.getBundleInfo().getLocation());
 		}
 		return urls;
 	}
位置:  -80,12 +80,12   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 	 */
 	public void testResetTargetPlatform() throws Exception {
 		ITargetDefinition definition = getDefaultTargetPlatorm();
-		Set<URL> urls = getAllBundleURLs(definition);
-		Set<URL> fragments = new HashSet<>();
+		Set<URI> uris = getAllBundleURIs(definition);
+		Set<URI> fragments = new HashSet<>();
 		TargetBundle[] bundles = definition.getBundles();
 		for (TargetBundle bundle : bundles) {
 			if (bundle.isFragment()) {
-				fragments.add(new File(bundle.getBundleInfo().getLocation()).toURL());
+				fragments.add(bundle.getBundleInfo().getLocation());
 			}
 		}
 
位置:  -93,13 +93,13   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 		IPluginModelBase[] models = TargetPlatformHelper.getPDEState().getTargetModels();
 
 		// should be equivalent
-		assertEquals(
+		assertEquals(
 		for (IPluginModelBase model : models) {
 			String location = model.getInstallLocation();
-			URL url = new File(location).toURL();
-			assertTrue(
+			URI uri = new File(location).toURI();
+			assertTrue(
 			if (model.isFragmentModel()) {
-				assertTrue(
+				assertTrue(
 			}
 		}
 		assertTrue(
位置:  -117,17 +117,14   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 		ITargetDefinition definition = getNewTarget();
 		ITargetLocation container = getTargetService().newProfileLocation(TargetPlatform.getDefaultLocation(), null);
 		definition.setTargetLocations(new ITargetLocation[]{container});
-		Set<URL> urls = getAllBundleURLs(definition);
+		Set<URI> uris = getAllBundleURIs(definition);
 
 		// the old way
 		IPath location = new Path(TargetPlatform.getDefaultLocation());
-		URL[] pluginPaths = P2Utils.readBundlesTxt(location.toOSString(), location.append(
+		URL[] pluginPaths = P2Utils.readBundlesTxt(location.toOSString(),
+				location.append(
 		// pluginPaths will be null (and NPE) when self-hosting and the target platform is not a real installation
-		assertEquals(
-		for (URL url : pluginPaths) {
-			assertTrue(
-		}
-
+		assertBundlePathsEqual(pluginPaths, uris);
 	}
 
 	/**
位置:  -242,17 +239,14   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 		ITargetDefinition definition = getNewTarget();
 		ITargetLocation container = getTargetService().newProfileLocation(
 		definition.setTargetLocations(new ITargetLocation[]{container});
-		Set<URL> urls = getAllBundleURLs(definition);
+		Set<URI> uris = getAllBundleURIs(definition);
 
 		// the old way
 		IPath location = new Path(TargetPlatform.getDefaultLocation());
-		URL[] pluginPaths = P2Utils.readBundlesTxt(location.toOSString(), location.append(
+		URL[] pluginPaths = P2Utils.readBundlesTxt(location.toOSString(),
+				location.append(
 		// pluginPaths will be null (and NPE) when self-hosting and the target platform is not a real installation
-		assertEquals(
-		for (URL url : pluginPaths) {
-			assertTrue(
-		}
-
+		assertBundlePathsEqual(pluginPaths, uris);
 	}
 
 	/**
位置:  -268,17 +262,14   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 		ITargetDefinition definition = getNewTarget();
 		ITargetLocation container = getTargetService().newProfileLocation(
 		definition.setTargetLocations(new ITargetLocation[]{container});
-		Set<URL> urls = getAllBundleURLs(definition);
+		Set<URI> uris = getAllBundleURIs(definition);
 
 		// the old way
 		IPath location = new Path(TargetPlatform.getDefaultLocation());
-		URL[] pluginPaths = P2Utils.readBundlesTxt(location.toOSString(), location.append(
+		URL[] pluginPaths = P2Utils.readBundlesTxt(location.toOSString(),
+				location.append(
 		// pluginPaths will be null (and NPE) when self-hosting and the target platform is not a real installation
-		assertEquals(
-		for (URL url : pluginPaths) {
-			assertTrue(
-		}
-
+		assertBundlePathsEqual(pluginPaths, uris);
 	}
 
 	/**
位置:  -296,15 +287,11   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 		ITargetLocation container = getTargetService().newProfileLocation(TargetPlatform.getDefaultLocation(),
 				new File(Platform.getConfigurationLocation().getURL().getFile()).getAbsolutePath());
 		definition.setTargetLocations(new ITargetLocation[]{container});
-		Set<URL> urls = getAllBundleURLs(definition);
+		Set<URI> uris = getAllBundleURIs(definition);
 
 		// the old way
 		URL[] pluginPaths = PluginPathFinder.getPluginPaths(TargetPlatform.getDefaultLocation(), true);
-		for (URL url : pluginPaths) {
-			assertTrue(
-		}
-		assertEquals(
-
+		assertBundlePathsEqual(pluginPaths, uris);
 	}
 
 	/**
位置:  -317,14 +304,11   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 		ITargetDefinition definition = getNewTarget();
 		ITargetLocation container = getTargetService().newDirectoryLocation(TargetPlatform.getDefaultLocation() + 
 		definition.setTargetLocations(new ITargetLocation[]{container});
-		Set<URL> urls = getAllBundleURLs(definition);
+		Set<URI> uris = getAllBundleURIs(definition);
 
 		// the old way
 		URL[] pluginPaths = PluginPathFinder.getPluginPaths(TargetPlatform.getDefaultLocation(), false);
-		assertEquals(
-		for (URL url : pluginPaths) {
-			assertTrue(
-		}
+		assertBundlePathsEqual(pluginPaths, uris);
 	}
 
 	/**
位置:  -338,14 +322,11   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 		ITargetDefinition definition = getNewTarget();
 		ITargetLocation container = getTargetService().newDirectoryLocation(
 		definition.setTargetLocations(new ITargetLocation[]{container});
-		Set<URL> urls = getAllBundleURLs(definition);
+		Set<URI> uris = getAllBundleURIs(definition);
 
 		// the old way
 		URL[] pluginPaths = PluginPathFinder.getPluginPaths(TargetPlatform.getDefaultLocation(), false);
-		assertEquals(
-		for (URL url : pluginPaths) {
-			assertTrue(
-		}
+		assertBundlePathsEqual(pluginPaths, uris);
 	}
 
 	/**
位置:  -650,6 +631,12   public class LocalTargetDefinitionTests extends AbstractTargetTest {
 		assertTrue(
 	}
 
+	protected void assertBundlePathsEqual(URL[] legacyPluginPaths, Set<URI> bundleUris) throws URISyntaxException {
+		for (URL legacyPluginPath : legacyPluginPaths) {
+			assertTrue(
+		}
+		assertEquals(
+	}
 
 	/**
 	 * Reads a target definition file from the tests/targets/target-files location

---------------------------53---------------------------
需求名称: Don't use the deprecated setSorter, use setComparator instead.
创建时间: 2019-10-15	02:05:25
修改时间: 2019-10-15	02:05:25

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/FeatureSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/FeatureSection.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2005, 2017 IBM Corporation and others.
+ * Copyright (c) 2005, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -116,7 +116,7   public class FeatureSection extends TableSection implements IPropertyChangeListe
 		fFeatureTable = tablePart.getTableViewer();
 		fFeatureTable.setContentProvider(new ContentProvider());
 		fFeatureTable.setLabelProvider(PDEPlugin.getDefault().getLabelProvider());
-		fFeatureTable.setSorter(null);
+		fFeatureTable.setComparator(null);
 		GridData data = (GridData) tablePart.getControl().getLayoutData();
 		data.minimumWidth = 200;
 		fFeatureTable.setInput(PDECore.getDefault().getFeatureModelManager());

---------------------------54---------------------------
需求名称: Remove unnecessary NON-NLS.
创建时间: 2019-10-11	01:52:36
修改时间: 2019-10-11	02:35:07

原文件: ds/org.eclipse.pde.ds.core/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.core/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ds.core;singleton:=true
-Bundle-Version: 1.1.600.qualifier
+Bundle-Version: 1.1.700.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ds.core.Activator
 Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.core.filebuffers;bundle-version=

原文件: ds/org.eclipse.pde.ds.core/pom.xml 
新文件: ds/org.eclipse.pde.ds.core/pom.xml
位置:  -20,6 +20,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.core</artifactId>
-  <version>1.1.600-SNAPSHOT</version>
+  <version>1.1.700-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/text/DSDocumentFactory.java 
新文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/text/DSDocumentFactory.java
位置:  -49,7 +49,7   public class DSDocumentFactory extends DocumentNodeFactory implements
 
 		// TODO this logic needs to be pushed up somehow... we shouldn't care
 		// about the namespace prefix
-		int index = name.indexOf(':'); //$NON-NLS-1$
+		int index = name.indexOf(':'); 
 		if (index != -1) {
 			name = name.substring(index + 1);
 		}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/NLResourceHelper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/NLResourceHelper.java
位置:  -83,7 +83,7   public class NLResourceHelper {
 			return s.substring(1);
 		}
 
-		int ix = s.indexOf(' '); //$NON-NLS-1$
+		int ix = s.indexOf(' '); 
 		String key = ix == -1 ? s : s.substring(0, ix);
 		String dflt = ix == -1 ? s : s.substring(ix + 1);
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ExtensionsErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ExtensionsErrorReporter.java
位置:  -622,7 +622,7   public class ExtensionsErrorReporter extends ManifestErrorReporter {
 
 		// be careful: people have the option to use the format:
 		// fullqualifiedName:staticMethod
-		int index = value.indexOf(':'); //$NON-NLS-1$
+		int index = value.indexOf(':'); 
 		if (index != -1) {
 			value = value.substring(0, index);
 		}

原文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/DocumentHandler.java 
新文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/DocumentHandler.java
位置:  -182,7 +182,7   public abstract class DocumentHandler extends DefaultHandler {
 
 		int index = lineText.indexOf(
 		if (index == -1) {
-			index = lineText.indexOf('>'); //$NON-NLS-1$
+			index = lineText.indexOf('>'); 
 			if (index == -1) {
 				endIndex = column;
 			} else {

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/EquinoxInitializer.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/EquinoxInitializer.java
位置:  -75,7 +75,7   public class EquinoxInitializer extends OSGiLaunchConfigurationInitializer {
 	protected String getAutoStart(String bundleID) {
 		if (fStartLevels.containsKey(bundleID)) {
 			String value = fStartLevels.get(bundleID).toString();
-			return value.substring(value.indexOf(':') + 1); //$NON-NLS-1$
+			return value.substring(value.indexOf(':') + 1); 
 		}
 		return super.getAutoStart(bundleID);
 	}
位置:  -84,7 +84,7   public class EquinoxInitializer extends OSGiLaunchConfigurationInitializer {
 	protected String getStartLevel(String bundleID) {
 		if (fStartLevels.containsKey(bundleID)) {
 			String value = fStartLevels.get(bundleID).toString();
-			return value.substring(0, value.indexOf(':')); //$NON-NLS-1$
+			return value.substring(0, value.indexOf(':')); 
 		}
 		return super.getStartLevel(bundleID);
 	}
位置:  -99,7 +99,7   public class EquinoxInitializer extends OSGiLaunchConfigurationInitializer {
 				StringTokenizer tokenizer = new StringTokenizer(value, 
 				while (tokenizer.hasMoreTokens()) {
 					String tokenValue = tokenizer.nextToken();
-					int index = tokenValue.indexOf('@'); //$NON-NLS-1$
+					int index = tokenValue.indexOf('@'); 
 					if (index > 0) {
 						String bundle = tokenValue.substring(0, index).trim();
 						fStartLevels.put(bundle, getStartValue(tokenValue.substring(index)));

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/compare/ManifestStructureCreator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/compare/ManifestStructureCreator.java
位置:  -128,7 +128,7   public class ManifestStructureCreator extends StructureCreator {
 	}
 
 	private String extractKey(String headerBuffer) {
-		int assign = headerBuffer.indexOf(':'); //$NON-NLS-1$
+		int assign = headerBuffer.indexOf(':'); 
 		if (assign != -1)
 			return headerBuffer.substring(0, assign);
 		return headerBuffer;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/FeatureSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/FeatureSelectionDialog.java
位置:  -58,7 +58,7   public class FeatureSelectionDialog extends FilteredItemsSelectionDialog {
 		public FeatureSearchItemsFilter() {
 			super();
 			String pattern = patternMatcher.getPattern();
-			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {
 				pattern = 
 				patternMatcher.setPattern(pattern);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/PluginSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/PluginSelectionDialog.java
位置:  -44,7 +44,7   public class PluginSelectionDialog extends FilteredItemsSelectionDialog {
 		public PluginSearchItemsFilter() {
 			super();
 			String pattern = patternMatcher.getPattern();
-			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {
 				pattern = 
 				patternMatcher.setPattern(pattern);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExportPackageSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExportPackageSection.java
位置:  -112,9 +112,9   public class ExportPackageSection extends TableSection {
 				String s1 = e1.toString();
 				String s2 = e2.toString();
 				if (s1.contains(
-					s1 = s1.substring(0, s1.indexOf(' ')); //$NON-NLS-1$
+					s1 = s1.substring(0, s1.indexOf(' ')); 
 				if (s2.contains(
-					s2 = s2.substring(0, s2.indexOf(' ')); //$NON-NLS-1$
+					s2 = s2.substring(0, s2.indexOf(' ')); 
 				return super.compare(viewer, s1, s2);
 			}
 		});

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/FragmentGeneralInfoSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/FragmentGeneralInfoSection.java
位置:  -371,7 +371,7   public class FragmentGeneralInfoSection extends GeneralInfoSection {
 			return;
 		}
 		version = version.trim();
-		int comInd = version.indexOf(','); //$NON-NLS-1$
+		int comInd = version.indexOf(','); 
 		int lastPos = version.length() - 1;
 		char first = version.charAt(0);
 		char last = version.charAt(lastPos);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ImportPackageSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ImportPackageSection.java
位置:  -195,9 +195,9   public class ImportPackageSection extends TableSection {
 				String s1 = e1.toString();
 				String s2 = e2.toString();
 				if (s1.contains(
-					s1 = s1.substring(0, s1.indexOf(' ')); //$NON-NLS-1$
+					s1 = s1.substring(0, s1.indexOf(' ')); 
 				if (s2.contains(
-					s2 = s2.substring(0, s2.indexOf(' ')); //$NON-NLS-1$
+					s2 = s2.substring(0, s2.indexOf(' ')); 
 				return super.compare(viewer, s1, s2);
 			}
 		});

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizardPage.java
位置:  -124,7 +124,7   public class JavaAttributeWizardPage extends NewClassWizardPage {
 	private void initializeExpectedValues() {
 
 		//			source folder name, package name, class name
-		int loc = className.indexOf(':'); //$NON-NLS-1$
+		int loc = className.indexOf(':'); 
 		if (loc != -1) {
 			if (loc < className.length()) {
 				initialValues.classArgs = className.substring(loc + 1, className.length());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schem
原文件: SchemaJavaAttributeDetails.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaJavaAttributeDetails.java
位置:  -63,7 +63,7   public class SchemaJavaAttributeDetails extends SchemaAttributeDetails {
 
 		String basedOn = getAttribute().getBasedOn();
 		if ((basedOn != null) &amp;&amp; (basedOn.length() > 0)) {
-			int index = basedOn.indexOf(':'); //$NON-NLS-1$
+			int index = basedOn.indexOf(':'); 
 			if (index == -1) {
 				String className = basedOn.substring(basedOn.lastIndexOf(
 				if ((className.length() > 1) &amp;&amp; (className.charAt(0) == 'I')) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java
位置:  -183,7 +183,7   public class EnvironmentSection extends SectionPart {
 						if (value == null) {
 							getTarget().setNL(null);
 						} else {
-							int index = value.indexOf('-'); //$NON-NLS-1$
+							int index = value.indexOf('-'); 
 							if (index > 0)
 								value = value.substring(0, index);
 							getTarget().setNL(value.trim());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TextUtil.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TextUtil.java
位置:  -142,7 +142,7   public abstract class TextUtil {
 		value = value.trim();
 		while (value.length() > 0 &amp;&amp; !Character.isLetter(value.charAt(0)))
 			value = value.substring(1, value.length());
-		int loc = value.indexOf(':'); //$NON-NLS-1$
+		int loc = value.indexOf(':'); 
 		if (loc != -1 &amp;&amp; loc > 0)
 			value = value.substring(0, loc);
 		else if (loc == 0)

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java
位置:  -106,7 +106,7   public class PointSelectionPage extends BaseWizardSelectionPage {
 		private String wMatch = 
 
 		protected void setMatchText(String match) {
-			if (match.indexOf('*') != 0 &amp; match.indexOf('?') != 0 &amp; match.indexOf('.') != 0) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+			if (match.indexOf('*') != 0 &amp; match.indexOf('?') != 0 &amp; match.indexOf('.') != 0) { 
 				match = 
 			}
 			wMatch = match + 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionContentPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionContentPage.java
位置:  -345,7 +345,7   public class TargetDefinitionContentPage extends TargetDefinitionPage {
 		fNLCombo = SWTFactory.createCombo(group, SWT.SINGLE | SWT.BORDER, 1, fNLChoices.toArray(new String[fNLChoices.size()]));
 		fNLCombo.addModifyListener(e -> {
 			String value = fNLCombo.getText();
-			int index = value.indexOf('-'); //$NON-NLS-1$
+			int index = value.indexOf('-'); 
 			if (index > 0)
 				value = value.substring(0, index);
 			getTargetDefinition().setNL(getModelValue(value));

---------------------------55---------------------------
需求名称: Bug 552020 - Replace Navigator with Project Explorer in Show In
创建时间: 2019-10-11	01:51:39
修改时间: 2019-10-11	01:51:39

原文件: u
原文件: org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/u
原文件: ui/editor/ctxhelp/CtxHelpEditor.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/editor/ctxhelp/CtxHelpEditor.java
位置:  -161,7 +161,7   public class CtxHelpEditor extends MultiSourceEditor {
 	 * @return the <code>IShowInTargetList</code>
 	 */
 	private IShowInTargetList getShowInTargetList() {
-		return () -> new String[] { JavaUI.ID_PACKAGES, IPageLayout.ID_RES_NAV };
+		return () -> new String[] { JavaUI.ID_PACKAGES, IPageLayout.ID_PROJECT_EXPLORER };
 	}
 
 	@Override

原文件: u
原文件: org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/u
原文件: ui/editor/toc/TocEditor.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/editor/toc/TocEditor.java
位置:  -175,7 +175,7   public class TocEditor extends MultiSourceEditor {
 	 * @return the <code>IShowInTargetList</code>
 	 */
 	private IShowInTargetList getShowInTargetList() {
-		return () -> new String[] { JavaUI.ID_PACKAGES, IPageLayout.ID_RES_NAV };
+		return () -> new String[] { JavaUI.ID_PACKAGES, IPageLayout.ID_PROJECT_EXPLORER };
 	}
 
 	@Override

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDESourcePage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDESourcePage.java
位置:  -641,7 +641,7   public abstract class PDESourcePage extends TextEditor implements IFormPage, IGo
 	 * @return the <code>IShowInTargetList</code>
 	 */
 	protected IShowInTargetList getShowInTargetList() {
-		return () -> new String[] {JavaUI.ID_PACKAGES, IPageLayout.ID_RES_NAV};
+		return () -> new String[] { JavaUI.ID_PACKAGES, IPageLayout.ID_PROJECT_EXPLORER };
 	}
 
 	/**

---------------------------56---------------------------
需求名称: Bug 291671 - Improve Declarative Service template
创建时间: 2019-10-03	06:16:13
修改时间: 2019-10-03	06:16:13

原文件: ui/org.eclipse.pde.ui.templates/templates_3.1/helloOSGiServiceComponent/jav
原文件: ServiceComponent.java 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.1/helloOSGiServiceComponent/java/ServiceComponent.java
位置:  -5,10 +5,12   import org.eclipse.osgi.framework.console.CommandProvider;
 
 import org.osgi.service.component.annotations.*;
 
+import java.util.concurrent.atomic.AtomicReference;
+
 @Component
 public class ServiceComponent implements CommandProvider {
 
-	private DictionaryService dictionary;
+	final AtomicReference<DictionaryService> dictionaryRef = new AtomicReference<>();
 
 	public void _$command$(CommandInterpreter ci) {
 		String arg = ci.nextArgument();
位置:  -17,14 +19,14   public class ServiceComponent implements CommandProvider {
 			return;
 		}
 		if (arg.equalsIgnoreCase(
-			if(word != null &amp;&amp; dictionary.check(word)) {
+			if(word != null &amp;&amp; dictionaryRef.get().check(word)) {
 				ci.println(word + 
 			} else {
 				ci.println(word + 
 			}
 		}
 		if (arg.equalsIgnoreCase(
-			String[] langs = dictionary.getLanguages();
+			String[] langs = dictionaryRef.get().getLanguages();
 			for(int i = 0; i < langs.length; i++) {
 				ci.println(
 				ci.println(
位置:  -43,11 +45,11   public class ServiceComponent implements CommandProvider {
 
 	@Reference
 	public void setDictionary(DictionaryService d) {
-		dictionary = d;
+		dictionaryRef.set(d);
 	}
 
 	public void unsetDictionary(DictionaryService d) {
-		dictionary = null;
+		dictionaryRef.compareAndSet(d, null);
 	}
 
 }
\ No newline at end of file

---------------------------57---------------------------
需求名称: Bug 551549 - Make Automatic-Module-Name as bold in manifest editor
创建时间: 2019-09-27	03:02:23
修改时间: 2019-10-03	05:35:09

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/ManifestConfiguration.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/ManifestConfiguration.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2005, 2015 IBM Corporation and others.
+ * Copyright (c) 2005, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -86,6 +86,7   public class ManifestConfiguration extends ChangeAwareSourceViewerConfiguration
 			rule.addWord(ICoreConstants.IMPORT_SERVICE, fToken);
 			rule.addWord(ICoreConstants.PROVIDE_PACKAGE, fToken);
 			rule.addWord(Constants.BUNDLE_ACTIVATIONPOLICY, fToken);
+			rule.addWord(
 			setRules(new IRule[] {rule});
 			setDefaultReturnToken(new Token(createTextAttribute(IPDEColorConstants.P_HEADER_KEY)));
 		}

---------------------------58---------------------------
需求名称: Bug 551581 - Fix files that have ended up with CRLF in the git
创建时间: 2019-09-30	04:55:00
修改时间: 2019-09-30	08:53:48

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/NameVersionDescriptor.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/NameVersionDescriptor.java
位置:  -75,7 +75,7   public class NameVersionDescriptor {
 		}
 		fType = type;
 	}
-
+
 	@Override
 	public boolean equals(Object obj) {
 		if (obj instanceof NameVersionDescriptor) {
位置:  -86,7 +86,7   public class NameVersionDescriptor {
 		}
 		return false;
 	}
-
+
 	@Override
 	public int hashCode() {
 		return fId.hashCode() + (fVersion != null ? fVersion.hashCode() : 0);
位置:  -103,7 +103,7   public class NameVersionDescriptor {
 	public String getType() {
 		return fType;
 	}
-
+
 	@Override
 	public String toString() {
 		StringBuilder buf = new StringBuilder();

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/TargetFeature.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/TargetFeature.java
位置:  -145,7 +145,7   public class TargetFeature {
 		}
 		featureModel = ExternalFeatureModelManager.createModel(featureXML);
 	}
-
+
 	@Override
 	public String toString() {
 		StringBuilder result = new StringBuilder();

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/IULocationFactory.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/IULocationFactory.java
位置:  -39,7 +39,7   import org.w3c.dom.NodeList;
  *
  */
 public class IULocationFactory implements ITargetLocationFactory {
-
+
 	@Override
 	public ITargetLocation getTargetLocation(String type, String serializedXML) throws CoreException {
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDEFormPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDEFormPage.java
位置:  -260,7 +260,7   public abstract class PDEFormPage extends FormPage {
 				((IContextPart) part).cancelEdit();
 		}
 	}
-
+
 	@Override
 	public void createPartControl(Composite parent) {
 		super.createPartControl(parent);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/ArgumentsSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/ArgumentsSection.java
位置:  -179,21 +179,21   public class ArgumentsSection extends SectionPart {
 		toolkit.paintBordersFor(client);
 		section.setClient(client);
 	}
-
+
 	@Override
 	public void refresh() {
 		fProgramArguments.setValue(getTarget().getProgramArguments(), true);
 		fVMArguments.setValue(getTarget().getVMArguments(), true);
 		super.refresh();
 	}
-
+
 	@Override
 	public void commit(boolean onSave) {
 		fProgramArguments.commit();
 		fVMArguments.commit();
 		super.commit(onSave);
 	}
-
+
 	@Override
 	public void dispose() {
 		if (fImage != null)

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentPage.java
位置:  -39,7 +39,7   public class EnvironmentPage extends FormPage {
 	public EnvironmentPage(FormEditor editor) {
 		super(editor, PAGE_ID, PDEUIMessages.EnvironmentPage_title);
 	}
-
+
 	@Override
 	protected void createFormContent(IManagedForm managedForm) {
 		super.createFormContent(managedForm);
位置:  -56,7 +56,7   public class EnvironmentPage extends FormPage {
 		PlatformUI.getWorkbench().getHelpSystem().setHelp(form.getBody(), IHelpContextIds.TARGET_EDITOR_ENVIRONMENT_PAGE);
 		PlatformUI.getWorkbench().getHelpSystem().setHelp(form, IHelpContextIds.TARGET_EDITOR_ENVIRONMENT_PAGE);
 	}
-
+
 	@Override
 	public void dispose() {
 		PDEPlugin.getDefault().getLabelProvider().disconnect(this);
位置:  -72,7 +72,7   public class EnvironmentPage extends FormPage {
 		managedForm.addPart(new ArgumentsSection(this, body));
 		managedForm.addPart(new ImplicitDependenciesSection(this, body));
 	}
-
+
 	@Override
 	public boolean canLeaveThePage() {
 		((TargetEditor) getEditor()).setDirty(isDirty());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/JRESection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/JRESection.java
位置:  -172,7 +172,7   public class JRESection extends SectionPart {
 		fNamedJREsCombo.setEnabled(fNamedJREButton.getSelection());
 		fExecEnvsCombo.setEnabled(fExecEnvButton.getSelection());
 	}
-
+
 	@Override
 	public void refresh() {
 		fBlockChanges = true;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/IUContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/IUContentProvider.java
位置:  -28,12 +28,12   import org.eclipse.pde.internal.core.target.P2TargetUtils;
  *
  */
 public class IUContentProvider implements ITreeContentProvider {
-
+
 	@Override
 	public Object[] getElements(Object inputElement) {
 		return null;
 	}
-
+
 	@Override
 	public Object[] getChildren(Object parentElement) {
 		IUBundleContainer location = (IUBundleContainer) parentElement;
位置:  -58,7 +58,7   public class IUContentProvider implements ITreeContentProvider {
 		}
 		return new Object[0];
 	}
-
+
 	@Override
 	public Object getParent(Object element) {
 		if (element instanceof IUWrapper) {
位置:  -66,7 +66,7   public class IUContentProvider implements ITreeContentProvider {
 		}
 		return null;
 	}
-
+
 	@Override
 	public boolean hasChildren(Object element) {
 		return false;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/InstallableUnitWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/InstallableUnitWizard.java
位置:  -44,12 +44,12   public class InstallableUnitWizard extends Wizard implements ITargetLocationWiza
 	public InstallableUnitWizard() {
 		setWindowTitle(Messages.AddBundleContainerSelectionPage_1);
 	}
-
+
 	@Override
 	public void setTarget(ITargetDefinition target) {
 		fTarget = target;
 	}
-
+
 	@Override
 	public void addPages() {
 		IDialogSettings settings = PDEPlugin.getDefault().getDialogSettings().getSection(SETTINGS_SECTION);
位置:  -59,13 +59,13   public class InstallableUnitWizard extends Wizard implements ITargetLocationWiza
 		setDialogSettings(settings);
 		addPage(new EditIUContainerPage(fTarget));
 	}
-
+
 	@Override
 	public boolean performFinish() {
 		fLocation = ((EditIUContainerPage) getPages()[0]).getBundleContainer();
 		return true;
 	}
-
+
 	@Override
 	public ITargetLocation[] getLocations() {
 		return new ITargetLocation[] {fLocation};

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/TargetLocationLabelProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/TargetLocationLabelProvider.java
位置:  -28,14 +28,14   public class TargetLocationLabelProvider extends StyledBundleLabelProvider {
 	public TargetLocationLabelProvider(boolean showVersion, boolean appendResolvedVariables) {
 		super(showVersion, appendResolvedVariables);
 	}
-
+
 	@Override
 	public void update(ViewerCell cell) {
 		Object element = cell.getElement();
 		cell.setText(getText(element));
 		cell.setImage(getImage(element));
 	}
-
+
 	@Override
 	public Image getImage(Object element) {
 		ILabelProvider provider = Platform.getAdapterManager().getAdapter(element, ILabelProvider.class);
位置:  -47,7 +47,7   public class TargetLocationLabelProvider extends StyledBundleLabelProvider {
 
 		return super.getImage(element);
 	}
-
+
 	@Override
 	public String getText(Object element) {
 		ILabelProvider provider = Platform.getAdapterManager().getAdapter(element, ILabelProvider.class);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/EditTargetDefinitionWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/EditTargetDefinitionWizard.java
位置:  -44,7 +44,7   public class EditTargetDefinitionWizard extends Wizard {
 		setTargetDefinition(definition, createWorkingCopy);
 		setNeedsProgressMonitor(true);
 	}
-
+
 	@Override
 	public boolean performFinish() {
 		// update the cache to remove all other targets with same handle except
位置:  -82,7 +82,7   public class EditTargetDefinitionWizard extends Wizard {
 		}
 		return true;
 	}
-
+
 	@Override
 	public void addPages() {
 		addPage(new TargetDefinitionContentPage(fDefinition));

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/EditTargetNode.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/EditTargetNode.java
位置:  -27,7 +27,7   public class EditTargetNode implements IWizardNode {
 
 	private EditTargetDefinitionWizard fWizard;
 	private ITargetDefinition fDefinition;
-
+
 	@Override
 	public void dispose() {
 		if (fWizard != null) {
位置:  -36,12 +36,12   public class EditTargetNode implements IWizardNode {
 			fDefinition = null;
 		}
 	}
-
+
 	@Override
 	public Point getExtent() {
 		return new Point(-1, -1);
 	}
-
+
 	@Override
 	public IWizard getWizard() {
 		if (fWizard == null) {
位置:  -50,7 +50,7   public class EditTargetNode implements IWizardNode {
 		}
 		return fWizard;
 	}
-
+
 	@Override
 	public boolean isContentCreated() {
 		return fWizard != null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetCreationPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetCreationPage.java
位置:  -63,7 +63,7   public class TargetCreationPage extends WizardSelectionPage {
 	protected ITargetPlatformService getTargetService() {
 		return PDECore.getDefault().acquireService(ITargetPlatformService.class);
 	}
-
+
 	@Override
 	public void createControl(Composite parent) {
 		Composite comp = SWTFactory.createComposite(parent, 2, 1, GridData.FILL_BOTH);
位置:  -204,7 +204,7   public class TargetCreationPage extends WizardSelectionPage {
 			service.loadTargetDefinition(definition, id);
 		}
 	}
-
+
 	@Override
 	public IWizardPage getNextPage() {
 		ITargetDefinition target = null;

---------------------------59---------------------------
需求名称: Revert "Bug 550962 - Align PDE feature version with Platform SDK"
创建时间: 2019-09-30	04:24:50
修改时间: 2019-09-30	08:14:22

原文件: features/org.eclipse.pde-feature/feature.xml 
新文件: features/org.eclipse.pde-feature/feature.xml
位置:  -2,7 +2,7  
 <feature
       id=
       label=
-      version=
+      version=
       provider-name=
       license-feature=
       license-feature-version=

原文件: features/org.eclipse.pde-feature/pom.xml 
新文件: features/org.eclipse.pde-feature/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde.feature</groupId>
   <artifactId>org.eclipse.pde</artifactId>
-  <version>4.14.0-SNAPSHOT</version>
+  <version>3.14.200-SNAPSHOT</version>
   <packaging>eclipse-feature</packaging>
 
   <build>

---------------------------60---------------------------
需求名称: Bug 551538 - Shorter text for "Could not launch"
创建时间: 2019-09-27	12:08:41
修改时间: 2019-09-30	04:23:29

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/pderesources.properties 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/pderesources.properties
位置:  -12,7 +12,7  
 #     EclipseSource Corporation - initial API and implementation
 ###############################################################################
 
-LauncherUtils_cannotLaunchApplication=Could not launch the application because the associated workspace is currently in use by another Eclipse application.\n\n{0}
+LauncherUtils_cannotLaunchApplication=Could not launch as the workspace is used by another Eclipse application.\n\n{0}
 
 Launcher_error_code13=The application could not start. Details can be found in the log.
 Launcher_error_code15=Could not launch the configuration because the associated workspace is currently in use.

---------------------------61---------------------------
需求名称: Bug 551581 - Fix files that have ended up with CRLF in the git
创建时间: 2019-09-28	00:21:02
修改时间: 2019-09-29	08:36:57

原文件: apitools/org.eclipse.pde.api.tools.annotations/.settings/org.eclipse.jdt.core.prefs 
新文件: apitools/org.eclipse.pde.api.tools.annotations/.settings/org.eclipse.jdt.core.prefs
位置:  -1,414 +1,414  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
-org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
-org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
-org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
-org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
-org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=100
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=warning
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=error
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=ignore
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=ignore
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDefaultCase=warning
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=warning
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=all_standard_tags
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=error
-org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
-org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=warning
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=error
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=enabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=error
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=warning
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.compiler.taskCaseSensitive=enabled
-org.eclipse.jdt.core.compiler.taskPriorities=NORMAL,HIGH,NORMAL,HIGH,HIGH
-org.eclipse.jdt.core.compiler.taskTags=TODO,FIXME,XXX,EXPERIMENTAL,CONTEXTLAUNCHING
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=120
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_on_off_tags=false
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
-org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=100
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=warning
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=error
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=ignore
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=ignore
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=warning
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=warning
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=all_standard_tags
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=error
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=warning
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=error
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=enabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=error
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=warning
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.compiler.taskCaseSensitive=enabled
+org.eclipse.jdt.core.compiler.taskPriorities=NORMAL,HIGH,NORMAL,HIGH,HIGH
+org.eclipse.jdt.core.compiler.taskTags=TODO,FIXME,XXX,EXPERIMENTAL,CONTEXTLAUNCHING
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=120
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error
+org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter

原文件: apitools/org.eclipse.pde.api.tools.annotations/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.annotations/META-INF/MANIFEST.MF
位置:  -1,7 +1,7  
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.api.tools.annotations;singleton:=true
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %Bundle-Vendor
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Export-Package: org.eclipse.pde.api.tools.annotations

原文件: apitools/org.eclipse.pde.api.tools.annotations/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools.annotations/pom.xml
位置:  -15,7 +15,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools.annotations</artifactId>
-  <version>1.1.300-SNAPSHOT</version>
+  <version>1.1.400-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <defaultSigning-excludeInnerJars>true</defaultSigning-excludeInnerJars>

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.cdcfoundation10
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentcdcfoundation10

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.cdcfoundation11
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentcdcfoundation11

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.j2se12
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se12

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.j2se13
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se13

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.j2se14
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se14

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.j2se15
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se15

原文件: apitools/org.eclipse.pde.api.tools.ee.javase16/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase16/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.javase16/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase16/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.javase16
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase16

原文件: apitools/org.eclipse.pde.api.tools.ee.javase17/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase17/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.javase17/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase17/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.javase17
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase17

原文件: apitools/org.eclipse.pde.api.tools.ee.javase18/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase18/.project
位置:  -1,22 +1,22  
-<?xml version=
-<projectDescription>
-	<name>org.eclipse.pde.api.tools.ee.javase18</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.pde.ManifestBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.SchemaBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.pde.PluginNature</nature>
-	</natures>
-</projectDescription>
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.pde.api.tools.ee.javase18</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+	</natures>
+</projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase18/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase18/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.javase18/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase18/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.javase18
-Bundle-Version: 1.1.400.qualifier
+Bundle-Version: 1.1.500.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase18

原文件: apitools/org.eclipse.pde.api.tools.ee.javase18/build.properties 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase18/build.properties
位置:  -1,20 +1,20  
-###############################################################################
-# Copyright (c) 2014 IBM Corporation and others.
-#
-# This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License 2.0
-# which accompanies this distribution, and is available at
-# https://www.eclipse.org/legal/epl-2.0/
-#
-# SPDX-License-Identifier: EPL-2.0
-#
-# Contributors:
-#     IBM Corporation - initial API and implementation
-###############################################################################
-source.. = src/
-output.. = bin/
-bin.includes = META-INF/,\
-               .,\
-               OSGI-INF/l10n/bundle.properties,\
-               OSGI-INF/,\
-               about.html
+###############################################################################
+# Copyright (c) 2014 IBM Corporation and others.
+#
+# This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License 2.0
+# which accompanies this distribution, and is available at
+# https://www.eclipse.org/legal/epl-2.0/
+#
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+#     IBM Corporation - initial API and implementation
+###############################################################################
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .,\
+               OSGI-INF/l10n/bundle.properties,\
+               OSGI-INF/,\
+               about.html

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.classpath 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.classpath
位置:  -1,7 +1,7  
-<?xml version=
-<classpath>
-	<classpathentry kind=
-	<classpathentry kind=
-	<classpathentry kind=
-	<classpathentry kind=
-</classpath>
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+</classpath>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.project
位置:  -1,22 +1,22  
-<?xml version=
-<projectDescription>
-	<name>org.eclipse.pde.api.tools.ee.javase9</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.pde.ManifestBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.SchemaBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.pde.PluginNature</nature>
-	</natures>
-</projectDescription>
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.pde.api.tools.ee.javase9</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+	</natures>
+</projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.settings/org.eclipse.jdt.core.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.settings/org.eclipse.jdt.core.prefs
位置:  -1,7 +1,7  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.source=1.8
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.javase9
-Bundle-Version: 1.0.200.qualifier
+Bundle-Version: 1.0.300.qualifier
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase9
 Bundle-Vendor: %Bundle-Vendor

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/build.properties 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/build.properties
位置:  -1,20 +1,20  
-###############################################################################
-# Copyright (c) 2018 IBM Corporation and others.
-#
-# This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License 2.0
-# which accompanies this distribution, and is available at
-# https://www.eclipse.org/legal/epl-2.0/
-#
-# SPDX-License-Identifier: EPL-2.0
-#
-# Contributors:
-#     IBM Corporation - initial API and implementation
-###############################################################################
-source.. = src/
-output.. = bin/
-bin.includes = META-INF/,\
-               .,\
-               OSGI-INF/l10n/bundle.properties,\
-               OSGI-INF/,\
-               about.html
+###############################################################################
+# Copyright (c) 2018 IBM Corporation and others.
+#
+# This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License 2.0
+# which accompanies this distribution, and is available at
+# https://www.eclipse.org/legal/epl-2.0/
+#
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+#     IBM Corporation - initial API and implementation
+###############################################################################
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .,\
+               OSGI-INF/l10n/bundle.properties,\
+               OSGI-INF/,\
+               about.html

原文件: apitools/org.eclipse.pde.api.tools.ee.jre11/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.jre11/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.jre11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.jre11/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.jre11
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjre11

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.osgiminimum10
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum10

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.osgiminimum11
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum11

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/.settings/org.eclipse.core.runtime.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %fragmentName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ee.osgiminimum12
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Vendor: %providerName
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum12

原文件: apitools/org.eclipse.pde.api.tools.generator/.project 
新文件: apitools/org.eclipse.pde.api.tools.generator/.project
位置:  -1,34 +1,34  
-<?xml version=
-<projectDescription>
-	<name>org.eclipse.pde.api.tools.generator</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.ManifestBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.SchemaBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
-	</natures>
-</projectDescription>
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.pde.api.tools.generator</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
+	</natures>
+</projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.generator/.settings/org.eclipse.jdt.core.prefs 
新文件: apitools/org.eclipse.pde.api.tools.generator/.settings/org.eclipse.jdt.core.prefs
位置:  -1,427 +1,427  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
-org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
-org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
-org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
-org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
-org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
-org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
-org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=100
-org.eclipse.jdt.core.compiler.problem.APILeak=warning
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=warning
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=error
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=ignore
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=ignore
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=warning
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDefaultCase=warning
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=warning
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=all_standard_tags
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=error
-org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
-org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
-org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=warning
-org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=warning
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=error
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=enabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=error
-org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
-org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
-org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
-org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=warning
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.release=disabled
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.compiler.taskCaseSensitive=enabled
-org.eclipse.jdt.core.compiler.taskPriorities=NORMAL,HIGH,NORMAL,HIGH,HIGH
-org.eclipse.jdt.core.compiler.taskTags=TODO,FIXME,XXX,EXPERIMENTAL,CONTEXTLAUNCHING
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=120
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_on_off_tags=false
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
-org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=100
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=warning
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=error
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=ignore
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=ignore
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=warning
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=warning
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=warning
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=all_standard_tags
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=error
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=warning
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=warning
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=error
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=enabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=error
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=warning
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.release=disabled
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.compiler.taskCaseSensitive=enabled
+org.eclipse.jdt.core.compiler.taskPriorities=NORMAL,HIGH,NORMAL,HIGH,HIGH
+org.eclipse.jdt.core.compiler.taskTags=TODO,FIXME,XXX,EXPERIMENTAL,CONTEXTLAUNCHING
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=120
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error
+org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter

原文件: apitools/org.eclipse.pde.api.tools.generator/API 
Tools
位置:  -1,16 +1,16  
-<?xml version=
-<launchConfiguration type=
-<listAttribute key=
-<listEntry value=
-</listAttribute>
-<listAttribute key=
-<listEntry value=
-</listAttribute>
-<stringAttribute key=
-<booleanAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-</launchConfiguration>
+<?xml version=
+<launchConfiguration type=
+<listAttribute key=
+<listEntry value=
+</listAttribute>
+<listAttribute key=
+<listEntry value=
+</listAttribute>
+<stringAttribute key=
+<booleanAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+</launchConfiguration>

原文件: apitools/org.eclipse.pde.api.tools.generator/plugin.xml 
新文件: apitools/org.eclipse.pde.api.tools.generator/plugin.xml
位置:  -1,17 +1,17  
-<?xml version=
-<?eclipse version=
-<plugin>
-   <extension
-         id=
-         point=
-      <application
-            cardinality=
-            thread=
-            visible=
-         <run
-               class=
-         </run>
-      </application>
-   </extension>
-
-</plugin>
+<?xml version=
+<?eclipse version=
+<plugin>
+   <extension
+         id=
+         point=
+      <application
+            cardinality=
+            thread=
+            visible=
+         <run
+               class=
+         </run>
+      </application>
+   </extension>
+
+</plugin>

原文件: apitools/org.eclipse.pde.api.tools.generator/profiles/J2SE-1.4/whiteList.txt 
新文件: apitools/org.eclipse.pde.api.tools.generator/profiles/J2SE-1.4/whiteList.txt
位置:  -1,8 +1,8  
-org.w3c.dom
-org.w3c.dom.css
-org.w3c.dom.events
-org.w3c.dom.html
-org.w3c.dom.ranges
-org.w3c.dom.stylesheets
-org.w3c.dom.traversal
+org.w3c.dom
+org.w3c.dom.css
+org.w3c.dom.events
+org.w3c.dom.html
+org.w3c.dom.ranges
+org.w3c.dom.stylesheets
+org.w3c.dom.traversal
 org.w3c.dom.views
\ No newline at end of file

原文件: apitools/org.eclipse.pde.api.tools.generator/profiles/J2SE-1.5/whiteList.txt 
新文件: apitools/org.eclipse.pde.api.tools.generator/profiles/J2SE-1.5/whiteList.txt
位置:  -1,8 +1,8  
-org.w3c.dom.css
-org.w3c.dom.events
-org.w3c.dom.html
-org.w3c.dom.ls
-org.w3c.dom.ranges
-org.w3c.dom.stylesheets
-org.w3c.dom.traversal
+org.w3c.dom.css
+org.w3c.dom.events
+org.w3c.dom.html
+org.w3c.dom.ls
+org.w3c.dom.ranges
+org.w3c.dom.stylesheets
+org.w3c.dom.traversal
 org.w3c.dom.views
\ No newline at end of file

原文件: apitools/org.eclipse.pde.api.tools.generator/profiles/JavaSE-1.6/whiteList.txt 
新文件: apitools/org.eclipse.pde.api.tools.generator/profiles/JavaSE-1.6/whiteList.txt
位置:  -1,8 +1,8  
-org.w3c.dom.css
-org.w3c.dom.events
-org.w3c.dom.html
-org.w3c.dom.ls
-org.w3c.dom.ranges
-org.w3c.dom.stylesheets
-org.w3c.dom.traversal
+org.w3c.dom.css
+org.w3c.dom.events
+org.w3c.dom.html
+org.w3c.dom.ls
+org.w3c.dom.ranges
+org.w3c.dom.stylesheets
+org.w3c.dom.traversal
 org.w3c.dom.views
\ No newline at end of file

原文件: apitools/org.eclipse.pde.api.tools.generator/profiles/JavaSE-1.7/whiteList.txt 
新文件: apitools/org.eclipse.pde.api.tools.generator/profiles/JavaSE-1.7/whiteList.txt
位置:  -1,8 +1,8  
-org.w3c.dom.css
-org.w3c.dom.events
-org.w3c.dom.html
-org.w3c.dom.ls
-org.w3c.dom.ranges
-org.w3c.dom.stylesheets
-org.w3c.dom.traversal
+org.w3c.dom.css
+org.w3c.dom.events
+org.w3c.dom.html
+org.w3c.dom.ls
+org.w3c.dom.ranges
+org.w3c.dom.stylesheets
+org.w3c.dom.traversal
 org.w3c.dom.views
\ No newline at end of file

原文件: apitools/org.eclipse.pde.api.tools.generator/profiles/JavaSE-1.8/JavaSE-1.8.profile 
新文件: apitools/org.eclipse.pde.api.tools.generator/profiles/JavaSE-1.8/JavaSE-1.8.profile
位置:  -1,205 +1,205  
-###############################################################################
-# Copyright (c) 2009, 2013 IBM Corporation and others.
+###############################################################################
+# Copyright (c) 2009, 2013 IBM Corporation and others.
 #
-# This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License 2.0
-# which accompanies this distribution, and is available at
+# This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License 2.0
+# which accompanies this distribution, and is available at
 # https://www.eclipse.org/legal/epl-2.0/
 #
-# SPDX-License-Identifier: EPL-2.0
-# 
-# Contributors:
-#     IBM Corporation - initial API and implementation
-###############################################################################
-org.osgi.framework.system.packages = \
- javax.accessibility,\
- javax.activation,\
- javax.activity,\
- javax.annotation,\
- javax.annotation.processing,\
- javax.crypto,\
- javax.crypto.interfaces,\
- javax.crypto.spec,\
- javax.imageio,\
- javax.imageio.event,\
- javax.imageio.metadata,\
- javax.imageio.plugins.bmp,\
- javax.imageio.plugins.jpeg,\
- javax.imageio.spi,\
- javax.imageio.stream,\
- javax.jws,\
- javax.jws.soap,\
- javax.lang.model,\
- javax.lang.model.element,\
- javax.lang.model.type,\
- javax.lang.model.util,\
- javax.management,\
- javax.management.loading,\
- javax.management.modelmbean,\
- javax.management.monitor,\
- javax.management.openmbean,\
- javax.management.relation,\
- javax.management.remote,\
- javax.management.remote.rmi,\
- javax.management.timer,\
- javax.naming,\
- javax.naming.directory,\
- javax.naming.event,\
- javax.naming.ldap,\
- javax.naming.spi,\
- javax.net,\
- javax.net.ssl,\
- javax.print,\
- javax.print.attribute,\
- javax.print.attribute.standard,\
- javax.print.event,\
- javax.rmi,\
- javax.rmi.CORBA,\
- javax.rmi.ssl,\
- javax.script,\
- javax.security.auth,\
- javax.security.auth.callback,\
- javax.security.auth.kerberos,\
- javax.security.auth.login,\
- javax.security.auth.spi,\
- javax.security.auth.x500,\
- javax.security.cert,\
- javax.security.sasl,\
- javax.sound.midi,\
- javax.sound.midi.spi,\
- javax.sound.sampled,\
- javax.sound.sampled.spi,\
- javax.sql,\
- javax.sql.rowset,\
- javax.sql.rowset.serial,\
- javax.sql.rowset.spi,\
- javax.swing,\
- javax.swing.border,\
- javax.swing.colorchooser,\
- javax.swing.event,\
- javax.swing.filechooser,\
- javax.swing.plaf,\
- javax.swing.plaf.basic,\
- javax.swing.plaf.metal,\
- javax.swing.plaf.multi,\
- javax.swing.plaf.nimbus,\
- javax.swing.plaf.synth,\
- javax.swing.table,\
- javax.swing.text,\
- javax.swing.text.html,\
- javax.swing.text.html.parser,\
- javax.swing.text.rtf,\
- javax.swing.tree,\
- javax.swing.undo,\
- javax.tools,\
- javax.transaction,\
- javax.transaction.xa,\
- javax.xml,\
- javax.xml.bind,\
- javax.xml.bind.annotation,\
- javax.xml.bind.annotation.adapters,\
- javax.xml.bind.attachment,\
- javax.xml.bind.helpers,\
- javax.xml.bind.util,\
- javax.xml.crypto,\
- javax.xml.crypto.dom,\
- javax.xml.crypto.dsig,\
- javax.xml.crypto.dsig.dom,\
- javax.xml.crypto.dsig.keyinfo,\
- javax.xml.crypto.dsig.spec,\
- javax.xml.datatype,\
- javax.xml.namespace,\
- javax.xml.parsers,\
- javax.xml.soap,\
- javax.xml.stream,\
- javax.xml.stream.events,\
- javax.xml.stream.util,\
- javax.xml.transform,\
- javax.xml.transform.dom,\
- javax.xml.transform.sax,\
- javax.xml.transform.stax,\
- javax.xml.transform.stream,\
- javax.xml.validation,\
- javax.xml.ws,\
- javax.xml.ws.handler,\
- javax.xml.ws.handler.soap,\
- javax.xml.ws.http,\
- javax.xml.ws.soap,\
- javax.xml.ws.spi,\
- javax.xml.ws.spi.http,\
- javax.xml.ws.wsaddressing,\
- javax.xml.xpath,\
- org.ietf.jgss,\
- org.omg.CORBA,\
- org.omg.CORBA_2_3,\
- org.omg.CORBA_2_3.portable,\
- org.omg.CORBA.DynAnyPackage,\
- org.omg.CORBA.ORBPackage,\
- org.omg.CORBA.portable,\
- org.omg.CORBA.TypeCodePackage,\
- org.omg.CosNaming,\
- org.omg.CosNaming.NamingContextExtPackage,\
- org.omg.CosNaming.NamingContextPackage,\
- org.omg.Dynamic,\
- org.omg.DynamicAny,\
- org.omg.DynamicAny.DynAnyFactoryPackage,\
- org.omg.DynamicAny.DynAnyPackage,\
- org.omg.IOP,\
- org.omg.IOP.CodecFactoryPackage,\
- org.omg.IOP.CodecPackage,\
- org.omg.Messaging,\
- org.omg.PortableInterceptor,\
- org.omg.PortableInterceptor.ORBInitInfoPackage,\
- org.omg.PortableServer,\
- org.omg.PortableServer.CurrentPackage,\
- org.omg.PortableServer.POAManagerPackage,\
- org.omg.PortableServer.POAPackage,\
- org.omg.PortableServer.portable,\
- org.omg.PortableServer.ServantLocatorPackage,\
- org.omg.SendingContext,\
- org.omg.stub.java.rmi,\
- org.w3c.dom,\
- org.w3c.dom.bootstrap,\
- org.w3c.dom.css,\
- org.w3c.dom.events,\
- org.w3c.dom.html,\
- org.w3c.dom.ls,\
- org.w3c.dom.ranges,\
- org.w3c.dom.stylesheets,\
- org.w3c.dom.traversal,\
- org.w3c.dom.views,\
- org.w3c.dom.xpath,\
- org.xml.sax,\
- org.xml.sax.ext,\
- org.xml.sax.helpers
-org.osgi.framework.bootdelegation = \
- javax.*,\
- org.ietf.jgss,\
- org.omg.*,\
- org.w3c.*,\
- org.xml.*,\
- sun.*,\
- com.sun.*
-org.osgi.framework.executionenvironment = \
- OSGi/Minimum-1.0,\
- OSGi/Minimum-1.1,\
- OSGi/Minimum-1.2,\
- JRE-1.1,\
- J2SE-1.2,\
- J2SE-1.3,\
- J2SE-1.4,\
- J2SE-1.5,\
- JavaSE-1.6,\
- JavaSE-1.7,\
- JavaSE-1.8
-org.osgi.framework.system.capabilities = \
- osgi.ee; osgi.ee=
- osgi.ee; osgi.ee=
- osgi.ee; osgi.ee=
-osgi.java.profile.name = JavaSE-1.8
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+# SPDX-License-Identifier: EPL-2.0
+# 
+# Contributors:
+#     IBM Corporation - initial API and implementation
+###############################################################################
+org.osgi.framework.system.packages = \
+ javax.accessibility,\
+ javax.activation,\
+ javax.activity,\
+ javax.annotation,\
+ javax.annotation.processing,\
+ javax.crypto,\
+ javax.crypto.interfaces,\
+ javax.crypto.spec,\
+ javax.imageio,\
+ javax.imageio.event,\
+ javax.imageio.metadata,\
+ javax.imageio.plugins.bmp,\
+ javax.imageio.plugins.jpeg,\
+ javax.imageio.spi,\
+ javax.imageio.stream,\
+ javax.jws,\
+ javax.jws.soap,\
+ javax.lang.model,\
+ javax.lang.model.element,\
+ javax.lang.model.type,\
+ javax.lang.model.util,\
+ javax.management,\
+ javax.management.loading,\
+ javax.management.modelmbean,\
+ javax.management.monitor,\
+ javax.management.openmbean,\
+ javax.management.relation,\
+ javax.management.remote,\
+ javax.management.remote.rmi,\
+ javax.management.timer,\
+ javax.naming,\
+ javax.naming.directory,\
+ javax.naming.event,\
+ javax.naming.ldap,\
+ javax.naming.spi,\
+ javax.net,\
+ javax.net.ssl,\
+ javax.print,\
+ javax.print.attribute,\
+ javax.print.attribute.standard,\
+ javax.print.event,\
+ javax.rmi,\
+ javax.rmi.CORBA,\
+ javax.rmi.ssl,\
+ javax.script,\
+ javax.security.auth,\
+ javax.security.auth.callback,\
+ javax.security.auth.kerberos,\
+ javax.security.auth.login,\
+ javax.security.auth.spi,\
+ javax.security.auth.x500,\
+ javax.security.cert,\
+ javax.security.sasl,\
+ javax.sound.midi,\
+ javax.sound.midi.spi,\
+ javax.sound.sampled,\
+ javax.sound.sampled.spi,\
+ javax.sql,\
+ javax.sql.rowset,\
+ javax.sql.rowset.serial,\
+ javax.sql.rowset.spi,\
+ javax.swing,\
+ javax.swing.border,\
+ javax.swing.colorchooser,\
+ javax.swing.event,\
+ javax.swing.filechooser,\
+ javax.swing.plaf,\
+ javax.swing.plaf.basic,\
+ javax.swing.plaf.metal,\
+ javax.swing.plaf.multi,\
+ javax.swing.plaf.nimbus,\
+ javax.swing.plaf.synth,\
+ javax.swing.table,\
+ javax.swing.text,\
+ javax.swing.text.html,\
+ javax.swing.text.html.parser,\
+ javax.swing.text.rtf,\
+ javax.swing.tree,\
+ javax.swing.undo,\
+ javax.tools,\
+ javax.transaction,\
+ javax.transaction.xa,\
+ javax.xml,\
+ javax.xml.bind,\
+ javax.xml.bind.annotation,\
+ javax.xml.bind.annotation.adapters,\
+ javax.xml.bind.attachment,\
+ javax.xml.bind.helpers,\
+ javax.xml.bind.util,\
+ javax.xml.crypto,\
+ javax.xml.crypto.dom,\
+ javax.xml.crypto.dsig,\
+ javax.xml.crypto.dsig.dom,\
+ javax.xml.crypto.dsig.keyinfo,\
+ javax.xml.crypto.dsig.spec,\
+ javax.xml.datatype,\
+ javax.xml.namespace,\
+ javax.xml.parsers,\
+ javax.xml.soap,\
+ javax.xml.stream,\
+ javax.xml.stream.events,\
+ javax.xml.stream.util,\
+ javax.xml.transform,\
+ javax.xml.transform.dom,\
+ javax.xml.transform.sax,\
+ javax.xml.transform.stax,\
+ javax.xml.transform.stream,\
+ javax.xml.validation,\
+ javax.xml.ws,\
+ javax.xml.ws.handler,\
+ javax.xml.ws.handler.soap,\
+ javax.xml.ws.http,\
+ javax.xml.ws.soap,\
+ javax.xml.ws.spi,\
+ javax.xml.ws.spi.http,\
+ javax.xml.ws.wsaddressing,\
+ javax.xml.xpath,\
+ org.ietf.jgss,\
+ org.omg.CORBA,\
+ org.omg.CORBA_2_3,\
+ org.omg.CORBA_2_3.portable,\
+ org.omg.CORBA.DynAnyPackage,\
+ org.omg.CORBA.ORBPackage,\
+ org.omg.CORBA.portable,\
+ org.omg.CORBA.TypeCodePackage,\
+ org.omg.CosNaming,\
+ org.omg.CosNaming.NamingContextExtPackage,\
+ org.omg.CosNaming.NamingContextPackage,\
+ org.omg.Dynamic,\
+ org.omg.DynamicAny,\
+ org.omg.DynamicAny.DynAnyFactoryPackage,\
+ org.omg.DynamicAny.DynAnyPackage,\
+ org.omg.IOP,\
+ org.omg.IOP.CodecFactoryPackage,\
+ org.omg.IOP.CodecPackage,\
+ org.omg.Messaging,\
+ org.omg.PortableInterceptor,\
+ org.omg.PortableInterceptor.ORBInitInfoPackage,\
+ org.omg.PortableServer,\
+ org.omg.PortableServer.CurrentPackage,\
+ org.omg.PortableServer.POAManagerPackage,\
+ org.omg.PortableServer.POAPackage,\
+ org.omg.PortableServer.portable,\
+ org.omg.PortableServer.ServantLocatorPackage,\
+ org.omg.SendingContext,\
+ org.omg.stub.java.rmi,\
+ org.w3c.dom,\
+ org.w3c.dom.bootstrap,\
+ org.w3c.dom.css,\
+ org.w3c.dom.events,\
+ org.w3c.dom.html,\
+ org.w3c.dom.ls,\
+ org.w3c.dom.ranges,\
+ org.w3c.dom.stylesheets,\
+ org.w3c.dom.traversal,\
+ org.w3c.dom.views,\
+ org.w3c.dom.xpath,\
+ org.xml.sax,\
+ org.xml.sax.ext,\
+ org.xml.sax.helpers
+org.osgi.framework.bootdelegation = \
+ javax.*,\
+ org.ietf.jgss,\
+ org.omg.*,\
+ org.w3c.*,\
+ org.xml.*,\
+ sun.*,\
+ com.sun.*
+org.osgi.framework.executionenvironment = \
+ OSGi/Minimum-1.0,\
+ OSGi/Minimum-1.1,\
+ OSGi/Minimum-1.2,\
+ JRE-1.1,\
+ J2SE-1.2,\
+ J2SE-1.3,\
+ J2SE-1.4,\
+ J2SE-1.5,\
+ JavaSE-1.6,\
+ JavaSE-1.7,\
+ JavaSE-1.8
+org.osgi.framework.system.capabilities = \
+ osgi.ee; osgi.ee=
+ osgi.ee; osgi.ee=
+ osgi.ee; osgi.ee=
+osgi.java.profile.name = JavaSE-1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
 org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
\ No newline at end of file

原文件: apitools/org.eclipse.pde.api.tools.generator/profiles/configuration.properties 
新文件: apitools/org.eclipse.pde.api.tools.generator/profiles/configuration.properties
位置:  -1,160 +1,160  
-####################################################################################################################
-# Copyright (c) 2013, 2014 IBM Corporation and others.
-#
-# This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License 2.0
-# which accompanies this distribution, and is available at
-# https://www.eclipse.org/legal/epl-2.0/
-#
-# SPDX-License-Identifier: EPL-2.0
-#
-# Contributors:
-#     IBM Corporation - initial API and implementation
-# Each EE description needs the following to be properly set up
-# - jreLib: absolute path to the directory from which all jar files (including inside sub-folders) will be retrieved
-# - osgiProfile: the absolute path to the OSGi *.profile file from which the list of packages is extracted
-# - jreDoc: the absolute path to the archived (*.zip) file that corresponds to the documentation for the given JRE
-# - jreUrl: in case the zip doc is not available, a URL pointing to the online documentation can also be used
-# - docRoot: the relative root path used in the zip doc or the URL doc
-# - cacheLocation: in case the doc is retrieved online, its contents can be cached into the given folder to increase performance of the generator
-# - whileList: a text file that contains the list of packages that should be included in the description regardless of them being in the OSGi profile
-# 
-# There is a complete set of OSGi profiles and current white-lists in the /profiles directory of this bundle
-#
-# EXAMPLE - Settings for generating a 1.4 EE description
-#
-#   J2SE-1.4.jreLib=c:/vms/jdk1.4.2_35/lib
-#   J2SE-1.4.osgiProfile=c:/OSGi_profiles/J2SE-1.4/J2SE-1.4.profile
-#   J2SE-1.4.jreDoc=c:/OSGi_profiles/J2SE-1.4/j2sdk-1_4_2-doc.zip
-#   J2SE-1.4.jreURL=http://docs.oracle.com/javase/1.4.2/
-#   J2SE-1.4.docRoot=docs/api/
-#   J2SE-1.4.cacheLocation=c:/Users/usr/OSGi_profiles/cache
-#   J2SE-1.4.whiteList=c:/OSGi_profiles/J2SE-1.4/whiteList.txt
-#
-####################################################################################################################
-
-############# JRE 1.1 configuration #############
-#JRE-1.1.jreLib=
-#JRE-1.1.osgiProfile=
-#JRE-1.1.jreDoc=
-#JRE-1.1.jreURL=
-#JRE-1.1.docRoot=
-#JRE-1.1.cacheLocation=
-#JRE-1.1.whiteList=
-
-############# JDK 1.2 configuration #############
-#J2SE-1.2.jreLib=
-#J2SE-1.2.osgiProfile=
-#J2SE-1.2.jreDoc=
-#J2SE-1.2.jreURL=
-#J2SE-1.2.docRoot=
-#J2SE-1.2.cacheLocation=
-#J2SE-1.2.whiteList=
-
-############# JDK 1.3 configuration #############
-#J2SE-1.3.jreLib=
-#J2SE-1.3.osgiProfile=
-#J2SE-1.3.jreDoc=
-#J2SE-1.3.jreURL=http://docs.oracle.com/javase/1.3/
-#J2SE-1.3.docRoot=docs/api/
-#J2SE-1.3.cacheLocation=
-#J2SE-1.3.whiteList=
-
-############# JDK 1.4 configuration #############
-#J2SE-1.4.jreLib=
-#J2SE-1.4.osgiProfile=
-#J2SE-1.4.jreDoc=
-#J2SE-1.4.jreURL=http://docs.oracle.com/javase/1.4.2/
-#J2SE-1.4.docRoot=docs/api/
-#J2SE-1.4.cacheLocation=
-#J2SE-1.4.whiteList=
-
-############# JDK 1.5 configuration #############
-#J2SE-1.5.jreLib=
-#J2SE-1.5.osgiProfile=
-#J2SE-1.5.jreDoc=
-#J2SE-1.5.jreURL=
-#J2SE-1.5.docRoot=
-#J2SE-1.5.cacheLocation=
-#J2SE-1.5.whiteList=
-
-############# JDK 1.6 configuration #############
-#JavaSE-1.6.jreLib=
-#JavaSE-1.6.osgiProfile=
-#JavaSE-1.6.jreDoc=
-#JavaSE-1.6.jreURL=
-#JavaSE-1.6.docRoot=
-#JavaSE-1.6.cacheLocation=
-#JavaSE-1.6.whiteList=
-
-############# JDK 1.7 configuration #############
-#JavaSE-1.7.jreLib=
-#JavaSE-1.7.osgiProfile=
-#JavaSE-1.7.jreDoc=
-#JavaSE-1.7.jreURL=
-#JavaSE-1.7.docRoot=
-#JavaSE-1.7.cacheLocation=
-#JavaSE-1.7.whiteList=
-
-############# JDK 1.8 configuration #############
-#JavaSE-1.8.jreLib=
-#JavaSE-1.8.osgiProfile=
-#JavaSE-1.8.jreDoc=
-#JavaSE-1.8.jreURL=
-#JavaSE-1.8.docRoot=
-#JavaSE-1.8.cacheLocation=
-#JavaSE-1.8.whiteList=
-
-############# JDK 9 configuration #############
-#JavaSE-9.jreLib=
-#JavaSE-9.osgiProfile=
-#JavaSE-9.jreDoc=
-#JavaSE-9.jreURL=
-#JavaSE-9.docRoot=
-#JavaSE-9.cacheLocation=
-#JavaSE-9.whiteList=
-
-############# CDC 1.0 configuration #############
-#CDC-1.0_Foundation-1.0.jreLib=
-#CDC-1.0_Foundation-1.0.osgiProfile=
-#CDC-1.0_Foundation-1.0.jreDoc=
-#CDC-1.0_Foundation-1.0.jreURL=
-#CDC-1.0_Foundation-1.0.docRoot=
-#CDC-1.0_Foundation-1.0.cacheLocation=
-#CDC-1.0_Foundation-1.0.whiteList=
-
-############# CDC 1.1 configuration #############
-#CDC-1.1_Foundation-1.1.jreLib=
-#CDC-1.1_Foundation-1.1.osgiProfile=
-#CDC-1.1_Foundation-1.1.jreDoc=
-#CDC-1.1_Foundation-1.1.jreURL=
-#CDC-1.1_Foundation-1.1.docRoot=
-#CDC-1.1_Foundation-1.1.cacheLocation=
-#CDC-1.1_Foundation-1.1.whiteList=
-
-############# OSGI 1.0 configuration #############
-#OSGi_Minimum-1.0.jreLib=
-#OSGi_Minimum-1.0.osgiProfile=
-#OSGi_Minimum-1.0.jreDoc=
-#OSGi_Minimum-1.0.jreURL=
-#OSGi_Minimum-1.0.docRoot=
-#OSGi_Minimum-1.0.cacheLocation=
-#OSGi_Minimum-1.0.whiteList=
-
-############# OSGI 1.1 configuration #############
-#OSGi_Minimum-1.1.jreLib=
-#OSGi_Minimum-1.1.osgiProfile=
-#OSGi_Minimum-1.1.jreDoc=
-#OSGi_Minimum-1.1.jreURL=
-#OSGi_Minimum-1.1.docRoot=
-#OSGi_Minimum-1.1.cacheLocation=
-#OSGi_Minimum-1.1.whiteList=
-
-############# OSGI 1.2 configuration #############
-#OSGi_Minimum-1.2.jreLib=
-#OSGi_Minimum-1.2.osgiProfile=
-#OSGi_Minimum-1.2.jreDoc=
-#OSGi_Minimum-1.2.jreURL=
-#OSGi_Minimum-1.2.docRoot=
-#OSGi_Minimum-1.2.cacheLocation=
+####################################################################################################################
+# Copyright (c) 2013, 2014 IBM Corporation and others.
+#
+# This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License 2.0
+# which accompanies this distribution, and is available at
+# https://www.eclipse.org/legal/epl-2.0/
+#
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+#     IBM Corporation - initial API and implementation
+# Each EE description needs the following to be properly set up
+# - jreLib: absolute path to the directory from which all jar files (including inside sub-folders) will be retrieved
+# - osgiProfile: the absolute path to the OSGi *.profile file from which the list of packages is extracted
+# - jreDoc: the absolute path to the archived (*.zip) file that corresponds to the documentation for the given JRE
+# - jreUrl: in case the zip doc is not available, a URL pointing to the online documentation can also be used
+# - docRoot: the relative root path used in the zip doc or the URL doc
+# - cacheLocation: in case the doc is retrieved online, its contents can be cached into the given folder to increase performance of the generator
+# - whileList: a text file that contains the list of packages that should be included in the description regardless of them being in the OSGi profile
+# 
+# There is a complete set of OSGi profiles and current white-lists in the /profiles directory of this bundle
+#
+# EXAMPLE - Settings for generating a 1.4 EE description
+#
+#   J2SE-1.4.jreLib=c:/vms/jdk1.4.2_35/lib
+#   J2SE-1.4.osgiProfile=c:/OSGi_profiles/J2SE-1.4/J2SE-1.4.profile
+#   J2SE-1.4.jreDoc=c:/OSGi_profiles/J2SE-1.4/j2sdk-1_4_2-doc.zip
+#   J2SE-1.4.jreURL=http://docs.oracle.com/javase/1.4.2/
+#   J2SE-1.4.docRoot=docs/api/
+#   J2SE-1.4.cacheLocation=c:/Users/usr/OSGi_profiles/cache
+#   J2SE-1.4.whiteList=c:/OSGi_profiles/J2SE-1.4/whiteList.txt
+#
+####################################################################################################################
+
+############# JRE 1.1 configuration #############
+#JRE-1.1.jreLib=
+#JRE-1.1.osgiProfile=
+#JRE-1.1.jreDoc=
+#JRE-1.1.jreURL=
+#JRE-1.1.docRoot=
+#JRE-1.1.cacheLocation=
+#JRE-1.1.whiteList=
+
+############# JDK 1.2 configuration #############
+#J2SE-1.2.jreLib=
+#J2SE-1.2.osgiProfile=
+#J2SE-1.2.jreDoc=
+#J2SE-1.2.jreURL=
+#J2SE-1.2.docRoot=
+#J2SE-1.2.cacheLocation=
+#J2SE-1.2.whiteList=
+
+############# JDK 1.3 configuration #############
+#J2SE-1.3.jreLib=
+#J2SE-1.3.osgiProfile=
+#J2SE-1.3.jreDoc=
+#J2SE-1.3.jreURL=http://docs.oracle.com/javase/1.3/
+#J2SE-1.3.docRoot=docs/api/
+#J2SE-1.3.cacheLocation=
+#J2SE-1.3.whiteList=
+
+############# JDK 1.4 configuration #############
+#J2SE-1.4.jreLib=
+#J2SE-1.4.osgiProfile=
+#J2SE-1.4.jreDoc=
+#J2SE-1.4.jreURL=http://docs.oracle.com/javase/1.4.2/
+#J2SE-1.4.docRoot=docs/api/
+#J2SE-1.4.cacheLocation=
+#J2SE-1.4.whiteList=
+
+############# JDK 1.5 configuration #############
+#J2SE-1.5.jreLib=
+#J2SE-1.5.osgiProfile=
+#J2SE-1.5.jreDoc=
+#J2SE-1.5.jreURL=
+#J2SE-1.5.docRoot=
+#J2SE-1.5.cacheLocation=
+#J2SE-1.5.whiteList=
+
+############# JDK 1.6 configuration #############
+#JavaSE-1.6.jreLib=
+#JavaSE-1.6.osgiProfile=
+#JavaSE-1.6.jreDoc=
+#JavaSE-1.6.jreURL=
+#JavaSE-1.6.docRoot=
+#JavaSE-1.6.cacheLocation=
+#JavaSE-1.6.whiteList=
+
+############# JDK 1.7 configuration #############
+#JavaSE-1.7.jreLib=
+#JavaSE-1.7.osgiProfile=
+#JavaSE-1.7.jreDoc=
+#JavaSE-1.7.jreURL=
+#JavaSE-1.7.docRoot=
+#JavaSE-1.7.cacheLocation=
+#JavaSE-1.7.whiteList=
+
+############# JDK 1.8 configuration #############
+#JavaSE-1.8.jreLib=
+#JavaSE-1.8.osgiProfile=
+#JavaSE-1.8.jreDoc=
+#JavaSE-1.8.jreURL=
+#JavaSE-1.8.docRoot=
+#JavaSE-1.8.cacheLocation=
+#JavaSE-1.8.whiteList=
+
+############# JDK 9 configuration #############
+#JavaSE-9.jreLib=
+#JavaSE-9.osgiProfile=
+#JavaSE-9.jreDoc=
+#JavaSE-9.jreURL=
+#JavaSE-9.docRoot=
+#JavaSE-9.cacheLocation=
+#JavaSE-9.whiteList=
+
+############# CDC 1.0 configuration #############
+#CDC-1.0_Foundation-1.0.jreLib=
+#CDC-1.0_Foundation-1.0.osgiProfile=
+#CDC-1.0_Foundation-1.0.jreDoc=
+#CDC-1.0_Foundation-1.0.jreURL=
+#CDC-1.0_Foundation-1.0.docRoot=
+#CDC-1.0_Foundation-1.0.cacheLocation=
+#CDC-1.0_Foundation-1.0.whiteList=
+
+############# CDC 1.1 configuration #############
+#CDC-1.1_Foundation-1.1.jreLib=
+#CDC-1.1_Foundation-1.1.osgiProfile=
+#CDC-1.1_Foundation-1.1.jreDoc=
+#CDC-1.1_Foundation-1.1.jreURL=
+#CDC-1.1_Foundation-1.1.docRoot=
+#CDC-1.1_Foundation-1.1.cacheLocation=
+#CDC-1.1_Foundation-1.1.whiteList=
+
+############# OSGI 1.0 configuration #############
+#OSGi_Minimum-1.0.jreLib=
+#OSGi_Minimum-1.0.osgiProfile=
+#OSGi_Minimum-1.0.jreDoc=
+#OSGi_Minimum-1.0.jreURL=
+#OSGi_Minimum-1.0.docRoot=
+#OSGi_Minimum-1.0.cacheLocation=
+#OSGi_Minimum-1.0.whiteList=
+
+############# OSGI 1.1 configuration #############
+#OSGi_Minimum-1.1.jreLib=
+#OSGi_Minimum-1.1.osgiProfile=
+#OSGi_Minimum-1.1.jreDoc=
+#OSGi_Minimum-1.1.jreURL=
+#OSGi_Minimum-1.1.docRoot=
+#OSGi_Minimum-1.1.cacheLocation=
+#OSGi_Minimum-1.1.whiteList=
+
+############# OSGI 1.2 configuration #############
+#OSGi_Minimum-1.2.jreLib=
+#OSGi_Minimum-1.2.osgiProfile=
+#OSGi_Minimum-1.2.jreDoc=
+#OSGi_Minimum-1.2.jreURL=
+#OSGi_Minimum-1.2.docRoot=
+#OSGi_Minimum-1.2.cacheLocation=
 #OSGi_Minimum-1.2.whiteList=
\ No newline at end of file

原文件: apitools/org.eclipse.pde.api.tools.generator/src/org/eclipse/pde/api/tools/generator/EEDescriptionGenerator.java 
新文件: apitools/org.eclipse.pde.api.tools.generator/src/org/eclipse/pde/api/tools/generator/EEDescriptionGenerator.java
位置:  -1,38 +1,38  
-/*******************************************************************************
- * Copyright (c) 2011, 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.api.tools.generator;
-
-import org.eclipse.equinox.app.IApplication;
-import org.eclipse.equinox.app.IApplicationContext;
-
-public class EEDescriptionGenerator implements IApplication {
-
-	/**
-	 * Runs the application to generate the EE description
-	 */
-	@Override
-	public Object start(IApplicationContext context) throws Exception {
-		Object arguments = context.getArguments().get(IApplicationContext.APPLICATION_ARGS);
-		if (arguments instanceof String[]) {
-			String[] args = (String[]) arguments;
-			EEGenerator.main(args);
-		}
-		return IApplication.EXIT_OK;
-	}
-
-	@Override
-	public void stop() {
-		// do nothing
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.api.tools.generator;
+
+import org.eclipse.equinox.app.IApplication;
+import org.eclipse.equinox.app.IApplicationContext;
+
+public class EEDescriptionGenerator implements IApplication {
+
+	/**
+	 * Runs the application to generate the EE description
+	 */
+	@Override
+	public Object start(IApplicationContext context) throws Exception {
+		Object arguments = context.getArguments().get(IApplicationContext.APPLICATION_ARGS);
+		if (arguments instanceof String[]) {
+			String[] args = (String[]) arguments;
+			EEGenerator.main(args);
+		}
+		return IApplication.EXIT_OK;
+	}
+
+	@Override
+	public void stop() {
+		// do nothing
+	}
+}

原文件: apitools/org.eclipse.pde.api.tools.generator/src/org/eclipse/pde/api/tools/generator/EEGenerator.java 
新文件: apitools/org.eclipse.pde.api.tools.generator/src/org/eclipse/pde/api/tools/generator/EEGenerator.java
位置:  -1,1786 +1,1786  
-/*******************************************************************************
- * Copyright (c) 2011, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.api.tools.generator;
-
-import java.io.BufferedInputStream;
-import java.io.BufferedReader;
-import java.io.BufferedWriter;
-import java.io.ByteArrayOutputStream;
-import java.io.DataOutputStream;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.FileReader;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.LineNumberReader;
-import java.io.PrintWriter;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.Enumeration;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.LinkedHashMap;
-import java.util.LinkedHashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Map.Entry;
-import java.util.Properties;
-import java.util.Set;
-import java.util.SortedSet;
-import java.util.StringTokenizer;
-import java.util.TreeSet;
-import java.util.zip.ZipEntry;
-import java.util.zip.ZipException;
-import java.util.zip.ZipFile;
-import java.util.zip.ZipOutputStream;
-
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.jdt.core.Flags;
-import org.eclipse.jdt.core.Signature;
-import org.eclipse.jdt.core.ToolFactory;
-import org.eclipse.jdt.core.compiler.CharOperation;
-import org.eclipse.jdt.core.util.IAttributeNamesConstants;
-import org.eclipse.jdt.core.util.IClassFileAttribute;
-import org.eclipse.jdt.core.util.IClassFileReader;
-import org.eclipse.jdt.core.util.IFieldInfo;
-import org.eclipse.jdt.core.util.IInnerClassesAttribute;
-import org.eclipse.jdt.core.util.IInnerClassesAttributeEntry;
-import org.eclipse.jdt.core.util.IMethodInfo;
-import org.eclipse.jdt.core.util.ISignatureAttribute;
-import org.eclipse.pde.api.tools.generator.util.Util;
-import org.eclipse.pde.api.tools.internal.IApiXmlConstants;
-import org.eclipse.pde.api.tools.internal.provisional.ProfileModifiers;
-import org.objectweb.asm.AnnotationVisitor;
-import org.objectweb.asm.Attribute;
-import org.objectweb.asm.ClassReader;
-import org.objectweb.asm.ClassVisitor;
-import org.objectweb.asm.ClassWriter;
-import org.objectweb.asm.FieldVisitor;
-import org.objectweb.asm.MethodVisitor;
-import org.objectweb.asm.Opcodes;
-import org.w3c.dom.DOMException;
-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
-
-/**
- * This is a java application to generate the EE descriptions for specified EE
- * names:
- * <p>
- * Accepted names are:
- * </p>
- * <ol>
- * <li>JRE-1.1,</li>
- * <li>J2SE-1.2,</li>
- * <li>J2SE-1.3,</li>
- * <li>J2SE-1.4,</li>
- * <li>J2SE-1.5,</li>
- * <li>JavaSE-1.6,</li>
- * <li>JavaSE-1.7,</li>
- * <li>JavaSE-1.8,</li>
- * <li>CDC-1.0_Foundation-1.0,</li>
- * <li>CDC-1.1_Foundation-1.1,</li>
- * <li>OSGi_Minimum-1.0</li>,
- * <li>OSGi_Minimum-1.1,</li>
- * <li>OSGi_Minimum-1.2.</li>
- * </ol>
- * This can be called using: -output c:/EE_descriptions -config
- * C:\OSGi_profiles\configuration.properties -EEs
- * JRE-1.1,J2SE-1.2,J2SE-1.3,J2SE-
- * 1.4,J2SE-1.5,JavaSE-1.6,JavaSE-1.7,JavaSE-1.8,JavaSE-9,CDC-
- * 1.0_Foundation-1.0,CDC-1.1_Foundation-1.1,OSGi_Minimum-1.0,OSGi_Minimum-1.1,OSGi_Minimum-1.
- * 2
- */
-public class EEGenerator {
-	static class AbstractNode {
-		protected int addedProfileValue = -1;
-		protected int removedProfileValue = -1;
-
-		public void persistAnnotations(Element element) {
-			if (this.addedProfileValue != -1) {
-				element.setAttribute(IApiXmlConstants.ATTR_ADDED_PROFILE, Integer.toString(this.addedProfileValue));
-			}
-			if (this.removedProfileValue != -1) {
-				element.setAttribute(IApiXmlConstants.ATTR_REMOVED_PROFILE, Integer.toString(this.removedProfileValue));
-			}
-		}
-
-		public void persistAnnotations(Element element, String OSGiProfileName) {
-			int value = ProfileModifiers.getValue(OSGiProfileName);
-			if (value != -1) {
-				element.setAttribute(IApiXmlConstants.ATTR_PROFILE, Integer.toString(value));
-			}
-		}
-
-		public void setAddedProfileValue(int value) {
-			if (this.addedProfileValue != -1) {
-				System.err.println(
-			}
-			this.addedProfileValue = value;
-		}
-		public void setRemovedProfileValue(int value) {
-			if (this.removedProfileValue != -1) {
-				System.err.println(
-			}
-			this.removedProfileValue = value;
-		}
-	}
-	static class Field extends AbstractNode implements Comparable<Field> {
-		char[] name;
-		char[] type;
-
-		Field(char[] fname, char[] ftype) {
-			this.name = fname;
-			if (ftype != null) {
-				this.type = CharOperation.replaceOnCopy(ftype, '/', '.');
-			}
-		}
-		@Override
-		public int compareTo(Field field) {
-			return CharOperation.compareTo(this.name, field.name);
-		}
-		@Override
-		public boolean equals(Object obj) {
-			if (this == obj) {
-				return true;
-			}
-			if (obj == null) {
-				return false;
-			}
-			if (!(obj instanceof Field)) {
-				return false;
-			}
-			Field other = (Field) obj;
-			return Arrays.equals(name, other.name);
-		}
-
-		public int getStatus() {
-			return -1;
-		}
-
-		@Override
-		public int hashCode() {
-			final int prime = 31;
-			int result = 1;
-			result = prime * result + Arrays.hashCode(name);
-			result = prime * result + Arrays.hashCode(type);
-			return result;
-		}
-
-		public void persistXML(Document document, Element parent) {
-			Element field = document.createElement(IApiXmlConstants.ELEMENT_FIELD);
-			parent.appendChild(field);
-			field.setAttribute(IApiXmlConstants.ATTR_NAME, new String(this.name));
-			field.setAttribute(IApiXmlConstants.ATTR_STATUS, Integer.toString(getStatus()));
-		}
-
-		public void persistXML(Document document, Element parent, String OSGiProfileName) {
-			Element field = document.createElement(IApiXmlConstants.ELEMENT_FIELD);
-			parent.appendChild(field);
-			field.setAttribute(IApiXmlConstants.ATTR_NAME, new String(this.name));
-			persistAnnotations(field, OSGiProfileName);
-		}
-
-		@Override
-		public String toString() {
-			StringBuilder builder = new StringBuilder();
-			builder.append(
-			.append(this.name).append(' ').append(Signature.toCharArray(this.type));
-			return String.valueOf(builder);
-		}
-	}
-	static class Method extends AbstractNode implements Comparable<Method> {
-		public static final char[] NO_GENERIC_SIGNATURE = new char[0];
-		char[] genericSignature;
-		int modifiers;
-		char[] selector;
-		char[] signature;
-
-		Method(int mods, char[] select, char[] sig, char[] genericsig) {
-			this.selector = select;
-			this.signature = sig;
-			this.modifiers = mods;
-			if (genericsig == null) {
-				this.genericSignature = NO_GENERIC_SIGNATURE;
-			} else {
-				this.genericSignature = genericsig;
-			}
-		}
-		@Override
-		public int compareTo(Method method) {
-			int compare = CharOperation.compareTo(this.selector, method.selector);
-			if (compare == 0) {
-				int compareTo = CharOperation.compareTo(this.signature, method.signature);
-				if (compareTo == 0) {
-					return this.getStatus() - method.getStatus();
-				}
-				return compareTo;
-			}
-			return compare;
-		}
-
-		@Override
-		public boolean equals(Object obj) {
-			if (this == obj) {
-				return true;
-			}
-			if (obj == null) {
-				return false;
-			}
-			if (!(obj instanceof Method)) {
-				return false;
-			}
-			Method other = (Method) obj;
-			if (!Arrays.equals(selector, other.selector)) {
-				return false;
-			}
-			return Arrays.equals(signature, other.signature);
-		}
-
-		public int getStatus() {
-			return -1;
-		}
-
-		@Override
-		public int hashCode() {
-			final int prime = 31;
-			int result = 1;
-			result = prime * result + Arrays.hashCode(selector);
-			result = prime * result + Arrays.hashCode(signature);
-			return result;
-		}
-
-		public void persistXML(Document document, Element parent) {
-			Element method = document.createElement(IApiXmlConstants.ELEMENT_METHOD);
-			parent.appendChild(method);
-			method.setAttribute(IApiXmlConstants.ATTR_NAME, new String(this.selector));
-			method.setAttribute(IApiXmlConstants.ATTR_SIGNATURE, new String(this.signature));
-			method.setAttribute(IApiXmlConstants.ATTR_STATUS, Integer.toString(getStatus()));
-		}
-
-		public void persistXML(Document document, Element parent, String OSGiProfileName) {
-			Element method = document.createElement(IApiXmlConstants.ELEMENT_METHOD);
-			parent.appendChild(method);
-			method.setAttribute(IApiXmlConstants.ATTR_NAME, new String(this.selector));
-			method.setAttribute(IApiXmlConstants.ATTR_SIGNATURE, new String(this.signature));
-			persistAnnotations(method, OSGiProfileName);
-		}
-
-		@Override
-		public String toString() {
-			StringBuilder builder = new StringBuilder();
-			builder.append(
-			if (this.genericSignature != null &amp;&amp; this.genericSignature.length != 0) {
-				builder.append(Signature.toCharArray(this.genericSignature, this.selector, null, true, true));
-			} else {
-				builder.append(Signature.toCharArray(this.signature, this.selector, null, true, true));
-			}
-			return String.valueOf(builder);
-		}
-	}
-
-	static class Package extends AbstractNode implements Comparable<Package> {
-		String name;
-		List<Type> types;
-
-		public Package(String pname) {
-			this.name = pname;
-		}
-		public void addType(Type type) {
-			if (this.types == null) {
-				this.types = new ArrayList<>();
-			}
-			this.types.add(type);
-		}
-		public void collectTypes(Map<String, Type> result) {
-			Collections.sort(this.types);
-			for (Type type : this.types) {
-				String typeName = new String(type.name);
-				result.put(typeName, type);
-			}
-		}
-		@Override
-		public int compareTo(Package package1) {
-			return this.name.compareTo(package1.name);
-		}
-		@Override
-		public boolean equals(Object obj) {
-			if (this == obj) {
-				return true;
-			}
-			if (obj == null) {
-				return false;
-			}
-			if (!(obj instanceof Package)) {
-				return false;
-			}
-			Package other = (Package) obj;
-			if (name == null) {
-				if (other.name != null) {
-					return false;
-				}
-			} else if (!name.equals(other.name)) {
-				return false;
-			}
-			return true;
-		}
-
-		public Type getType(Type typeToFind) {
-			if (this.types == null) {
-				return null;
-			}
-			int index = this.types.indexOf(typeToFind);
-			if (index != -1) {
-				return this.types.get(index);
-			}
-			return null;
-		}
-		@Override
-		public int hashCode() {
-			final int prime = 31;
-			int result = 1;
-			result = prime * result + ((name == null) ? 0 : name.hashCode());
-			return result;
-		}
-		public void persistAsClassStubsForZip(ZipOutputStream zipOutputStream, ProfileInfo info) throws IOException {
-			if (this.types == null) {
-				return;
-			}
-			Collections.sort(this.types);
-			for (Type type : this.types) {
-				StringBuilder buffer = new StringBuilder(this.name.replace('.', '/'));
-				String simpleName = type.getSimpleName();
-				buffer.append('/').append(simpleName.replace('.', '$'));
-				byte[] classFileBytes = info.getClassFileBytes(type);
-				if (classFileBytes != null) {
-					Util.writeZipFileEntry(zipOutputStream, String.valueOf(buffer), classFileBytes);
-				}
-			}
-		}
-		public void persistXML(Document document, Element element, String OSGiProfileName) {
-			Element pkg = document.createElement(IApiXmlConstants.ELEMENT_PACKAGE);
-			pkg.setAttribute(IApiXmlConstants.ATTR_NAME, this.name);
-			element.appendChild(pkg);
-			if (this.types == null) {
-				return;
-			}
-			Collections.sort(this.types);
-			for (Iterator<Type> iterator2 = this.types.iterator(); iterator2.hasNext();) {
-				iterator2.next().persistXML(document, pkg, OSGiProfileName);
-			}
-		}
-		public int size() {
-			return this.types == null ? 0 : this.types.size();
-		}
-		@Override
-		public String toString() {
-			StringBuilder builder = new StringBuilder();
-			builder.append(
-			builder.append(this.name).append(Util.LINE_SEPARATOR);
-			return String.valueOf(builder);
-		}
-	}
-
-	static class ProfileInfo {
-		private static final String BLACK_LIST_NAME = 
-		private static final String CDC_SUBDIR = 
-		private static final String JRE_SUBDIR = 
-		private static final String OSGI_SUBDIR = 
-		private static final String OTHER_PACKAGES = 
-
-		private static boolean checkDocStatus(ProfileInfo info, Type type, ZipFile docZip, String docURL, String docRoot) {
-			if (docZip == null &amp;&amp; docURL == null) {
-				// if no doc to validate we accept it if on white list
-				if (DEBUG) {
-					System.out.println(
-				}
-				return info.isOnWhiteList(type);
-			}
-			String typeName = getDocTypeName(docRoot, type);
-			if (DEBUG) {
-				System.out.println(
-			}
-			if (docZip == null) {
-				char[] contents = info.getOnlineDocContents(docURL, typeName);
-				if (contents == null) {
-					if (DEBUG) {
-						System.out.println(
-					}
-					return info.isOnWhiteList(type);
-				}
-				return true;
-			}
-			return docZip.getEntry(typeName) != null || info.isOnWhiteList(type);
-		}
-
-		public static String getDocTypeName(String docRoot, Type type) {
-			StringBuilder buffer = new StringBuilder(docRoot);
-			char[] typeNameForDoc = CharOperation.replaceOnCopy(type.name, '.', '/');
-			typeNameForDoc = CharOperation.replaceOnCopy(typeNameForDoc, '$', '.');
-			buffer.append(typeNameForDoc);
-			buffer.append(
-			return String.valueOf(buffer);
-		}
-
-		public static ProfileInfo getProfileInfo(String profileName, String jreLib, String osgiProfile, String jreDoc, String jreURL, String docRoot, String cacheLocation, String whiteList) {
-			ProfileInfo info = new ProfileInfo(profileName, jreLib, osgiProfile, jreDoc, jreURL, docRoot, cacheLocation, whiteList);
-			if (info.getProfileName() == null) {
-				return null;
-			}
-			return info;
-		}
-
-		private static Set<String> initializePackages(String fileName) {
-			Set<String> knownPackages = null;
-			try {
-				Properties allProperties = new Properties();
-				BufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(fileName));
-				allProperties.load(inputStream);
-				inputStream.close();
-				String property = allProperties.getProperty(OTHER_PACKAGES);
-				if (property != null &amp;&amp; property.length() != 0) {
-					String[] packages = property.split(
-					for (String package1 : packages) {
-						if (knownPackages == null) {
-							knownPackages = new LinkedHashSet<>();
-						}
-						knownPackages.add(package1);
-					}
-				} else {
-					knownPackages = Collections.emptySet();
-				}
-			} catch (IOException e) {
-				// ignore
-			}
-			return knownPackages;
-		}
-		private static Set<String> initializeWhiteList(String fileName) {
-			if (fileName == null) {
-				return Collections.emptySet();
-			}
-			Set<String> values = new HashSet<>();
-			try (LineNumberReader reader = new LineNumberReader(new BufferedReader(new FileReader(fileName)))) {
-				String line;
-				while ((line = reader.readLine()) != null) {
-					String trimmedLine = line.trim();
-					if (!trimmedLine.isEmpty()) {
-						// only non-empty lines are added trimmed on both ends
-						values.add(trimmedLine);
-					}
-				}
-			} catch (IOException e) {
-				// ignore
-			}
-			return values;
-		}
-
-		File[] allFiles;
-		// set of type names that don't have javadoc
-		Set<String> blackList;
-		String cacheLocation;
-		Map<String, Package> data;
-		String docRoot;
-		long generatedSize;
-		String JREdoc;
-		String JRElib;
-		String JREURL;
-
-		String OSGiProfile;
-		String profileName;
-		long totalSize;
-
-		Set<String> whiteList;
-
-		private ProfileInfo(String profilename, String jreLib, String osgiProfile, String jreDoc, String jreURL, String docroot, String cacheloc, String whitelist) {
-			this.JREdoc = jreDoc;
-			this.JREURL = jreURL;
-			this.JRElib = jreLib;
-			this.OSGiProfile = osgiProfile;
-			this.docRoot = docroot;
-			this.profileName = profilename;
-			this.cacheLocation = cacheloc;
-			this.whiteList = initializeWhiteList(whitelist);
-		}
-
-		private void addToBlackList(String typeName) {
-			if (this.blackList != null) {
-				this.blackList.add(typeName);
-				return;
-			}
-			this.blackList = new TreeSet<>();
-			this.blackList.add(typeName);
-		}
-
-		public void dumpToCache(String typeName, char[] contents) {
-			if (!CACHE_ENABLED || this.cacheLocation == null) {
-				return;
-			}
-			File cacheDir = new File(this.cacheLocation);
-			if (!cacheDir.exists()) {
-				if (!cacheDir.mkdirs()) {
-					System.err.println(
-					return;
-				}
-			}
-			File profileCache = new File(cacheDir, getProfileFileName());
-			if (!profileCache.exists()) {
-				if (!profileCache.mkdirs()) {
-					System.err.println(
-					return;
-				}
-			}
-			File docType = new File(profileCache, typeName);
-			if (docType.exists()) {
-				// already in the cache
-				return;
-			} else {
-				File parentFile = docType.getParentFile();
-				if (!parentFile.exists()) {
-					if (!parentFile.mkdirs()) {
-						System.err.println(
-						return;
-					}
-				}
-				try (BufferedWriter writer = new BufferedWriter(new FileWriter(docType))) {
-					writer.write(contents);
-					writer.flush();
-				} catch (IOException e) {
-					e.printStackTrace();
-				}
-			}
-		}
-
-		void generateEEDescription(String outputDir) {
-			if (this.data == null) {
-				System.err.println(
-				return;
-			}
-			String subDir = getSubDir();
-			persistData(outputDir, subDir);
-			persistDataAsClassFilesInZipFormat(outputDir, subDir);
-		}
-
-		public Map<String, Type> getAllTypes() {
-			Map<String, Type> result = new LinkedHashMap<>();
-			Set<String> keySet = this.data.keySet();
-			String[] sortedKeys = new String[keySet.size()];
-			keySet.toArray(sortedKeys);
-			Arrays.sort(sortedKeys);
-			for (String key : sortedKeys) {
-				Package package1 = this.data.get(key);
-				if (package1 != null) {
-					package1.collectTypes(result);
-				} else {
-					System.err.println(
-				}
-			}
-			return result;
-		}
-
-		private File getCacheRoot() {
-			File cacheDir = new File(this.cacheLocation);
-			if (cacheDir.exists() || cacheDir.mkdirs()) {
-				File profileCache = new File(cacheDir, getProfileFileName());
-				if (profileCache.exists() || profileCache.mkdirs()) {
-					return profileCache;
-				}
-			}
-			return null;
-		}
-
-		public byte[] getClassFileBytes(Type type) {
-			if (this.allFiles == null) {
-				throw new IllegalStateException(
-			}
-			String typeName = new String(type.name);
-			byte[] classFileBytes = null;
-			try {
-				String zipFileEntryName = typeName.replace('.', '/') + 
-				loop: for (int i = 0, max = this.allFiles.length; i < max; i++) {
-					if (allFiles[i].toString().endsWith(
-						zipFileEntryName = 
-					}
-					try (ZipFile zipFile = new ZipFile(allFiles[i])) {
-						ZipEntry zipEntry = zipFile.getEntry(zipFileEntryName);
-						if (zipEntry == null) {
-							continue loop;
-						}
-						try (InputStream inputStream = new BufferedInputStream(zipFile.getInputStream(zipEntry))) {
-							classFileBytes = Util.getInputStreamAsByteArray(inputStream, -1);
-							break loop;
-						}
-					}
-				}
-			} catch (ZipException e) {
-				e.printStackTrace();
-			} catch (IOException e) {
-				e.printStackTrace();
-			}
-			if (classFileBytes == null) {
-				throw new IllegalStateException(
-			}
-			ClassReader classReader = new ClassReader(classFileBytes);
-			StubClassAdapter visitor = new StubClassAdapter(type);
-			classReader.accept(visitor, ClassReader.SKIP_DEBUG);
-			if (visitor.shouldIgnore()) {
-				return null;
-			}
-
-			return visitor.getStub().getBytes();
-		}
-
-		public char[] getFromCache(String typeName) {
-			if (!CACHE_ENABLED || this.cacheLocation == null) {
-				return null;
-			}
-			File profileCache = getCacheRoot();
-			if (profileCache != null) {
-				File docType = new File(profileCache, typeName);
-				if (docType.exists()) {
-					try (BufferedInputStream stream = new BufferedInputStream(new FileInputStream(docType))) {
-						return Util.getInputStreamAsCharArray(stream, -1, null);
-					} catch (IOException e) {
-						e.printStackTrace();
-					}
-				}
-			}
-			return null;
-		}
-
-		char[] getOnlineDocContents(String docURL, String typeName) {
-			// check the doc online
-			String typeDocURL = docURL + typeName;
-			char[] contents = this.getFromCache(typeName);
-			if (contents == null &amp;&amp; !ONLY_USE_CACHE) {
-				// check the black list
-				if (this.isOnBlackList(typeName)) {
-					return null;
-				}
-				contents = Util.getURLContents(typeDocURL);
-				if (contents == null) {
-					this.addToBlackList(typeName);
-					return null;
-				} else {
-					this.dumpToCache(typeName, contents);
-				}
-			}
-			return contents;
-		}
-
-		public String getProfileFileName() {
-			return Util.getProfileFileName(getProfileName());
-		}
-
-		public String getProfileName() {
-			return this.profileName;
-		}
-
-		private String getSubDir() {
-			if (Util.getProfileFileName(ProfileModifiers.CDC_1_0_FOUNDATION_1_0_NAME).equals(this.profileName) || Util.getProfileFileName(ProfileModifiers.CDC_1_1_FOUNDATION_1_1_NAME).equals(this.profileName)) {
-				return CDC_SUBDIR;
-			} else if (Util.getProfileFileName(ProfileModifiers.OSGI_MINIMUM_1_0_NAME).equals(this.profileName) || Util.getProfileFileName(ProfileModifiers.OSGI_MINIMUM_1_1_NAME).equals(this.profileName) || Util.getProfileFileName(ProfileModifiers.OSGI_MINIMUM_1_2_NAME).equals(this.profileName)) {
-				return OSGI_SUBDIR;
-			} else {
-				return JRE_SUBDIR;
-			}
-		}
-
-		private Set<String> initializeBlackList() {
-			File cacheRoot = getCacheRoot();
-			File blackListFile = new File(cacheRoot, BLACK_LIST_NAME);
-			Set<String> values = new TreeSet<>();
-			if (blackListFile.exists()) {
-				try (LineNumberReader reader = new LineNumberReader(
-						new BufferedReader(new FileReader(blackListFile)))) {
-					String line;
-					while ((line = reader.readLine()) != null) {
-						String trimmedLine = line.trim();
-						if (!trimmedLine.isEmpty()) {
-							// only non-empty lines are added trimmed on both
-							// ends
-							values.add(trimmedLine);
-						}
-					}
-				} catch (IOException e) {
-					// ignore
-				}
-			}
-			return values;
-		}
-
-		public void initializeData() throws IOException {
-			String pname = this.getProfileName();
-			if (pname == null) {
-				// invalid profile info
-				System.err.println(
-				return;
-			}
-
-			if (DEBUG) {
-				System.out.println(
-			}
-			long time = System.currentTimeMillis();
-			this.allFiles = Util.getAllFiles(new File(this.JRElib),
-					pathname -> pathname.isDirectory() || pathname.getName().toLowerCase().endsWith(
-							|| pathname.getName().toLowerCase().endsWith(
-			if (allFiles == null) {
-				System.err.println(
-				return;
-			}
-			// initialize known packages
-			String osgiProfileName = this.OSGiProfile;
-			Set<String> knownPackages = initializePackages(osgiProfileName);
-			// known packages should be part of the white list by default
-			if (this.whiteList != null &amp;&amp; !this.whiteList.isEmpty()) {
-				this.whiteList.addAll(knownPackages);
-			} else {
-				this.whiteList = Collections.unmodifiableSet(knownPackages);
-			}
-			Map<String, Type> allVisibleTypes = new LinkedHashMap<>();
-			Map<String, Type> allTypes = new LinkedHashMap<>();
-			this.totalSize = 0;
-			for (File currentFile : allFiles) {
-				this.totalSize += currentFile.length();
-
-				try (ZipFile zipFile = new ZipFile(currentFile)) {
-					for (Enumeration<? extends ZipEntry> enumeration = zipFile.entries(); enumeration.hasMoreElements();) {
-						ZipEntry zipEntry = enumeration.nextElement();
-						if (!zipEntry.getName().endsWith(
-						 {
-							continue;
-						}
-						InputStream inputStream = new BufferedInputStream(zipFile.getInputStream(zipEntry));
-						IClassFileReader classFileReader = null;
-						try {
-							classFileReader = ToolFactory.createDefaultClassFileReader(inputStream, IClassFileReader.ALL_BUT_METHOD_BODIES);
-						} finally {
-							inputStream.close();
-						}
-						if (classFileReader == null) {
-							continue;
-						}
-						char[] className = classFileReader.getClassName();
-						char[] packageName = null;
-						int lastIndexOf = CharOperation.lastIndexOf('/', className);
-						if (lastIndexOf == -1) {
-							packageName = new char[0];
-						} else {
-							packageName = CharOperation.subarray(className, 0, lastIndexOf);
-						}
-						if (this.isMatching(knownPackages, packageName)) {
-							Type type = Type.newType(this, classFileReader, this.JREdoc, this.JREURL, this.docRoot);
-							if (type != null) {
-								if (type.isProtected() || type.isPublic()) {
-									allVisibleTypes.put(type.getFullQualifiedName(), type);
-								}
-								allTypes.put(type.getFullQualifiedName(), type);
-							}
-						}
-					}
-				}
-			}
-			// list all results
-			List<Type> visibleTypes = new ArrayList<>();
-			visibleTypes.addAll(allVisibleTypes.values());
-			// check transitive closure to make sure all methods/fields from
-			// superclass are visible when resolving fields/methods
-			while (!visibleTypes.isEmpty()) {
-				Type type = visibleTypes.remove(0);
-				String superclassName = type.getSuperclassName();
-				while (superclassName != null) {
-					if (allVisibleTypes.get(superclassName) == null) {
-						// look for required type
-						Type currentSuperclass = allTypes.get(superclassName);
-						if (currentSuperclass == null) {
-							if (DEBUG) {
-								System.out.println(
-							}
-							break;
-						} else {
-							allVisibleTypes.put(currentSuperclass.getFullQualifiedName(), currentSuperclass);
-							visibleTypes.add(currentSuperclass);
-							if (DEBUG) {
-								System.out.println(
-							}
-						}
-					}
-					Type superclass = allVisibleTypes.get(superclassName);
-					superclassName = superclass.getSuperclassName();
-				}
-			}
-			List<Type> isInDoc = new ArrayList<>();
-			ZipFile docZip = null;
-			if (this.JREdoc != null) {
-				try {
-					docZip = new ZipFile(this.JREdoc);
-				} catch (FileNotFoundException e) {
-					// no zip file
-				}
-			}
-			try {
-				for (Type type : allVisibleTypes.values()) {
-					if (checkDocStatus(this, type, docZip, this.JREURL, this.docRoot)) {
-						isInDoc.add(type);
-					}
-				}
-			} finally {
-				if (docZip != null) {
-					docZip.close();
-				}
-			}
-			HashMap<String, Package> typesPerPackage = new LinkedHashMap<>();
-			for (Type type : isInDoc) {
-				String packageName = type.getPackage();
-				Package package1 = typesPerPackage.get(packageName);
-				if (package1 == null) {
-					package1 = new Package(packageName);
-					typesPerPackage.put(packageName, package1);
-				}
-				package1.addType(type);
-			}
-			this.data = typesPerPackage;
-			if (DEBUG) {
-				System.out.println(
-			}
-
-			if (this.blackList != null) {
-				// persist black list
-				this.persistBlackList();
-			}
-		}
-
-		private boolean isMatching(Set<String> knownPackages, char[] packageName) {
-			if (CharOperation.indexOf(
-				return true;
-			}
-			if (knownPackages.isEmpty()) {
-				return false;
-			}
-			String currentPackage = new String(CharOperation.replaceOnCopy(packageName, '/', '.'));
-			return knownPackages.contains(currentPackage) || this.isOnWhiteList(currentPackage);
-		}
-
-		private boolean isOnBlackList(String typeName) {
-			if (this.blackList != null) {
-				return this.blackList.contains(typeName);
-			}
-			// retrieve black list if it exists
-			this.blackList = initializeBlackList();
-			return this.blackList.contains(typeName);
-		}
-		private boolean isOnWhiteList(String packageName) {
-			return packageName.startsWith(
-		}
-		private boolean isOnWhiteList(Type type) {
-			return isOnWhiteList(type.getPackage());
-		}
-		private void persistBlackList() {
-			if (this.blackList == null || this.blackList.isEmpty()) {
-				return;
-			}
-			File cacheRoot = getCacheRoot();
-			File blackListFile = new File(cacheRoot, BLACK_LIST_NAME);
-			if (!blackListFile.exists()) {
-				try (PrintWriter writer = new PrintWriter(new BufferedWriter(new FileWriter(blackListFile)));) {
-					for (Iterator<String> iterator = this.blackList.iterator(); iterator.hasNext();) {
-						writer.println(iterator.next());
-					}
-					writer.flush();
-				} catch (IOException e) {
-					// ignore
-				}
-			}
-		}
-
-		private void persistChildren(Document document, Element xmlElement, Map<String, Package> packageMap, String OSGiProfileName) {
-			Set<String> keySet = packageMap.keySet();
-			String[] sortedKeys = new String[keySet.size()];
-			keySet.toArray(sortedKeys);
-			Arrays.sort(sortedKeys);
-			for (String key : sortedKeys) {
-				Package package1 = packageMap.get(key);
-				if (package1 != null) {
-					package1.persistXML(document, xmlElement, OSGiProfileName);
-				} else {
-					System.err.println(
-				}
-			}
-		}
-
-		private void persistChildrenAsClassFile(ZipOutputStream zipOutputStream, Map<String, Package> packageMap, ProfileInfo info) throws IOException {
-			Set<String> keySet = packageMap.keySet();
-			String[] sortedKeys = new String[keySet.size()];
-			keySet.toArray(sortedKeys);
-			Arrays.sort(sortedKeys);
-			for (String key : sortedKeys) {
-				Package package1 = packageMap.get(key);
-				if (package1 != null) {
-					package1.persistAsClassStubsForZip(zipOutputStream, info);
-				} else {
-					System.err.println(
-				}
-			}
-		}
-		private void persistData(String rootName, String subDirName) {
-			try {
-				Document document = org.eclipse.pde.api.tools.internal.util.Util.newDocument();
-				Element component = document.createElement(IApiXmlConstants.ELEMENT_COMPONENT);
-				String profileName2 = this.getProfileName();
-				component.setAttribute(IApiXmlConstants.ATTR_ID, profileName2);
-				component.setAttribute(IApiXmlConstants.ATTR_VERSION, IApiXmlConstants.API_DESCRIPTION_CURRENT_VERSION);
-				document.appendChild(component);
-				persistChildren(document, component, this.data, profileName2);
-				String contents = org.eclipse.pde.api.tools.internal.util.Util.serializeDocument(document);
-				String fileName = profileName2 + 
-				Util.write(rootName, subDirName, fileName, contents);
-			} catch (DOMException e) {
-				e.printStackTrace();
-			} catch (CoreException e) {
-				e.printStackTrace();
-			}
-		}
-
-		private void persistDataAsClassFilesInZipFormat(String rootName, String subDirName) {
-			ZipOutputStream zipOutputStream = null;
-			String profileName2 = this.getProfileFileName();
-			File root = new File(rootName);
-			if (!root.exists()) {
-				root.mkdirs();
-			}
-			File subDir = new File(root, subDirName);
-			if (!subDir.exists()) {
-				subDir.mkdir();
-			}
-			if (profileName2.indexOf('/') != 0) {
-				profileName2 = profileName2.replace('/', '_');
-			}
-			File file = new File(subDir, profileName2 + 
-			try {
-				zipOutputStream = Util.getOutputStream(file);
-			} catch (FileNotFoundException e) {
-				e.printStackTrace();
-			}
-			if (zipOutputStream == null) {
-				System.err.println(
-				return;
-			}
-			try {
-				persistChildrenAsClassFile(zipOutputStream, this.data, this);
-				zipOutputStream.flush();
-			} catch (IOException e) {
-				e.printStackTrace();
-			} finally {
-				try {
-					zipOutputStream.close();
-				} catch (IOException e) {
-					// ignore
-				}
-			}
-			this.generatedSize = file.length();
-			System.out.println(
-			System.out.println(
-			System.out.println(
-		}
-		@Override
-		public String toString() {
-			return this.getProfileName();
-		}
-	}
-
-	static class StubClass {
-		private static final int CURRENT_VERSION = 3;
-		int access;
-		int classNameIndex;
-		List<StubField> fields;
-
-		int[] interfacesIndexes;
-		List<StubMethod> methods;
-		Map<String, Integer> pool;
-		int poolIndex;
-		int superNameIndex;
-
-		public StubClass(int acc, String className2, String superName2, String[] interfaces2) {
-			this.access = acc;
-			this.pool = new LinkedHashMap<>();
-			this.classNameIndex = getIndex(className2);
-			this.superNameIndex = superName2 != null ? getIndex(superName2) : -1;
-			if (interfaces2 != null) {
-				this.interfacesIndexes = new int[interfaces2.length];
-				for (int i = 0; i < interfaces2.length; i++) {
-					this.interfacesIndexes[i] = getIndex(interfaces2[i]);
-				}
-			}
-		}
-
-		public void addField(String fieldName) {
-			if (this.fields == null) {
-				this.fields = new ArrayList<>();
-			}
-			this.fields.add(new StubField(getIndex(fieldName)));
-		}
-
-		public StubMethod addMethod(String methodName, String desc) {
-			if (this.methods == null) {
-				this.methods = new ArrayList<>();
-			}
-			StubMethod method = new StubMethod(getIndex(methodName), getIndex(desc));
-			this.methods.add(method);
-			return method;
-		}
-
-		public byte[] getBytes() {
-			ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
-
-			try (DataOutputStream outputStream = new DataOutputStream(byteArrayOutputStream)) {
-				outputStream.writeShort(CURRENT_VERSION);
-				outputStream.writeShort(this.poolIndex);
-				for (Entry<String, Integer> next : this.pool.entrySet()) {
-					outputStream.writeUTF(next.getKey());
-					outputStream.writeShort(next.getValue().intValue());
-				}
-				outputStream.writeChar(this.access);
-				outputStream.writeShort(this.classNameIndex);
-				outputStream.writeShort(this.superNameIndex);
-				int length = this.interfacesIndexes != null ? this.interfacesIndexes.length : 0;
-				outputStream.writeShort(length);
-				for (int i = 0; i < length; i++) {
-					outputStream.writeShort(this.interfacesIndexes[i]);
-				}
-				int fieldsLength = this.fields == null ? 0 : this.fields.size();
-				outputStream.writeShort(fieldsLength);
-				for (int i = 0; i < fieldsLength; i++) {
-					outputStream.writeShort(this.fields.get(i).nameIndex);
-				}
-				int methodsLength = this.methods == null ? 0 : this.methods.size();
-				outputStream.writeShort(methodsLength);
-				for (int i = 0; i < methodsLength; i++) {
-					StubMethod stubMethod = this.methods.get(i);
-					outputStream.writeShort(stubMethod.selectorIndex);
-					outputStream.writeShort(stubMethod.signatureIndex);
-					outputStream.writeByte(stubMethod.isPolymorphic ? 1 : 0);
-				}
-				outputStream.flush();
-			} catch (IOException e) {
-				e.printStackTrace();
-			}
-			this.pool = null;
-			this.fields = null;
-			this.methods = null;
-			return byteArrayOutputStream.toByteArray();
-		}
-
-		private int getIndex(String name) {
-			Integer integer = this.pool.get(name);
-			if (integer != null) {
-				return integer.intValue();
-			}
-			int value = this.poolIndex++;
-			this.pool.put(name, Integer.valueOf(value));
-			return value;
-		}
-	}
-
-	/**
-	 * Class adapter
-	 */
-	static class StubClassAdapter extends ClassVisitor {
-		static final int IGNORE_CLASS_FILE = 0x100;
-
-		int flags;
-		String name;
-		StubClass stub;
-		Type type;
-
-		/**
-		 * Constructor
-		 * @param stubtype
-		 */
-		public StubClassAdapter(Type stubtype) {
-			super(Opcodes.ASM6, new ClassWriter(0));
-			this.type = stubtype;
-		}
-
-		public StubClass getStub() {
-			return this.stub;
-		}
-
-		/**
-		 * @return if this class file should be ignored or not
-		 */
-		public boolean shouldIgnore() {
-			return (this.flags &amp; IGNORE_CLASS_FILE) != 0;
-		}
-
-		@Override
-		public void visit(int version, int access, String className, String signature, String superName, String[] interfaces) {
-			this.name = className;
-			this.stub = new StubClass(access, className, superName, interfaces);
-		}
-
-		@Override
-		public AnnotationVisitor visitAnnotation(String arg0, boolean arg1) {
-			return null;
-		}
-
-		@Override
-		public void visitAttribute(Attribute attr) {
-			if (
-				this.flags |= IGNORE_CLASS_FILE;
-			}
-		}
-
-		@Override
-		public void visitEnd() {
-		}
-
-		@Override
-		public FieldVisitor visitField(int access, String fieldName, String desc, String signature, Object value) {
-			if (type.getField(fieldName) == null) {
-				return null;
-			}
-			this.stub.addField(fieldName);
-			return null;
-		}
-
-		@Override
-		public void visitInnerClass(String innerClassName, String outerName, String innerName, int access) {
-			if (this.name.equals(innerClassName) &amp;&amp; (outerName == null)) {
-				// local class
-				this.flags |= IGNORE_CLASS_FILE;
-			}
-		}
-
-		@Override
-		public MethodVisitor visitMethod(int access, String methodName, String desc, String signature, String[] exceptions) {
-			if (
-				return null;
-			}
-			if ((access &amp; (Opcodes.ACC_PUBLIC | Opcodes.ACC_PROTECTED)) == 0) {
-				return null;
-			}
-			if (((access &amp; Opcodes.ACC_BRIDGE) != 0) || ((access &amp; Opcodes.ACC_SYNTHETIC) != 0)) {
-				return null;
-			}
-			if (this.type.getMethod(methodName, desc) == null) {
-				return null;
-			}
-			final StubMethod method = this.stub.addMethod(methodName, desc);
-			return new MethodVisitor(Opcodes.ASM6, super.visitMethod(access, methodName, desc, signature, exceptions)) {
-				@Override
-				public AnnotationVisitor visitAnnotation(String sig, boolean visible) {
-					if (visible &amp;&amp; 
-						method.isPolymorphic();
-					}
-					return super.visitAnnotation(sig, visible);
-				}
-			};
-		}
-		@Override
-		public void visitOuterClass(String arg0, String arg1, String arg2) {
-			// ignore
-		}
-		@Override
-		public void visitSource(String arg0, String arg1) {
-			// ignore
-		}
-	}
-
-	static class StubField {
-		int nameIndex;
-
-		public StubField(int index) {
-			this.nameIndex = index;
-		}
-	}
-
-	static class StubMethod {
-		boolean isPolymorphic;
-		int selectorIndex;
-		int signatureIndex;
-
-		public StubMethod(int selectorindex, int sigindex) {
-			this.selectorIndex = selectorindex;
-			this.signatureIndex = sigindex;
-		}
-
-		public void isPolymorphic() {
-			this.isPolymorphic = true;
-		}
-	}
-
-	static class Type extends AbstractNode implements Comparable<Type> {
-
-		static boolean isFinal(int accessFlags) {
-			return (accessFlags &amp; Flags.AccFinal) != 0;
-		}
-		static boolean isPrivate(int accessFlags) {
-			return (accessFlags &amp; Flags.AccPrivate) != 0;
-		}
-		static boolean isProtected(int accessFlags) {
-			return (accessFlags &amp; Flags.AccProtected) != 0;
-		}
-		static boolean isPublic(int accessFlags) {
-			return (accessFlags &amp; Flags.AccPublic) != 0;
-		}
-		static boolean isStatic(int accessFlags) {
-			return (accessFlags &amp; Flags.AccStatic) != 0;
-		}
-
-		private static boolean isVisibleField(int typeAccessFlags, int fieldAccessFlags) {
-			if (isPublic(fieldAccessFlags)) {
-				return true;
-			}
-			if (isProtected(fieldAccessFlags)) {
-				return !isFinal(typeAccessFlags);
-			}
-			return false;
-		}
-
-		private static boolean isVisibleMethod(int typeAccessFlags, int methodAccessFlags) {
-			if (isPublic(methodAccessFlags)) {
-				return true;
-			}
-			if (isProtected(methodAccessFlags)) {
-				return !isFinal(typeAccessFlags);
-			}
-			return false;
-		}
-
-		public static Type newType(ProfileInfo info, IClassFileReader reader, String docZipFileName, String docURL, String docRoot) {
-			IInnerClassesAttribute innerClassesAttribute = reader.getInnerClassesAttribute();
-			if (innerClassesAttribute != null) {
-				// search the right entry
-				IInnerClassesAttributeEntry[] entries = innerClassesAttribute.getInnerClassAttributesEntries();
-				for (IInnerClassesAttributeEntry entry : entries) {
-					char[] innerClassName = entry.getInnerClassName();
-					if (innerClassName != null) {
-						if (CharOperation.equals(reader.getClassName(), innerClassName)) {
-							int accessFlags2 = entry.getAccessFlags();
-							if (isPrivate(accessFlags2)) {
-								return null;
-							}
-						}
-					}
-				}
-			}
-			return new Type(reader, docZipFileName);
-		}
-
-		Set<Field> fields;
-		Set<Method> methods;
-		int modifiers;
-
-		char[] name;
-		char[] superclassName;
-		char[][] superinterfacesNames;
-
-		private Type(IClassFileReader reader, String docZipFileName) {
-			ZipFile docZip = null;
-			try {
-				if (docZipFileName != null) {
-					try {
-						docZip = new ZipFile(docZipFileName);
-					} catch (FileNotFoundException e) {
-						// no zip file
-					}
-				}
-				char[] className = reader.getClassName();
-				className = CharOperation.replaceOnCopy(className, '/', '.');
-				this.name = className;
-				if (DEBUG) {
-					System.out.println(
-				}
-				char[] scname = reader.getSuperclassName();
-				if (scname != null) {
-					scname = CharOperation.replaceOnCopy(scname, '/', '.');
-					this.superclassName = scname;
-				}
-				char[][] interfaceNames = CharOperation.deepCopy(reader.getInterfaceNames());
-				for (char[] interfaceName : interfaceNames) {
-					CharOperation.replace(interfaceName, '/', '.');
-				}
-				this.superinterfacesNames = interfaceNames;
-				this.modifiers = reader.getAccessFlags();
-				IFieldInfo[] fieldInfos = reader.getFieldInfos();
-				int length = fieldInfos.length;
-				for (int i = 0; i < length; i++) {
-					IFieldInfo fieldInfo = fieldInfos[i];
-					if (isVisibleField(this.modifiers, fieldInfo.getAccessFlags())) {
-						if (fields == null) {
-							this.fields = new HashSet<>();
-						}
-						Field field = new Field(fieldInfo.getName(), fieldInfo.getDescriptor());
-						fields.add(field);
-						if (DEBUG) {
-							System.out.println(
-						}
-					}
-				}
-				IMethodInfo[] methodInfos = reader.getMethodInfos();
-				length = methodInfos.length;
-				for (IMethodInfo methodInfo : methodInfos) {
-					IClassFileAttribute[] attributes = methodInfo.getAttributes();
-					ISignatureAttribute signatureAttribute = null;
-					for (IClassFileAttribute currentAttribute : attributes) {
-						if (CharOperation.equals(currentAttribute.getAttributeName(), IAttributeNamesConstants.SIGNATURE)) {
-							signatureAttribute = (ISignatureAttribute) currentAttribute;
-							break;
-						}
-					}
-					char[] signature = null;
-					if (signatureAttribute != null) {
-						signature = signatureAttribute.getSignature();
-					} else {
-						signature = methodInfo.getDescriptor();
-					}
-					int accessFlags = methodInfo.getAccessFlags();
-					if (isVisibleMethod(this.modifiers, accessFlags)) {
-						if (methods == null) {
-							this.methods = new HashSet<>();
-						}
-						Method method = new Method(accessFlags, methodInfo.getName(), methodInfo.getDescriptor(), signatureAttribute == null ? null : signature);
-						methods.add(method);
-						if (DEBUG) {
-							System.out.println(
-						}
-					}
-				}
-			} catch (IOException e) {
-				// no zip file
-				System.err.println(
-			} finally {
-				if (docZip != null) {
-					try {
-						docZip.close();
-					} catch (IOException e) {
-						// ignore
-					}
-				}
-			}
-		}
-
-		public void addField(Field f) {
-			if (this.fields == null) {
-				this.fields = new HashSet<>();
-			}
-			this.fields.add(f);
-		}
-		public void addMethod(Method m) {
-			if (this.methods == null) {
-				this.methods = new HashSet<>();
-			}
-			this.methods.add(m);
-		}
-		@Override
-		public int compareTo(Type type) {
-			return this.getSimpleName().compareTo(type.getSimpleName());
-		}
-
-		@Override
-		public boolean equals(Object obj) {
-			if (this == obj) {
-				return true;
-			}
-			if (obj == null) {
-				return false;
-			}
-			if (!(obj instanceof Type)) {
-				return false;
-			}
-			Type other = (Type) obj;
-			return Arrays.equals(name, other.name);
-		}
-		public Field getField(String fname) {
-			if (this.fields == null) {
-				return null;
-			}
-			Field fieldToFind = new Field(fname.toCharArray(), null);
-			for (Field currentField : this.fields) {
-				if (fieldToFind.equals(currentField)) {
-					return currentField;
-				}
-			}
-			return null;
-		}
-
-		public String getFullQualifiedName() {
-			return String.valueOf(this.name);
-		}
-		public String getSuperclassName() {
-			if (this.superclassName == null) {
-				return null;
-			}
-			return String.valueOf(this.superclassName);
-		}
-		public Method getMethod(String selector, String signature) {
-			if (this.methods == null) {
-				return null;
-			}
-			Method methodToFind = new Method(0, selector.toCharArray(), signature.toCharArray(), null);
-			for (Method currentMethod : this.methods) {
-				if (methodToFind.equals(currentMethod)) {
-					return currentMethod;
-				}
-			}
-			return null;
-		}
-		public String getPackage() {
-			int index = CharOperation.lastIndexOf('.', this.name);
-			return new String(CharOperation.subarray(this.name, 0, index));
-		}
-		public String getSimpleName() {
-			return Util.getSimpleName(this.name);
-		}
-
-		@Override
-		public int hashCode() {
-			final int prime = 31;
-			int result = 1;
-			result = prime * result + Arrays.hashCode(name);
-			return result;
-		}
-
-		public boolean isProtected() {
-			return isProtected(this.modifiers);
-		}
-
-		public boolean isPublic() {
-			return isPublic(this.modifiers);
-		}
-
-		public void persistXML(Document document, Element parent, String OSGiProfileName) {
-			Element type = document.createElement(IApiXmlConstants.ELEMENT_TYPE);
-			parent.appendChild(type);
-			type.setAttribute(IApiXmlConstants.ATTR_NAME, getSimpleName());
-			if (this.superclassName != null) {
-				type.setAttribute(IApiXmlConstants.ATTR_SUPER_CLASS, new String(this.superclassName));
-			}
-			if (this.superinterfacesNames != null &amp;&amp; this.superinterfacesNames.length != 0) {
-				type.setAttribute(IApiXmlConstants.ATTR_SUPER_INTERFACES, Util.getInterfaces(this.superinterfacesNames));
-			}
-			type.setAttribute(IApiXmlConstants.ATTR_INTERFACE, Boolean.toString((this.modifiers &amp; Flags.AccInterface) != 0));
-			persistAnnotations(type, OSGiProfileName);
-			if (this.fields != null) {
-				Field[] allFields = new Field[this.fields.size()];
-				this.fields.toArray(allFields);
-				Arrays.sort(allFields);
-				for (Field allField : allFields) {
-					allField.persistXML(document, type, OSGiProfileName);
-				}
-			}
-			if (this.methods != null) {
-				Method[] allMethods = new Method[this.methods.size()];
-				this.methods.toArray(allMethods);
-				Arrays.sort(allMethods);
-				for (Method allMethod : allMethods) {
-					allMethod.persistXML(document, type, OSGiProfileName);
-				}
-			}
-		}
-		@Override
-		public String toString() {
-			StringBuilder buffer = new StringBuilder();
-			buffer.append(this.getPackage() + 
-			// list all fields
-
-			if (this.fields != null) {
-				Field[] allFields = new Field[this.fields.size()];
-				this.fields.toArray(allFields);
-				Arrays.sort(allFields);
-				for (Field field : allFields) {
-					buffer.append(
-					.append(field).append(Util.LINE_SEPARATOR);
-				}
-			}
-			if (this.methods != null) {
-				Method[] allMethods = new Method[this.methods.size()];
-				this.methods.toArray(allMethods);
-				Arrays.sort(allMethods);
-				for (Method method : allMethods) {
-					buffer.append(
-				}
-			}
-			return String.valueOf(buffer);
-		}
-	}
-	static SortedSet<String> ACCEPTED_EEs;
-	static boolean CACHE_ENABLED = true;
-	static boolean DEBUG = false;
-	static boolean ONLY_USE_CACHE = false;
-	static final String PROPERTY_CACHE_LOCATION = 
-	static final String PROPERTY_DOC_ROOT = 
-	static final String PROPERTY_JRE_DOC = 
-	static final String PROPERTY_JRE_LIB = 
-	static final String PROPERTY_JRE_URL = 
-	static final String PROPERTY_OSGI_PROFILE = 
-	static final String PROPERTY_WHITE_LIST = 
-
-	static {
-		String[] ees = new String[] { 
-				
-				
-				
-				
-				
-				
-				
-				
-				
-				
-				
-				
-				
-		};
-		ACCEPTED_EEs = new TreeSet<>();
-		for (String ee : ees) {
-			ACCEPTED_EEs.add(ee);
-		}
-	}
-	private static String getAllEEValues() {
-		StringBuilder buffer = new StringBuilder();
-		for (String ee : ACCEPTED_EEs) {
-			if (buffer.length() != 0) {
-				buffer.append(
-			}
-			buffer.append(ee);
-		}
-		return String.valueOf(buffer);
-	}
-
-	public static void main(String[] args) {
-		EEGenerator generator = new EEGenerator();
-		generator.configure(args);
-		if (!generator.isInitialized()) {
-			System.err.println(
-			return;
-		}
-		String property = System.getProperty(
-		DEBUG = (property != null) &amp;&amp; 
-		generator.run();
-	}
-	private ProfileInfo[] allProfiles;
-	String configurationFile;
-
-	String[] EEToGenerate;
-
-	String output;
-
-	private boolean checkFileProperty(String property) {
-		if (property == null) {
-			return false;
-		}
-		File jreDocFile = new File(property);
-		return jreDocFile.exists() &amp;&amp; jreDocFile.isFile();
-	}
-
-	private boolean checkJREProperty(String property) {
-		if (property == null) {
-			return false;
-		}
-		File jreLibFolder = new File(property);
-		return jreLibFolder.exists() &amp;&amp; jreLibFolder.isDirectory();
-	}
-
-	private void configure(String[] args) {
-		String currentArg = null;
-		int argCount = args.length;
-		int index = -1;
-		final int DEFAULT = 0;
-		final int OUTPUT = 1;
-		final int CONFIG = 2;
-		final int EEs = 3;
-		int mode = DEFAULT;
-		while (++index < argCount) {
-			currentArg = args[index];
-			switch (mode) {
-				case DEFAULT:
-					if (
-						if (this.output != null)
-						 {
-							throw new IllegalArgumentException(
-						}
-						mode = OUTPUT;
-						continue;
-					}
-					if (
-						if (this.configurationFile != null)
-						 {
-							throw new IllegalArgumentException(
-						}
-						mode = CONFIG;
-						continue;
-					}
-					if (
-						if (this.EEToGenerate != null)
-						 {
-							throw new IllegalArgumentException(
-						}
-						mode = EEs;
-						continue;
-					}
-					// ignore unknown arguments - might be passed in by the
-					// Eclipse application
-					continue;
-				case OUTPUT:
-					this.output = currentArg;
-					mode = DEFAULT;
-					continue;
-				case CONFIG:
-					this.configurationFile = currentArg;
-					mode = DEFAULT;
-					continue;
-				case EEs:
-					String listOfEEs = currentArg;
-					StringTokenizer tokenizer = new StringTokenizer(listOfEEs, 
-				List<String> list = new ArrayList<>();
-					while (tokenizer.hasMoreTokens()) {
-						String currentEE = tokenizer.nextToken().trim();
-						if (ACCEPTED_EEs.contains(currentEE)) {
-							list.add(currentEE);
-						} else {
-							throw new IllegalArgumentException(
-						}
-					}
-					if (!list.isEmpty()) {
-						list.toArray(this.EEToGenerate = new String[list.size()]);
-					}
-					mode = DEFAULT;
-					continue;
-				default:
-					break;
-			}
-		}
-		if (this.output == null) {
-			throw new IllegalArgumentException(
-		}
-		// check output
-		File file = new File(this.output);
-		if (!file.exists()) {
-			if (!file.mkdirs()) {
-				this.output = null;
-				throw new IllegalArgumentException(
-			}
-		}
-		// check configuration file
-		File configuration = new File(this.configurationFile);
-		if (!configuration.exists()) {
-			this.configurationFile = null;
-			throw new IllegalArgumentException(
-		}
-		Properties properties = new Properties();
-		BufferedReader reader = null;
-		try {
-			reader = new BufferedReader(new FileReader(configuration));
-			properties.load(reader);
-		} catch (IOException e) {
-			e.printStackTrace();
-			throw new IllegalArgumentException(
-		} finally {
-			if (reader != null) {
-				try {
-					reader.close();
-				} catch (IOException e) {
-					// ignore
-				}
-			}
-		}
-		List<ProfileInfo> infos = new ArrayList<>();
-		for (String EE : EEToGenerate) {
-			// Retrieve all properties for each EE
-			// JRELIB, OSGI_PROFILE, JRE_DOC, JRE_URL, CACHE, WHITE_LIST
-			String key = EE + PROPERTY_JRE_LIB;
-			String jreLibProperty = properties.getProperty(key, null);
-			if (!checkJREProperty(jreLibProperty)) {
-				throw new IllegalArgumentException(
-			}
-			key = EE + PROPERTY_CACHE_LOCATION;
-			String cacheLocationProperty = properties.getProperty(key, null);
-			if (cacheLocationProperty != null) {
-				if (cacheLocationProperty.isEmpty()) {
-					cacheLocationProperty = null;
-				}
-			}
-			key = EE + PROPERTY_DOC_ROOT;
-			String docRootProperty = properties.getProperty(key, 
-			key = EE + PROPERTY_JRE_DOC;
-			String jreDocProperty = properties.getProperty(key, null);
-			if (jreDocProperty != null &amp;&amp; !jreDocProperty.isEmpty()) {
-				if (!checkFileProperty(jreDocProperty)) {
-					throw new IllegalArgumentException(
-				}
-			} else {
-				jreDocProperty = null;
-			}
-			key = EE + PROPERTY_JRE_URL;
-			String jreUrlProperty = properties.getProperty(key, null);
-			if (jreUrlProperty != null &amp;&amp; !jreUrlProperty.isEmpty()) {
-				if (Util.getURLContents(jreUrlProperty + docRootProperty + 
-					throw new IllegalArgumentException(
-				}
-			} else {
-				jreUrlProperty = null;
-			}
-			key = EE + PROPERTY_OSGI_PROFILE;
-			String osgiProfileProperty = properties.getProperty(key, null);
-			if (osgiProfileProperty != null &amp;&amp; !osgiProfileProperty.isEmpty()) {
-				if (!checkFileProperty(osgiProfileProperty)) {
-					throw new IllegalArgumentException(
-				}
-			} else {
-				osgiProfileProperty = null;
-			}
-			key = EE + PROPERTY_WHITE_LIST;
-			String whiteListProperty = properties.getProperty(key, null);
-			if (whiteListProperty != null &amp;&amp; !whiteListProperty.isEmpty()) {
-				if (!checkFileProperty(whiteListProperty)) {
-					throw new IllegalArgumentException(
-				}
-			} else {
-				whiteListProperty = null;
-			}
-			infos.add(ProfileInfo.getProfileInfo(EE, jreLibProperty, osgiProfileProperty, jreDocProperty, jreUrlProperty, docRootProperty, cacheLocationProperty, whiteListProperty));
-		}
-		if (infos.isEmpty()) {
-			throw new IllegalArgumentException(
-		}
-		infos.toArray(allProfiles = new ProfileInfo[infos.size()]);
-	}
-
-	private boolean isInitialized() {
-		return this.configurationFile != null &amp;&amp; this.EEToGenerate != null &amp;&amp; this.output != null;
-	}
-
-	private void run() {
-		if (allProfiles == null) {
-			System.err.println(
-			return;
-		}
-		int numberOfProfiles = allProfiles.length;
-		for (int i = 0; i < numberOfProfiles; i++) {
-			ProfileInfo profileInfo = allProfiles[i];
-			if (profileInfo != null) {
-				try {
-					profileInfo.initializeData();
-				} catch (IOException e) {
-					e.printStackTrace();
-				}
-				// persist the EE description
-				profileInfo.generateEEDescription(this.output);
-			}
-		}
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.api.tools.generator;
+
+import java.io.BufferedInputStream;
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.ByteArrayOutputStream;
+import java.io.DataOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.LineNumberReader;
+import java.io.PrintWriter;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.Enumeration;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.LinkedHashMap;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+import java.util.Properties;
+import java.util.Set;
+import java.util.SortedSet;
+import java.util.StringTokenizer;
+import java.util.TreeSet;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipException;
+import java.util.zip.ZipFile;
+import java.util.zip.ZipOutputStream;
+
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.jdt.core.Flags;
+import org.eclipse.jdt.core.Signature;
+import org.eclipse.jdt.core.ToolFactory;
+import org.eclipse.jdt.core.compiler.CharOperation;
+import org.eclipse.jdt.core.util.IAttributeNamesConstants;
+import org.eclipse.jdt.core.util.IClassFileAttribute;
+import org.eclipse.jdt.core.util.IClassFileReader;
+import org.eclipse.jdt.core.util.IFieldInfo;
+import org.eclipse.jdt.core.util.IInnerClassesAttribute;
+import org.eclipse.jdt.core.util.IInnerClassesAttributeEntry;
+import org.eclipse.jdt.core.util.IMethodInfo;
+import org.eclipse.jdt.core.util.ISignatureAttribute;
+import org.eclipse.pde.api.tools.generator.util.Util;
+import org.eclipse.pde.api.tools.internal.IApiXmlConstants;
+import org.eclipse.pde.api.tools.internal.provisional.ProfileModifiers;
+import org.objectweb.asm.AnnotationVisitor;
+import org.objectweb.asm.Attribute;
+import org.objectweb.asm.ClassReader;
+import org.objectweb.asm.ClassVisitor;
+import org.objectweb.asm.ClassWriter;
+import org.objectweb.asm.FieldVisitor;
+import org.objectweb.asm.MethodVisitor;
+import org.objectweb.asm.Opcodes;
+import org.w3c.dom.DOMException;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+
+/**
+ * This is a java application to generate the EE descriptions for specified EE
+ * names:
+ * <p>
+ * Accepted names are:
+ * </p>
+ * <ol>
+ * <li>JRE-1.1,</li>
+ * <li>J2SE-1.2,</li>
+ * <li>J2SE-1.3,</li>
+ * <li>J2SE-1.4,</li>
+ * <li>J2SE-1.5,</li>
+ * <li>JavaSE-1.6,</li>
+ * <li>JavaSE-1.7,</li>
+ * <li>JavaSE-1.8,</li>
+ * <li>CDC-1.0_Foundation-1.0,</li>
+ * <li>CDC-1.1_Foundation-1.1,</li>
+ * <li>OSGi_Minimum-1.0</li>,
+ * <li>OSGi_Minimum-1.1,</li>
+ * <li>OSGi_Minimum-1.2.</li>
+ * </ol>
+ * This can be called using: -output c:/EE_descriptions -config
+ * C:\OSGi_profiles\configuration.properties -EEs
+ * JRE-1.1,J2SE-1.2,J2SE-1.3,J2SE-
+ * 1.4,J2SE-1.5,JavaSE-1.6,JavaSE-1.7,JavaSE-1.8,JavaSE-9,CDC-
+ * 1.0_Foundation-1.0,CDC-1.1_Foundation-1.1,OSGi_Minimum-1.0,OSGi_Minimum-1.1,OSGi_Minimum-1.
+ * 2
+ */
+public class EEGenerator {
+	static class AbstractNode {
+		protected int addedProfileValue = -1;
+		protected int removedProfileValue = -1;
+
+		public void persistAnnotations(Element element) {
+			if (this.addedProfileValue != -1) {
+				element.setAttribute(IApiXmlConstants.ATTR_ADDED_PROFILE, Integer.toString(this.addedProfileValue));
+			}
+			if (this.removedProfileValue != -1) {
+				element.setAttribute(IApiXmlConstants.ATTR_REMOVED_PROFILE, Integer.toString(this.removedProfileValue));
+			}
+		}
+
+		public void persistAnnotations(Element element, String OSGiProfileName) {
+			int value = ProfileModifiers.getValue(OSGiProfileName);
+			if (value != -1) {
+				element.setAttribute(IApiXmlConstants.ATTR_PROFILE, Integer.toString(value));
+			}
+		}
+
+		public void setAddedProfileValue(int value) {
+			if (this.addedProfileValue != -1) {
+				System.err.println(
+			}
+			this.addedProfileValue = value;
+		}
+		public void setRemovedProfileValue(int value) {
+			if (this.removedProfileValue != -1) {
+				System.err.println(
+			}
+			this.removedProfileValue = value;
+		}
+	}
+	static class Field extends AbstractNode implements Comparable<Field> {
+		char[] name;
+		char[] type;
+
+		Field(char[] fname, char[] ftype) {
+			this.name = fname;
+			if (ftype != null) {
+				this.type = CharOperation.replaceOnCopy(ftype, '/', '.');
+			}
+		}
+		@Override
+		public int compareTo(Field field) {
+			return CharOperation.compareTo(this.name, field.name);
+		}
+		@Override
+		public boolean equals(Object obj) {
+			if (this == obj) {
+				return true;
+			}
+			if (obj == null) {
+				return false;
+			}
+			if (!(obj instanceof Field)) {
+				return false;
+			}
+			Field other = (Field) obj;
+			return Arrays.equals(name, other.name);
+		}
+
+		public int getStatus() {
+			return -1;
+		}
+
+		@Override
+		public int hashCode() {
+			final int prime = 31;
+			int result = 1;
+			result = prime * result + Arrays.hashCode(name);
+			result = prime * result + Arrays.hashCode(type);
+			return result;
+		}
+
+		public void persistXML(Document document, Element parent) {
+			Element field = document.createElement(IApiXmlConstants.ELEMENT_FIELD);
+			parent.appendChild(field);
+			field.setAttribute(IApiXmlConstants.ATTR_NAME, new String(this.name));
+			field.setAttribute(IApiXmlConstants.ATTR_STATUS, Integer.toString(getStatus()));
+		}
+
+		public void persistXML(Document document, Element parent, String OSGiProfileName) {
+			Element field = document.createElement(IApiXmlConstants.ELEMENT_FIELD);
+			parent.appendChild(field);
+			field.setAttribute(IApiXmlConstants.ATTR_NAME, new String(this.name));
+			persistAnnotations(field, OSGiProfileName);
+		}
+
+		@Override
+		public String toString() {
+			StringBuilder builder = new StringBuilder();
+			builder.append(
+			.append(this.name).append(' ').append(Signature.toCharArray(this.type));
+			return String.valueOf(builder);
+		}
+	}
+	static class Method extends AbstractNode implements Comparable<Method> {
+		public static final char[] NO_GENERIC_SIGNATURE = new char[0];
+		char[] genericSignature;
+		int modifiers;
+		char[] selector;
+		char[] signature;
+
+		Method(int mods, char[] select, char[] sig, char[] genericsig) {
+			this.selector = select;
+			this.signature = sig;
+			this.modifiers = mods;
+			if (genericsig == null) {
+				this.genericSignature = NO_GENERIC_SIGNATURE;
+			} else {
+				this.genericSignature = genericsig;
+			}
+		}
+		@Override
+		public int compareTo(Method method) {
+			int compare = CharOperation.compareTo(this.selector, method.selector);
+			if (compare == 0) {
+				int compareTo = CharOperation.compareTo(this.signature, method.signature);
+				if (compareTo == 0) {
+					return this.getStatus() - method.getStatus();
+				}
+				return compareTo;
+			}
+			return compare;
+		}
+
+		@Override
+		public boolean equals(Object obj) {
+			if (this == obj) {
+				return true;
+			}
+			if (obj == null) {
+				return false;
+			}
+			if (!(obj instanceof Method)) {
+				return false;
+			}
+			Method other = (Method) obj;
+			if (!Arrays.equals(selector, other.selector)) {
+				return false;
+			}
+			return Arrays.equals(signature, other.signature);
+		}
+
+		public int getStatus() {
+			return -1;
+		}
+
+		@Override
+		public int hashCode() {
+			final int prime = 31;
+			int result = 1;
+			result = prime * result + Arrays.hashCode(selector);
+			result = prime * result + Arrays.hashCode(signature);
+			return result;
+		}
+
+		public void persistXML(Document document, Element parent) {
+			Element method = document.createElement(IApiXmlConstants.ELEMENT_METHOD);
+			parent.appendChild(method);
+			method.setAttribute(IApiXmlConstants.ATTR_NAME, new String(this.selector));
+			method.setAttribute(IApiXmlConstants.ATTR_SIGNATURE, new String(this.signature));
+			method.setAttribute(IApiXmlConstants.ATTR_STATUS, Integer.toString(getStatus()));
+		}
+
+		public void persistXML(Document document, Element parent, String OSGiProfileName) {
+			Element method = document.createElement(IApiXmlConstants.ELEMENT_METHOD);
+			parent.appendChild(method);
+			method.setAttribute(IApiXmlConstants.ATTR_NAME, new String(this.selector));
+			method.setAttribute(IApiXmlConstants.ATTR_SIGNATURE, new String(this.signature));
+			persistAnnotations(method, OSGiProfileName);
+		}
+
+		@Override
+		public String toString() {
+			StringBuilder builder = new StringBuilder();
+			builder.append(
+			if (this.genericSignature != null &amp;&amp; this.genericSignature.length != 0) {
+				builder.append(Signature.toCharArray(this.genericSignature, this.selector, null, true, true));
+			} else {
+				builder.append(Signature.toCharArray(this.signature, this.selector, null, true, true));
+			}
+			return String.valueOf(builder);
+		}
+	}
+
+	static class Package extends AbstractNode implements Comparable<Package> {
+		String name;
+		List<Type> types;
+
+		public Package(String pname) {
+			this.name = pname;
+		}
+		public void addType(Type type) {
+			if (this.types == null) {
+				this.types = new ArrayList<>();
+			}
+			this.types.add(type);
+		}
+		public void collectTypes(Map<String, Type> result) {
+			Collections.sort(this.types);
+			for (Type type : this.types) {
+				String typeName = new String(type.name);
+				result.put(typeName, type);
+			}
+		}
+		@Override
+		public int compareTo(Package package1) {
+			return this.name.compareTo(package1.name);
+		}
+		@Override
+		public boolean equals(Object obj) {
+			if (this == obj) {
+				return true;
+			}
+			if (obj == null) {
+				return false;
+			}
+			if (!(obj instanceof Package)) {
+				return false;
+			}
+			Package other = (Package) obj;
+			if (name == null) {
+				if (other.name != null) {
+					return false;
+				}
+			} else if (!name.equals(other.name)) {
+				return false;
+			}
+			return true;
+		}
+
+		public Type getType(Type typeToFind) {
+			if (this.types == null) {
+				return null;
+			}
+			int index = this.types.indexOf(typeToFind);
+			if (index != -1) {
+				return this.types.get(index);
+			}
+			return null;
+		}
+		@Override
+		public int hashCode() {
+			final int prime = 31;
+			int result = 1;
+			result = prime * result + ((name == null) ? 0 : name.hashCode());
+			return result;
+		}
+		public void persistAsClassStubsForZip(ZipOutputStream zipOutputStream, ProfileInfo info) throws IOException {
+			if (this.types == null) {
+				return;
+			}
+			Collections.sort(this.types);
+			for (Type type : this.types) {
+				StringBuilder buffer = new StringBuilder(this.name.replace('.', '/'));
+				String simpleName = type.getSimpleName();
+				buffer.append('/').append(simpleName.replace('.', '$'));
+				byte[] classFileBytes = info.getClassFileBytes(type);
+				if (classFileBytes != null) {
+					Util.writeZipFileEntry(zipOutputStream, String.valueOf(buffer), classFileBytes);
+				}
+			}
+		}
+		public void persistXML(Document document, Element element, String OSGiProfileName) {
+			Element pkg = document.createElement(IApiXmlConstants.ELEMENT_PACKAGE);
+			pkg.setAttribute(IApiXmlConstants.ATTR_NAME, this.name);
+			element.appendChild(pkg);
+			if (this.types == null) {
+				return;
+			}
+			Collections.sort(this.types);
+			for (Iterator<Type> iterator2 = this.types.iterator(); iterator2.hasNext();) {
+				iterator2.next().persistXML(document, pkg, OSGiProfileName);
+			}
+		}
+		public int size() {
+			return this.types == null ? 0 : this.types.size();
+		}
+		@Override
+		public String toString() {
+			StringBuilder builder = new StringBuilder();
+			builder.append(
+			builder.append(this.name).append(Util.LINE_SEPARATOR);
+			return String.valueOf(builder);
+		}
+	}
+
+	static class ProfileInfo {
+		private static final String BLACK_LIST_NAME = 
+		private static final String CDC_SUBDIR = 
+		private static final String JRE_SUBDIR = 
+		private static final String OSGI_SUBDIR = 
+		private static final String OTHER_PACKAGES = 
+
+		private static boolean checkDocStatus(ProfileInfo info, Type type, ZipFile docZip, String docURL, String docRoot) {
+			if (docZip == null &amp;&amp; docURL == null) {
+				// if no doc to validate we accept it if on white list
+				if (DEBUG) {
+					System.out.println(
+				}
+				return info.isOnWhiteList(type);
+			}
+			String typeName = getDocTypeName(docRoot, type);
+			if (DEBUG) {
+				System.out.println(
+			}
+			if (docZip == null) {
+				char[] contents = info.getOnlineDocContents(docURL, typeName);
+				if (contents == null) {
+					if (DEBUG) {
+						System.out.println(
+					}
+					return info.isOnWhiteList(type);
+				}
+				return true;
+			}
+			return docZip.getEntry(typeName) != null || info.isOnWhiteList(type);
+		}
+
+		public static String getDocTypeName(String docRoot, Type type) {
+			StringBuilder buffer = new StringBuilder(docRoot);
+			char[] typeNameForDoc = CharOperation.replaceOnCopy(type.name, '.', '/');
+			typeNameForDoc = CharOperation.replaceOnCopy(typeNameForDoc, '$', '.');
+			buffer.append(typeNameForDoc);
+			buffer.append(
+			return String.valueOf(buffer);
+		}
+
+		public static ProfileInfo getProfileInfo(String profileName, String jreLib, String osgiProfile, String jreDoc, String jreURL, String docRoot, String cacheLocation, String whiteList) {
+			ProfileInfo info = new ProfileInfo(profileName, jreLib, osgiProfile, jreDoc, jreURL, docRoot, cacheLocation, whiteList);
+			if (info.getProfileName() == null) {
+				return null;
+			}
+			return info;
+		}
+
+		private static Set<String> initializePackages(String fileName) {
+			Set<String> knownPackages = null;
+			try {
+				Properties allProperties = new Properties();
+				BufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(fileName));
+				allProperties.load(inputStream);
+				inputStream.close();
+				String property = allProperties.getProperty(OTHER_PACKAGES);
+				if (property != null &amp;&amp; property.length() != 0) {
+					String[] packages = property.split(
+					for (String package1 : packages) {
+						if (knownPackages == null) {
+							knownPackages = new LinkedHashSet<>();
+						}
+						knownPackages.add(package1);
+					}
+				} else {
+					knownPackages = Collections.emptySet();
+				}
+			} catch (IOException e) {
+				// ignore
+			}
+			return knownPackages;
+		}
+		private static Set<String> initializeWhiteList(String fileName) {
+			if (fileName == null) {
+				return Collections.emptySet();
+			}
+			Set<String> values = new HashSet<>();
+			try (LineNumberReader reader = new LineNumberReader(new BufferedReader(new FileReader(fileName)))) {
+				String line;
+				while ((line = reader.readLine()) != null) {
+					String trimmedLine = line.trim();
+					if (!trimmedLine.isEmpty()) {
+						// only non-empty lines are added trimmed on both ends
+						values.add(trimmedLine);
+					}
+				}
+			} catch (IOException e) {
+				// ignore
+			}
+			return values;
+		}
+
+		File[] allFiles;
+		// set of type names that don't have javadoc
+		Set<String> blackList;
+		String cacheLocation;
+		Map<String, Package> data;
+		String docRoot;
+		long generatedSize;
+		String JREdoc;
+		String JRElib;
+		String JREURL;
+
+		String OSGiProfile;
+		String profileName;
+		long totalSize;
+
+		Set<String> whiteList;
+
+		private ProfileInfo(String profilename, String jreLib, String osgiProfile, String jreDoc, String jreURL, String docroot, String cacheloc, String whitelist) {
+			this.JREdoc = jreDoc;
+			this.JREURL = jreURL;
+			this.JRElib = jreLib;
+			this.OSGiProfile = osgiProfile;
+			this.docRoot = docroot;
+			this.profileName = profilename;
+			this.cacheLocation = cacheloc;
+			this.whiteList = initializeWhiteList(whitelist);
+		}
+
+		private void addToBlackList(String typeName) {
+			if (this.blackList != null) {
+				this.blackList.add(typeName);
+				return;
+			}
+			this.blackList = new TreeSet<>();
+			this.blackList.add(typeName);
+		}
+
+		public void dumpToCache(String typeName, char[] contents) {
+			if (!CACHE_ENABLED || this.cacheLocation == null) {
+				return;
+			}
+			File cacheDir = new File(this.cacheLocation);
+			if (!cacheDir.exists()) {
+				if (!cacheDir.mkdirs()) {
+					System.err.println(
+					return;
+				}
+			}
+			File profileCache = new File(cacheDir, getProfileFileName());
+			if (!profileCache.exists()) {
+				if (!profileCache.mkdirs()) {
+					System.err.println(
+					return;
+				}
+			}
+			File docType = new File(profileCache, typeName);
+			if (docType.exists()) {
+				// already in the cache
+				return;
+			} else {
+				File parentFile = docType.getParentFile();
+				if (!parentFile.exists()) {
+					if (!parentFile.mkdirs()) {
+						System.err.println(
+						return;
+					}
+				}
+				try (BufferedWriter writer = new BufferedWriter(new FileWriter(docType))) {
+					writer.write(contents);
+					writer.flush();
+				} catch (IOException e) {
+					e.printStackTrace();
+				}
+			}
+		}
+
+		void generateEEDescription(String outputDir) {
+			if (this.data == null) {
+				System.err.println(
+				return;
+			}
+			String subDir = getSubDir();
+			persistData(outputDir, subDir);
+			persistDataAsClassFilesInZipFormat(outputDir, subDir);
+		}
+
+		public Map<String, Type> getAllTypes() {
+			Map<String, Type> result = new LinkedHashMap<>();
+			Set<String> keySet = this.data.keySet();
+			String[] sortedKeys = new String[keySet.size()];
+			keySet.toArray(sortedKeys);
+			Arrays.sort(sortedKeys);
+			for (String key : sortedKeys) {
+				Package package1 = this.data.get(key);
+				if (package1 != null) {
+					package1.collectTypes(result);
+				} else {
+					System.err.println(
+				}
+			}
+			return result;
+		}
+
+		private File getCacheRoot() {
+			File cacheDir = new File(this.cacheLocation);
+			if (cacheDir.exists() || cacheDir.mkdirs()) {
+				File profileCache = new File(cacheDir, getProfileFileName());
+				if (profileCache.exists() || profileCache.mkdirs()) {
+					return profileCache;
+				}
+			}
+			return null;
+		}
+
+		public byte[] getClassFileBytes(Type type) {
+			if (this.allFiles == null) {
+				throw new IllegalStateException(
+			}
+			String typeName = new String(type.name);
+			byte[] classFileBytes = null;
+			try {
+				String zipFileEntryName = typeName.replace('.', '/') + 
+				loop: for (int i = 0, max = this.allFiles.length; i < max; i++) {
+					if (allFiles[i].toString().endsWith(
+						zipFileEntryName = 
+					}
+					try (ZipFile zipFile = new ZipFile(allFiles[i])) {
+						ZipEntry zipEntry = zipFile.getEntry(zipFileEntryName);
+						if (zipEntry == null) {
+							continue loop;
+						}
+						try (InputStream inputStream = new BufferedInputStream(zipFile.getInputStream(zipEntry))) {
+							classFileBytes = Util.getInputStreamAsByteArray(inputStream, -1);
+							break loop;
+						}
+					}
+				}
+			} catch (ZipException e) {
+				e.printStackTrace();
+			} catch (IOException e) {
+				e.printStackTrace();
+			}
+			if (classFileBytes == null) {
+				throw new IllegalStateException(
+			}
+			ClassReader classReader = new ClassReader(classFileBytes);
+			StubClassAdapter visitor = new StubClassAdapter(type);
+			classReader.accept(visitor, ClassReader.SKIP_DEBUG);
+			if (visitor.shouldIgnore()) {
+				return null;
+			}
+
+			return visitor.getStub().getBytes();
+		}
+
+		public char[] getFromCache(String typeName) {
+			if (!CACHE_ENABLED || this.cacheLocation == null) {
+				return null;
+			}
+			File profileCache = getCacheRoot();
+			if (profileCache != null) {
+				File docType = new File(profileCache, typeName);
+				if (docType.exists()) {
+					try (BufferedInputStream stream = new BufferedInputStream(new FileInputStream(docType))) {
+						return Util.getInputStreamAsCharArray(stream, -1, null);
+					} catch (IOException e) {
+						e.printStackTrace();
+					}
+				}
+			}
+			return null;
+		}
+
+		char[] getOnlineDocContents(String docURL, String typeName) {
+			// check the doc online
+			String typeDocURL = docURL + typeName;
+			char[] contents = this.getFromCache(typeName);
+			if (contents == null &amp;&amp; !ONLY_USE_CACHE) {
+				// check the black list
+				if (this.isOnBlackList(typeName)) {
+					return null;
+				}
+				contents = Util.getURLContents(typeDocURL);
+				if (contents == null) {
+					this.addToBlackList(typeName);
+					return null;
+				} else {
+					this.dumpToCache(typeName, contents);
+				}
+			}
+			return contents;
+		}
+
+		public String getProfileFileName() {
+			return Util.getProfileFileName(getProfileName());
+		}
+
+		public String getProfileName() {
+			return this.profileName;
+		}
+
+		private String getSubDir() {
+			if (Util.getProfileFileName(ProfileModifiers.CDC_1_0_FOUNDATION_1_0_NAME).equals(this.profileName) || Util.getProfileFileName(ProfileModifiers.CDC_1_1_FOUNDATION_1_1_NAME).equals(this.profileName)) {
+				return CDC_SUBDIR;
+			} else if (Util.getProfileFileName(ProfileModifiers.OSGI_MINIMUM_1_0_NAME).equals(this.profileName) || Util.getProfileFileName(ProfileModifiers.OSGI_MINIMUM_1_1_NAME).equals(this.profileName) || Util.getProfileFileName(ProfileModifiers.OSGI_MINIMUM_1_2_NAME).equals(this.profileName)) {
+				return OSGI_SUBDIR;
+			} else {
+				return JRE_SUBDIR;
+			}
+		}
+
+		private Set<String> initializeBlackList() {
+			File cacheRoot = getCacheRoot();
+			File blackListFile = new File(cacheRoot, BLACK_LIST_NAME);
+			Set<String> values = new TreeSet<>();
+			if (blackListFile.exists()) {
+				try (LineNumberReader reader = new LineNumberReader(
+						new BufferedReader(new FileReader(blackListFile)))) {
+					String line;
+					while ((line = reader.readLine()) != null) {
+						String trimmedLine = line.trim();
+						if (!trimmedLine.isEmpty()) {
+							// only non-empty lines are added trimmed on both
+							// ends
+							values.add(trimmedLine);
+						}
+					}
+				} catch (IOException e) {
+					// ignore
+				}
+			}
+			return values;
+		}
+
+		public void initializeData() throws IOException {
+			String pname = this.getProfileName();
+			if (pname == null) {
+				// invalid profile info
+				System.err.println(
+				return;
+			}
+
+			if (DEBUG) {
+				System.out.println(
+			}
+			long time = System.currentTimeMillis();
+			this.allFiles = Util.getAllFiles(new File(this.JRElib),
+					pathname -> pathname.isDirectory() || pathname.getName().toLowerCase().endsWith(
+							|| pathname.getName().toLowerCase().endsWith(
+			if (allFiles == null) {
+				System.err.println(
+				return;
+			}
+			// initialize known packages
+			String osgiProfileName = this.OSGiProfile;
+			Set<String> knownPackages = initializePackages(osgiProfileName);
+			// known packages should be part of the white list by default
+			if (this.whiteList != null &amp;&amp; !this.whiteList.isEmpty()) {
+				this.whiteList.addAll(knownPackages);
+			} else {
+				this.whiteList = Collections.unmodifiableSet(knownPackages);
+			}
+			Map<String, Type> allVisibleTypes = new LinkedHashMap<>();
+			Map<String, Type> allTypes = new LinkedHashMap<>();
+			this.totalSize = 0;
+			for (File currentFile : allFiles) {
+				this.totalSize += currentFile.length();
+
+				try (ZipFile zipFile = new ZipFile(currentFile)) {
+					for (Enumeration<? extends ZipEntry> enumeration = zipFile.entries(); enumeration.hasMoreElements();) {
+						ZipEntry zipEntry = enumeration.nextElement();
+						if (!zipEntry.getName().endsWith(
+						 {
+							continue;
+						}
+						InputStream inputStream = new BufferedInputStream(zipFile.getInputStream(zipEntry));
+						IClassFileReader classFileReader = null;
+						try {
+							classFileReader = ToolFactory.createDefaultClassFileReader(inputStream, IClassFileReader.ALL_BUT_METHOD_BODIES);
+						} finally {
+							inputStream.close();
+						}
+						if (classFileReader == null) {
+							continue;
+						}
+						char[] className = classFileReader.getClassName();
+						char[] packageName = null;
+						int lastIndexOf = CharOperation.lastIndexOf('/', className);
+						if (lastIndexOf == -1) {
+							packageName = new char[0];
+						} else {
+							packageName = CharOperation.subarray(className, 0, lastIndexOf);
+						}
+						if (this.isMatching(knownPackages, packageName)) {
+							Type type = Type.newType(this, classFileReader, this.JREdoc, this.JREURL, this.docRoot);
+							if (type != null) {
+								if (type.isProtected() || type.isPublic()) {
+									allVisibleTypes.put(type.getFullQualifiedName(), type);
+								}
+								allTypes.put(type.getFullQualifiedName(), type);
+							}
+						}
+					}
+				}
+			}
+			// list all results
+			List<Type> visibleTypes = new ArrayList<>();
+			visibleTypes.addAll(allVisibleTypes.values());
+			// check transitive closure to make sure all methods/fields from
+			// superclass are visible when resolving fields/methods
+			while (!visibleTypes.isEmpty()) {
+				Type type = visibleTypes.remove(0);
+				String superclassName = type.getSuperclassName();
+				while (superclassName != null) {
+					if (allVisibleTypes.get(superclassName) == null) {
+						// look for required type
+						Type currentSuperclass = allTypes.get(superclassName);
+						if (currentSuperclass == null) {
+							if (DEBUG) {
+								System.out.println(
+							}
+							break;
+						} else {
+							allVisibleTypes.put(currentSuperclass.getFullQualifiedName(), currentSuperclass);
+							visibleTypes.add(currentSuperclass);
+							if (DEBUG) {
+								System.out.println(
+							}
+						}
+					}
+					Type superclass = allVisibleTypes.get(superclassName);
+					superclassName = superclass.getSuperclassName();
+				}
+			}
+			List<Type> isInDoc = new ArrayList<>();
+			ZipFile docZip = null;
+			if (this.JREdoc != null) {
+				try {
+					docZip = new ZipFile(this.JREdoc);
+				} catch (FileNotFoundException e) {
+					// no zip file
+				}
+			}
+			try {
+				for (Type type : allVisibleTypes.values()) {
+					if (checkDocStatus(this, type, docZip, this.JREURL, this.docRoot)) {
+						isInDoc.add(type);
+					}
+				}
+			} finally {
+				if (docZip != null) {
+					docZip.close();
+				}
+			}
+			HashMap<String, Package> typesPerPackage = new LinkedHashMap<>();
+			for (Type type : isInDoc) {
+				String packageName = type.getPackage();
+				Package package1 = typesPerPackage.get(packageName);
+				if (package1 == null) {
+					package1 = new Package(packageName);
+					typesPerPackage.put(packageName, package1);
+				}
+				package1.addType(type);
+			}
+			this.data = typesPerPackage;
+			if (DEBUG) {
+				System.out.println(
+			}
+
+			if (this.blackList != null) {
+				// persist black list
+				this.persistBlackList();
+			}
+		}
+
+		private boolean isMatching(Set<String> knownPackages, char[] packageName) {
+			if (CharOperation.indexOf(
+				return true;
+			}
+			if (knownPackages.isEmpty()) {
+				return false;
+			}
+			String currentPackage = new String(CharOperation.replaceOnCopy(packageName, '/', '.'));
+			return knownPackages.contains(currentPackage) || this.isOnWhiteList(currentPackage);
+		}
+
+		private boolean isOnBlackList(String typeName) {
+			if (this.blackList != null) {
+				return this.blackList.contains(typeName);
+			}
+			// retrieve black list if it exists
+			this.blackList = initializeBlackList();
+			return this.blackList.contains(typeName);
+		}
+		private boolean isOnWhiteList(String packageName) {
+			return packageName.startsWith(
+		}
+		private boolean isOnWhiteList(Type type) {
+			return isOnWhiteList(type.getPackage());
+		}
+		private void persistBlackList() {
+			if (this.blackList == null || this.blackList.isEmpty()) {
+				return;
+			}
+			File cacheRoot = getCacheRoot();
+			File blackListFile = new File(cacheRoot, BLACK_LIST_NAME);
+			if (!blackListFile.exists()) {
+				try (PrintWriter writer = new PrintWriter(new BufferedWriter(new FileWriter(blackListFile)));) {
+					for (Iterator<String> iterator = this.blackList.iterator(); iterator.hasNext();) {
+						writer.println(iterator.next());
+					}
+					writer.flush();
+				} catch (IOException e) {
+					// ignore
+				}
+			}
+		}
+
+		private void persistChildren(Document document, Element xmlElement, Map<String, Package> packageMap, String OSGiProfileName) {
+			Set<String> keySet = packageMap.keySet();
+			String[] sortedKeys = new String[keySet.size()];
+			keySet.toArray(sortedKeys);
+			Arrays.sort(sortedKeys);
+			for (String key : sortedKeys) {
+				Package package1 = packageMap.get(key);
+				if (package1 != null) {
+					package1.persistXML(document, xmlElement, OSGiProfileName);
+				} else {
+					System.err.println(
+				}
+			}
+		}
+
+		private void persistChildrenAsClassFile(ZipOutputStream zipOutputStream, Map<String, Package> packageMap, ProfileInfo info) throws IOException {
+			Set<String> keySet = packageMap.keySet();
+			String[] sortedKeys = new String[keySet.size()];
+			keySet.toArray(sortedKeys);
+			Arrays.sort(sortedKeys);
+			for (String key : sortedKeys) {
+				Package package1 = packageMap.get(key);
+				if (package1 != null) {
+					package1.persistAsClassStubsForZip(zipOutputStream, info);
+				} else {
+					System.err.println(
+				}
+			}
+		}
+		private void persistData(String rootName, String subDirName) {
+			try {
+				Document document = org.eclipse.pde.api.tools.internal.util.Util.newDocument();
+				Element component = document.createElement(IApiXmlConstants.ELEMENT_COMPONENT);
+				String profileName2 = this.getProfileName();
+				component.setAttribute(IApiXmlConstants.ATTR_ID, profileName2);
+				component.setAttribute(IApiXmlConstants.ATTR_VERSION, IApiXmlConstants.API_DESCRIPTION_CURRENT_VERSION);
+				document.appendChild(component);
+				persistChildren(document, component, this.data, profileName2);
+				String contents = org.eclipse.pde.api.tools.internal.util.Util.serializeDocument(document);
+				String fileName = profileName2 + 
+				Util.write(rootName, subDirName, fileName, contents);
+			} catch (DOMException e) {
+				e.printStackTrace();
+			} catch (CoreException e) {
+				e.printStackTrace();
+			}
+		}
+
+		private void persistDataAsClassFilesInZipFormat(String rootName, String subDirName) {
+			ZipOutputStream zipOutputStream = null;
+			String profileName2 = this.getProfileFileName();
+			File root = new File(rootName);
+			if (!root.exists()) {
+				root.mkdirs();
+			}
+			File subDir = new File(root, subDirName);
+			if (!subDir.exists()) {
+				subDir.mkdir();
+			}
+			if (profileName2.indexOf('/') != 0) {
+				profileName2 = profileName2.replace('/', '_');
+			}
+			File file = new File(subDir, profileName2 + 
+			try {
+				zipOutputStream = Util.getOutputStream(file);
+			} catch (FileNotFoundException e) {
+				e.printStackTrace();
+			}
+			if (zipOutputStream == null) {
+				System.err.println(
+				return;
+			}
+			try {
+				persistChildrenAsClassFile(zipOutputStream, this.data, this);
+				zipOutputStream.flush();
+			} catch (IOException e) {
+				e.printStackTrace();
+			} finally {
+				try {
+					zipOutputStream.close();
+				} catch (IOException e) {
+					// ignore
+				}
+			}
+			this.generatedSize = file.length();
+			System.out.println(
+			System.out.println(
+			System.out.println(
+		}
+		@Override
+		public String toString() {
+			return this.getProfileName();
+		}
+	}
+
+	static class StubClass {
+		private static final int CURRENT_VERSION = 3;
+		int access;
+		int classNameIndex;
+		List<StubField> fields;
+
+		int[] interfacesIndexes;
+		List<StubMethod> methods;
+		Map<String, Integer> pool;
+		int poolIndex;
+		int superNameIndex;
+
+		public StubClass(int acc, String className2, String superName2, String[] interfaces2) {
+			this.access = acc;
+			this.pool = new LinkedHashMap<>();
+			this.classNameIndex = getIndex(className2);
+			this.superNameIndex = superName2 != null ? getIndex(superName2) : -1;
+			if (interfaces2 != null) {
+				this.interfacesIndexes = new int[interfaces2.length];
+				for (int i = 0; i < interfaces2.length; i++) {
+					this.interfacesIndexes[i] = getIndex(interfaces2[i]);
+				}
+			}
+		}
+
+		public void addField(String fieldName) {
+			if (this.fields == null) {
+				this.fields = new ArrayList<>();
+			}
+			this.fields.add(new StubField(getIndex(fieldName)));
+		}
+
+		public StubMethod addMethod(String methodName, String desc) {
+			if (this.methods == null) {
+				this.methods = new ArrayList<>();
+			}
+			StubMethod method = new StubMethod(getIndex(methodName), getIndex(desc));
+			this.methods.add(method);
+			return method;
+		}
+
+		public byte[] getBytes() {
+			ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
+
+			try (DataOutputStream outputStream = new DataOutputStream(byteArrayOutputStream)) {
+				outputStream.writeShort(CURRENT_VERSION);
+				outputStream.writeShort(this.poolIndex);
+				for (Entry<String, Integer> next : this.pool.entrySet()) {
+					outputStream.writeUTF(next.getKey());
+					outputStream.writeShort(next.getValue().intValue());
+				}
+				outputStream.writeChar(this.access);
+				outputStream.writeShort(this.classNameIndex);
+				outputStream.writeShort(this.superNameIndex);
+				int length = this.interfacesIndexes != null ? this.interfacesIndexes.length : 0;
+				outputStream.writeShort(length);
+				for (int i = 0; i < length; i++) {
+					outputStream.writeShort(this.interfacesIndexes[i]);
+				}
+				int fieldsLength = this.fields == null ? 0 : this.fields.size();
+				outputStream.writeShort(fieldsLength);
+				for (int i = 0; i < fieldsLength; i++) {
+					outputStream.writeShort(this.fields.get(i).nameIndex);
+				}
+				int methodsLength = this.methods == null ? 0 : this.methods.size();
+				outputStream.writeShort(methodsLength);
+				for (int i = 0; i < methodsLength; i++) {
+					StubMethod stubMethod = this.methods.get(i);
+					outputStream.writeShort(stubMethod.selectorIndex);
+					outputStream.writeShort(stubMethod.signatureIndex);
+					outputStream.writeByte(stubMethod.isPolymorphic ? 1 : 0);
+				}
+				outputStream.flush();
+			} catch (IOException e) {
+				e.printStackTrace();
+			}
+			this.pool = null;
+			this.fields = null;
+			this.methods = null;
+			return byteArrayOutputStream.toByteArray();
+		}
+
+		private int getIndex(String name) {
+			Integer integer = this.pool.get(name);
+			if (integer != null) {
+				return integer.intValue();
+			}
+			int value = this.poolIndex++;
+			this.pool.put(name, Integer.valueOf(value));
+			return value;
+		}
+	}
+
+	/**
+	 * Class adapter
+	 */
+	static class StubClassAdapter extends ClassVisitor {
+		static final int IGNORE_CLASS_FILE = 0x100;
+
+		int flags;
+		String name;
+		StubClass stub;
+		Type type;
+
+		/**
+		 * Constructor
+		 * @param stubtype
+		 */
+		public StubClassAdapter(Type stubtype) {
+			super(Opcodes.ASM6, new ClassWriter(0));
+			this.type = stubtype;
+		}
+
+		public StubClass getStub() {
+			return this.stub;
+		}
+
+		/**
+		 * @return if this class file should be ignored or not
+		 */
+		public boolean shouldIgnore() {
+			return (this.flags &amp; IGNORE_CLASS_FILE) != 0;
+		}
+
+		@Override
+		public void visit(int version, int access, String className, String signature, String superName, String[] interfaces) {
+			this.name = className;
+			this.stub = new StubClass(access, className, superName, interfaces);
+		}
+
+		@Override
+		public AnnotationVisitor visitAnnotation(String arg0, boolean arg1) {
+			return null;
+		}
+
+		@Override
+		public void visitAttribute(Attribute attr) {
+			if (
+				this.flags |= IGNORE_CLASS_FILE;
+			}
+		}
+
+		@Override
+		public void visitEnd() {
+		}
+
+		@Override
+		public FieldVisitor visitField(int access, String fieldName, String desc, String signature, Object value) {
+			if (type.getField(fieldName) == null) {
+				return null;
+			}
+			this.stub.addField(fieldName);
+			return null;
+		}
+
+		@Override
+		public void visitInnerClass(String innerClassName, String outerName, String innerName, int access) {
+			if (this.name.equals(innerClassName) &amp;&amp; (outerName == null)) {
+				// local class
+				this.flags |= IGNORE_CLASS_FILE;
+			}
+		}
+
+		@Override
+		public MethodVisitor visitMethod(int access, String methodName, String desc, String signature, String[] exceptions) {
+			if (
+				return null;
+			}
+			if ((access &amp; (Opcodes.ACC_PUBLIC | Opcodes.ACC_PROTECTED)) == 0) {
+				return null;
+			}
+			if (((access &amp; Opcodes.ACC_BRIDGE) != 0) || ((access &amp; Opcodes.ACC_SYNTHETIC) != 0)) {
+				return null;
+			}
+			if (this.type.getMethod(methodName, desc) == null) {
+				return null;
+			}
+			final StubMethod method = this.stub.addMethod(methodName, desc);
+			return new MethodVisitor(Opcodes.ASM6, super.visitMethod(access, methodName, desc, signature, exceptions)) {
+				@Override
+				public AnnotationVisitor visitAnnotation(String sig, boolean visible) {
+					if (visible &amp;&amp; 
+						method.isPolymorphic();
+					}
+					return super.visitAnnotation(sig, visible);
+				}
+			};
+		}
+		@Override
+		public void visitOuterClass(String arg0, String arg1, String arg2) {
+			// ignore
+		}
+		@Override
+		public void visitSource(String arg0, String arg1) {
+			// ignore
+		}
+	}
+
+	static class StubField {
+		int nameIndex;
+
+		public StubField(int index) {
+			this.nameIndex = index;
+		}
+	}
+
+	static class StubMethod {
+		boolean isPolymorphic;
+		int selectorIndex;
+		int signatureIndex;
+
+		public StubMethod(int selectorindex, int sigindex) {
+			this.selectorIndex = selectorindex;
+			this.signatureIndex = sigindex;
+		}
+
+		public void isPolymorphic() {
+			this.isPolymorphic = true;
+		}
+	}
+
+	static class Type extends AbstractNode implements Comparable<Type> {
+
+		static boolean isFinal(int accessFlags) {
+			return (accessFlags &amp; Flags.AccFinal) != 0;
+		}
+		static boolean isPrivate(int accessFlags) {
+			return (accessFlags &amp; Flags.AccPrivate) != 0;
+		}
+		static boolean isProtected(int accessFlags) {
+			return (accessFlags &amp; Flags.AccProtected) != 0;
+		}
+		static boolean isPublic(int accessFlags) {
+			return (accessFlags &amp; Flags.AccPublic) != 0;
+		}
+		static boolean isStatic(int accessFlags) {
+			return (accessFlags &amp; Flags.AccStatic) != 0;
+		}
+
+		private static boolean isVisibleField(int typeAccessFlags, int fieldAccessFlags) {
+			if (isPublic(fieldAccessFlags)) {
+				return true;
+			}
+			if (isProtected(fieldAccessFlags)) {
+				return !isFinal(typeAccessFlags);
+			}
+			return false;
+		}
+
+		private static boolean isVisibleMethod(int typeAccessFlags, int methodAccessFlags) {
+			if (isPublic(methodAccessFlags)) {
+				return true;
+			}
+			if (isProtected(methodAccessFlags)) {
+				return !isFinal(typeAccessFlags);
+			}
+			return false;
+		}
+
+		public static Type newType(ProfileInfo info, IClassFileReader reader, String docZipFileName, String docURL, String docRoot) {
+			IInnerClassesAttribute innerClassesAttribute = reader.getInnerClassesAttribute();
+			if (innerClassesAttribute != null) {
+				// search the right entry
+				IInnerClassesAttributeEntry[] entries = innerClassesAttribute.getInnerClassAttributesEntries();
+				for (IInnerClassesAttributeEntry entry : entries) {
+					char[] innerClassName = entry.getInnerClassName();
+					if (innerClassName != null) {
+						if (CharOperation.equals(reader.getClassName(), innerClassName)) {
+							int accessFlags2 = entry.getAccessFlags();
+							if (isPrivate(accessFlags2)) {
+								return null;
+							}
+						}
+					}
+				}
+			}
+			return new Type(reader, docZipFileName);
+		}
+
+		Set<Field> fields;
+		Set<Method> methods;
+		int modifiers;
+
+		char[] name;
+		char[] superclassName;
+		char[][] superinterfacesNames;
+
+		private Type(IClassFileReader reader, String docZipFileName) {
+			ZipFile docZip = null;
+			try {
+				if (docZipFileName != null) {
+					try {
+						docZip = new ZipFile(docZipFileName);
+					} catch (FileNotFoundException e) {
+						// no zip file
+					}
+				}
+				char[] className = reader.getClassName();
+				className = CharOperation.replaceOnCopy(className, '/', '.');
+				this.name = className;
+				if (DEBUG) {
+					System.out.println(
+				}
+				char[] scname = reader.getSuperclassName();
+				if (scname != null) {
+					scname = CharOperation.replaceOnCopy(scname, '/', '.');
+					this.superclassName = scname;
+				}
+				char[][] interfaceNames = CharOperation.deepCopy(reader.getInterfaceNames());
+				for (char[] interfaceName : interfaceNames) {
+					CharOperation.replace(interfaceName, '/', '.');
+				}
+				this.superinterfacesNames = interfaceNames;
+				this.modifiers = reader.getAccessFlags();
+				IFieldInfo[] fieldInfos = reader.getFieldInfos();
+				int length = fieldInfos.length;
+				for (int i = 0; i < length; i++) {
+					IFieldInfo fieldInfo = fieldInfos[i];
+					if (isVisibleField(this.modifiers, fieldInfo.getAccessFlags())) {
+						if (fields == null) {
+							this.fields = new HashSet<>();
+						}
+						Field field = new Field(fieldInfo.getName(), fieldInfo.getDescriptor());
+						fields.add(field);
+						if (DEBUG) {
+							System.out.println(
+						}
+					}
+				}
+				IMethodInfo[] methodInfos = reader.getMethodInfos();
+				length = methodInfos.length;
+				for (IMethodInfo methodInfo : methodInfos) {
+					IClassFileAttribute[] attributes = methodInfo.getAttributes();
+					ISignatureAttribute signatureAttribute = null;
+					for (IClassFileAttribute currentAttribute : attributes) {
+						if (CharOperation.equals(currentAttribute.getAttributeName(), IAttributeNamesConstants.SIGNATURE)) {
+							signatureAttribute = (ISignatureAttribute) currentAttribute;
+							break;
+						}
+					}
+					char[] signature = null;
+					if (signatureAttribute != null) {
+						signature = signatureAttribute.getSignature();
+					} else {
+						signature = methodInfo.getDescriptor();
+					}
+					int accessFlags = methodInfo.getAccessFlags();
+					if (isVisibleMethod(this.modifiers, accessFlags)) {
+						if (methods == null) {
+							this.methods = new HashSet<>();
+						}
+						Method method = new Method(accessFlags, methodInfo.getName(), methodInfo.getDescriptor(), signatureAttribute == null ? null : signature);
+						methods.add(method);
+						if (DEBUG) {
+							System.out.println(
+						}
+					}
+				}
+			} catch (IOException e) {
+				// no zip file
+				System.err.println(
+			} finally {
+				if (docZip != null) {
+					try {
+						docZip.close();
+					} catch (IOException e) {
+						// ignore
+					}
+				}
+			}
+		}
+
+		public void addField(Field f) {
+			if (this.fields == null) {
+				this.fields = new HashSet<>();
+			}
+			this.fields.add(f);
+		}
+		public void addMethod(Method m) {
+			if (this.methods == null) {
+				this.methods = new HashSet<>();
+			}
+			this.methods.add(m);
+		}
+		@Override
+		public int compareTo(Type type) {
+			return this.getSimpleName().compareTo(type.getSimpleName());
+		}
+
+		@Override
+		public boolean equals(Object obj) {
+			if (this == obj) {
+				return true;
+			}
+			if (obj == null) {
+				return false;
+			}
+			if (!(obj instanceof Type)) {
+				return false;
+			}
+			Type other = (Type) obj;
+			return Arrays.equals(name, other.name);
+		}
+		public Field getField(String fname) {
+			if (this.fields == null) {
+				return null;
+			}
+			Field fieldToFind = new Field(fname.toCharArray(), null);
+			for (Field currentField : this.fields) {
+				if (fieldToFind.equals(currentField)) {
+					return currentField;
+				}
+			}
+			return null;
+		}
+
+		public String getFullQualifiedName() {
+			return String.valueOf(this.name);
+		}
+		public String getSuperclassName() {
+			if (this.superclassName == null) {
+				return null;
+			}
+			return String.valueOf(this.superclassName);
+		}
+		public Method getMethod(String selector, String signature) {
+			if (this.methods == null) {
+				return null;
+			}
+			Method methodToFind = new Method(0, selector.toCharArray(), signature.toCharArray(), null);
+			for (Method currentMethod : this.methods) {
+				if (methodToFind.equals(currentMethod)) {
+					return currentMethod;
+				}
+			}
+			return null;
+		}
+		public String getPackage() {
+			int index = CharOperation.lastIndexOf('.', this.name);
+			return new String(CharOperation.subarray(this.name, 0, index));
+		}
+		public String getSimpleName() {
+			return Util.getSimpleName(this.name);
+		}
+
+		@Override
+		public int hashCode() {
+			final int prime = 31;
+			int result = 1;
+			result = prime * result + Arrays.hashCode(name);
+			return result;
+		}
+
+		public boolean isProtected() {
+			return isProtected(this.modifiers);
+		}
+
+		public boolean isPublic() {
+			return isPublic(this.modifiers);
+		}
+
+		public void persistXML(Document document, Element parent, String OSGiProfileName) {
+			Element type = document.createElement(IApiXmlConstants.ELEMENT_TYPE);
+			parent.appendChild(type);
+			type.setAttribute(IApiXmlConstants.ATTR_NAME, getSimpleName());
+			if (this.superclassName != null) {
+				type.setAttribute(IApiXmlConstants.ATTR_SUPER_CLASS, new String(this.superclassName));
+			}
+			if (this.superinterfacesNames != null &amp;&amp; this.superinterfacesNames.length != 0) {
+				type.setAttribute(IApiXmlConstants.ATTR_SUPER_INTERFACES, Util.getInterfaces(this.superinterfacesNames));
+			}
+			type.setAttribute(IApiXmlConstants.ATTR_INTERFACE, Boolean.toString((this.modifiers &amp; Flags.AccInterface) != 0));
+			persistAnnotations(type, OSGiProfileName);
+			if (this.fields != null) {
+				Field[] allFields = new Field[this.fields.size()];
+				this.fields.toArray(allFields);
+				Arrays.sort(allFields);
+				for (Field allField : allFields) {
+					allField.persistXML(document, type, OSGiProfileName);
+				}
+			}
+			if (this.methods != null) {
+				Method[] allMethods = new Method[this.methods.size()];
+				this.methods.toArray(allMethods);
+				Arrays.sort(allMethods);
+				for (Method allMethod : allMethods) {
+					allMethod.persistXML(document, type, OSGiProfileName);
+				}
+			}
+		}
+		@Override
+		public String toString() {
+			StringBuilder buffer = new StringBuilder();
+			buffer.append(this.getPackage() + 
+			// list all fields
+
+			if (this.fields != null) {
+				Field[] allFields = new Field[this.fields.size()];
+				this.fields.toArray(allFields);
+				Arrays.sort(allFields);
+				for (Field field : allFields) {
+					buffer.append(
+					.append(field).append(Util.LINE_SEPARATOR);
+				}
+			}
+			if (this.methods != null) {
+				Method[] allMethods = new Method[this.methods.size()];
+				this.methods.toArray(allMethods);
+				Arrays.sort(allMethods);
+				for (Method method : allMethods) {
+					buffer.append(
+				}
+			}
+			return String.valueOf(buffer);
+		}
+	}
+	static SortedSet<String> ACCEPTED_EEs;
+	static boolean CACHE_ENABLED = true;
+	static boolean DEBUG = false;
+	static boolean ONLY_USE_CACHE = false;
+	static final String PROPERTY_CACHE_LOCATION = 
+	static final String PROPERTY_DOC_ROOT = 
+	static final String PROPERTY_JRE_DOC = 
+	static final String PROPERTY_JRE_LIB = 
+	static final String PROPERTY_JRE_URL = 
+	static final String PROPERTY_OSGI_PROFILE = 
+	static final String PROPERTY_WHITE_LIST = 
+
+	static {
+		String[] ees = new String[] { 
+				
+				
+				
+				
+				
+				
+				
+				
+				
+				
+				
+				
+				
+		};
+		ACCEPTED_EEs = new TreeSet<>();
+		for (String ee : ees) {
+			ACCEPTED_EEs.add(ee);
+		}
+	}
+	private static String getAllEEValues() {
+		StringBuilder buffer = new StringBuilder();
+		for (String ee : ACCEPTED_EEs) {
+			if (buffer.length() != 0) {
+				buffer.append(
+			}
+			buffer.append(ee);
+		}
+		return String.valueOf(buffer);
+	}
+
+	public static void main(String[] args) {
+		EEGenerator generator = new EEGenerator();
+		generator.configure(args);
+		if (!generator.isInitialized()) {
+			System.err.println(
+			return;
+		}
+		String property = System.getProperty(
+		DEBUG = (property != null) &amp;&amp; 
+		generator.run();
+	}
+	private ProfileInfo[] allProfiles;
+	String configurationFile;
+
+	String[] EEToGenerate;
+
+	String output;
+
+	private boolean checkFileProperty(String property) {
+		if (property == null) {
+			return false;
+		}
+		File jreDocFile = new File(property);
+		return jreDocFile.exists() &amp;&amp; jreDocFile.isFile();
+	}
+
+	private boolean checkJREProperty(String property) {
+		if (property == null) {
+			return false;
+		}
+		File jreLibFolder = new File(property);
+		return jreLibFolder.exists() &amp;&amp; jreLibFolder.isDirectory();
+	}
+
+	private void configure(String[] args) {
+		String currentArg = null;
+		int argCount = args.length;
+		int index = -1;
+		final int DEFAULT = 0;
+		final int OUTPUT = 1;
+		final int CONFIG = 2;
+		final int EEs = 3;
+		int mode = DEFAULT;
+		while (++index < argCount) {
+			currentArg = args[index];
+			switch (mode) {
+				case DEFAULT:
+					if (
+						if (this.output != null)
+						 {
+							throw new IllegalArgumentException(
+						}
+						mode = OUTPUT;
+						continue;
+					}
+					if (
+						if (this.configurationFile != null)
+						 {
+							throw new IllegalArgumentException(
+						}
+						mode = CONFIG;
+						continue;
+					}
+					if (
+						if (this.EEToGenerate != null)
+						 {
+							throw new IllegalArgumentException(
+						}
+						mode = EEs;
+						continue;
+					}
+					// ignore unknown arguments - might be passed in by the
+					// Eclipse application
+					continue;
+				case OUTPUT:
+					this.output = currentArg;
+					mode = DEFAULT;
+					continue;
+				case CONFIG:
+					this.configurationFile = currentArg;
+					mode = DEFAULT;
+					continue;
+				case EEs:
+					String listOfEEs = currentArg;
+					StringTokenizer tokenizer = new StringTokenizer(listOfEEs, 
+				List<String> list = new ArrayList<>();
+					while (tokenizer.hasMoreTokens()) {
+						String currentEE = tokenizer.nextToken().trim();
+						if (ACCEPTED_EEs.contains(currentEE)) {
+							list.add(currentEE);
+						} else {
+							throw new IllegalArgumentException(
+						}
+					}
+					if (!list.isEmpty()) {
+						list.toArray(this.EEToGenerate = new String[list.size()]);
+					}
+					mode = DEFAULT;
+					continue;
+				default:
+					break;
+			}
+		}
+		if (this.output == null) {
+			throw new IllegalArgumentException(
+		}
+		// check output
+		File file = new File(this.output);
+		if (!file.exists()) {
+			if (!file.mkdirs()) {
+				this.output = null;
+				throw new IllegalArgumentException(
+			}
+		}
+		// check configuration file
+		File configuration = new File(this.configurationFile);
+		if (!configuration.exists()) {
+			this.configurationFile = null;
+			throw new IllegalArgumentException(
+		}
+		Properties properties = new Properties();
+		BufferedReader reader = null;
+		try {
+			reader = new BufferedReader(new FileReader(configuration));
+			properties.load(reader);
+		} catch (IOException e) {
+			e.printStackTrace();
+			throw new IllegalArgumentException(
+		} finally {
+			if (reader != null) {
+				try {
+					reader.close();
+				} catch (IOException e) {
+					// ignore
+				}
+			}
+		}
+		List<ProfileInfo> infos = new ArrayList<>();
+		for (String EE : EEToGenerate) {
+			// Retrieve all properties for each EE
+			// JRELIB, OSGI_PROFILE, JRE_DOC, JRE_URL, CACHE, WHITE_LIST
+			String key = EE + PROPERTY_JRE_LIB;
+			String jreLibProperty = properties.getProperty(key, null);
+			if (!checkJREProperty(jreLibProperty)) {
+				throw new IllegalArgumentException(
+			}
+			key = EE + PROPERTY_CACHE_LOCATION;
+			String cacheLocationProperty = properties.getProperty(key, null);
+			if (cacheLocationProperty != null) {
+				if (cacheLocationProperty.isEmpty()) {
+					cacheLocationProperty = null;
+				}
+			}
+			key = EE + PROPERTY_DOC_ROOT;
+			String docRootProperty = properties.getProperty(key, 
+			key = EE + PROPERTY_JRE_DOC;
+			String jreDocProperty = properties.getProperty(key, null);
+			if (jreDocProperty != null &amp;&amp; !jreDocProperty.isEmpty()) {
+				if (!checkFileProperty(jreDocProperty)) {
+					throw new IllegalArgumentException(
+				}
+			} else {
+				jreDocProperty = null;
+			}
+			key = EE + PROPERTY_JRE_URL;
+			String jreUrlProperty = properties.getProperty(key, null);
+			if (jreUrlProperty != null &amp;&amp; !jreUrlProperty.isEmpty()) {
+				if (Util.getURLContents(jreUrlProperty + docRootProperty + 
+					throw new IllegalArgumentException(
+				}
+			} else {
+				jreUrlProperty = null;
+			}
+			key = EE + PROPERTY_OSGI_PROFILE;
+			String osgiProfileProperty = properties.getProperty(key, null);
+			if (osgiProfileProperty != null &amp;&amp; !osgiProfileProperty.isEmpty()) {
+				if (!checkFileProperty(osgiProfileProperty)) {
+					throw new IllegalArgumentException(
+				}
+			} else {
+				osgiProfileProperty = null;
+			}
+			key = EE + PROPERTY_WHITE_LIST;
+			String whiteListProperty = properties.getProperty(key, null);
+			if (whiteListProperty != null &amp;&amp; !whiteListProperty.isEmpty()) {
+				if (!checkFileProperty(whiteListProperty)) {
+					throw new IllegalArgumentException(
+				}
+			} else {
+				whiteListProperty = null;
+			}
+			infos.add(ProfileInfo.getProfileInfo(EE, jreLibProperty, osgiProfileProperty, jreDocProperty, jreUrlProperty, docRootProperty, cacheLocationProperty, whiteListProperty));
+		}
+		if (infos.isEmpty()) {
+			throw new IllegalArgumentException(
+		}
+		infos.toArray(allProfiles = new ProfileInfo[infos.size()]);
+	}
+
+	private boolean isInitialized() {
+		return this.configurationFile != null &amp;&amp; this.EEToGenerate != null &amp;&amp; this.output != null;
+	}
+
+	private void run() {
+		if (allProfiles == null) {
+			System.err.println(
+			return;
+		}
+		int numberOfProfiles = allProfiles.length;
+		for (int i = 0; i < numberOfProfiles; i++) {
+			ProfileInfo profileInfo = allProfiles[i];
+			if (profileInfo != null) {
+				try {
+					profileInfo.initializeData();
+				} catch (IOException e) {
+					e.printStackTrace();
+				}
+				// persist the EE description
+				profileInfo.generateEEDescription(this.output);
+			}
+		}
+	}
+}

原文件: apitools/org.eclipse.pde.api.tools.generator/src/org/eclipse/pde/api/tools/generator/util/Util.java 
新文件: apitools/org.eclipse.pde.api.tools.generator/src/org/eclipse/pde/api/tools/generator/util/Util.java
位置:  -1,425 +1,425  
-/*******************************************************************************
- * Copyright (c) 2000, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2000, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.api.tools.generator.util;
-
-import java.io.BufferedInputStream;
-import java.io.BufferedOutputStream;
-import java.io.BufferedReader;
-import java.io.BufferedWriter;
-import java.io.File;
-import java.io.FileFilter;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.UnsupportedEncodingException;
-import java.net.JarURLConnection;
-import java.net.MalformedURLException;
-import java.net.ProtocolException;
-import java.net.SocketException;
-import java.net.SocketTimeoutException;
-import java.net.URL;
-import java.net.URLConnection;
-import java.net.UnknownHostException;
-import java.nio.charset.StandardCharsets;
-import java.util.ArrayList;
-import java.util.zip.CRC32;
-import java.util.zip.ZipEntry;
-import java.util.zip.ZipOutputStream;
-
-import org.eclipse.core.runtime.IPath;
-import org.eclipse.core.runtime.Path;
-import org.eclipse.jdt.core.compiler.CharOperation;
-
-public class Util {
-	private static final int DEFAULT_READING_SIZE = 8192;
-	private final static String UTF_8 = 
-
-	private static final byte[] CHARSET = new byte[] {
-			99, 104, 97, 114, 115, 101, 116, 61 };
-	private static final byte[] CLOSING_DOUBLE_QUOTE = new byte[] { 34 };
-	private static final byte[] CONTENT = new byte[] {
-			99, 111, 110, 116, 101, 110, 116, 61, 34 };
-	private static final byte[] CONTENT_TYPE = new byte[] {
-			34, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 34 };
-	private static final CRC32 CRC32 = new CRC32();
-	public static final String LINE_SEPARATOR = System.getProperty(
-
-	public static boolean contains(char[] name, char[][] names) {
-		for (char[] currentName : names) {
-			if (CharOperation.equals(currentName, name)) {
-				return true;
-			}
-		}
-		return false;
-	}
-
-	private static int getIndexOf(byte[] array, byte[] toBeFound, int start) {
-		if (array == null || toBeFound == null) {
-			return -1;
-		}
-		final int toBeFoundLength = toBeFound.length;
-		final int arrayLength = array.length;
-		if (arrayLength < toBeFoundLength) {
-			return -1;
-		}
-		loop: for (int i = start, max = arrayLength - toBeFoundLength + 1; i < max; i++) {
-			if (array[i] == toBeFound[0]) {
-				for (int j = 1; j < toBeFoundLength; j++) {
-					if (array[i + j] != toBeFound[j]) {
-						continue loop;
-					}
-				}
-				return i;
-			}
-		}
-		return -1;
-	}
-
-	/**
-	 * Returns the given input stream's contents as a byte array. If a length is
-	 * specified (ie. if length != -1), only length bytes are returned.
-	 * Otherwise all bytes in the stream are returned. Note this doesn't close
-	 * the stream.
-	 *
-	 * @throws IOException if a problem occured reading the stream.
-	 */
-	public static byte[] getInputStreamAsByteArray(InputStream stream, int length) throws IOException {
-		byte[] contents;
-		if (length == -1) {
-			contents = new byte[0];
-			int contentsLength = 0;
-			int amountRead = -1;
-			do {
-				int amountRequested = Math.max(stream.available(), DEFAULT_READING_SIZE); // read
-																							// at
-																							// least
-																							// 8K
-
-				// resize contents if needed
-				if (contentsLength + amountRequested > contents.length) {
-					System.arraycopy(contents, 0, contents = new byte[contentsLength + amountRequested], 0, contentsLength);
-				}
-
-				// read as many bytes as possible
-				amountRead = stream.read(contents, contentsLength, amountRequested);
-
-				if (amountRead > 0) {
-					// remember length of contents
-					contentsLength += amountRead;
-				}
-			} while (amountRead != -1);
-
-			// resize contents if necessary
-			if (contentsLength < contents.length) {
-				System.arraycopy(contents, 0, contents = new byte[contentsLength], 0, contentsLength);
-			}
-		} else {
-			contents = new byte[length];
-			int len = 0;
-			int readSize = 0;
-			while ((readSize != -1) &amp;&amp; (len != length)) {
-				// See PR 1FMS89U
-				// We record first the read size. In this case len is the actual
-				// read size.
-				len += readSize;
-				readSize = stream.read(contents, len, length - len);
-			}
-		}
-
-		return contents;
-	}
-
-	/**
-	 * Returns the given input stream's contents as a character array. If a
-	 * length is specified (i.e. if length != -1), this represents the number of
-	 * bytes in the stream. Note this doesn't close the stream.
-	 *
-	 * @throws IOException if a problem occured reading the stream.
-	 */
-	public static char[] getInputStreamAsCharArray(InputStream stream, int length, String encoding) throws IOException {
-		BufferedReader reader = null;
-		try {
-			reader = encoding == null ? new BufferedReader(new InputStreamReader(stream)) : new BufferedReader(new InputStreamReader(stream, encoding));
-		} catch (UnsupportedEncodingException e) {
-			// encoding is not supported
-			reader = new BufferedReader(new InputStreamReader(stream));
-		}
-		char[] contents;
-		int totalRead = 0;
-		if (length == -1) {
-			contents = CharOperation.NO_CHAR;
-		} else {
-			// length is a good guess when the encoding produces less or the
-			// same amount of characters than the file length
-			contents = new char[length]; // best guess
-		}
-
-		while (true) {
-			int amountRequested;
-			if (totalRead < length) {
-				// until known length is met, reuse same array sized eagerly
-				amountRequested = length - totalRead;
-			} else {
-				// reading beyond known length
-				int current = reader.read();
-				if (current < 0) {
-					break;
-				}
-
-				amountRequested = Math.max(stream.available(), DEFAULT_READING_SIZE); // read
-																						// at
-																						// least
-																						// 8K
-
-				// resize contents if needed
-				if (totalRead + 1 + amountRequested > contents.length) {
-					System.arraycopy(contents, 0, contents = new char[totalRead + 1 + amountRequested], 0, totalRead);
-				}
-
-				// add current character
-				contents[totalRead++] = (char) current; // coming from
-														// totalRead==length
-			}
-			// read as many chars as possible
-			int amountRead = reader.read(contents, totalRead, amountRequested);
-			if (amountRead < 0) {
-				break;
-			}
-			totalRead += amountRead;
-		}
-
-		// Do not keep first character for UTF-8 BOM encoding
-		int start = 0;
-		if (totalRead > 0 &amp;&amp; UTF_8.equals(encoding)) {
-			if (contents[0] == 0xFEFF) { // if BOM char then skip
-				totalRead--;
-				start = 1;
-			}
-		}
-
-		// resize contents if necessary
-		if (totalRead < contents.length) {
-			System.arraycopy(contents, start, contents = new char[totalRead], 0, totalRead);
-		}
-
-		return contents;
-	}
-
-	public static String getInterfaces(char[][] superinterfacesNames) {
-		StringBuilder buffer = new StringBuilder();
-		for (int i = 0, max = superinterfacesNames.length; i < max; i++) {
-			if (i > 0) {
-				buffer.append(',');
-			}
-			buffer.append(superinterfacesNames[i]);
-		}
-		return String.valueOf(buffer);
-	}
-
-	public static ZipOutputStream getOutputStream(File file) throws FileNotFoundException {
-		return new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(file)));
-	}
-
-	public static String getSimpleName(char[] name) {
-		return new String(getSimpleNameAsCharArray(name));
-	}
-
-	public static char[] getSimpleNameAsCharArray(char[] name) {
-		int index = CharOperation.lastIndexOf('.', name);
-		char[] subarray = CharOperation.subarray(name, index + 1, name.length);
-		subarray = CharOperation.replaceOnCopy(subarray, '$', '.');
-		return subarray;
-	}
-
-	public static void write(String rootDirName, String subDirName, String fileName, String contents) {
-		File rootDir = new File(rootDirName);
-		rootDir.mkdirs();
-		File subDir = new File(rootDir, subDirName);
-		subDir.mkdirs();
-		String fname = fileName;
-		if (fname.indexOf('/') != -1) {
-			fname = fname.replace('/', '_');
-		}
-		try (BufferedWriter writer = new BufferedWriter(new FileWriter(new File(subDir, fname)))) {
-			writer.write(contents);
-			writer.flush();
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-	}
-
-	/**
-	 * Writes the given entry information into the output stream
-	 *
-	 * @param outputStream the output stream to write out to
-	 * @param entryName
-	 * @param bytes
-	 * @param crc32
-	 * @param bits
-	 * @throws IOException
-	 */
-	public static void writeZipFileEntry(ZipOutputStream outputStream, String entryName, byte[] bytes) throws IOException {
-		CRC32.reset();
-		int byteArraySize = bytes.length;
-		CRC32.update(bytes, 0, byteArraySize);
-		ZipEntry entry = new ZipEntry(entryName);
-		entry.setMethod(ZipEntry.DEFLATED);
-		entry.setSize(byteArraySize);
-		entry.setCrc(CRC32.getValue());
-		outputStream.putNextEntry(entry);
-		outputStream.write(bytes, 0, byteArraySize);
-		outputStream.closeEntry();
-	}
-
-	/*
-	 * We don't use getContentEncoding() on the URL connection, because it might
-	 * leave open streams behind. See
-	 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=117890
-	 */
-	public static char[] getURLContents(String docUrlValue) {
-		InputStream stream = null;
-		JarURLConnection connection2 = null;
-		try {
-			URL docUrl = new URL(docUrlValue);
-			URLConnection connection = docUrl.openConnection();
-			connection.setConnectTimeout(10000);
-			connection.setReadTimeout(10000);
-
-			if (connection instanceof JarURLConnection) {
-				connection2 = (JarURLConnection) connection;
-				// https://bugs.eclipse.org/bugs/show_bug.cgi?id=156307
-				connection.setUseCaches(false);
-			}
-			try {
-				stream = new BufferedInputStream(connection.getInputStream());
-			} catch (IllegalArgumentException e) {
-				// https://bugs.eclipse.org/bugs/show_bug.cgi?id=304316
-				return null;
-			} catch (NullPointerException e) {
-				// https://bugs.eclipse.org/bugs/show_bug.cgi?id=304316
-				return null;
-			}
-			String encoding = connection.getContentEncoding();
-			byte[] contents = Util.getInputStreamAsByteArray(stream, connection.getContentLength());
-			if (encoding == null) {
-				int index = getIndexOf(contents, CONTENT_TYPE, 0);
-				if (index != -1) {
-					index = getIndexOf(contents, CONTENT, index);
-					if (index != -1) {
-						int offset = index + CONTENT.length;
-						int index2 = getIndexOf(contents, CLOSING_DOUBLE_QUOTE, offset);
-						if (index2 != -1) {
-							final int charsetIndex = getIndexOf(contents, CHARSET, offset);
-							if (charsetIndex != -1) {
-								int start = charsetIndex + CHARSET.length;
-								encoding = new String(contents, start, index2 - start, StandardCharsets.UTF_8);
-							}
-						}
-					}
-				}
-			}
-			if (contents != null) {
-				if (encoding != null) {
-					return new String(contents, encoding).toCharArray();
-				} else {
-					// platform encoding is used
-					return new String(contents).toCharArray();
-				}
-			}
-		} catch (SocketTimeoutException e) {
-			e.printStackTrace();
-		} catch (MalformedURLException e) {
-			e.printStackTrace();
-		} catch (FileNotFoundException e) {
-			// ignore. see bug
-			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=120559
-		} catch (SocketException e) {
-			// ignore. see bug
-			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=247845
-		} catch (UnknownHostException e) {
-			// ignore. see bug
-			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=247845
-		} catch (ProtocolException e) {
-			// ignore. see bug
-			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=247845
-		} catch (IOException e) {
-			e.printStackTrace();
-		} finally {
-			if (stream != null) {
-				try {
-					stream.close();
-				} catch (IOException e) {
-					// ignore
-				}
-			}
-			if (connection2 != null) {
-				try {
-					connection2.getJarFile().close();
-				} catch (IOException e) {
-					// ignore
-				} catch (IllegalStateException e) {
-					/*
-					 * ignore. Can happen in case the stream.close() did close
-					 * the jar file see
-					 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=140750
-					 */
-				}
-			}
-		}
-		return null;
-	}
-
-	private static void collectAllFiles(File root, ArrayList<File> collector, FileFilter fileFilter) {
-		File[] files = root.listFiles(fileFilter);
-		for (final File currentFile : files) {
-			if (currentFile.isDirectory()) {
-				collectAllFiles(currentFile, collector, fileFilter);
-			} else {
-				collector.add(currentFile);
-			}
-		}
-	}
-
-	public static File[] getAllFiles(File root, FileFilter fileFilter) {
-		ArrayList<File> files = new ArrayList<>();
-		if (root.isDirectory()) {
-			collectAllFiles(root, files, fileFilter);
-			// get the jmods
-			// assumption all the jmods are in jmod folder
-			// jmods are present post the jars
-			String path = root.toString();
-			IPath newPath = new Path(path);
-			newPath = newPath.removeLastSegments(1).addTrailingSeparator();
-			newPath = newPath.append(
-			File jmod = newPath.toFile();
-			if (jmod.exists()) {
-				File[] listFiles = jmod.listFiles(fileFilter);
-				for (File file : listFiles) {
-					files.add(file);
-				}
-			}
-			File[] result = new File[files.size()];
-			files.toArray(result);
-			return result;
-		}
-		return null;
-	}
-
-	public static String getProfileFileName(String profileName) {
-		return profileName.replace('/', '_');
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.api.tools.generator.util;
+
+import java.io.BufferedInputStream;
+import java.io.BufferedOutputStream;
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileFilter;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.UnsupportedEncodingException;
+import java.net.JarURLConnection;
+import java.net.MalformedURLException;
+import java.net.ProtocolException;
+import java.net.SocketException;
+import java.net.SocketTimeoutException;
+import java.net.URL;
+import java.net.URLConnection;
+import java.net.UnknownHostException;
+import java.nio.charset.StandardCharsets;
+import java.util.ArrayList;
+import java.util.zip.CRC32;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipOutputStream;
+
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.jdt.core.compiler.CharOperation;
+
+public class Util {
+	private static final int DEFAULT_READING_SIZE = 8192;
+	private final static String UTF_8 = 
+
+	private static final byte[] CHARSET = new byte[] {
+			99, 104, 97, 114, 115, 101, 116, 61 };
+	private static final byte[] CLOSING_DOUBLE_QUOTE = new byte[] { 34 };
+	private static final byte[] CONTENT = new byte[] {
+			99, 111, 110, 116, 101, 110, 116, 61, 34 };
+	private static final byte[] CONTENT_TYPE = new byte[] {
+			34, 67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101, 34 };
+	private static final CRC32 CRC32 = new CRC32();
+	public static final String LINE_SEPARATOR = System.getProperty(
+
+	public static boolean contains(char[] name, char[][] names) {
+		for (char[] currentName : names) {
+			if (CharOperation.equals(currentName, name)) {
+				return true;
+			}
+		}
+		return false;
+	}
+
+	private static int getIndexOf(byte[] array, byte[] toBeFound, int start) {
+		if (array == null || toBeFound == null) {
+			return -1;
+		}
+		final int toBeFoundLength = toBeFound.length;
+		final int arrayLength = array.length;
+		if (arrayLength < toBeFoundLength) {
+			return -1;
+		}
+		loop: for (int i = start, max = arrayLength - toBeFoundLength + 1; i < max; i++) {
+			if (array[i] == toBeFound[0]) {
+				for (int j = 1; j < toBeFoundLength; j++) {
+					if (array[i + j] != toBeFound[j]) {
+						continue loop;
+					}
+				}
+				return i;
+			}
+		}
+		return -1;
+	}
+
+	/**
+	 * Returns the given input stream's contents as a byte array. If a length is
+	 * specified (ie. if length != -1), only length bytes are returned.
+	 * Otherwise all bytes in the stream are returned. Note this doesn't close
+	 * the stream.
+	 *
+	 * @throws IOException if a problem occured reading the stream.
+	 */
+	public static byte[] getInputStreamAsByteArray(InputStream stream, int length) throws IOException {
+		byte[] contents;
+		if (length == -1) {
+			contents = new byte[0];
+			int contentsLength = 0;
+			int amountRead = -1;
+			do {
+				int amountRequested = Math.max(stream.available(), DEFAULT_READING_SIZE); // read
+																							// at
+																							// least
+																							// 8K
+
+				// resize contents if needed
+				if (contentsLength + amountRequested > contents.length) {
+					System.arraycopy(contents, 0, contents = new byte[contentsLength + amountRequested], 0, contentsLength);
+				}
+
+				// read as many bytes as possible
+				amountRead = stream.read(contents, contentsLength, amountRequested);
+
+				if (amountRead > 0) {
+					// remember length of contents
+					contentsLength += amountRead;
+				}
+			} while (amountRead != -1);
+
+			// resize contents if necessary
+			if (contentsLength < contents.length) {
+				System.arraycopy(contents, 0, contents = new byte[contentsLength], 0, contentsLength);
+			}
+		} else {
+			contents = new byte[length];
+			int len = 0;
+			int readSize = 0;
+			while ((readSize != -1) &amp;&amp; (len != length)) {
+				// See PR 1FMS89U
+				// We record first the read size. In this case len is the actual
+				// read size.
+				len += readSize;
+				readSize = stream.read(contents, len, length - len);
+			}
+		}
+
+		return contents;
+	}
+
+	/**
+	 * Returns the given input stream's contents as a character array. If a
+	 * length is specified (i.e. if length != -1), this represents the number of
+	 * bytes in the stream. Note this doesn't close the stream.
+	 *
+	 * @throws IOException if a problem occured reading the stream.
+	 */
+	public static char[] getInputStreamAsCharArray(InputStream stream, int length, String encoding) throws IOException {
+		BufferedReader reader = null;
+		try {
+			reader = encoding == null ? new BufferedReader(new InputStreamReader(stream)) : new BufferedReader(new InputStreamReader(stream, encoding));
+		} catch (UnsupportedEncodingException e) {
+			// encoding is not supported
+			reader = new BufferedReader(new InputStreamReader(stream));
+		}
+		char[] contents;
+		int totalRead = 0;
+		if (length == -1) {
+			contents = CharOperation.NO_CHAR;
+		} else {
+			// length is a good guess when the encoding produces less or the
+			// same amount of characters than the file length
+			contents = new char[length]; // best guess
+		}
+
+		while (true) {
+			int amountRequested;
+			if (totalRead < length) {
+				// until known length is met, reuse same array sized eagerly
+				amountRequested = length - totalRead;
+			} else {
+				// reading beyond known length
+				int current = reader.read();
+				if (current < 0) {
+					break;
+				}
+
+				amountRequested = Math.max(stream.available(), DEFAULT_READING_SIZE); // read
+																						// at
+																						// least
+																						// 8K
+
+				// resize contents if needed
+				if (totalRead + 1 + amountRequested > contents.length) {
+					System.arraycopy(contents, 0, contents = new char[totalRead + 1 + amountRequested], 0, totalRead);
+				}
+
+				// add current character
+				contents[totalRead++] = (char) current; // coming from
+														// totalRead==length
+			}
+			// read as many chars as possible
+			int amountRead = reader.read(contents, totalRead, amountRequested);
+			if (amountRead < 0) {
+				break;
+			}
+			totalRead += amountRead;
+		}
+
+		// Do not keep first character for UTF-8 BOM encoding
+		int start = 0;
+		if (totalRead > 0 &amp;&amp; UTF_8.equals(encoding)) {
+			if (contents[0] == 0xFEFF) { // if BOM char then skip
+				totalRead--;
+				start = 1;
+			}
+		}
+
+		// resize contents if necessary
+		if (totalRead < contents.length) {
+			System.arraycopy(contents, start, contents = new char[totalRead], 0, totalRead);
+		}
+
+		return contents;
+	}
+
+	public static String getInterfaces(char[][] superinterfacesNames) {
+		StringBuilder buffer = new StringBuilder();
+		for (int i = 0, max = superinterfacesNames.length; i < max; i++) {
+			if (i > 0) {
+				buffer.append(',');
+			}
+			buffer.append(superinterfacesNames[i]);
+		}
+		return String.valueOf(buffer);
+	}
+
+	public static ZipOutputStream getOutputStream(File file) throws FileNotFoundException {
+		return new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(file)));
+	}
+
+	public static String getSimpleName(char[] name) {
+		return new String(getSimpleNameAsCharArray(name));
+	}
+
+	public static char[] getSimpleNameAsCharArray(char[] name) {
+		int index = CharOperation.lastIndexOf('.', name);
+		char[] subarray = CharOperation.subarray(name, index + 1, name.length);
+		subarray = CharOperation.replaceOnCopy(subarray, '$', '.');
+		return subarray;
+	}
+
+	public static void write(String rootDirName, String subDirName, String fileName, String contents) {
+		File rootDir = new File(rootDirName);
+		rootDir.mkdirs();
+		File subDir = new File(rootDir, subDirName);
+		subDir.mkdirs();
+		String fname = fileName;
+		if (fname.indexOf('/') != -1) {
+			fname = fname.replace('/', '_');
+		}
+		try (BufferedWriter writer = new BufferedWriter(new FileWriter(new File(subDir, fname)))) {
+			writer.write(contents);
+			writer.flush();
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+	}
+
+	/**
+	 * Writes the given entry information into the output stream
+	 *
+	 * @param outputStream the output stream to write out to
+	 * @param entryName
+	 * @param bytes
+	 * @param crc32
+	 * @param bits
+	 * @throws IOException
+	 */
+	public static void writeZipFileEntry(ZipOutputStream outputStream, String entryName, byte[] bytes) throws IOException {
+		CRC32.reset();
+		int byteArraySize = bytes.length;
+		CRC32.update(bytes, 0, byteArraySize);
+		ZipEntry entry = new ZipEntry(entryName);
+		entry.setMethod(ZipEntry.DEFLATED);
+		entry.setSize(byteArraySize);
+		entry.setCrc(CRC32.getValue());
+		outputStream.putNextEntry(entry);
+		outputStream.write(bytes, 0, byteArraySize);
+		outputStream.closeEntry();
+	}
+
+	/*
+	 * We don't use getContentEncoding() on the URL connection, because it might
+	 * leave open streams behind. See
+	 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=117890
+	 */
+	public static char[] getURLContents(String docUrlValue) {
+		InputStream stream = null;
+		JarURLConnection connection2 = null;
+		try {
+			URL docUrl = new URL(docUrlValue);
+			URLConnection connection = docUrl.openConnection();
+			connection.setConnectTimeout(10000);
+			connection.setReadTimeout(10000);
+
+			if (connection instanceof JarURLConnection) {
+				connection2 = (JarURLConnection) connection;
+				// https://bugs.eclipse.org/bugs/show_bug.cgi?id=156307
+				connection.setUseCaches(false);
+			}
+			try {
+				stream = new BufferedInputStream(connection.getInputStream());
+			} catch (IllegalArgumentException e) {
+				// https://bugs.eclipse.org/bugs/show_bug.cgi?id=304316
+				return null;
+			} catch (NullPointerException e) {
+				// https://bugs.eclipse.org/bugs/show_bug.cgi?id=304316
+				return null;
+			}
+			String encoding = connection.getContentEncoding();
+			byte[] contents = Util.getInputStreamAsByteArray(stream, connection.getContentLength());
+			if (encoding == null) {
+				int index = getIndexOf(contents, CONTENT_TYPE, 0);
+				if (index != -1) {
+					index = getIndexOf(contents, CONTENT, index);
+					if (index != -1) {
+						int offset = index + CONTENT.length;
+						int index2 = getIndexOf(contents, CLOSING_DOUBLE_QUOTE, offset);
+						if (index2 != -1) {
+							final int charsetIndex = getIndexOf(contents, CHARSET, offset);
+							if (charsetIndex != -1) {
+								int start = charsetIndex + CHARSET.length;
+								encoding = new String(contents, start, index2 - start, StandardCharsets.UTF_8);
+							}
+						}
+					}
+				}
+			}
+			if (contents != null) {
+				if (encoding != null) {
+					return new String(contents, encoding).toCharArray();
+				} else {
+					// platform encoding is used
+					return new String(contents).toCharArray();
+				}
+			}
+		} catch (SocketTimeoutException e) {
+			e.printStackTrace();
+		} catch (MalformedURLException e) {
+			e.printStackTrace();
+		} catch (FileNotFoundException e) {
+			// ignore. see bug
+			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=120559
+		} catch (SocketException e) {
+			// ignore. see bug
+			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=247845
+		} catch (UnknownHostException e) {
+			// ignore. see bug
+			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=247845
+		} catch (ProtocolException e) {
+			// ignore. see bug
+			// https://bugs.eclipse.org/bugs/show_bug.cgi?id=247845
+		} catch (IOException e) {
+			e.printStackTrace();
+		} finally {
+			if (stream != null) {
+				try {
+					stream.close();
+				} catch (IOException e) {
+					// ignore
+				}
+			}
+			if (connection2 != null) {
+				try {
+					connection2.getJarFile().close();
+				} catch (IOException e) {
+					// ignore
+				} catch (IllegalStateException e) {
+					/*
+					 * ignore. Can happen in case the stream.close() did close
+					 * the jar file see
+					 * https://bugs.eclipse.org/bugs/show_bug.cgi?id=140750
+					 */
+				}
+			}
+		}
+		return null;
+	}
+
+	private static void collectAllFiles(File root, ArrayList<File> collector, FileFilter fileFilter) {
+		File[] files = root.listFiles(fileFilter);
+		for (final File currentFile : files) {
+			if (currentFile.isDirectory()) {
+				collectAllFiles(currentFile, collector, fileFilter);
+			} else {
+				collector.add(currentFile);
+			}
+		}
+	}
+
+	public static File[] getAllFiles(File root, FileFilter fileFilter) {
+		ArrayList<File> files = new ArrayList<>();
+		if (root.isDirectory()) {
+			collectAllFiles(root, files, fileFilter);
+			// get the jmods
+			// assumption all the jmods are in jmod folder
+			// jmods are present post the jars
+			String path = root.toString();
+			IPath newPath = new Path(path);
+			newPath = newPath.removeLastSegments(1).addTrailingSeparator();
+			newPath = newPath.append(
+			File jmod = newPath.toFile();
+			if (jmod.exists()) {
+				File[] listFiles = jmod.listFiles(fileFilter);
+				for (File file : listFiles) {
+					files.add(file);
+				}
+			}
+			File[] result = new File[files.size()];
+			files.toArray(result);
+			return result;
+		}
+		return null;
+	}
+
+	public static String getProfileFileName(String profileName) {
+		return profileName.replace('/', '_');
+	}
+}

原文件: apitools/org.eclipse.pde.api.tools.tests/API 
Tools
位置:  -1,24 +1,24  
-<?xml version=
-<launchConfiguration type=
-<booleanAttribute key=
-<listAttribute key=
-<listEntry value=
-</listAttribute>
-<listAttribute key=
-<listEntry value=
-</listAttribute>
-<listAttribute key=
-<listEntry value=
-</listAttribute>
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<booleanAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-</launchConfiguration>
+<?xml version=
+<launchConfiguration type=
+<booleanAttribute key=
+<listAttribute key=
+<listEntry value=
+</listAttribute>
+<listAttribute key=
+<listEntry value=
+</listAttribute>
+<listAttribute key=
+<listEntry value=
+</listAttribute>
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<booleanAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+</launchConfiguration>

原文件: apitools/org.eclipse.pde.api.tools.tests/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.api.tools.tests
-Bundle-Version: 1.1.600.qualifier
+Bundle-Version: 1.1.700.qualifier
 Bundle-Vendor: %Bundle-Vendor
 Require-Bundle: org.eclipse.core.runtime,
  org.junit,

原文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools.tests</artifactId>
-  <version>1.1.600-SNAPSHOT</version>
+  <version>1.1.700-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 
 	<build>

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/tags/method/class/test25.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/tags/method/class/test25.java
位置:  -1,36 +1,36  
-/*******************************************************************************
- * Copyright (c) Mar 25, 2013 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) Mar 25, 2013 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-/**
- * Test supported @nooverride and @noreference tags on private/default constructors
- */
-public class test25 {
-
-	/**
-	 * @nooverride
-	 * @noreference
-	 */
-	private test25() {
-		
-	}
-	
-	/**
-	 * @nooverride
-	 * @noreference
-	 * @param num
-	 */
-	test25(int num) {
-		
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+/**
+ * Test supported @nooverride and @noreference tags on private/default constructors
+ */
+public class test25 {
+
+	/**
+	 * @nooverride
+	 * @noreference
+	 */
+	private test25() {
+		
+	}
+	
+	/**
+	 * @nooverride
+	 * @noreference
+	 * @param num
+	 */
+	test25(int num) {
+		
+	}
+}

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usage/java8/lambd
原文件: testLambdaBlockStatement.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usage/java8/lambda/testLambdaBlockStatement.java
位置:  -1,42 +1,42  
-/*******************************************************************************
- * Copyright (c) 2016 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2016 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package x.y.z;
-
-import java.util.Arrays;
-
-import c.ClassUsageClass;
-import m.MethodUsageClass;
-import f.FieldUsageClass;
-
-/**
- * Tests for illegal use inside lambdas - lambda block statement
- *
- */
-public class testLambdaBlockStatement {
-	
-	void m1() {
-		FieldUsageClass noRef = new FieldUsageClass();
-		String[] array = {
-		Arrays.sort(array, (String s1, String s2) -> {
-			ClassUsageClass noRef2 = new ClassUsageClass();
-			return noRef.f1;
-		});
-		Arrays.sort(array, (String s1, String s2) -> {
-			ClassUsageClass.inner noRef2 = new ClassUsageClass.inner();
-			return FieldUsageClass.f2;
-		});
-	}
-
-}
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package x.y.z;
+
+import java.util.Arrays;
+
+import c.ClassUsageClass;
+import m.MethodUsageClass;
+import f.FieldUsageClass;
+
+/**
+ * Tests for illegal use inside lambdas - lambda block statement
+ *
+ */
+public class testLambdaBlockStatement {
+	
+	void m1() {
+		FieldUsageClass noRef = new FieldUsageClass();
+		String[] array = {
+		Arrays.sort(array, (String s1, String s2) -> {
+			ClassUsageClass noRef2 = new ClassUsageClass();
+			return noRef.f1;
+		});
+		Arrays.sort(array, (String s1, String s2) -> {
+			ClassUsageClass.inner noRef2 = new ClassUsageClass.inner();
+			return FieldUsageClass.f2;
+		});
+	}
+
+}
+

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usage/java8/lambd
原文件: testLambdaExpression.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usage/java8/lambda/testLambdaExpression.java
位置:  -1,35 +1,35  
-/*******************************************************************************
- * Copyright (c) 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package x.y.z;
-
-import java.util.Arrays;
-
-import m.MethodUsageClass;
-import f.FieldUsageClass;
-
-/**
- * Tests for illegal use inside lambdas - lambda expression
- *
- */
-public class testLambdaExpression {
-	
-	void m1() {
-		FieldUsageClass noRef = new FieldUsageClass();
-		String[] array = {
-		Arrays.sort(array, (String s1, String s2) -> noRef.f1);
-		Arrays.sort(array, (String s1, String s2) -> FieldUsageClass.f2);
-	}
-
-}
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package x.y.z;
+
+import java.util.Arrays;
+
+import m.MethodUsageClass;
+import f.FieldUsageClass;
+
+/**
+ * Tests for illegal use inside lambdas - lambda expression
+ *
+ */
+public class testLambdaExpression {
+	
+	void m1() {
+		FieldUsageClass noRef = new FieldUsageClass();
+		String[] array = {
+		Arrays.sort(array, (String s1, String s2) -> noRef.f1);
+		Arrays.sort(array, (String s1, String s2) -> FieldUsageClass.f2);
+	}
+
+}
+

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usage/java8/lambd
原文件: testLambdaRestrictedInterface.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usage/java8/lambda/testLambdaRestrictedInterface.java
位置:  -1,37 +1,37  
-/*******************************************************************************
- * Copyright (c) 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package x.y.z;
-
-import i.NoRefFunctionalInterface;
-
-/**
- * Tests whether use of a functional interface via a lambda expression will be marked as illegal use
- * Currently this is not supported (Bug 431749)
- *
- */
-public class testLambdaRestrictedInterface {
-	
-	class MR {
-		public <T> void mr(NoRefFunctionalInterface<T> supplier) {}
-	};
-
-	void m1() {
-		MR mr = new MR();
-		mr.mr(() -> {
-			return new Object();
-		});
-	}
-
-}
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package x.y.z;
+
+import i.NoRefFunctionalInterface;
+
+/**
+ * Tests whether use of a functional interface via a lambda expression will be marked as illegal use
+ * Currently this is not supported (Bug 431749)
+ *
+ */
+public class testLambdaRestrictedInterface {
+	
+	class MR {
+		public <T> void mr(NoRefFunctionalInterface<T> supplier) {}
+	};
+
+	void m1() {
+		MR mr = new MR();
+		mr.mr(() -> {
+			return new Object();
+		});
+	}
+
+}
+

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usage/java8/lambd
原文件: testLambdaStatement.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usage/java8/lambda/testLambdaStatement.java
位置:  -1,35 +1,35  
-/*******************************************************************************
- * Copyright (c) 2016 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2016 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package x.y.z;
-
-import java.util.Arrays;
-
-import m.MethodUsageClass;
-import f.FieldUsageClass;
-
-/**
- * Tests for illegal use inside lambdas - lambda statement
- *
- */
-public class testLambdaStatement {
-	
-	void m1() {
-		FieldUsageClass noRef = new FieldUsageClass();
-		String[] array = {
-		Arrays.sort(array, (String s1, String s2) -> noRef.f1);
-		Arrays.sort(array, (String s1, String s2) -> FieldUsageClass.f2);
-	}
-
-}
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package x.y.z;
+
+import java.util.Arrays;
+
+import m.MethodUsageClass;
+import f.FieldUsageClass;
+
+/**
+ * Tests for illegal use inside lambdas - lambda statement
+ *
+ */
+public class testLambdaStatement {
+	
+	void m1() {
+		FieldUsageClass noRef = new FieldUsageClass();
+		String[] array = {
+		Arrays.sort(array, (String s1, String s2) -> noRef.f1);
+		Arrays.sort(array, (String s1, String s2) -> FieldUsageClass.f2);
+	}
+
+}
+

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/ConstructorReference.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/ConstructorReference.java
位置:  -1,53 +1,53  
-/*******************************************************************************
- * Copyright (c) April 5, 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) April 5, 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- * IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package m;
-import java.util.List;
-
-public class ConstructorReference {
-	  private String str;
-		 
-	    private List<String> strs;
-	 
-	    /**
-	     * @noreference This constructor is not intended to be referenced by clients.
-	     */
-	    public ConstructorReference() {
-	        this.str = 
-	    }
-	    /**
-	     * @noreference This constructor is not intended to be referenced by clients.
-	     */
-	    public ConstructorReference(String str) {
-	        this.str = str;
-	    }
-	    /**
-	     * @noreference This constructor is not intended to be referenced by clients.
-	     */
-	    public ConstructorReference(List<String> strs) {
-	        this.strs = strs;
-	    }
-	 
-	    public String getString()
-	    {
-	        return str;
-	    }
-	 
-	    public List<String> getStrings()
-	    {
-	        return strs;
-	    }
-
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ * IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+package m;
+import java.util.List;
+
+public class ConstructorReference {
+	  private String str;
+		 
+	    private List<String> strs;
+	 
+	    /**
+	     * @noreference This constructor is not intended to be referenced by clients.
+	     */
+	    public ConstructorReference() {
+	        this.str = 
+	    }
+	    /**
+	     * @noreference This constructor is not intended to be referenced by clients.
+	     */
+	    public ConstructorReference(String str) {
+	        this.str = str;
+	    }
+	    /**
+	     * @noreference This constructor is not intended to be referenced by clients.
+	     */
+	    public ConstructorReference(List<String> strs) {
+	        this.strs = strs;
+	    }
+	 
+	    public String getString()
+	    {
+	        return str;
+	    }
+	 
+	    public List<String> getStrings()
+	    {
+	        return strs;
+	    }
+
+
+}

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/ConstructorReferenceInterface.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/ConstructorReferenceInterface.java
位置:  -1,19 +1,19  
-/*******************************************************************************
- * Copyright (c) April 5, 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) April 5, 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- * IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package m;
-
-public interface ConstructorReferenceInterface<T> {
-	T create1();
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ * IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+package m;
+
+public interface ConstructorReferenceInterface<T> {
+	T create1();
+}

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/ConstructorReferenceInterfaceArg.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/ConstructorReferenceInterfaceArg.java
位置:  -1,20 +1,20  
-/*******************************************************************************
- * Copyright (c) April 5, 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) April 5, 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- * IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package m;
-
-public interface ConstructorReferenceInterfaceArg<T,U> {
-	T create2(U arg);
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ * IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+package m;
+
+public interface ConstructorReferenceInterfaceArg<T,U> {
+	T create2(U arg);
+
+}

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/ConstructorReferenceInterfaceParamArg.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/ConstructorReferenceInterfaceParamArg.java
位置:  -1,20 +1,20  
-/*******************************************************************************
- * Copyright (c) April 5, 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) April 5, 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- * IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package m;
-import java.util.List;
-public interface ConstructorReferenceInterfaceParamArg<T,U> {
-	T create3(List<U> arg);
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ * IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+package m;
+import java.util.List;
+public interface ConstructorReferenceInterfaceParamArg<T,U> {
+	T create3(List<U> arg);
+
+}

原文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/MR.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/test-builder/usageprojectsjava8/refprojectjava8/src/m/MR.java
位置:  -1,48 +1,48  
-/*******************************************************************************
- * Copyright (c) April 5, 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) April 5, 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- * IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package m;
-
-import java.util.function.Supplier;
-
-public class MR {
-
-	/**
-	 * @noreference This method is not intended to be referenced by clients.
-	 * @param supplier
-	 */
-   public <T> void con (Supplier<T> supplier) {}
-
-  /**@noreference This method is not intended to be referenced by clients.
-   * 
-   * @param str1
-   * @param str2
-   * @return
-   */
-  public int mrCompare2(String str1, String str2) {
-	   return 0;
-	   }
-  /**
-   * @noreference
-   * @param str1
-   * @param str2
-   * @return
-   */
-  
-  public static int mrCompare(String str1, String str2) {
-  return 0;
-  }
-
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ * IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+package m;
+
+import java.util.function.Supplier;
+
+public class MR {
+
+	/**
+	 * @noreference This method is not intended to be referenced by clients.
+	 * @param supplier
+	 */
+   public <T> void con (Supplier<T> supplier) {}
+
+  /**@noreference This method is not intended to be referenced by clients.
+   * 
+   * @param str1
+   * @param str2
+   * @return
+   */
+  public int mrCompare2(String str1, String str2) {
+	   return 0;
+	   }
+  /**
+   * @noreference
+   * @param str1
+   * @param str2
+   * @return
+   */
+  
+  public static int mrCompare(String str1, String str2) {
+  return 0;
+  }
+
+
+}

原文件: apitools/org.eclipse.pde.api.tools.ui/.settings/org.eclipse.jdt.core.prefs 
新文件: apitools/org.eclipse.pde.api.tools.ui/.settings/org.eclipse.jdt.core.prefs
位置:  -1,426 +1,426  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
-org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
-org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
-org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
-org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
-org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
-org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
-org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=100
-org.eclipse.jdt.core.compiler.problem.APILeak=warning
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=warning
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=error
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=ignore
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=ignore
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDefaultCase=warning
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=warning
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=all_standard_tags
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=error
-org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
-org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
-org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=warning
-org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=warning
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=error
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=enabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=error
-org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
-org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
-org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
-org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=warning
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.compiler.taskCaseSensitive=enabled
-org.eclipse.jdt.core.compiler.taskPriorities=NORMAL,HIGH,NORMAL,HIGH,HIGH
-org.eclipse.jdt.core.compiler.taskTags=TODO,FIXME,XXX,EXPERIMENTAL,CONTEXTLAUNCHING
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=next_line_shifted
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=120
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_on_off_tags=false
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
-org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=100
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=warning
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=error
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=ignore
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=ignore
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=warning
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=warning
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=all_standard_tags
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=error
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=warning
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=warning
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=error
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=enabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=error
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=warning
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.compiler.taskCaseSensitive=enabled
+org.eclipse.jdt.core.compiler.taskPriorities=NORMAL,HIGH,NORMAL,HIGH,HIGH
+org.eclipse.jdt.core.compiler.taskTags=TODO,FIXME,XXX,EXPERIMENTAL,CONTEXTLAUNCHING
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=next_line_shifted
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=120
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error
+org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter

原文件: apitools/org.eclipse.pde.api.tools/.settings/org.eclipse.jdt.core.prefs 
新文件: apitools/org.eclipse.pde.api.tools/.settings/org.eclipse.jdt.core.prefs
位置:  -1,454 +1,454  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
-org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
-org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
-org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
-org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
-org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
-org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
-org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=100
-org.eclipse.jdt.core.compiler.problem.APILeak=warning
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=warning
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=error
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=error
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=ignore
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=error
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=ignore
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDefaultCase=warning
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=warning
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=all_standard_tags
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=error
-org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
-org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
-org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=warning
-org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=error
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=enabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=error
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=error
-org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
-org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
-org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
-org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=warning
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.release=disabled
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.compiler.taskCaseSensitive=enabled
-org.eclipse.jdt.core.compiler.taskPriorities=NORMAL,HIGH,NORMAL,HIGH,HIGH
-org.eclipse.jdt.core.compiler.taskTags=TODO,FIXME,XXX,EXPERIMENTAL,CONTEXTLAUNCHING
-org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines=2147483647
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_loops=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=16
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header=0
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_module_statements=16
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references=0
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_type_arguments=0
-org.eclipse.jdt.core.formatter.alignment_for_type_parameters=0
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=next_line_shifted
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped=true
-org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position=true
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=false
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=false
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=false
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=120
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation=common_lines
-org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause=common_lines
-org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration=common_lines
-org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment=common_lines
-org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement=common_lines
-org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration=common_lines
-org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration=common_lines
-org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation=common_lines
-org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement=common_lines
-org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause=common_lines
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_on_off_tags=false
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_assignment_operator=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_conditional_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
-org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=100
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=warning
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=error
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=ignore
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=error
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=ignore
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=warning
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=warning
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=all_standard_tags
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=error
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=warning
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=error
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=enabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=error
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=error
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=warning
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.release=disabled
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.compiler.taskCaseSensitive=enabled
+org.eclipse.jdt.core.compiler.taskPriorities=NORMAL,HIGH,NORMAL,HIGH,HIGH
+org.eclipse.jdt.core.compiler.taskTags=TODO,FIXME,XXX,EXPERIMENTAL,CONTEXTLAUNCHING
+org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines=2147483647
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_loops=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=16
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header=0
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_module_statements=16
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references=0
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_type_arguments=0
+org.eclipse.jdt.core.formatter.alignment_for_type_parameters=0
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=next_line_shifted
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped=true
+org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position=true
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=false
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=false
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=false
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=120
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation=common_lines
+org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause=common_lines
+org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration=common_lines
+org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment=common_lines
+org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement=common_lines
+org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration=common_lines
+org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration=common_lines
+org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation=common_lines
+org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement=common_lines
+org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause=common_lines
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_assignment_operator=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_conditional_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error
+org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter

原文件: apitools/org.eclipse.pde.api.tools/META-INF/eclipse.inf 
新文件: apitools/org.eclipse.pde.api.tools/META-INF/eclipse.inf
位置:  -1,2 +1,2  
-jarprocessor.exclude.pack=true
+jarprocessor.exclude.pack=true
 jarprocessor.exclude.children.pack=true
\ No newline at end of file

原文件: ds/org.eclipse.pde.ds.annotations/.settings/.api_filters 
新文件: ds/org.eclipse.pde.ds.annotations/.settings/.api_filters
位置:  -1,11 +1,11  
-<?xml version=
-<component id=
-    <resource path=
-        <filter id=
-            <message_arguments>
-                <message_argument value=
-                <message_argument value=
-            </message_arguments>
-        </filter>
-    </resource>
-</component>
+<?xml version=
+<component id=
+    <resource path=
+        <filter id=
+            <message_arguments>
+                <message_argument value=
+                <message_argument value=
+            </message_arguments>
+        </filter>
+    </resource>
+</component>

原文件: ds/org.eclipse.pde.ds.annotations/.settings/org.eclipse.pde.api.tools.prefs 
新文件: ds/org.eclipse.pde.ds.annotations/.settings/org.eclipse.pde.api.tools.prefs
位置:  -1,102 +1,102  
-ANNOTATION_ELEMENT_TYPE_ADDED_FIELD=Error
-ANNOTATION_ELEMENT_TYPE_ADDED_METHOD_WITHOUT_DEFAULT_VALUE=Error
-ANNOTATION_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
-ANNOTATION_ELEMENT_TYPE_REMOVED_FIELD=Error
-ANNOTATION_ELEMENT_TYPE_REMOVED_METHOD=Error
-ANNOTATION_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
-API_COMPONENT_ELEMENT_TYPE_REMOVED_API_TYPE=Error
-API_COMPONENT_ELEMENT_TYPE_REMOVED_REEXPORTED_API_TYPE=Error
-API_COMPONENT_ELEMENT_TYPE_REMOVED_REEXPORTED_TYPE=Error
-API_COMPONENT_ELEMENT_TYPE_REMOVED_TYPE=Error
-API_USE_SCAN_FIELD_SEVERITY=Error
-API_USE_SCAN_METHOD_SEVERITY=Error
-API_USE_SCAN_TYPE_SEVERITY=Error
-CLASS_ELEMENT_TYPE_ADDED_FIELD=Error
-CLASS_ELEMENT_TYPE_ADDED_METHOD=Error
-CLASS_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
-CLASS_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
-CLASS_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
-CLASS_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
-CLASS_ELEMENT_TYPE_CHANGED_NON_ABSTRACT_TO_ABSTRACT=Error
-CLASS_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
-CLASS_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
-CLASS_ELEMENT_TYPE_REMOVED_CONSTRUCTOR=Error
-CLASS_ELEMENT_TYPE_REMOVED_FIELD=Error
-CLASS_ELEMENT_TYPE_REMOVED_METHOD=Error
-CLASS_ELEMENT_TYPE_REMOVED_SUPERCLASS=Error
-CLASS_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
-CLASS_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
-CONSTRUCTOR_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
-CONSTRUCTOR_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
-CONSTRUCTOR_ELEMENT_TYPE_CHANGED_VARARGS_TO_ARRAY=Error
-CONSTRUCTOR_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
-ENUM_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
-ENUM_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
-ENUM_ELEMENT_TYPE_REMOVED_ENUM_CONSTANT=Error
-ENUM_ELEMENT_TYPE_REMOVED_FIELD=Error
-ENUM_ELEMENT_TYPE_REMOVED_METHOD=Error
-ENUM_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
-FIELD_ELEMENT_TYPE_ADDED_VALUE=Error
-FIELD_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
-FIELD_ELEMENT_TYPE_CHANGED_FINAL_TO_NON_FINAL_STATIC_CONSTANT=Error
-FIELD_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
-FIELD_ELEMENT_TYPE_CHANGED_NON_STATIC_TO_STATIC=Error
-FIELD_ELEMENT_TYPE_CHANGED_STATIC_TO_NON_STATIC=Error
-FIELD_ELEMENT_TYPE_CHANGED_TYPE=Error
-FIELD_ELEMENT_TYPE_CHANGED_VALUE=Error
-FIELD_ELEMENT_TYPE_REMOVED_TYPE_ARGUMENT=Error
-FIELD_ELEMENT_TYPE_REMOVED_VALUE=Error
-ILLEGAL_EXTEND=Warning
-ILLEGAL_IMPLEMENT=Warning
-ILLEGAL_INSTANTIATE=Warning
-ILLEGAL_OVERRIDE=Warning
-ILLEGAL_REFERENCE=Warning
-INTERFACE_ELEMENT_TYPE_ADDED_DEFAULT_METHOD=Error
-INTERFACE_ELEMENT_TYPE_ADDED_FIELD=Error
-INTERFACE_ELEMENT_TYPE_ADDED_METHOD=Error
-INTERFACE_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
-INTERFACE_ELEMENT_TYPE_ADDED_SUPER_INTERFACE_WITH_METHODS=Error
-INTERFACE_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
-INTERFACE_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
-INTERFACE_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
-INTERFACE_ELEMENT_TYPE_REMOVED_FIELD=Error
-INTERFACE_ELEMENT_TYPE_REMOVED_METHOD=Error
-INTERFACE_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
-INTERFACE_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
-INVALID_ANNOTATION=Ignore
-INVALID_JAVADOC_TAG=Ignore
-INVALID_REFERENCE_IN_SYSTEM_LIBRARIES=Ignore
-LEAK_EXTEND=Warning
-LEAK_FIELD_DECL=Warning
-LEAK_IMPLEMENT=Warning
-LEAK_METHOD_PARAM=Warning
-LEAK_METHOD_RETURN_TYPE=Warning
-METHOD_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
-METHOD_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
-METHOD_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
-METHOD_ELEMENT_TYPE_CHANGED_NON_ABSTRACT_TO_ABSTRACT=Error
-METHOD_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
-METHOD_ELEMENT_TYPE_CHANGED_NON_STATIC_TO_STATIC=Error
-METHOD_ELEMENT_TYPE_CHANGED_STATIC_TO_NON_STATIC=Error
-METHOD_ELEMENT_TYPE_CHANGED_VARARGS_TO_ARRAY=Error
-METHOD_ELEMENT_TYPE_REMOVED_ANNOTATION_DEFAULT_VALUE=Error
-METHOD_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
-MISSING_EE_DESCRIPTIONS=Warning
-TYPE_PARAMETER_ELEMENT_TYPE_ADDED_CLASS_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_ADDED_INTERFACE_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_CHANGED_CLASS_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_CHANGED_INTERFACE_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_REMOVED_CLASS_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_REMOVED_INTERFACE_BOUND=Error
-UNUSED_PROBLEM_FILTERS=Warning
-automatically_removed_unused_problem_filters=false
-changed_execution_env=Error
-eclipse.preferences.version=1
-incompatible_api_component_version=Error
-incompatible_api_component_version_report_major_without_breaking_change=Error
-incompatible_api_component_version_report_minor_without_api_change=Error
-invalid_since_tag_version=Error
-malformed_since_tag=Error
-missing_since_tag=Error
-report_api_breakage_when_major_version_incremented=Disabled
-report_resolution_errors_api_component=Warning
+ANNOTATION_ELEMENT_TYPE_ADDED_FIELD=Error
+ANNOTATION_ELEMENT_TYPE_ADDED_METHOD_WITHOUT_DEFAULT_VALUE=Error
+ANNOTATION_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
+ANNOTATION_ELEMENT_TYPE_REMOVED_FIELD=Error
+ANNOTATION_ELEMENT_TYPE_REMOVED_METHOD=Error
+ANNOTATION_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
+API_COMPONENT_ELEMENT_TYPE_REMOVED_API_TYPE=Error
+API_COMPONENT_ELEMENT_TYPE_REMOVED_REEXPORTED_API_TYPE=Error
+API_COMPONENT_ELEMENT_TYPE_REMOVED_REEXPORTED_TYPE=Error
+API_COMPONENT_ELEMENT_TYPE_REMOVED_TYPE=Error
+API_USE_SCAN_FIELD_SEVERITY=Error
+API_USE_SCAN_METHOD_SEVERITY=Error
+API_USE_SCAN_TYPE_SEVERITY=Error
+CLASS_ELEMENT_TYPE_ADDED_FIELD=Error
+CLASS_ELEMENT_TYPE_ADDED_METHOD=Error
+CLASS_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
+CLASS_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
+CLASS_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
+CLASS_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
+CLASS_ELEMENT_TYPE_CHANGED_NON_ABSTRACT_TO_ABSTRACT=Error
+CLASS_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
+CLASS_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
+CLASS_ELEMENT_TYPE_REMOVED_CONSTRUCTOR=Error
+CLASS_ELEMENT_TYPE_REMOVED_FIELD=Error
+CLASS_ELEMENT_TYPE_REMOVED_METHOD=Error
+CLASS_ELEMENT_TYPE_REMOVED_SUPERCLASS=Error
+CLASS_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
+CLASS_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
+CONSTRUCTOR_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
+CONSTRUCTOR_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
+CONSTRUCTOR_ELEMENT_TYPE_CHANGED_VARARGS_TO_ARRAY=Error
+CONSTRUCTOR_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
+ENUM_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
+ENUM_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
+ENUM_ELEMENT_TYPE_REMOVED_ENUM_CONSTANT=Error
+ENUM_ELEMENT_TYPE_REMOVED_FIELD=Error
+ENUM_ELEMENT_TYPE_REMOVED_METHOD=Error
+ENUM_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
+FIELD_ELEMENT_TYPE_ADDED_VALUE=Error
+FIELD_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
+FIELD_ELEMENT_TYPE_CHANGED_FINAL_TO_NON_FINAL_STATIC_CONSTANT=Error
+FIELD_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
+FIELD_ELEMENT_TYPE_CHANGED_NON_STATIC_TO_STATIC=Error
+FIELD_ELEMENT_TYPE_CHANGED_STATIC_TO_NON_STATIC=Error
+FIELD_ELEMENT_TYPE_CHANGED_TYPE=Error
+FIELD_ELEMENT_TYPE_CHANGED_VALUE=Error
+FIELD_ELEMENT_TYPE_REMOVED_TYPE_ARGUMENT=Error
+FIELD_ELEMENT_TYPE_REMOVED_VALUE=Error
+ILLEGAL_EXTEND=Warning
+ILLEGAL_IMPLEMENT=Warning
+ILLEGAL_INSTANTIATE=Warning
+ILLEGAL_OVERRIDE=Warning
+ILLEGAL_REFERENCE=Warning
+INTERFACE_ELEMENT_TYPE_ADDED_DEFAULT_METHOD=Error
+INTERFACE_ELEMENT_TYPE_ADDED_FIELD=Error
+INTERFACE_ELEMENT_TYPE_ADDED_METHOD=Error
+INTERFACE_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
+INTERFACE_ELEMENT_TYPE_ADDED_SUPER_INTERFACE_WITH_METHODS=Error
+INTERFACE_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
+INTERFACE_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
+INTERFACE_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
+INTERFACE_ELEMENT_TYPE_REMOVED_FIELD=Error
+INTERFACE_ELEMENT_TYPE_REMOVED_METHOD=Error
+INTERFACE_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
+INTERFACE_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
+INVALID_ANNOTATION=Ignore
+INVALID_JAVADOC_TAG=Ignore
+INVALID_REFERENCE_IN_SYSTEM_LIBRARIES=Ignore
+LEAK_EXTEND=Warning
+LEAK_FIELD_DECL=Warning
+LEAK_IMPLEMENT=Warning
+LEAK_METHOD_PARAM=Warning
+LEAK_METHOD_RETURN_TYPE=Warning
+METHOD_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
+METHOD_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
+METHOD_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
+METHOD_ELEMENT_TYPE_CHANGED_NON_ABSTRACT_TO_ABSTRACT=Error
+METHOD_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
+METHOD_ELEMENT_TYPE_CHANGED_NON_STATIC_TO_STATIC=Error
+METHOD_ELEMENT_TYPE_CHANGED_STATIC_TO_NON_STATIC=Error
+METHOD_ELEMENT_TYPE_CHANGED_VARARGS_TO_ARRAY=Error
+METHOD_ELEMENT_TYPE_REMOVED_ANNOTATION_DEFAULT_VALUE=Error
+METHOD_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
+MISSING_EE_DESCRIPTIONS=Warning
+TYPE_PARAMETER_ELEMENT_TYPE_ADDED_CLASS_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_ADDED_INTERFACE_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_CHANGED_CLASS_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_CHANGED_INTERFACE_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_REMOVED_CLASS_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_REMOVED_INTERFACE_BOUND=Error
+UNUSED_PROBLEM_FILTERS=Warning
+automatically_removed_unused_problem_filters=false
+changed_execution_env=Error
+eclipse.preferences.version=1
+incompatible_api_component_version=Error
+incompatible_api_component_version_report_major_without_breaking_change=Error
+incompatible_api_component_version_report_minor_without_api_change=Error
+invalid_since_tag_version=Error
+malformed_since_tag=Error
+missing_since_tag=Error
+report_api_breakage_when_major_version_incremented=Disabled
+report_resolution_errors_api_component=Warning

原文件: ds/org.eclipse.pde.ds.annotations/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.annotations/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.ds.annotations;singleton:=true
-Bundle-Version: 1.1.500.qualifier
+Bundle-Version: 1.1.600.qualifier
 Bundle-Activator: org.eclipse.pde.ds.internal.annotations.Activator
 Bundle-Vendor: %Bundle-Vendor
 Require-Bundle: org.eclipse.ui;bundle-version=

原文件: ds/org.eclipse.pde.ds.annotations/pom.xml 
新文件: ds/org.eclipse.pde.ds.annotations/pom.xml
位置:  -21,6 +21,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.annotations</artifactId>
-  <version>1.1.500-SNAPSHOT</version>
+  <version>1.1.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ds/org.eclipse.pde.ds.tests/.settings/org.eclipse.pde.prefs 
新文件: ds/org.eclipse.pde.ds.tests/.settings/org.eclipse.pde.prefs
位置:  -1,33 +1,33  
-compilers.f.unresolved-features=1
-compilers.f.unresolved-plugins=1
-compilers.incompatible-environment=0
-compilers.p.build=1
-compilers.p.build.bin.includes=1
-compilers.p.build.encodings=2
-compilers.p.build.java.compiler=2
-compilers.p.build.java.compliance=1
-compilers.p.build.missing.output=2
-compilers.p.build.output.library=1
-compilers.p.build.source.library=1
-compilers.p.build.src.includes=1
-compilers.p.deprecated=1
-compilers.p.discouraged-class=1
-compilers.p.internal=1
-compilers.p.matching-pom-version=0
-compilers.p.missing-packages=0
-compilers.p.missing-version-export-package=2
-compilers.p.missing-version-import-package=2
-compilers.p.missing-version-require-bundle=2
-compilers.p.no-required-att=0
-compilers.p.not-externalized-att=1
-compilers.p.unknown-attribute=0
-compilers.p.unknown-class=0
-compilers.p.unknown-element=0
-compilers.p.unknown-identifier=1
-compilers.p.unknown-resource=0
-compilers.p.unresolved-ex-points=0
-compilers.p.unresolved-import=0
-compilers.s.create-docs=false
-compilers.s.doc-folder=doc
-compilers.s.open-tags=1
-eclipse.preferences.version=1
+compilers.f.unresolved-features=1
+compilers.f.unresolved-plugins=1
+compilers.incompatible-environment=0
+compilers.p.build=1
+compilers.p.build.bin.includes=1
+compilers.p.build.encodings=2
+compilers.p.build.java.compiler=2
+compilers.p.build.java.compliance=1
+compilers.p.build.missing.output=2
+compilers.p.build.output.library=1
+compilers.p.build.source.library=1
+compilers.p.build.src.includes=1
+compilers.p.deprecated=1
+compilers.p.discouraged-class=1
+compilers.p.internal=1
+compilers.p.matching-pom-version=0
+compilers.p.missing-packages=0
+compilers.p.missing-version-export-package=2
+compilers.p.missing-version-import-package=2
+compilers.p.missing-version-require-bundle=2
+compilers.p.no-required-att=0
+compilers.p.not-externalized-att=1
+compilers.p.unknown-attribute=0
+compilers.p.unknown-class=0
+compilers.p.unknown-element=0
+compilers.p.unknown-identifier=1
+compilers.p.unknown-resource=0
+compilers.p.unresolved-ex-points=0
+compilers.p.unresolved-import=0
+compilers.s.create-docs=false
+compilers.s.doc-folder=doc
+compilers.s.open-tags=1
+eclipse.preferences.version=1

原文件: ds/org.eclipse.pde.ds.tests/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ds.tests
-Bundle-Version: 1.1.400.qualifier
+Bundle-Version: 1.1.500.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ds.tests.Activator
 Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.junit;bundle-version=

原文件: ds/org.eclipse.pde.ds.tests/pom.xml 
新文件: ds/org.eclipse.pde.ds.tests/pom.xml
位置:  -20,6 +20,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.tests</artifactId>
-  <version>1.1.400-SNAPSHOT</version>
+  <version>1.1.500-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 </project>

原文件: features/org.eclipse.pde-feature/.project 
新文件: features/org.eclipse.pde-feature/.project
位置:  -1,17 +1,17  
-<?xml version=
-<projectDescription>
-	<name>org.eclipse.pde-feature</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.pde.FeatureBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.pde.FeatureNature</nature>
-	</natures>
-</projectDescription>
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.pde-feature</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.pde.FeatureBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.FeatureNature</nature>
+	</natures>
+</projectDescription>

原文件: features/org.eclipse.pde-feature/.settings/org.eclipse.core.runtime.prefs 
新文件: features/org.eclipse.pde-feature/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: u
原文件: org.eclipse.pde.ua.core/META-INF/MANIFEST.MF 
新文件: ua/org.eclipse.pde.ua.core/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ua.core;singleton:=true
-Bundle-Version: 1.1.300.qualifier
+Bundle-Version: 1.1.400.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ua.core.Activator
 Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.pde.core;bundle-version=

原文件: u
原文件: org.eclipse.pde.ua.core/pom.xml 
新文件: ua/org.eclipse.pde.ua.core/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ua.core</artifactId>
-  <version>1.1.300-SNAPSHOT</version>
+  <version>1.1.400-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <code.ignoredWarnings>-warn:-deprecation,unavoidableGenericProblems</code.ignoredWarnings>

原文件: u
原文件: org.eclipse.pde.ua.core/src/org/eclipse/pde/internal/u
原文件: core/ctxhelp/text/CtxHelpDescriptionTextNode.java 
新文件: ua/org.eclipse.pde.ua.core/src/org/eclipse/pde/internal/ua/core/ctxhelp/text/CtxHelpDescriptionTextNode.java
位置:  -1,44 +1,44  
-/*******************************************************************************
- * Copyright (c) 2009, 2017 Anyware Technologies and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2017 Anyware Technologies and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     Anyware Technologies - initial API and implementation
- *******************************************************************************/
-
-package org.eclipse.pde.internal.ua.core.ctxhelp.text;
-
-import java.util.HashSet;
-
-import org.eclipse.pde.internal.core.text.DocumentTextNode;
-import org.eclipse.pde.internal.core.util.PDETextHelper;
-
-public class CtxHelpDescriptionTextNode extends DocumentTextNode {
-
-	private static final long serialVersionUID = 1L;
-
-	private static final HashSet<String> TAG_EXCEPTIONS = new HashSet<>(2);
-
-	static {
-		TAG_EXCEPTIONS.add(
-		TAG_EXCEPTIONS.add(
-	}
-
-	public CtxHelpDescriptionTextNode() {
-		super();
-	}
-
-	@Override
-	public String write() {
-		String content = getText().trim();
-		return PDETextHelper.translateWriteText(content, TAG_EXCEPTIONS,
-				SUBSTITUTE_CHARS);
-	}
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Anyware Technologies - initial API and implementation
+ *******************************************************************************/
+
+package org.eclipse.pde.internal.ua.core.ctxhelp.text;
+
+import java.util.HashSet;
+
+import org.eclipse.pde.internal.core.text.DocumentTextNode;
+import org.eclipse.pde.internal.core.util.PDETextHelper;
+
+public class CtxHelpDescriptionTextNode extends DocumentTextNode {
+
+	private static final long serialVersionUID = 1L;
+
+	private static final HashSet<String> TAG_EXCEPTIONS = new HashSet<>(2);
+
+	static {
+		TAG_EXCEPTIONS.add(
+		TAG_EXCEPTIONS.add(
+	}
+
+	public CtxHelpDescriptionTextNode() {
+		super();
+	}
+
+	@Override
+	public String write() {
+		String content = getText().trim();
+		return PDETextHelper.translateWriteText(content, TAG_EXCEPTIONS,
+				SUBSTITUTE_CHARS);
+	}
+
+}

原文件: u
原文件: org.eclipse.pde.ua.core/src/org/eclipse/pde/internal/u
原文件: core/ctxhelp/text/CtxHelpMarkerManager.java 
新文件: ua/org.eclipse.pde.ua.core/src/org/eclipse/pde/internal/ua/core/ctxhelp/text/CtxHelpMarkerManager.java
位置:  -1,71 +1,71  
-/*******************************************************************************
- * Copyright (c) 2009, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package org.eclipse.pde.internal.ua.core.ctxhelp.text;
-
-import java.util.Collection;
-import java.util.Iterator;
-
-import org.eclipse.core.resources.IMarker;
-import org.eclipse.core.resources.IResource;
-import org.eclipse.core.runtime.CoreException;
-import org.xml.sax.SAXParseException;
-
-/**
- * Manages markers for xml problems in the context help editor
- */
-public class CtxHelpMarkerManager {
-
-	public static void refreshMarkers(CtxHelpModel model) {
-		deleteMarkers(model);
-		createMarkers(model);
-	}
-
-	public static void deleteMarkers(CtxHelpModel model) {
-		try {
-			IMarker[] problems = model.getUnderlyingResource().findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
-			if (problems != null) {
-				for (IMarker problem : problems) {
-					problem.delete();
-				}
-			}
-		} catch (CoreException e) {
-		}
-
-	}
-
-	public static void createMarkers(CtxHelpModel model) {
-		Collection<Exception> errors = model.getErrors();
-		if (errors == null || errors.isEmpty()) {
-			return;
-		}
-
-		Iterator<Exception> iter = errors.iterator();
-		while (iter.hasNext()) {
-			Throwable exception = iter.next();
-			if (exception instanceof SAXParseException) {
-				int line = ((SAXParseException) exception).getLineNumber();
-				try {
-
-					IMarker marker = model.getUnderlyingResource().createMarker(IMarker.PROBLEM);
-
-					marker.setAttribute(IMarker.LINE_NUMBER, line);
-					marker.setAttribute(IMarker.SEVERITY, IMarker.SEVERITY_ERROR);
-					marker.setAttribute(IMarker.MESSAGE, exception.getLocalizedMessage());
-				} catch (CoreException e) {
-				}
-			}
-		}
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+package org.eclipse.pde.internal.ua.core.ctxhelp.text;
+
+import java.util.Collection;
+import java.util.Iterator;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.CoreException;
+import org.xml.sax.SAXParseException;
+
+/**
+ * Manages markers for xml problems in the context help editor
+ */
+public class CtxHelpMarkerManager {
+
+	public static void refreshMarkers(CtxHelpModel model) {
+		deleteMarkers(model);
+		createMarkers(model);
+	}
+
+	public static void deleteMarkers(CtxHelpModel model) {
+		try {
+			IMarker[] problems = model.getUnderlyingResource().findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
+			if (problems != null) {
+				for (IMarker problem : problems) {
+					problem.delete();
+				}
+			}
+		} catch (CoreException e) {
+		}
+
+	}
+
+	public static void createMarkers(CtxHelpModel model) {
+		Collection<Exception> errors = model.getErrors();
+		if (errors == null || errors.isEmpty()) {
+			return;
+		}
+
+		Iterator<Exception> iter = errors.iterator();
+		while (iter.hasNext()) {
+			Throwable exception = iter.next();
+			if (exception instanceof SAXParseException) {
+				int line = ((SAXParseException) exception).getLineNumber();
+				try {
+
+					IMarker marker = model.getUnderlyingResource().createMarker(IMarker.PROBLEM);
+
+					marker.setAttribute(IMarker.LINE_NUMBER, line);
+					marker.setAttribute(IMarker.SEVERITY, IMarker.SEVERITY_ERROR);
+					marker.setAttribute(IMarker.MESSAGE, exception.getLocalizedMessage());
+				} catch (CoreException e) {
+				}
+			}
+		}
+	}
+}

原文件: u
原文件: org.eclipse.pde.ua.core/src/org/eclipse/pde/internal/u
原文件: core/toc/text/TocMarkerManager.java 
新文件: ua/org.eclipse.pde.ua.core/src/org/eclipse/pde/internal/ua/core/toc/text/TocMarkerManager.java
位置:  -1,78 +1,78  
-/*******************************************************************************
- * Copyright (c) 2009, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package org.eclipse.pde.internal.ua.core.toc.text;
-
-import java.util.Collection;
-import java.util.Iterator;
-
-import org.eclipse.core.resources.IMarker;
-import org.eclipse.core.resources.IResource;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.pde.internal.core.PDECore;
-import org.xml.sax.SAXParseException;
-
-public class TocMarkerManager {
-
-	public static void refreshMarkers(TocModel model) {
-		deleteMarkers(model);
-		createMarkers(model);
-	}
-
-	public static void deleteMarkers(TocModel model) {
-		try {
-			 if (model.getUnderlyingResource() == null) {
-				 return;
-			 }
-			IMarker[] problems = model.getUnderlyingResource().findMarkers(
-					IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
-			if (problems != null) {
-				for (IMarker problem : problems) {
-					problem.delete();
-				}
-			}
-		} catch (CoreException e) {
-			PDECore.log(e);
-		}
-
-	}
-
-	public static void createMarkers(TocModel model) {
-		Collection<Exception> errors = model.getErrors();
-		if (errors == null || errors.isEmpty()) {
-			return;
-		}
-
-		Iterator<Exception> iter = errors.iterator();
-		while (iter.hasNext()) {
-			Throwable exception = iter.next();
-			if (exception instanceof SAXParseException) {
-				int line = ((SAXParseException) exception).getLineNumber();
-				try {
-
-					IMarker marker = model.getUnderlyingResource()
-							.createMarker(IMarker.PROBLEM);
-
-					marker.setAttribute(IMarker.LINE_NUMBER, line);
-					marker.setAttribute(IMarker.SEVERITY,
-							IMarker.SEVERITY_ERROR);
-					marker.setAttribute(IMarker.MESSAGE, exception
-							.getLocalizedMessage());
-				} catch (CoreException e) {
-					PDECore.log(e);
-				}
-			}
-		}
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+package org.eclipse.pde.internal.ua.core.toc.text;
+
+import java.util.Collection;
+import java.util.Iterator;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.pde.internal.core.PDECore;
+import org.xml.sax.SAXParseException;
+
+public class TocMarkerManager {
+
+	public static void refreshMarkers(TocModel model) {
+		deleteMarkers(model);
+		createMarkers(model);
+	}
+
+	public static void deleteMarkers(TocModel model) {
+		try {
+			 if (model.getUnderlyingResource() == null) {
+				 return;
+			 }
+			IMarker[] problems = model.getUnderlyingResource().findMarkers(
+					IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
+			if (problems != null) {
+				for (IMarker problem : problems) {
+					problem.delete();
+				}
+			}
+		} catch (CoreException e) {
+			PDECore.log(e);
+		}
+
+	}
+
+	public static void createMarkers(TocModel model) {
+		Collection<Exception> errors = model.getErrors();
+		if (errors == null || errors.isEmpty()) {
+			return;
+		}
+
+		Iterator<Exception> iter = errors.iterator();
+		while (iter.hasNext()) {
+			Throwable exception = iter.next();
+			if (exception instanceof SAXParseException) {
+				int line = ((SAXParseException) exception).getLineNumber();
+				try {
+
+					IMarker marker = model.getUnderlyingResource()
+							.createMarker(IMarker.PROBLEM);
+
+					marker.setAttribute(IMarker.LINE_NUMBER, line);
+					marker.setAttribute(IMarker.SEVERITY,
+							IMarker.SEVERITY_ERROR);
+					marker.setAttribute(IMarker.MESSAGE, exception
+							.getLocalizedMessage());
+				} catch (CoreException e) {
+					PDECore.log(e);
+				}
+			}
+		}
+	}
+}

原文件: u
原文件: org.eclipse.pde.ua.ui/META-INF/MANIFEST.MF 
新文件: ua/org.eclipse.pde.ua.ui/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ua.ui;singleton:=true
-Bundle-Version: 1.1.600.qualifier
+Bundle-Version: 1.1.700.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ua.ui.PDEUserAssistanceUIPlugin
 Require-Bundle: org.eclipse.ui;bundle-version=
  org.eclipse.core.runtime;bundle-version=

原文件: u
原文件: org.eclipse.pde.ua.ui/pom.xml 
新文件: ua/org.eclipse.pde.ua.ui/pom.xml
位置:  -20,7 +20,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ua.ui</artifactId>
-  <version>1.1.600-SNAPSHOT</version>
+  <version>1.1.700-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
   <properties>

原文件: u
原文件: org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/u
原文件: ui/editor/cheatsheet/simple/SimpleCSDefinitionPage.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/editor/cheatsheet/simple/SimpleCSDefinitionPage.java
位置:  -1,213 +1,213  
-/*******************************************************************************
- * Copyright (c) 2006, 2009 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2006, 2009 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-package org.eclipse.pde.internal.ua.ui.editor.cheatsheet.simple;
-
-import org.eclipse.jface.text.source.ISourceViewer;
-import org.eclipse.jface.viewers.ISelection;
-import org.eclipse.pde.core.IModelChangedEvent;
-import org.eclipse.pde.core.IModelChangedListener;
-import org.eclipse.pde.internal.core.AbstractModel;
-import org.eclipse.pde.internal.core.text.IDocumentRange;
-import org.eclipse.pde.internal.core.util.PDETextHelper;
-import org.eclipse.pde.internal.ua.core.cheatsheet.simple.ISimpleCSConstants;
-import org.eclipse.pde.internal.ua.core.cheatsheet.simple.ISimpleCSModel;
-import org.eclipse.pde.internal.ua.core.cheatsheet.simple.ISimpleCSObject;
-import org.eclipse.pde.internal.ua.ui.PDEUserAssistanceUIPlugin;
-import org.eclipse.pde.internal.ua.ui.PDEUserAssistanceUIPluginImages;
-import org.eclipse.pde.internal.ui.IHelpContextIds;
-import org.eclipse.pde.internal.ui.editor.PDEFormPage;
-import org.eclipse.pde.internal.ui.editor.PDEMasterDetailsBlock;
-import org.eclipse.pde.internal.ui.editor.PDESourcePage;
-import org.eclipse.swt.custom.StyledText;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.forms.IManagedForm;
-import org.eclipse.ui.forms.editor.FormEditor;
-import org.eclipse.ui.forms.editor.IFormPage;
-import org.eclipse.ui.forms.widgets.ScrolledForm;
-
-public class SimpleCSDefinitionPage extends PDEFormPage implements
-		IModelChangedListener {
-
-	public static final String PAGE_ID = 
-
-	private SimpleCSBlock fBlock;
-	private boolean fStale;
-
-	public SimpleCSDefinitionPage(FormEditor editor) {
-		super(editor, PAGE_ID, SimpleMessages.SimpleCSDefinitionPage_title);
-		fBlock = new SimpleCSBlock(this);
-	}
-
-	@Override
-	protected String getHelpResource() {
-		return IHelpContextIds.SIMPLE_CS_EDITOR;
-	}
-
-	@Override
-	protected void createFormContent(IManagedForm managedForm) {
-		// Bug: Two veritical scrollbars appear when resizing the editor
-		// vertically
-		// Note: Scrolled form #1 created here
-		ScrolledForm form = managedForm.getForm();
-		// Set page title
-		ISimpleCSModel model = (ISimpleCSModel) getModel();
-		// Ensure the model was loaded properly
-		if ((model == null) || (model.isLoaded() == false)) {
-			Exception e = null;
-			if (model instanceof AbstractModel) {
-				e = ((AbstractModel) model).getException();
-			}
-			// Create a formatted error page
-			createFormErrorContent(managedForm,
-					SimpleMessages.SimpleCSDefinitionPage_loadFailure,
-					SimpleMessages.SimpleCSDefinitionPage_errorMessage, e);
-			return;
-		}
-		// Create the rest of the actions in the form title area
-		super.createFormContent(managedForm);
-		// Form image
-		form.setImage(PDEUserAssistanceUIPlugin.getDefault().getLabelProvider()
-				.get(PDEUserAssistanceUIPluginImages.DESC_CHEATSHEET_OBJ));
-		// Form title
-		String title = PDETextHelper.translateReadText(model.getSimpleCS()
-				.getTitle());
-		if (title.length() > 0) {
-			form.setText(title);
-		} else {
-			form.setText(SimpleMessages.SimpleCSDefinitionPage_title);
-		}
-		// Create the masters details block
-		// Note: Scrolled form #2 created here
-		fBlock.createContent(managedForm);
-		// Force the selection in the masters tree section to load the
-		// proper details section
-		fBlock.getMastersSection().fireSelection();
-		// Register this page to be informed of model change events
-		model.addModelChangedListener(this);
-		// Set context-sensitive help
-		PlatformUI.getWorkbench().getHelpSystem().setHelp(form.getBody(),
-				IHelpContextIds.SIMPLE_CS_EDITOR);
-	}
-
-	@Override
-	public void dispose() {
-
-		ISimpleCSModel simpleCSModel = (ISimpleCSModel) getModel();
-		if (simpleCSModel != null) {
-			simpleCSModel.removeModelChangedListener(this);
-		}
-		super.dispose();
-	}
-
-	@Override
-	public void modelChanged(IModelChangedEvent event) {
-
-		if (event.getChangeType() == IModelChangedEvent.CHANGE) {
-			Object[] objects = event.getChangedObjects();
-			// Ensure right type
-			if ((objects[0] instanceof ISimpleCSObject) == false) {
-				return;
-			}
-			ISimpleCSObject object = (ISimpleCSObject) objects[0];
-			if (object == null) {
-				// Ignore
-			} else if (object.getType() == ISimpleCSConstants.TYPE_CHEAT_SHEET) {
-				String changeProperty = event.getChangedProperty();
-				if ((changeProperty != null)
-						&amp;&amp; changeProperty
-								.equals(ISimpleCSConstants.ATTRIBUTE_TITLE)) {
-					// Has to be a String if the property is a title
-					// Update the form page title
-					getManagedForm().getForm().setText(
-							PDETextHelper.translateReadText((String) event
-									.getNewValue()));
-				}
-			}
-		} else if (event.getChangeType() == IModelChangedEvent.WORLD_CHANGED) {
-			fStale = true;
-		}
-		// Inform the block
-		fBlock.modelChanged(event);
-	}
-
-	public ISelection getSelection() {
-		return fBlock.getSelection();
-	}
-
-	public PDEMasterDetailsBlock getBlock() {
-		return fBlock;
-	}
-
-	@Override
-	public void setActive(boolean active) {
-		super.setActive(active);
-
-		if (active == false) {
-			// Switching away from this page
-			return;
-		}
-		// Switching into this page
-		// Get source page
-		IFormPage page = getPDEEditor().findPage(
-				SimpleCSInputContext.CONTEXT_ID);
-		// Ensure we got the source page
-		if ((page instanceof PDESourcePage) == false) {
-			return;
-		}
-		PDESourcePage sourcePage = (PDESourcePage) page;
-		// Get the source viewer
-		ISourceViewer viewer = sourcePage.getViewer();
-		// Ensure the viewer is defined
-		if (viewer == null) {
-			return;
-		}
-		// Get the styled text
-		StyledText text = viewer.getTextWidget();
-		// Ensure the styled text is defined
-		if (text == null) {
-			return;
-		}
-		// Get the cursor offset
-		int offset = text.getCaretOffset();
-		// Ensure the offset is defined
-		if (offset < 0) {
-			return;
-		}
-		// Get the range the offset is on
-		IDocumentRange range = sourcePage.getRangeElement(offset, true);
-		// Adapt the range to a node representable in the master tree viewer
-		range = sourcePage.adaptRange(range);
-		// Ensure the range is defined
-		if (range == null) {
-			return;
-		}
-		// Select the node in the master tree viewer if defined
-		fBlock.getMastersSection().setFormInput(range);
-
-		if (fStale) {
-			// If we get a global model change the model's title may have
-			// changed
-			ScrolledForm form = getManagedForm().getForm();
-			ISimpleCSModel model = (ISimpleCSModel) getModel();
-			String oldTitle = form.getText();
-			String newTitle = model.getSimpleCS().getTitle();
-			if (!newTitle.equals(oldTitle)) {
-				// Update form page title
-				form.setText(PDETextHelper.translateReadText(newTitle));
-			}
-		}
-	}
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+package org.eclipse.pde.internal.ua.ui.editor.cheatsheet.simple;
+
+import org.eclipse.jface.text.source.ISourceViewer;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.pde.core.IModelChangedEvent;
+import org.eclipse.pde.core.IModelChangedListener;
+import org.eclipse.pde.internal.core.AbstractModel;
+import org.eclipse.pde.internal.core.text.IDocumentRange;
+import org.eclipse.pde.internal.core.util.PDETextHelper;
+import org.eclipse.pde.internal.ua.core.cheatsheet.simple.ISimpleCSConstants;
+import org.eclipse.pde.internal.ua.core.cheatsheet.simple.ISimpleCSModel;
+import org.eclipse.pde.internal.ua.core.cheatsheet.simple.ISimpleCSObject;
+import org.eclipse.pde.internal.ua.ui.PDEUserAssistanceUIPlugin;
+import org.eclipse.pde.internal.ua.ui.PDEUserAssistanceUIPluginImages;
+import org.eclipse.pde.internal.ui.IHelpContextIds;
+import org.eclipse.pde.internal.ui.editor.PDEFormPage;
+import org.eclipse.pde.internal.ui.editor.PDEMasterDetailsBlock;
+import org.eclipse.pde.internal.ui.editor.PDESourcePage;
+import org.eclipse.swt.custom.StyledText;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.forms.IManagedForm;
+import org.eclipse.ui.forms.editor.FormEditor;
+import org.eclipse.ui.forms.editor.IFormPage;
+import org.eclipse.ui.forms.widgets.ScrolledForm;
+
+public class SimpleCSDefinitionPage extends PDEFormPage implements
+		IModelChangedListener {
+
+	public static final String PAGE_ID = 
+
+	private SimpleCSBlock fBlock;
+	private boolean fStale;
+
+	public SimpleCSDefinitionPage(FormEditor editor) {
+		super(editor, PAGE_ID, SimpleMessages.SimpleCSDefinitionPage_title);
+		fBlock = new SimpleCSBlock(this);
+	}
+
+	@Override
+	protected String getHelpResource() {
+		return IHelpContextIds.SIMPLE_CS_EDITOR;
+	}
+
+	@Override
+	protected void createFormContent(IManagedForm managedForm) {
+		// Bug: Two veritical scrollbars appear when resizing the editor
+		// vertically
+		// Note: Scrolled form #1 created here
+		ScrolledForm form = managedForm.getForm();
+		// Set page title
+		ISimpleCSModel model = (ISimpleCSModel) getModel();
+		// Ensure the model was loaded properly
+		if ((model == null) || (model.isLoaded() == false)) {
+			Exception e = null;
+			if (model instanceof AbstractModel) {
+				e = ((AbstractModel) model).getException();
+			}
+			// Create a formatted error page
+			createFormErrorContent(managedForm,
+					SimpleMessages.SimpleCSDefinitionPage_loadFailure,
+					SimpleMessages.SimpleCSDefinitionPage_errorMessage, e);
+			return;
+		}
+		// Create the rest of the actions in the form title area
+		super.createFormContent(managedForm);
+		// Form image
+		form.setImage(PDEUserAssistanceUIPlugin.getDefault().getLabelProvider()
+				.get(PDEUserAssistanceUIPluginImages.DESC_CHEATSHEET_OBJ));
+		// Form title
+		String title = PDETextHelper.translateReadText(model.getSimpleCS()
+				.getTitle());
+		if (title.length() > 0) {
+			form.setText(title);
+		} else {
+			form.setText(SimpleMessages.SimpleCSDefinitionPage_title);
+		}
+		// Create the masters details block
+		// Note: Scrolled form #2 created here
+		fBlock.createContent(managedForm);
+		// Force the selection in the masters tree section to load the
+		// proper details section
+		fBlock.getMastersSection().fireSelection();
+		// Register this page to be informed of model change events
+		model.addModelChangedListener(this);
+		// Set context-sensitive help
+		PlatformUI.getWorkbench().getHelpSystem().setHelp(form.getBody(),
+				IHelpContextIds.SIMPLE_CS_EDITOR);
+	}
+
+	@Override
+	public void dispose() {
+
+		ISimpleCSModel simpleCSModel = (ISimpleCSModel) getModel();
+		if (simpleCSModel != null) {
+			simpleCSModel.removeModelChangedListener(this);
+		}
+		super.dispose();
+	}
+
+	@Override
+	public void modelChanged(IModelChangedEvent event) {
+
+		if (event.getChangeType() == IModelChangedEvent.CHANGE) {
+			Object[] objects = event.getChangedObjects();
+			// Ensure right type
+			if ((objects[0] instanceof ISimpleCSObject) == false) {
+				return;
+			}
+			ISimpleCSObject object = (ISimpleCSObject) objects[0];
+			if (object == null) {
+				// Ignore
+			} else if (object.getType() == ISimpleCSConstants.TYPE_CHEAT_SHEET) {
+				String changeProperty = event.getChangedProperty();
+				if ((changeProperty != null)
+						&amp;&amp; changeProperty
+								.equals(ISimpleCSConstants.ATTRIBUTE_TITLE)) {
+					// Has to be a String if the property is a title
+					// Update the form page title
+					getManagedForm().getForm().setText(
+							PDETextHelper.translateReadText((String) event
+									.getNewValue()));
+				}
+			}
+		} else if (event.getChangeType() == IModelChangedEvent.WORLD_CHANGED) {
+			fStale = true;
+		}
+		// Inform the block
+		fBlock.modelChanged(event);
+	}
+
+	public ISelection getSelection() {
+		return fBlock.getSelection();
+	}
+
+	public PDEMasterDetailsBlock getBlock() {
+		return fBlock;
+	}
+
+	@Override
+	public void setActive(boolean active) {
+		super.setActive(active);
+
+		if (active == false) {
+			// Switching away from this page
+			return;
+		}
+		// Switching into this page
+		// Get source page
+		IFormPage page = getPDEEditor().findPage(
+				SimpleCSInputContext.CONTEXT_ID);
+		// Ensure we got the source page
+		if ((page instanceof PDESourcePage) == false) {
+			return;
+		}
+		PDESourcePage sourcePage = (PDESourcePage) page;
+		// Get the source viewer
+		ISourceViewer viewer = sourcePage.getViewer();
+		// Ensure the viewer is defined
+		if (viewer == null) {
+			return;
+		}
+		// Get the styled text
+		StyledText text = viewer.getTextWidget();
+		// Ensure the styled text is defined
+		if (text == null) {
+			return;
+		}
+		// Get the cursor offset
+		int offset = text.getCaretOffset();
+		// Ensure the offset is defined
+		if (offset < 0) {
+			return;
+		}
+		// Get the range the offset is on
+		IDocumentRange range = sourcePage.getRangeElement(offset, true);
+		// Adapt the range to a node representable in the master tree viewer
+		range = sourcePage.adaptRange(range);
+		// Ensure the range is defined
+		if (range == null) {
+			return;
+		}
+		// Select the node in the master tree viewer if defined
+		fBlock.getMastersSection().setFormInput(range);
+
+		if (fStale) {
+			// If we get a global model change the model's title may have
+			// changed
+			ScrolledForm form = getManagedForm().getForm();
+			ISimpleCSModel model = (ISimpleCSModel) getModel();
+			String oldTitle = form.getText();
+			String newTitle = model.getSimpleCS().getTitle();
+			if (!newTitle.equals(oldTitle)) {
+				// Update form page title
+				form.setText(PDETextHelper.translateReadText(newTitle));
+			}
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.core/.externalToolBuilders/org.eclipse.pde.core 
localbuild.xml
位置:  -1,17 +1,17  
-<?xml version=
-<launchConfiguration type=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<booleanAttribute key=
-<booleanAttribute key=
-<stringAttribute key=
-<booleanAttribute key=
-<stringAttribute key=
-<booleanAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<stringAttribute key=
-<booleanAttribute key=
-</launchConfiguration>
+<?xml version=
+<launchConfiguration type=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<booleanAttribute key=
+<booleanAttribute key=
+<stringAttribute key=
+<booleanAttribute key=
+<stringAttribute key=
+<booleanAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<stringAttribute key=
+<booleanAttribute key=
+</launchConfiguration>

原文件: ui/org.eclipse.pde.core/.project 
新文件: ui/org.eclipse.pde.core/.project
位置:  -1,44 +1,44  
-<?xml version=
-<projectDescription>
-	<name>org.eclipse.pde.core</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.ManifestBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.SchemaBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
-			<triggers>auto,full,incremental,</triggers>
-			<arguments>
-				<dictionary>
-					<key>LaunchConfigHandle</key>
-					<value>&amp;lt;project&amp;gt;/.externalToolBuilders/org.eclipse.pde.core localbuild.xml [Builder].launch</value>
-				</dictionary>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
-	</natures>
-</projectDescription>
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.pde.core</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>auto,full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&amp;lt;project&amp;gt;/.externalToolBuilders/org.eclipse.pde.core localbuild.xml [Builder].launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.core/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.core/.settings/org.eclipse.jdt.core.prefs
位置:  -1,412 +1,412  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
-org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
-org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
-org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
-org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
-org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=error
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=return_tag
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
-org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
-org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=warning
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
-org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=next_line_shifted
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=120
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_on_off_tags=false
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
-org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=error
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=enabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=return_tag
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=warning
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=next_line_shifted
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=120
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error
+org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter

原文件: ui/org.eclipse.pde.core/schem
原文件: javadoc.exsd 
新文件: ui/org.eclipse.pde.core/schema/javadoc.exsd
位置:  -1,159 +1,159  
-<?xml version='1.0' encoding='UTF-8'?>
-<!-- Schema file written by PDE -->
-<schema targetNamespace=
-<annotation>
-      <appInfo>
-         <meta.schema plugin=
-      </appInfo>
-      <documentation>
-         This extension point associates plug-ins with the javadoc location of the code they contain.  PDE uses these mappings to automatically attach javadoc to plug-in libraries when it computes a plug-in&amp;apos;s classpath.
-      </documentation>
-   </annotation>
-
-   <element name=
-      <annotation>
-         <appInfo>
-            <meta.element />
-         </appInfo>
-      </annotation>
-      <complexType>
-         <sequence>
-            <element ref=
-         </sequence>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  
-               </documentation>
-            </annotation>
-         </attribute>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  
-               </documentation>
-            </annotation>
-         </attribute>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  
-               </documentation>
-               <appInfo>
-                  <meta.attribute translatable=
-               </appInfo>
-            </annotation>
-         </attribute>
-      </complexType>
-   </element>
-
-   <element name=
-      <complexType>
-         <sequence>
-            <element ref=
-         </sequence>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  The &amp;lt;code&amp;gt;path&amp;lt;/code&amp;gt; is a URL or a path that is relative to the plug-in declaring the extension.
-               </documentation>
-            </annotation>
-         </attribute>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  an optional attribute indicating if the javadoc is located inside an archive.  If not specified, the default is &amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt;.  This attribute should be used only if the &amp;lt;code&amp;gt;path&amp;lt;/code&amp;gt; attribute specifies a relative path.  This attribute has no effect if the &amp;lt;code&amp;gt;path&amp;lt;/code&amp;gt; attribute specifies a URL.
-               </documentation>
-            </annotation>
-         </attribute>
-      </complexType>
-   </element>
-
-   <element name=
-      <complexType>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  the id of the plug-in whose javadoc location is specified by the &amp;lt;code&amp;gt;path&amp;lt;/code&amp;gt; attribute
-               </documentation>
-            </annotation>
-         </attribute>
-      </complexType>
-   </element>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         No Java code is required for this extension point.
-      </documentation>
-   </annotation>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         3.2
-      </documentation>
-   </annotation>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         The following is an example of the &amp;lt;code&amp;gt;javadoc&amp;lt;/code&amp;gt; extension:
-&amp;lt;pre&amp;gt;
- &amp;lt;extension point=&amp;quot;org.eclipse.pde.core.javadoc&amp;quot;&amp;gt;
-     &amp;lt;javadoc path=&amp;quot;doc.zip!/references/api/&amp;quot; archive=&amp;quot;true&amp;quot;&amp;gt;
-        &amp;lt;plugin id=&amp;quot;com.example.abc&amp;quot;/&amp;gt;
-        &amp;lt;plugin id=&amp;quot;com.example.def&amp;quot;/&amp;gt;
-     &amp;lt;/javadoc&amp;gt;
-     
-     &amp;lt;javadoc path=&amp;quot;http://www.sample-url.org/doc/&amp;quot;&amp;gt;
-        &amp;lt;plugin id=&amp;quot;com.example.ghi&amp;quot;/&amp;gt;
-     &amp;lt;/javadoc&amp;gt;
-     
-     &amp;lt;javadoc path=&amp;quot;doc/&amp;quot;&amp;gt;
-        &amp;lt;plugin id=&amp;quot;com.example.jkl&amp;quot;/&amp;gt;
-     &amp;lt;/javadoc&amp;gt;     
-  &amp;lt;/extension&amp;gt;
-&amp;lt;/pre&amp;gt;
-
-In this example, the javadoc for two plug-ins: &amp;lt;code&amp;gt;com.example.abc&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;com.example.def&amp;lt;/code&amp;gt; have their javadoc located in a &amp;lt;code&amp;gt;references/api/&amp;lt;/code&amp;gt; directory inside a &amp;lt;code&amp;gt;doc.zip&amp;lt;/code&amp;gt; ZIP file in the plug-in declaring this extension.
-
-The javadoc for plug-in &amp;lt;code&amp;gt;com.example.ghi&amp;lt;/code&amp;gt; is located at &amp;lt;code&amp;gt;http://www.sample-url.org/doc/&amp;lt;/code&amp;gt;.
-
-The javadoc for plug-in &amp;lt;code&amp;gt;com.example.jkl&amp;lt;/code&amp;gt; is located in directory &amp;lt;code&amp;gt;doc&amp;lt;/code&amp;gt; relative to the location of the plug-in declaring this extension.
-      </documentation>
-   </annotation>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         Eclipse SDK comes with ISV documentation plug-ins that use this extension point.
-      </documentation>
-   </annotation>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         Copyright (c) 2005 IBM Corporation and others.
-&amp;lt;br&amp;gt;
+<?xml version='1.0' encoding='UTF-8'?>
+<!-- Schema file written by PDE -->
+<schema targetNamespace=
+<annotation>
+      <appInfo>
+         <meta.schema plugin=
+      </appInfo>
+      <documentation>
+         This extension point associates plug-ins with the javadoc location of the code they contain.  PDE uses these mappings to automatically attach javadoc to plug-in libraries when it computes a plug-in&amp;apos;s classpath.
+      </documentation>
+   </annotation>
 
-This program and the accompanying materials are made 
-available under the terms of the Eclipse Public License 2.0 which 
-accompanies this distribution, and is available at 
+   <element name=
+      <annotation>
+         <appInfo>
+            <meta.element />
+         </appInfo>
+      </annotation>
+      <complexType>
+         <sequence>
+            <element ref=
+         </sequence>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+               <appInfo>
+                  <meta.attribute translatable=
+               </appInfo>
+            </annotation>
+         </attribute>
+      </complexType>
+   </element>
+
+   <element name=
+      <complexType>
+         <sequence>
+            <element ref=
+         </sequence>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  The &amp;lt;code&amp;gt;path&amp;lt;/code&amp;gt; is a URL or a path that is relative to the plug-in declaring the extension.
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  an optional attribute indicating if the javadoc is located inside an archive.  If not specified, the default is &amp;lt;code&amp;gt;false&amp;lt;/code&amp;gt;.  This attribute should be used only if the &amp;lt;code&amp;gt;path&amp;lt;/code&amp;gt; attribute specifies a relative path.  This attribute has no effect if the &amp;lt;code&amp;gt;path&amp;lt;/code&amp;gt; attribute specifies a URL.
+               </documentation>
+            </annotation>
+         </attribute>
+      </complexType>
+   </element>
+
+   <element name=
+      <complexType>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  the id of the plug-in whose javadoc location is specified by the &amp;lt;code&amp;gt;path&amp;lt;/code&amp;gt; attribute
+               </documentation>
+            </annotation>
+         </attribute>
+      </complexType>
+   </element>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         No Java code is required for this extension point.
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         3.2
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         The following is an example of the &amp;lt;code&amp;gt;javadoc&amp;lt;/code&amp;gt; extension:
+&amp;lt;pre&amp;gt;
+ &amp;lt;extension point=&amp;quot;org.eclipse.pde.core.javadoc&amp;quot;&amp;gt;
+     &amp;lt;javadoc path=&amp;quot;doc.zip!/references/api/&amp;quot; archive=&amp;quot;true&amp;quot;&amp;gt;
+        &amp;lt;plugin id=&amp;quot;com.example.abc&amp;quot;/&amp;gt;
+        &amp;lt;plugin id=&amp;quot;com.example.def&amp;quot;/&amp;gt;
+     &amp;lt;/javadoc&amp;gt;
+     
+     &amp;lt;javadoc path=&amp;quot;http://www.sample-url.org/doc/&amp;quot;&amp;gt;
+        &amp;lt;plugin id=&amp;quot;com.example.ghi&amp;quot;/&amp;gt;
+     &amp;lt;/javadoc&amp;gt;
+     
+     &amp;lt;javadoc path=&amp;quot;doc/&amp;quot;&amp;gt;
+        &amp;lt;plugin id=&amp;quot;com.example.jkl&amp;quot;/&amp;gt;
+     &amp;lt;/javadoc&amp;gt;     
+  &amp;lt;/extension&amp;gt;
+&amp;lt;/pre&amp;gt;
+
+In this example, the javadoc for two plug-ins: &amp;lt;code&amp;gt;com.example.abc&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;com.example.def&amp;lt;/code&amp;gt; have their javadoc located in a &amp;lt;code&amp;gt;references/api/&amp;lt;/code&amp;gt; directory inside a &amp;lt;code&amp;gt;doc.zip&amp;lt;/code&amp;gt; ZIP file in the plug-in declaring this extension.
+
+The javadoc for plug-in &amp;lt;code&amp;gt;com.example.ghi&amp;lt;/code&amp;gt; is located at &amp;lt;code&amp;gt;http://www.sample-url.org/doc/&amp;lt;/code&amp;gt;.
+
+The javadoc for plug-in &amp;lt;code&amp;gt;com.example.jkl&amp;lt;/code&amp;gt; is located in directory &amp;lt;code&amp;gt;doc&amp;lt;/code&amp;gt; relative to the location of the plug-in declaring this extension.
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         Eclipse SDK comes with ISV documentation plug-ins that use this extension point.
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         Copyright (c) 2005 IBM Corporation and others.
+&amp;lt;br&amp;gt;
+
+This program and the accompanying materials are made 
+available under the terms of the Eclipse Public License 2.0 which 
+accompanies this distribution, and is available at 
 &amp;lt;a href=&amp;quot;https://www.eclipse.org/legal/epl-2.0&amp;quot;&amp;gt;https://www.eclipse.org/legal/epl-v20.html&amp;lt;/a&amp;gt;/
 
-SPDX-License-Identifier: EPL-2.0.
-      </documentation>
-   </annotation>
-
-</schema>
+SPDX-License-Identifier: EPL-2.0.
+      </documentation>
+   </annotation>
+
+</schema>

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetHandle.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetHandle.java
位置:  -1,48 +1,48  
-/*******************************************************************************
- * Copyright (c) 2008, 2011 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2008, 2011 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import org.eclipse.core.runtime.CoreException;
-
-/**
- * A handle to a target definition.
- *
- * @since 3.8
- */
-public interface ITargetHandle {
-
-	/**
-	 * Returns the target definition this handle references.
-	 *
-	 * @return target definition
-	 * @throws CoreException if the underlying target definition does not exist
-	 */
-	public ITargetDefinition getTargetDefinition() throws CoreException;
-
-	/**
-	 * Returns a memento for this handle.
-	 *
-	 * @return a memento for this handle
-	 * @exception CoreException if unable to generate a memento
-	 */
-	public String getMemento() throws CoreException;
-
-	/**
-	 * Returns whether or not the underlying target definition exists.
-	 *
-	 * @return whether or not the underlying target definition exists
-	 */
-	public boolean exists();
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import org.eclipse.core.runtime.CoreException;
+
+/**
+ * A handle to a target definition.
+ *
+ * @since 3.8
+ */
+public interface ITargetHandle {
+
+	/**
+	 * Returns the target definition this handle references.
+	 *
+	 * @return target definition
+	 * @throws CoreException if the underlying target definition does not exist
+	 */
+	public ITargetDefinition getTargetDefinition() throws CoreException;
+
+	/**
+	 * Returns a memento for this handle.
+	 *
+	 * @return a memento for this handle
+	 * @exception CoreException if unable to generate a memento
+	 */
+	public String getMemento() throws CoreException;
+
+	/**
+	 * Returns whether or not the underlying target definition exists.
+	 *
+	 * @return whether or not the underlying target definition exists
+	 */
+	public boolean exists();
+
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetLocation.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetLocation.java
位置:  -1,166 +1,166  
-/*******************************************************************************
- * Copyright (c) 2011, 2019 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IAdaptable;
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.IStatus;
-
-/**
- * Describes a location in a target that provides bundles and features. Abstracts
- * the storage and provisioning of bundles. May contain a combination of
- * executable and source bundles.
- * <p>
- * Clients are allowed to provide their own implementations. For the target definition
- * to be persisted correctly, clients must provide a factory through the
- * <code>org.eclipse.pde.core.targetLocations</code> extension point.
- * </p><p>
- * It is recommended that implementors override {@link Object#equals(Object)} to return
- * <code>true</code> if the content of two containers are equal.  This allows PDE
- * to determine if two different target definitions have equivalent content.
- * </p><p>
- * To display an implementation in the PDE UI, clients may do the following:
- * </p><p>
- * - Implement <code>ITargetLocationWizard</code> and contribute to the <code>org.eclipse.pde.ui.targetLocationProvisioners</code>
- * extension point.
- * </p><p>
- * - Have their target location adapt to <code>org.eclipse.jface.viewers.ILabelProvider</code>
- * to provide text and icon labels in the target definition wizard and editor.
- * </p><p>
- * - Have their target location adapt to <code>org.eclipse.jface.viewers.ITreeContentProvider</code>
- * to provide children items in the target definition wizard and editor. The children must adapt to
- * <code>ILabelProvider</code> to get text and icon labels in the tree.
- * </p><p>
- * - Have their target location adapt to <code>org.eclipse.pde.ui.target.ITargetLocationEditor</code>
- * to open an edit wizard when the edit button is pressed on the target definition wizard and editor.
- * </p><p>
- * - Have their target location adapt to <code>org.eclipse.pde.ui.target.ITargetLocationUpdater</code>
- * to run an update job on the location when the update button is pressed on the target definition
- * wizard and editor.
- * </p>
- *
- * @since 3.8
- */
-public interface ITargetLocation extends IAdaptable {
-
-	/**
-	 * Resolves all contents of this location in the context of the specified
-	 * target. Returns a status describing the resolution.
-	 * <p>
-	 * If resolution is successful an OK status is returned. If a problem
-	 * occurs while resolving a non-OK status will be returned. If the
-	 * progress monitor is cancelled a CANCEL status will be returned. The
-	 * returned status can be accessed later using {@link #getStatus()}.
-	 * </p><p>
-	 * This location will be considered resolved even if a problem occurs
-	 * while resolving. See {@link #isResolved()}
-	 *
-	 * @param definition target being resolved for
-	 * @param monitor progress monitor or <code>null</code>
-	 * @return resolution status
-	 */
-	IStatus resolve(ITargetDefinition definition, IProgressMonitor monitor);
-
-	/**
-	 * Returns whether this location has resolved all of its contents. If there
-	 * was a problem during the resolution the location will still be considered
-	 * resolved, see {@link #getStatus()}.
-	 *
-	 * @see #resolve(ITargetDefinition, IProgressMonitor)
-	 * @return whether this location has resolved all of its contents
-	 */
-	boolean isResolved();
-
-	/**
-	 * Returns the status of the last bundle resolution or <code>null</code> if
-	 * this location has not been resolved. If there was a problem during the
-	 * resolution, the status returned by {@link #resolve(ITargetDefinition, IProgressMonitor)}
-	 * will be returned.
-	 *
-	 * @return resolution status or <code>null</code>
-	 */
-	IStatus getStatus();
-
-	/**
-	 * Returns a string that identifies the implementation of this target location.
-	 * For target definitions to be persisted correctly, this must match the type
-	 * in a contributed <code>org.eclipse.pde.core.targetLocations</code> extension.
-	 *
-	 * @return string identifier for the type of target location.
-	 */
-	String getType();
-
-	/**
-	 * Returns a path in the local file system to the root of the target location.
-	 * <p>
-	 * The current target platform framework requires a local file location but this
-	 * requirement may be removed in the future.  This method should not be referenced.
-	 * </p>
-	 *
-	 * @param resolve whether to resolve variables in the path
-	 * @return home location
-	 * @exception CoreException if unable to resolve the location
-	 * @noreference This method is not intended to be referenced by clients.
-	 */
-	String getLocation(boolean resolve) throws CoreException;
-
-	/**
-	 * Returns the bundles in this location or <code>null</code> if this location is not resolved
-	 * <p>
-	 * Some of the returned bundles may have non-OK statuses.  These bundles may be missing some
-	 * information (location, version, source target).  To get a bundle's status call
-	 * {@link TargetBundle#getStatus()}.  You can also use {@link #getStatus()} to
-	 * get the complete set of problems.
-	 * </p>
-	 * @return resolved bundles or <code>null</code>
-	 */
-	TargetBundle[] getBundles();
-
-	/**
-	 * Returns all features available in this location or <code>null</code> if this location is
-	 * not resolved.
-	 * <p>
-	 * This method may return no features, even if the location has multiple bundles.  For all
-	 * returned features, the bundles that the features reference should be returned in the list
-	 * returned by {@link #getBundles()}
-	 * </p>
-	 * @return features or <code>null</code>
-	 */
-	TargetFeature[] getFeatures();
-
-	/**
-	 * Returns VM Arguments that are specified in the bundle location or <code>null</code> if none.
-	 *
-	 * @return list of VM Arguments or <code>null</code> if none available
-	 */
-	String[] getVMArguments();
-
-	/**
-	 * Returns a serialized XML string that stores information about this
-	 * location so it can be restored later using a
-	 * {@link ITargetLocationFactory}. May return <code>null</code> to have this
-	 * location ignored when saving a target definition.
-	 * <p>
-	 * The returned xml must contain a single root element named
-	 * <code>location</code>. The root element may have attributes set and
-	 * children. The xml should not be prefixed by a XML declaration such as
-	 * <code>&amp;lt;?xml version=
-	 * </p>
-	 *
-	 * @return an XML string storing all location information or
-	 *         <code>null</code>
-	 */
-	String serialize();
-}
+/*******************************************************************************
+ * Copyright (c) 2011, 2019 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+
+/**
+ * Describes a location in a target that provides bundles and features. Abstracts
+ * the storage and provisioning of bundles. May contain a combination of
+ * executable and source bundles.
+ * <p>
+ * Clients are allowed to provide their own implementations. For the target definition
+ * to be persisted correctly, clients must provide a factory through the
+ * <code>org.eclipse.pde.core.targetLocations</code> extension point.
+ * </p><p>
+ * It is recommended that implementors override {@link Object#equals(Object)} to return
+ * <code>true</code> if the content of two containers are equal.  This allows PDE
+ * to determine if two different target definitions have equivalent content.
+ * </p><p>
+ * To display an implementation in the PDE UI, clients may do the following:
+ * </p><p>
+ * - Implement <code>ITargetLocationWizard</code> and contribute to the <code>org.eclipse.pde.ui.targetLocationProvisioners</code>
+ * extension point.
+ * </p><p>
+ * - Have their target location adapt to <code>org.eclipse.jface.viewers.ILabelProvider</code>
+ * to provide text and icon labels in the target definition wizard and editor.
+ * </p><p>
+ * - Have their target location adapt to <code>org.eclipse.jface.viewers.ITreeContentProvider</code>
+ * to provide children items in the target definition wizard and editor. The children must adapt to
+ * <code>ILabelProvider</code> to get text and icon labels in the tree.
+ * </p><p>
+ * - Have their target location adapt to <code>org.eclipse.pde.ui.target.ITargetLocationEditor</code>
+ * to open an edit wizard when the edit button is pressed on the target definition wizard and editor.
+ * </p><p>
+ * - Have their target location adapt to <code>org.eclipse.pde.ui.target.ITargetLocationUpdater</code>
+ * to run an update job on the location when the update button is pressed on the target definition
+ * wizard and editor.
+ * </p>
+ *
+ * @since 3.8
+ */
+public interface ITargetLocation extends IAdaptable {
+
+	/**
+	 * Resolves all contents of this location in the context of the specified
+	 * target. Returns a status describing the resolution.
+	 * <p>
+	 * If resolution is successful an OK status is returned. If a problem
+	 * occurs while resolving a non-OK status will be returned. If the
+	 * progress monitor is cancelled a CANCEL status will be returned. The
+	 * returned status can be accessed later using {@link #getStatus()}.
+	 * </p><p>
+	 * This location will be considered resolved even if a problem occurs
+	 * while resolving. See {@link #isResolved()}
+	 *
+	 * @param definition target being resolved for
+	 * @param monitor progress monitor or <code>null</code>
+	 * @return resolution status
+	 */
+	IStatus resolve(ITargetDefinition definition, IProgressMonitor monitor);
+
+	/**
+	 * Returns whether this location has resolved all of its contents. If there
+	 * was a problem during the resolution the location will still be considered
+	 * resolved, see {@link #getStatus()}.
+	 *
+	 * @see #resolve(ITargetDefinition, IProgressMonitor)
+	 * @return whether this location has resolved all of its contents
+	 */
+	boolean isResolved();
+
+	/**
+	 * Returns the status of the last bundle resolution or <code>null</code> if
+	 * this location has not been resolved. If there was a problem during the
+	 * resolution, the status returned by {@link #resolve(ITargetDefinition, IProgressMonitor)}
+	 * will be returned.
+	 *
+	 * @return resolution status or <code>null</code>
+	 */
+	IStatus getStatus();
+
+	/**
+	 * Returns a string that identifies the implementation of this target location.
+	 * For target definitions to be persisted correctly, this must match the type
+	 * in a contributed <code>org.eclipse.pde.core.targetLocations</code> extension.
+	 *
+	 * @return string identifier for the type of target location.
+	 */
+	String getType();
+
+	/**
+	 * Returns a path in the local file system to the root of the target location.
+	 * <p>
+	 * The current target platform framework requires a local file location but this
+	 * requirement may be removed in the future.  This method should not be referenced.
+	 * </p>
+	 *
+	 * @param resolve whether to resolve variables in the path
+	 * @return home location
+	 * @exception CoreException if unable to resolve the location
+	 * @noreference This method is not intended to be referenced by clients.
+	 */
+	String getLocation(boolean resolve) throws CoreException;
+
+	/**
+	 * Returns the bundles in this location or <code>null</code> if this location is not resolved
+	 * <p>
+	 * Some of the returned bundles may have non-OK statuses.  These bundles may be missing some
+	 * information (location, version, source target).  To get a bundle's status call
+	 * {@link TargetBundle#getStatus()}.  You can also use {@link #getStatus()} to
+	 * get the complete set of problems.
+	 * </p>
+	 * @return resolved bundles or <code>null</code>
+	 */
+	TargetBundle[] getBundles();
+
+	/**
+	 * Returns all features available in this location or <code>null</code> if this location is
+	 * not resolved.
+	 * <p>
+	 * This method may return no features, even if the location has multiple bundles.  For all
+	 * returned features, the bundles that the features reference should be returned in the list
+	 * returned by {@link #getBundles()}
+	 * </p>
+	 * @return features or <code>null</code>
+	 */
+	TargetFeature[] getFeatures();
+
+	/**
+	 * Returns VM Arguments that are specified in the bundle location or <code>null</code> if none.
+	 *
+	 * @return list of VM Arguments or <code>null</code> if none available
+	 */
+	String[] getVMArguments();
+
+	/**
+	 * Returns a serialized XML string that stores information about this
+	 * location so it can be restored later using a
+	 * {@link ITargetLocationFactory}. May return <code>null</code> to have this
+	 * location ignored when saving a target definition.
+	 * <p>
+	 * The returned xml must contain a single root element named
+	 * <code>location</code>. The root element may have attributes set and
+	 * children. The xml should not be prefixed by a XML declaration such as
+	 * <code>&amp;lt;?xml version=
+	 * </p>
+	 *
+	 * @return an XML string storing all location information or
+	 *         <code>null</code>
+	 */
+	String serialize();
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetLocationFactory.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetLocationFactory.java
位置:  -1,54 +1,54  
-/*******************************************************************************
- * Copyright (c) 2011, 2019 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import org.eclipse.core.runtime.CoreException;
-
-/**
- * A factory to instantiate target locations from a serialized string of xml
- * (see {@link ITargetLocation#serialize()}). A factory must be provided for
- * each {@link ITargetLocation} type using the <code>org.eclipse.pde.core.targetLocations</code>
- * extension point.
- *
- * @since 3.8
- */
-public interface ITargetLocationFactory {
-
-	/**
-	 * Returns an instance of an {@link ITargetLocation} from the provided
-	 * serialized xml string or throws a {@link CoreException} if unable to do
-	 * so.
-	 * <p>
-	 * The serialized xml will not be prefixed by a XML declaration such as
-	 * <code>&amp;lt;?xml version=
-	 * contain a single root element named <code>location</code> with the
-	 * attribute <code>type</code> that matches the type parameter. The root
-	 * element may have children and other attributes set.
-	 * </p>
-	 *
-	 * @param type
-	 *            the string type describing the implementation of
-	 *            ITargetLocation expected, see
-	 *            {@link ITargetLocation#getType()}
-	 * @param serializedXML
-	 *            the xml string describing the location to create, see
-	 *            {@link ITargetLocation#serialize()}
-	 * @return an instance of <code>ITargetLocation</code>
-	 * @throws CoreException
-	 *             if this factory cannot create a location for the specified
-	 *             type or if the xml string is invalid
-	 */
-	ITargetLocation getTargetLocation(String type, String serializedXML) throws CoreException;
-
-}
+/*******************************************************************************
+ * Copyright (c) 2011, 2019 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import org.eclipse.core.runtime.CoreException;
+
+/**
+ * A factory to instantiate target locations from a serialized string of xml
+ * (see {@link ITargetLocation#serialize()}). A factory must be provided for
+ * each {@link ITargetLocation} type using the <code>org.eclipse.pde.core.targetLocations</code>
+ * extension point.
+ *
+ * @since 3.8
+ */
+public interface ITargetLocationFactory {
+
+	/**
+	 * Returns an instance of an {@link ITargetLocation} from the provided
+	 * serialized xml string or throws a {@link CoreException} if unable to do
+	 * so.
+	 * <p>
+	 * The serialized xml will not be prefixed by a XML declaration such as
+	 * <code>&amp;lt;?xml version=
+	 * contain a single root element named <code>location</code> with the
+	 * attribute <code>type</code> that matches the type parameter. The root
+	 * element may have children and other attributes set.
+	 * </p>
+	 *
+	 * @param type
+	 *            the string type describing the implementation of
+	 *            ITargetLocation expected, see
+	 *            {@link ITargetLocation#getType()}
+	 * @param serializedXML
+	 *            the xml string describing the location to create, see
+	 *            {@link ITargetLocation#serialize()}
+	 * @return an instance of <code>ITargetLocation</code>
+	 * @throws CoreException
+	 *             if this factory cannot create a location for the specified
+	 *             type or if the xml string is invalid
+	 */
+	ITargetLocation getTargetLocation(String type, String serializedXML) throws CoreException;
+
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetPlatformService.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetPlatformService.java
位置:  -1,264 +1,264  
-/*******************************************************************************
- * Copyright (c) 2008, 2013 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2008, 2013 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import java.net.URI;
-import org.eclipse.core.resources.IFile;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.equinox.p2.metadata.IInstallableUnit;
-import org.eclipse.pde.internal.core.target.IUBundleContainer;
-
-/**
- * A service to manage target platform definitions available to the workspace.
- *
- * @since 3.8
- * @noimplement This interface is not intended to be implemented by clients.
- */
-public interface ITargetPlatformService {
-
-	/**
-	 * Status code indicating that a bundle in a target definition is not
-	 * contained in the current target platform state (a bundle has been
-	 * added to the file system that the target platform does not know
-	 * about).
-	 */
-	int STATUS_MISSING_FROM_TARGET_PLATFORM = 1;
-
-	/**
-	 * Status code indicating that a bundle in the current target platform
-	 * state is not contained in a target definition (a bundle has been
-	 * deleted from the file system that the target platform does not
-	 * know about).
-	 */
-	int STATUS_MISSING_FROM_TARGET_DEFINITION = 2;
-
-	/**
-	 * Returns handles to all target definitions known in the workspace.
-	 *
-	 * @return handles to all target definitions known in the workspace
-	 */
-	ITargetHandle[] getTargets(IProgressMonitor monitor);
-
-	/**
-	 * Returns a handle to a target definition backed by the underlying file.
-	 * The target definition may or may not exist. If the file does not exist
-	 * then this is a new target definition which becomes one of the known
-	 * workspace target definitions when it is saved.
-	 *
-	 * @param file target definition file that may or may not exist
-	 * @return target handle
-	 */
-	ITargetHandle getTarget(IFile file);
-
-	/**
-	 * Returns a handle to a target definition backed by the underlying {@link URI}.
-	 * The target definition may or may not exist. If the {@link URI} is valid
-	 * then this is a new target definition which becomes one of the known
-	 * external target definitions.
-	 *
-	 * @param uri target definition {@link URI} that may or may not exist
-	 * @return target handle
-	 */
-	ITargetHandle getTarget(URI uri);
-
-	/**
-	 * Returns a new target definition to be stored with local metadata. The target
-	 * becomes one of the known workspace target definitions when it is saved.
-	 *
-	 * @return new empty target definition
-	 */
-	ITargetDefinition newTarget();
-
-	/**
-	 * Persists the given target definition. The target becomes one of known
-	 * workspace target definitions when it is saved.
-	 * <p>
-	 * The target is persisted in a location determined by its handle. A handle
-	 * may refer to an {@link IFile} or a workspace metadata location. Any existing
-	 * target definition at the same location is overwritten.
-	 * </p>
-	 * @param definition definition to persist
-	 * @throws CoreException if unable to persist the definition
-	 */
-	void saveTargetDefinition(ITargetDefinition definition) throws CoreException;
-
-	/**
-	 * Deletes the target definition associated with the given handle.
-	 *
-	 * @param handle target handle
-	 * @throws CoreException if the associated target does not exist or deletion fails
-	 */
-	void deleteTarget(ITargetHandle handle) throws CoreException;
-
-	/**
-	 * Creates and returns a target handle from the given memento. The memento must
-	 * have been generated from {@link ITargetHandle#getMemento()}.
-	 *
-	 * @param memento a target handle memento
-	 * @return target handle
-	 * @throws CoreException if the target handle format is invalid
-	 */
-	ITargetHandle getTarget(String memento) throws CoreException;
-
-	/**
-	 * Creates and returns a target location that contains all bundles in the
-	 * specified directory which may contain string substitution variables.
-	 *
-	 * @param path absolute path in the local file system, may contain string variables
-	 * @return target location
-	 */
-	ITargetLocation newDirectoryLocation(String path);
-
-	/**
-	 * Creates and returns a target location that contains all bundles installed in
-	 * a profile at the specified location with the specified configuration area. If
-	 * a configuration area is not specified the default location is used. The specified
-	 * home location and configuration location may contain string substitution variables.
-	 *
-	 * @param home absolute path in the local file system to the root of an installed profile
-	 * 	which may contain string substitution variables
-	 * @param configurationLocation absolute path in the local file system to the
-	 *  configuration area for the specified installation which may contain string substitution
-	 *  variables or <code>null</code> to use the default location
-	 * @return target location
-	 */
-	ITargetLocation newProfileLocation(String home, String configurationLocation);
-
-	/**
-	 * Creates and returns a target location that contains all bundles contained in
-	 * the specified installable units (IU's) in the given repositories. If repositories are
-	 * not specified default repositories are searched (based on user preferences).
-	 *
-	 * @param units installable units
-	 * @param repositories URI's describing repository locations or <code>null</code> to use
-	 * 	default repositories
-	 * @param resolutionFlags bitmask of flags to control IU resolution, possible flags are {@link IUBundleContainer#INCLUDE_ALL_ENVIRONMENTS}, {@link IUBundleContainer#INCLUDE_REQUIRED}, {@link IUBundleContainer#INCLUDE_SOURCE}, {@link IUBundleContainer#INCLUDE_CONFIGURE_PHASE}
-	 * @return target location
-	 */
-	ITargetLocation newIULocation(IInstallableUnit[] units, URI[] repositories, int resolutionFlags);
-
-	/**
-	 * Creates and returns a target location that contains all bundles contained in
-	 * the specified installable units (IU's) in the given repositories. If repositories are
-	 * not specified default repositories are searched (based on user preferences).
-	 *
-	 * @param unitIds installable unit identifiers
-	 * @param versions version identifiers
-	 * @param repositories URI's describing repository locations or <code>null</code> to use
-	 * 	default repositories
-	 * @param resolutionFlags bitmask of flags to control IU resolution, possible flags are {@link IUBundleContainer#INCLUDE_ALL_ENVIRONMENTS}, {@link IUBundleContainer#INCLUDE_REQUIRED}, {@link IUBundleContainer#INCLUDE_SOURCE}, {@link IUBundleContainer#INCLUDE_CONFIGURE_PHASE}
-	 * @return target location
-	 */
-	ITargetLocation newIULocation(String[] unitIds, String[] versions, URI[] repositories, int resolutionFlags);
-
-	/**
-	 * Creates and returns a target location that contains all bundles referenced by
-	 * the feature at the specified location. The location is the directory that defines
-	 * the feature.
-	 *
-	 * @param home installation location containing a features directory which may contain
-	 *  string substitution variables
-	 * @param featureId feature symbolic name
-	 * @param version feature version identifier or <code>null</code> to use most recent available
-	 * @return target location
-	 */
-	ITargetLocation newFeatureLocation(String home, String featureId, String version);
-
-	/**
-	 * Returns a handle to the target definition that corresponds to the active target platform
-	 * or <code>null</code> if none.
-	 *
-	 * @return handle to workspace target platform or <code>null</code> if none
-	 * @exception CoreException if an error occurs generating the handle
-	 */
-	ITargetHandle getWorkspaceTargetHandle() throws CoreException;
-
-	/**
-	 * Returns a {@link ITargetDefinition} that corresponds to the active target platform. Will
-	 * return an empty target definition if no target platform has been specified. Will return
-	 * a target definition based on deprecated preference settings if no target definition has
-	 * been created before. Will throw a {@link CoreException} if the backing target file
-	 * does not exist or if there is a problem reading it.
-	 * <p>
-	 * The returned target definition may have been resolved previously, but this is not
-	 * guaranteed. It is recommended clients use this method over {@link #getWorkspaceTargetHandle()}.
-	 * </p>
-	 *
-	 * @return a target definition corresponding to the active target platform
-	 * @throws CoreException if an error occurs loading the workspace target definition
-	 *
-	 * @since 3.10 Added in the Luna 4.4 release
-	 */
-	ITargetDefinition getWorkspaceTargetDefinition() throws CoreException;
-
-	/**
-	 * Returns a status describing whether the given target definition is
-	 * synchronized with workspace's target platform state. It is possible that
-	 * bundles could have been added/removed from the underlying target location
-	 * storage making the current target platform state out of synch with the
-	 * contents of the a definition. The given target definition must already be
-	 * resolved or this method will return <code>null</code>.
-	 * <p>
-	 * An <code>OK</code> status is returned when in synch. A multi-status is
-	 * returned when there are synchronization issues. <code>Null</code> is
-	 * returned if the target has not been resolved. Each status contains one of
-	 * the following codes and the name of the associated bundle as a message:
-	 * </p>
-	 * <ul>
-	 * <li>STATUS_MISSING_FROM_STATE</li>
-	 * <li>STATUS_MISSING_FROM_TARGET_DEFINITION</li>
-	 * </ul>
-	 * 
-	 * @param target
-	 *            resolved target definition to compare with target platform
-	 *            state
-	 * @return status describing whether the target is in synch with target
-	 *         platform state
-	 * @throws CoreException
-	 *             if comparison fails
-	 */
-	IStatus compareWithTargetPlatform(ITargetDefinition target) throws CoreException;
-
-	/**
-	 * Copies all attributes from one target definition to another.
-	 *
-	 * @param from attributes are copied from this definition
-	 * @param to attributes are copied to this definition
-	 * @throws CoreException in copy fails
-	 */
-	void copyTargetDefinition(ITargetDefinition from, ITargetDefinition to) throws CoreException;
-
-	/**
-	 * Sets the content of the given target definition based on the target file supplied
-	 * by an <code>org.eclipse.pde.core.targets</code> extension with the specified identifier.
-	 *
-	 * @param definition target definition to load
-	 * @param targetExtensionId identifier of a targets extension
-	 * @throws CoreException if the extension is not found or an error occurs reading the target
-	 * 	file or loading the target definition
-	 */
-	void loadTargetDefinition(ITargetDefinition definition, String targetExtensionId) throws CoreException;
-
-	/**
-	 * Returns a new target definition with default settings. The default target contains all plug-ins
-	 * and features from the running host.  It uses an explicit configuration area if not equal to the
-	 * default location.
-	 *
-	 * @return a new target definition with default settings
-	 */
-	ITargetDefinition newDefaultTarget();
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import java.net.URI;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.eclipse.pde.internal.core.target.IUBundleContainer;
+
+/**
+ * A service to manage target platform definitions available to the workspace.
+ *
+ * @since 3.8
+ * @noimplement This interface is not intended to be implemented by clients.
+ */
+public interface ITargetPlatformService {
+
+	/**
+	 * Status code indicating that a bundle in a target definition is not
+	 * contained in the current target platform state (a bundle has been
+	 * added to the file system that the target platform does not know
+	 * about).
+	 */
+	int STATUS_MISSING_FROM_TARGET_PLATFORM = 1;
+
+	/**
+	 * Status code indicating that a bundle in the current target platform
+	 * state is not contained in a target definition (a bundle has been
+	 * deleted from the file system that the target platform does not
+	 * know about).
+	 */
+	int STATUS_MISSING_FROM_TARGET_DEFINITION = 2;
+
+	/**
+	 * Returns handles to all target definitions known in the workspace.
+	 *
+	 * @return handles to all target definitions known in the workspace
+	 */
+	ITargetHandle[] getTargets(IProgressMonitor monitor);
+
+	/**
+	 * Returns a handle to a target definition backed by the underlying file.
+	 * The target definition may or may not exist. If the file does not exist
+	 * then this is a new target definition which becomes one of the known
+	 * workspace target definitions when it is saved.
+	 *
+	 * @param file target definition file that may or may not exist
+	 * @return target handle
+	 */
+	ITargetHandle getTarget(IFile file);
+
+	/**
+	 * Returns a handle to a target definition backed by the underlying {@link URI}.
+	 * The target definition may or may not exist. If the {@link URI} is valid
+	 * then this is a new target definition which becomes one of the known
+	 * external target definitions.
+	 *
+	 * @param uri target definition {@link URI} that may or may not exist
+	 * @return target handle
+	 */
+	ITargetHandle getTarget(URI uri);
+
+	/**
+	 * Returns a new target definition to be stored with local metadata. The target
+	 * becomes one of the known workspace target definitions when it is saved.
+	 *
+	 * @return new empty target definition
+	 */
+	ITargetDefinition newTarget();
+
+	/**
+	 * Persists the given target definition. The target becomes one of known
+	 * workspace target definitions when it is saved.
+	 * <p>
+	 * The target is persisted in a location determined by its handle. A handle
+	 * may refer to an {@link IFile} or a workspace metadata location. Any existing
+	 * target definition at the same location is overwritten.
+	 * </p>
+	 * @param definition definition to persist
+	 * @throws CoreException if unable to persist the definition
+	 */
+	void saveTargetDefinition(ITargetDefinition definition) throws CoreException;
+
+	/**
+	 * Deletes the target definition associated with the given handle.
+	 *
+	 * @param handle target handle
+	 * @throws CoreException if the associated target does not exist or deletion fails
+	 */
+	void deleteTarget(ITargetHandle handle) throws CoreException;
+
+	/**
+	 * Creates and returns a target handle from the given memento. The memento must
+	 * have been generated from {@link ITargetHandle#getMemento()}.
+	 *
+	 * @param memento a target handle memento
+	 * @return target handle
+	 * @throws CoreException if the target handle format is invalid
+	 */
+	ITargetHandle getTarget(String memento) throws CoreException;
+
+	/**
+	 * Creates and returns a target location that contains all bundles in the
+	 * specified directory which may contain string substitution variables.
+	 *
+	 * @param path absolute path in the local file system, may contain string variables
+	 * @return target location
+	 */
+	ITargetLocation newDirectoryLocation(String path);
+
+	/**
+	 * Creates and returns a target location that contains all bundles installed in
+	 * a profile at the specified location with the specified configuration area. If
+	 * a configuration area is not specified the default location is used. The specified
+	 * home location and configuration location may contain string substitution variables.
+	 *
+	 * @param home absolute path in the local file system to the root of an installed profile
+	 * 	which may contain string substitution variables
+	 * @param configurationLocation absolute path in the local file system to the
+	 *  configuration area for the specified installation which may contain string substitution
+	 *  variables or <code>null</code> to use the default location
+	 * @return target location
+	 */
+	ITargetLocation newProfileLocation(String home, String configurationLocation);
+
+	/**
+	 * Creates and returns a target location that contains all bundles contained in
+	 * the specified installable units (IU's) in the given repositories. If repositories are
+	 * not specified default repositories are searched (based on user preferences).
+	 *
+	 * @param units installable units
+	 * @param repositories URI's describing repository locations or <code>null</code> to use
+	 * 	default repositories
+	 * @param resolutionFlags bitmask of flags to control IU resolution, possible flags are {@link IUBundleContainer#INCLUDE_ALL_ENVIRONMENTS}, {@link IUBundleContainer#INCLUDE_REQUIRED}, {@link IUBundleContainer#INCLUDE_SOURCE}, {@link IUBundleContainer#INCLUDE_CONFIGURE_PHASE}
+	 * @return target location
+	 */
+	ITargetLocation newIULocation(IInstallableUnit[] units, URI[] repositories, int resolutionFlags);
+
+	/**
+	 * Creates and returns a target location that contains all bundles contained in
+	 * the specified installable units (IU's) in the given repositories. If repositories are
+	 * not specified default repositories are searched (based on user preferences).
+	 *
+	 * @param unitIds installable unit identifiers
+	 * @param versions version identifiers
+	 * @param repositories URI's describing repository locations or <code>null</code> to use
+	 * 	default repositories
+	 * @param resolutionFlags bitmask of flags to control IU resolution, possible flags are {@link IUBundleContainer#INCLUDE_ALL_ENVIRONMENTS}, {@link IUBundleContainer#INCLUDE_REQUIRED}, {@link IUBundleContainer#INCLUDE_SOURCE}, {@link IUBundleContainer#INCLUDE_CONFIGURE_PHASE}
+	 * @return target location
+	 */
+	ITargetLocation newIULocation(String[] unitIds, String[] versions, URI[] repositories, int resolutionFlags);
+
+	/**
+	 * Creates and returns a target location that contains all bundles referenced by
+	 * the feature at the specified location. The location is the directory that defines
+	 * the feature.
+	 *
+	 * @param home installation location containing a features directory which may contain
+	 *  string substitution variables
+	 * @param featureId feature symbolic name
+	 * @param version feature version identifier or <code>null</code> to use most recent available
+	 * @return target location
+	 */
+	ITargetLocation newFeatureLocation(String home, String featureId, String version);
+
+	/**
+	 * Returns a handle to the target definition that corresponds to the active target platform
+	 * or <code>null</code> if none.
+	 *
+	 * @return handle to workspace target platform or <code>null</code> if none
+	 * @exception CoreException if an error occurs generating the handle
+	 */
+	ITargetHandle getWorkspaceTargetHandle() throws CoreException;
+
+	/**
+	 * Returns a {@link ITargetDefinition} that corresponds to the active target platform. Will
+	 * return an empty target definition if no target platform has been specified. Will return
+	 * a target definition based on deprecated preference settings if no target definition has
+	 * been created before. Will throw a {@link CoreException} if the backing target file
+	 * does not exist or if there is a problem reading it.
+	 * <p>
+	 * The returned target definition may have been resolved previously, but this is not
+	 * guaranteed. It is recommended clients use this method over {@link #getWorkspaceTargetHandle()}.
+	 * </p>
+	 *
+	 * @return a target definition corresponding to the active target platform
+	 * @throws CoreException if an error occurs loading the workspace target definition
+	 *
+	 * @since 3.10 Added in the Luna 4.4 release
+	 */
+	ITargetDefinition getWorkspaceTargetDefinition() throws CoreException;
+
+	/**
+	 * Returns a status describing whether the given target definition is
+	 * synchronized with workspace's target platform state. It is possible that
+	 * bundles could have been added/removed from the underlying target location
+	 * storage making the current target platform state out of synch with the
+	 * contents of the a definition. The given target definition must already be
+	 * resolved or this method will return <code>null</code>.
+	 * <p>
+	 * An <code>OK</code> status is returned when in synch. A multi-status is
+	 * returned when there are synchronization issues. <code>Null</code> is
+	 * returned if the target has not been resolved. Each status contains one of
+	 * the following codes and the name of the associated bundle as a message:
+	 * </p>
+	 * <ul>
+	 * <li>STATUS_MISSING_FROM_STATE</li>
+	 * <li>STATUS_MISSING_FROM_TARGET_DEFINITION</li>
+	 * </ul>
+	 * 
+	 * @param target
+	 *            resolved target definition to compare with target platform
+	 *            state
+	 * @return status describing whether the target is in synch with target
+	 *         platform state
+	 * @throws CoreException
+	 *             if comparison fails
+	 */
+	IStatus compareWithTargetPlatform(ITargetDefinition target) throws CoreException;
+
+	/**
+	 * Copies all attributes from one target definition to another.
+	 *
+	 * @param from attributes are copied from this definition
+	 * @param to attributes are copied to this definition
+	 * @throws CoreException in copy fails
+	 */
+	void copyTargetDefinition(ITargetDefinition from, ITargetDefinition to) throws CoreException;
+
+	/**
+	 * Sets the content of the given target definition based on the target file supplied
+	 * by an <code>org.eclipse.pde.core.targets</code> extension with the specified identifier.
+	 *
+	 * @param definition target definition to load
+	 * @param targetExtensionId identifier of a targets extension
+	 * @throws CoreException if the extension is not found or an error occurs reading the target
+	 * 	file or loading the target definition
+	 */
+	void loadTargetDefinition(ITargetDefinition definition, String targetExtensionId) throws CoreException;
+
+	/**
+	 * Returns a new target definition with default settings. The default target contains all plug-ins
+	 * and features from the running host.  It uses an explicit configuration area if not equal to the
+	 * default location.
+	 *
+	 * @return a new target definition with default settings
+	 */
+	ITargetDefinition newDefaultTarget();
+
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/NameVersionDescriptor.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/NameVersionDescriptor.java
位置:  -1,156 +1,156  
-/*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2017 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import org.eclipse.core.runtime.Assert;
-import org.eclipse.equinox.frameworkadmin.BundleInfo;
-
-/**
- * Describes something with a name and version.
- *
- * @since 3.8
- * @noextend This class is not intended to be subclassed by clients.
- */
-public class NameVersionDescriptor {
-
-	public static final String TYPE_PLUGIN = 
-	public static final String TYPE_FEATURE = 
-	public static final String TYPE_PACKAGE = 
-
-	private final String fId;
-	private final String fVersion;
-	private final String fType;
-
-	/**
-	 * Constructs a descriptor with a type of 'plugin'
-	 * <p>
-	 * If the passed string version is equal to {@link BundleInfo#EMPTY_VERSION},
-	 * the version will be replaced with <code>null</code>.
-	 * </p>
-	 *
-	 * @param id name identifier
-	 * @param version version identifier, can be <code>null</code>
-	 */
-	public NameVersionDescriptor(String id, String version) {
-		Assert.isNotNull(id); // Better to throw the exception now then throw NPEs later
-		fId = id;
-		// If an empty version was passed to the constructor, treat it as if null was passed
-		if (version == null || version.equals(BundleInfo.EMPTY_VERSION)) {
-			fVersion = null;
-		} else {
-			fVersion = version;
-		}
-		fType = TYPE_PLUGIN;
-	}
-
-	/**
-	 * Constructs a descriptor of the given type
-	 * <p>
-	 * If the passed string version is equal to {@link BundleInfo#EMPTY_VERSION},
-	 * the version will be replaced with <code>null</code>.
-	 * </p>
-	 *
-	 * @param id name identifier
-	 * @param version version identifier, can be <code>null</code>
-	 * @param type type of object this descriptor represents, should be one of the TYPE constants defined in this file
-	 */
-	public NameVersionDescriptor(String id, String version, String type) {
-		fId = id;
-		// If an empty version was passed to the constructor, treat it as if null was passed
-		if (version == null || version.equals(BundleInfo.EMPTY_VERSION)) {
-			fVersion = null;
-		} else {
-			fVersion = version;
-		}
-		fType = type;
-	}
-
-	@Override
-	public boolean equals(Object obj) {
-		if (obj instanceof NameVersionDescriptor) {
-			NameVersionDescriptor iud = (NameVersionDescriptor) obj;
-			if (fId.equals(iud.fId)) {
-				return (fVersion != null &amp;&amp; fVersion.equals(iud.fVersion)) || (fVersion == null &amp;&amp; iud.fVersion == null);
-			}
-		}
-		return false;
-	}
-
-	@Override
-	public int hashCode() {
-		return fId.hashCode() + (fVersion != null ? fVersion.hashCode() : 0);
-	}
-
-	public String getId() {
-		return fId;
-	}
-
-	public String getVersion() {
-		return fVersion;
-	}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import org.eclipse.core.runtime.Assert;
+import org.eclipse.equinox.frameworkadmin.BundleInfo;
+
+/**
+ * Describes something with a name and version.
+ *
+ * @since 3.8
+ * @noextend This class is not intended to be subclassed by clients.
+ */
+public class NameVersionDescriptor {
+
+	public static final String TYPE_PLUGIN = 
+	public static final String TYPE_FEATURE = 
+	public static final String TYPE_PACKAGE = 
+
+	private final String fId;
+	private final String fVersion;
+	private final String fType;
+
+	/**
+	 * Constructs a descriptor with a type of 'plugin'
+	 * <p>
+	 * If the passed string version is equal to {@link BundleInfo#EMPTY_VERSION},
+	 * the version will be replaced with <code>null</code>.
+	 * </p>
+	 *
+	 * @param id name identifier
+	 * @param version version identifier, can be <code>null</code>
+	 */
+	public NameVersionDescriptor(String id, String version) {
+		Assert.isNotNull(id); // Better to throw the exception now then throw NPEs later
+		fId = id;
+		// If an empty version was passed to the constructor, treat it as if null was passed
+		if (version == null || version.equals(BundleInfo.EMPTY_VERSION)) {
+			fVersion = null;
+		} else {
+			fVersion = version;
+		}
+		fType = TYPE_PLUGIN;
+	}
+
+	/**
+	 * Constructs a descriptor of the given type
+	 * <p>
+	 * If the passed string version is equal to {@link BundleInfo#EMPTY_VERSION},
+	 * the version will be replaced with <code>null</code>.
+	 * </p>
+	 *
+	 * @param id name identifier
+	 * @param version version identifier, can be <code>null</code>
+	 * @param type type of object this descriptor represents, should be one of the TYPE constants defined in this file
+	 */
+	public NameVersionDescriptor(String id, String version, String type) {
+		fId = id;
+		// If an empty version was passed to the constructor, treat it as if null was passed
+		if (version == null || version.equals(BundleInfo.EMPTY_VERSION)) {
+			fVersion = null;
+		} else {
+			fVersion = version;
+		}
+		fType = type;
+	}
 
-	public String getType() {
-		return fType;
-	}
-
-	@Override
-	public String toString() {
-		StringBuilder buf = new StringBuilder();
-		buf.append(fId);
-		if (fVersion != null) {
-			buf.append(' ');
-			buf.append('(');
-			buf.append(fVersion);
-			buf.append(')');
-		}
-		buf.append(' ');
-		buf.append('[');
-		buf.append(fType);
-		buf.append(']');
-		return buf.toString();
-	}
+	@Override
+	public boolean equals(Object obj) {
+		if (obj instanceof NameVersionDescriptor) {
+			NameVersionDescriptor iud = (NameVersionDescriptor) obj;
+			if (fId.equals(iud.fId)) {
+				return (fVersion != null &amp;&amp; fVersion.equals(iud.fVersion)) || (fVersion == null &amp;&amp; iud.fVersion == null);
+			}
+		}
+		return false;
+	}
 
-	/**
-	 * Creates a descriptor from a portable string.
-	 *
-	 * @param portable generated from {@link #toPortableString()}
-	 * @return descriptor
-	 */
-	public static NameVersionDescriptor fromPortableString(String portable) {
-		int index = portable.indexOf('@');
-		if (index > 0) {
-			String name = portable.substring(0, index);
-			String ver = null;
-			index++;
-			if (index < portable.length()) {
-				ver = portable.substring(index);
-			}
-			return new NameVersionDescriptor(name, ver);
-		}
-		return new NameVersionDescriptor(portable, null);
-	}
+	@Override
+	public int hashCode() {
+		return fId.hashCode() + (fVersion != null ? fVersion.hashCode() : 0);
+	}
+
+	public String getId() {
+		return fId;
+	}
+
+	public String getVersion() {
+		return fVersion;
+	}
+
+	public String getType() {
+		return fType;
+	}
 
-	/**
-	 * Returns a portable form for this descriptor.
-	 *
-	 * @return portable form
-	 */
-	public String toPortableString() {
-		StringBuilder buf = new StringBuilder();
-		buf.append(fId);
-		buf.append('@');
-		buf.append(fVersion);
-		return buf.toString();
-	}
-}
+	@Override
+	public String toString() {
+		StringBuilder buf = new StringBuilder();
+		buf.append(fId);
+		if (fVersion != null) {
+			buf.append(' ');
+			buf.append('(');
+			buf.append(fVersion);
+			buf.append(')');
+		}
+		buf.append(' ');
+		buf.append('[');
+		buf.append(fType);
+		buf.append(']');
+		return buf.toString();
+	}
+
+	/**
+	 * Creates a descriptor from a portable string.
+	 *
+	 * @param portable generated from {@link #toPortableString()}
+	 * @return descriptor
+	 */
+	public static NameVersionDescriptor fromPortableString(String portable) {
+		int index = portable.indexOf('@');
+		if (index > 0) {
+			String name = portable.substring(0, index);
+			String ver = null;
+			index++;
+			if (index < portable.length()) {
+				ver = portable.substring(index);
+			}
+			return new NameVersionDescriptor(name, ver);
+		}
+		return new NameVersionDescriptor(portable, null);
+	}
+
+	/**
+	 * Returns a portable form for this descriptor.
+	 *
+	 * @return portable form
+	 */
+	public String toPortableString() {
+		StringBuilder buf = new StringBuilder();
+		buf.append(fId);
+		buf.append('@');
+		buf.append(fVersion);
+		return buf.toString();
+	}
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/TargetFeature.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/TargetFeature.java
位置:  -1,156 +1,156  
-/*******************************************************************************
- *  Copyright (c) 2000, 2017 IBM Corporation and others.
+/*******************************************************************************
+ *  Copyright (c) 2000, 2017 IBM Corporation and others.
  *
- *  This program and the accompanying materials
- *  are made available under the terms of the Eclipse Public License 2.0
- *  which accompanies this distribution, and is available at
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
  *  https://www.eclipse.org/legal/epl-2.0/
  *
- *  SPDX-License-Identifier: EPL-2.0
- *
- *  Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import java.io.File;
-import java.util.ArrayList;
-import java.util.List;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.internal.core.ExternalFeatureModelManager;
-import org.eclipse.pde.internal.core.ICoreConstants;
-import org.eclipse.pde.internal.core.PDECore;
-import org.eclipse.pde.internal.core.ifeature.IFeature;
-import org.eclipse.pde.internal.core.ifeature.IFeatureChild;
-import org.eclipse.pde.internal.core.ifeature.IFeatureImport;
-import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
-import org.eclipse.pde.internal.core.ifeature.IFeaturePlugin;
-import org.eclipse.pde.internal.core.target.Messages;
-
-/**
- * Describes a single feature in a target definition.
- *
- * @since 3.8
- */
-public class TargetFeature {
-
-	private IFeatureModel featureModel;
-
-	/**
-	 * Constructs a target feature for a feature on the local filesystem. The
-	 * file may point at the feature.xml or a folder containing the feature.xml.
-	 * The feature.xml will be read to collect the information about the feature.
-	 *
-	 * @param featureLocation the location of the feature (feature.xml or directory containing it)
-	 * @throws CoreException if there is a problem opening the feature.xml
-	 */
-	public TargetFeature(File featureLocation) throws CoreException {
-		initialize(featureLocation);
-	}
-
-	/**
-	 * Returns the id of this feature or <code>null</code> if no id is set.
-	 *
-	 * @return id or <code>null</code>
-	 */
-	public String getId() {
-		if (featureModel == null) {
-			return null;
-		}
-		return featureModel.getFeature().getId();
-	}
-
-	/**
-	 * Returns the version of this feature or <code>null</code> if no version is set.
-	 *
-	 * @return version or <code>null</code>
-	 */
-	public String getVersion() {
-		if (featureModel == null) {
-			return null;
-		}
-		return featureModel.getFeature().getVersion();
-	}
-
-	/**
-	 * Returns the string path to the directory containing the feature.xml or
-	 * <code>null</code> if no install location is known.
-	 *
-	 * @return install location path or <code>null</code>
-	 */
-	public String getLocation() {
-		if (featureModel == null) {
-			return null;
-		}
-		return featureModel.getInstallLocation();
-	}
-
-	/**
-	 * Returns a list of name version descriptor that describes the set of
-	 * plug-ins that this feature includes.
-	 *
-	 * @return a list of name version descriptors, possibly empty
-	 */
-	public NameVersionDescriptor[] getPlugins() {
-		IFeaturePlugin[] plugins = featureModel.getFeature().getPlugins();
-		NameVersionDescriptor[] result = new NameVersionDescriptor[plugins.length];
-		for (int i = 0; i < plugins.length; i++) {
-			result[i] = new NameVersionDescriptor(plugins[i].getId(), plugins[i].getVersion());
-		}
-		return result;
-	}
-
-	/**
-	 * Returns a list of name version descriptors that describe the set of features
-	 * that this feature depends on as imports or included features.
-	 *
-	 * @return a list of name version descriptors, possibly empty
-	 */
-	public NameVersionDescriptor[] getDependentFeatures() {
-		List<NameVersionDescriptor> result = new ArrayList<>();
-		IFeature feature = featureModel.getFeature();
-		IFeatureImport[] featureImports = feature.getImports();
-		for (IFeatureImport featureImport : featureImports) {
-			if (featureImport.getType() == IFeatureImport.FEATURE) {
-				result.add(new NameVersionDescriptor(featureImport.getId(), null, NameVersionDescriptor.TYPE_FEATURE));
-			}
-		}
-		IFeatureChild[] featureIncludes = feature.getIncludedFeatures();
-		for (IFeatureChild featureInclude : featureIncludes) {
-			result.add(new NameVersionDescriptor(featureInclude.getId(), null, NameVersionDescriptor.TYPE_FEATURE));
-		}
-		return result.toArray(new NameVersionDescriptor[result.size()]);
-	}
-
-	/**
-	 * Initializes the content of this target feature by reading the feature.xml
-	 *
-	 * @param file feature.xml or directory containing it
-	 */
-	private void initialize(File file) throws CoreException {
-		if (file == null || !file.exists()) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetFeature_FileDoesNotExist, file)));
-		}
-		File featureXML;
-		if (ICoreConstants.FEATURE_FILENAME_DESCRIPTOR.equalsIgnoreCase(file.getName())) {
-			featureXML = file;
-		} else {
-			featureXML = new File(file, ICoreConstants.FEATURE_FILENAME_DESCRIPTOR);
-			if (!featureXML.exists()) {
-				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetFeature_FileDoesNotExist, featureXML)));
-			}
-		}
-		featureModel = ExternalFeatureModelManager.createModel(featureXML);
-	}
-
-	@Override
-	public String toString() {
-		StringBuilder result = new StringBuilder();
-		result.append(getId()).append(' ').append(getVersion()).append(
-		return result.toString();
-	}
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.internal.core.ExternalFeatureModelManager;
+import org.eclipse.pde.internal.core.ICoreConstants;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.ifeature.IFeature;
+import org.eclipse.pde.internal.core.ifeature.IFeatureChild;
+import org.eclipse.pde.internal.core.ifeature.IFeatureImport;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.core.ifeature.IFeaturePlugin;
+import org.eclipse.pde.internal.core.target.Messages;
+
+/**
+ * Describes a single feature in a target definition.
+ *
+ * @since 3.8
+ */
+public class TargetFeature {
+
+	private IFeatureModel featureModel;
+
+	/**
+	 * Constructs a target feature for a feature on the local filesystem. The
+	 * file may point at the feature.xml or a folder containing the feature.xml.
+	 * The feature.xml will be read to collect the information about the feature.
+	 *
+	 * @param featureLocation the location of the feature (feature.xml or directory containing it)
+	 * @throws CoreException if there is a problem opening the feature.xml
+	 */
+	public TargetFeature(File featureLocation) throws CoreException {
+		initialize(featureLocation);
+	}
+
+	/**
+	 * Returns the id of this feature or <code>null</code> if no id is set.
+	 *
+	 * @return id or <code>null</code>
+	 */
+	public String getId() {
+		if (featureModel == null) {
+			return null;
+		}
+		return featureModel.getFeature().getId();
+	}
+
+	/**
+	 * Returns the version of this feature or <code>null</code> if no version is set.
+	 *
+	 * @return version or <code>null</code>
+	 */
+	public String getVersion() {
+		if (featureModel == null) {
+			return null;
+		}
+		return featureModel.getFeature().getVersion();
+	}
+
+	/**
+	 * Returns the string path to the directory containing the feature.xml or
+	 * <code>null</code> if no install location is known.
+	 *
+	 * @return install location path or <code>null</code>
+	 */
+	public String getLocation() {
+		if (featureModel == null) {
+			return null;
+		}
+		return featureModel.getInstallLocation();
+	}
+
+	/**
+	 * Returns a list of name version descriptor that describes the set of
+	 * plug-ins that this feature includes.
+	 *
+	 * @return a list of name version descriptors, possibly empty
+	 */
+	public NameVersionDescriptor[] getPlugins() {
+		IFeaturePlugin[] plugins = featureModel.getFeature().getPlugins();
+		NameVersionDescriptor[] result = new NameVersionDescriptor[plugins.length];
+		for (int i = 0; i < plugins.length; i++) {
+			result[i] = new NameVersionDescriptor(plugins[i].getId(), plugins[i].getVersion());
+		}
+		return result;
+	}
+
+	/**
+	 * Returns a list of name version descriptors that describe the set of features
+	 * that this feature depends on as imports or included features.
+	 *
+	 * @return a list of name version descriptors, possibly empty
+	 */
+	public NameVersionDescriptor[] getDependentFeatures() {
+		List<NameVersionDescriptor> result = new ArrayList<>();
+		IFeature feature = featureModel.getFeature();
+		IFeatureImport[] featureImports = feature.getImports();
+		for (IFeatureImport featureImport : featureImports) {
+			if (featureImport.getType() == IFeatureImport.FEATURE) {
+				result.add(new NameVersionDescriptor(featureImport.getId(), null, NameVersionDescriptor.TYPE_FEATURE));
+			}
+		}
+		IFeatureChild[] featureIncludes = feature.getIncludedFeatures();
+		for (IFeatureChild featureInclude : featureIncludes) {
+			result.add(new NameVersionDescriptor(featureInclude.getId(), null, NameVersionDescriptor.TYPE_FEATURE));
+		}
+		return result.toArray(new NameVersionDescriptor[result.size()]);
+	}
+
+	/**
+	 * Initializes the content of this target feature by reading the feature.xml
+	 *
+	 * @param file feature.xml or directory containing it
+	 */
+	private void initialize(File file) throws CoreException {
+		if (file == null || !file.exists()) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetFeature_FileDoesNotExist, file)));
+		}
+		File featureXML;
+		if (ICoreConstants.FEATURE_FILENAME_DESCRIPTOR.equalsIgnoreCase(file.getName())) {
+			featureXML = file;
+		} else {
+			featureXML = new File(file, ICoreConstants.FEATURE_FILENAME_DESCRIPTOR);
+			if (!featureXML.exists()) {
+				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetFeature_FileDoesNotExist, featureXML)));
+			}
+		}
+		featureModel = ExternalFeatureModelManager.createModel(featureXML);
+	}
 
-}
+	@Override
+	public String toString() {
+		StringBuilder result = new StringBuilder();
+		result.append(getId()).append(' ').append(getVersion()).append(
+		return result.toString();
+	}
+
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/exports/FeatureExportInfo.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/exports/FeatureExportInfo.java
位置:  -1,34 +1,34  
-/*******************************************************************************
- * Copyright (c) 2005, 2009 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2005, 2009 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.core.exports;
-
-public class FeatureExportInfo {
-
-	public boolean toDirectory;
-	public boolean useJarFormat;
-	public boolean exportSource;
-	public boolean exportSourceBundle;
-	public boolean exportMetadata;
-	public boolean allowBinaryCycles;
-	public boolean useWorkspaceCompiledClasses;
-	public String destinationDirectory;
-	public String zipFileName;
-	public String qualifier;
-	public Object[] items;
-	public String[] signingInfo;
-	public String[] jnlpInfo;
-	public String[][] targets;
-	public String categoryDefinition;
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.core.exports;
+
+public class FeatureExportInfo {
+
+	public boolean toDirectory;
+	public boolean useJarFormat;
+	public boolean exportSource;
+	public boolean exportSourceBundle;
+	public boolean exportMetadata;
+	public boolean allowBinaryCycles;
+	public boolean useWorkspaceCompiledClasses;
+	public String destinationDirectory;
+	public String zipFileName;
+	public String qualifier;
+	public Object[] items;
+	public String[] signingInfo;
+	public String[] jnlpInfo;
+	public String[][] targets;
+	public String categoryDefinition;
+
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/search/ISearchResultCollector.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/search/ISearchResultCollector.java
位置:  -1,18 +1,18  
-/*******************************************************************************
- * Copyright (c) 2005-2009 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2005-2009 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.core.search;
-
-public interface ISearchResultCollector {
-	void accept(Object match);
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.core.search;
+
+public interface ISearchResultCollector {
+	void accept(Object match);
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ExternalFileTargetHandle.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ExternalFileTargetHandle.java
位置:  -1,127 +1,127  
-/*******************************************************************************
- * Copyright (c) 2009, 2011 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.core.target;
-
-import java.io.BufferedOutputStream;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.net.URI;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.core.runtime.URIUtil;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.core.target.ITargetHandle;
-import org.eclipse.pde.internal.core.PDECore;
-
-/**
- * A handle to a target stored in a remote file (outside workspace) and accessed using its URI.
- *
- * @since 3.5
- */
-public class ExternalFileTargetHandle extends AbstractTargetHandle {
-
-	/**
-	 * URI scheme for remote targets
-	 */
-	static final String SCHEME = 
-
-	/**
-	 * Returns a handle for the given URI.
-	 *
-	 * @param uri URI
-	 * @return target handle
-	 */
-	static ITargetHandle restoreHandle(URI uri) {
-		return new ExternalFileTargetHandle(uri);
-	}
-
-	private final URI fURI;
-	private File fFile;
-
-	/**
-	 * Constructs a new target handle to the remote file, based on its URI.
-	 */
-	protected ExternalFileTargetHandle(URI uri) {
-		fURI = uri;
-		fFile = URIUtil.toFile(fURI);
-	}
-
-
-
-	@Override
-	void delete() throws CoreException {
-		// We can not delete a file lying outside the workspace
-	}
-
-
-
-	@Override
-	protected InputStream getInputStream() throws CoreException {
-		try {
-			return fURI.toURL().openStream();
-		} catch (IOException e) {
-		}
-		return null;
-	}
-
-
-	@Override
-	void save(ITargetDefinition definition) throws CoreException {
-		try {
-			OutputStream stream = new BufferedOutputStream(new FileOutputStream(fFile));
-			((TargetDefinition) definition).write(stream);
-			stream.close();
-		} catch (IOException e) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID,
-					NLS.bind(Messages.LocalTargetHandle_4, fFile.getName()), e));
-		}
-	}
-
-
-	@Override
-	public boolean exists() {
-		return fFile != null &amp;&amp; fFile.exists();
-	}
-
-
-	@Override
-	public String getMemento() throws CoreException {
-		return fURI.toString();
-	}
-
-	@Override
-	public boolean equals(Object obj) {
-		if (obj instanceof ExternalFileTargetHandle) {
-			ExternalFileTargetHandle target = (ExternalFileTargetHandle) obj;
-			return target.getLocation().equals(fURI);
-		}
-		return super.equals(obj);
-	}
-
-	public URI getLocation() {
-		return fURI;
-	}
-
-
-	@Override
-	public String toString() {
-		return fURI.toString();
-	}
-
-}
+/*******************************************************************************
+ * Copyright (c) 2009, 2011 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.core.target;
+
+import java.io.BufferedOutputStream;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.net.URI;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.URIUtil;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.core.target.ITargetHandle;
+import org.eclipse.pde.internal.core.PDECore;
+
+/**
+ * A handle to a target stored in a remote file (outside workspace) and accessed using its URI.
+ *
+ * @since 3.5
+ */
+public class ExternalFileTargetHandle extends AbstractTargetHandle {
+
+	/**
+	 * URI scheme for remote targets
+	 */
+	static final String SCHEME = 
+
+	/**
+	 * Returns a handle for the given URI.
+	 *
+	 * @param uri URI
+	 * @return target handle
+	 */
+	static ITargetHandle restoreHandle(URI uri) {
+		return new ExternalFileTargetHandle(uri);
+	}
+
+	private final URI fURI;
+	private File fFile;
+
+	/**
+	 * Constructs a new target handle to the remote file, based on its URI.
+	 */
+	protected ExternalFileTargetHandle(URI uri) {
+		fURI = uri;
+		fFile = URIUtil.toFile(fURI);
+	}
+
+
+
+	@Override
+	void delete() throws CoreException {
+		// We can not delete a file lying outside the workspace
+	}
+
+
+
+	@Override
+	protected InputStream getInputStream() throws CoreException {
+		try {
+			return fURI.toURL().openStream();
+		} catch (IOException e) {
+		}
+		return null;
+	}
+
+
+	@Override
+	void save(ITargetDefinition definition) throws CoreException {
+		try {
+			OutputStream stream = new BufferedOutputStream(new FileOutputStream(fFile));
+			((TargetDefinition) definition).write(stream);
+			stream.close();
+		} catch (IOException e) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID,
+					NLS.bind(Messages.LocalTargetHandle_4, fFile.getName()), e));
+		}
+	}
+
+
+	@Override
+	public boolean exists() {
+		return fFile != null &amp;&amp; fFile.exists();
+	}
+
+
+	@Override
+	public String getMemento() throws CoreException {
+		return fURI.toString();
+	}
+
+	@Override
+	public boolean equals(Object obj) {
+		if (obj instanceof ExternalFileTargetHandle) {
+			ExternalFileTargetHandle target = (ExternalFileTargetHandle) obj;
+			return target.getLocation().equals(fURI);
+		}
+		return super.equals(obj);
+	}
+
+	public URI getLocation() {
+		return fURI;
+	}
+
+
+	@Override
+	public String toString() {
+		return fURI.toString();
+	}
+
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/IULocationFactory.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/IULocationFactory.java
位置:  -1,113 +1,113  
-/*******************************************************************************
- * Copyright (c) 2011, 2017 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2017 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.core.target;
-
-import java.io.ByteArrayInputStream;
-import java.net.URI;
-import java.net.URISyntaxException;
-import java.nio.charset.StandardCharsets;
-import java.util.ArrayList;
-import java.util.List;
-import javax.xml.parsers.DocumentBuilder;
-import javax.xml.parsers.DocumentBuilderFactory;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.pde.core.target.ITargetLocation;
-import org.eclipse.pde.core.target.ITargetLocationFactory;
-import org.eclipse.pde.internal.core.PDECore;
-import org.w3c.dom.Document;
-import org.w3c.dom.Element;
-import org.w3c.dom.Node;
-import org.w3c.dom.NodeList;
-
-/**
- * Location factory contributed through extension to org.eclipse.pde.core.targetLocations
- *
- * Provides serialization and deserialize method for InstallableUnit target location
- *
- */
-public class IULocationFactory implements ITargetLocationFactory {
-
-	@Override
-	public ITargetLocation getTargetLocation(String type, String serializedXML) throws CoreException {
-
-		Element location;
-		try {
-			DocumentBuilder docBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
-			Document document = docBuilder
-					.parse(new ByteArrayInputStream(serializedXML.getBytes(StandardCharsets.UTF_8)));
-			location = document.getDocumentElement();
-		} catch (Exception e) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage(), e));
-		}
-
-		if (IUBundleContainer.TYPE.equals(type) &amp;&amp; location != null) {
-			String locationType = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_LOCATION_TYPE);
-			if (!type.equals(locationType)) {
-				return null;
-			}
-
-			String includeMode = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_MODE);
-			String includeAllPlatforms = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_ALL_PLATFORMS);
-			String includeSource = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_SOURCE);
-			String includeConfigurePhase = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_CONFIGURE_PHASE);
-
-			NodeList list = location.getChildNodes();
-			List<String> ids = new ArrayList<>();
-			List<String> versions = new ArrayList<>();
-			List<URI> repos = new ArrayList<>();
-			for (int i = 0; i < list.getLength(); ++i) {
-				Node node = list.item(i);
-				if (node.getNodeType() == Node.ELEMENT_NODE) {
-					Element element = (Element) node;
-					if (element.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.INSTALLABLE_UNIT)) {
-						String id = element.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID);
-						if (id.length() > 0) {
-							String version = element.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
-							if (version.length() > 0) {
-								ids.add(id);
-								versions.add(version);
-							}
-						}
-					} else if (element.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.REPOSITORY)) {
-						String loc = element.getAttribute(TargetDefinitionPersistenceHelper.LOCATION);
-						if (loc.length() > 0) {
-							try {
-								repos.add(new URI(loc));
-							} catch (URISyntaxException e) {
-							}
-						}
-					}
-				}
-			}
-			String[] iuIDs = ids.toArray(new String[ids.size()]);
-			String[] iuVer = versions.toArray(new String[versions.size()]);
-			URI[] uris = repos.toArray(new URI[repos.size()]);
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.core.target;
+
+import java.io.ByteArrayInputStream;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.nio.charset.StandardCharsets;
+import java.util.ArrayList;
+import java.util.List;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.pde.core.target.ITargetLocation;
+import org.eclipse.pde.core.target.ITargetLocationFactory;
+import org.eclipse.pde.internal.core.PDECore;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+
+/**
+ * Location factory contributed through extension to org.eclipse.pde.core.targetLocations
+ *
+ * Provides serialization and deserialize method for InstallableUnit target location
+ *
+ */
+public class IULocationFactory implements ITargetLocationFactory {
 
-			int flags = IUBundleContainer.INCLUDE_REQUIRED;
-			if (includeMode != null &amp;&amp; includeMode.trim().length() > 0) {
-				if (includeMode.equals(TargetDefinitionPersistenceHelper.MODE_SLICER)) {
-					flags = 0;
-				}
-			}
-			flags |= Boolean.parseBoolean(includeAllPlatforms) ? IUBundleContainer.INCLUDE_ALL_ENVIRONMENTS : 0;
-			flags |= Boolean.parseBoolean(includeSource) ? IUBundleContainer.INCLUDE_SOURCE : 0;
-			flags |= Boolean.parseBoolean(includeConfigurePhase) ? IUBundleContainer.INCLUDE_CONFIGURE_PHASE : 0;
-			IUBundleContainer targetLocation = new IUBundleContainer(iuIDs, iuVer, uris, flags);
-			return targetLocation;
-		}
-		return null;
-	}
-}
+	@Override
+	public ITargetLocation getTargetLocation(String type, String serializedXML) throws CoreException {
+
+		Element location;
+		try {
+			DocumentBuilder docBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
+			Document document = docBuilder
+					.parse(new ByteArrayInputStream(serializedXML.getBytes(StandardCharsets.UTF_8)));
+			location = document.getDocumentElement();
+		} catch (Exception e) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage(), e));
+		}
+
+		if (IUBundleContainer.TYPE.equals(type) &amp;&amp; location != null) {
+			String locationType = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_LOCATION_TYPE);
+			if (!type.equals(locationType)) {
+				return null;
+			}
+
+			String includeMode = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_MODE);
+			String includeAllPlatforms = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_ALL_PLATFORMS);
+			String includeSource = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_SOURCE);
+			String includeConfigurePhase = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_CONFIGURE_PHASE);
+
+			NodeList list = location.getChildNodes();
+			List<String> ids = new ArrayList<>();
+			List<String> versions = new ArrayList<>();
+			List<URI> repos = new ArrayList<>();
+			for (int i = 0; i < list.getLength(); ++i) {
+				Node node = list.item(i);
+				if (node.getNodeType() == Node.ELEMENT_NODE) {
+					Element element = (Element) node;
+					if (element.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.INSTALLABLE_UNIT)) {
+						String id = element.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID);
+						if (id.length() > 0) {
+							String version = element.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
+							if (version.length() > 0) {
+								ids.add(id);
+								versions.add(version);
+							}
+						}
+					} else if (element.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.REPOSITORY)) {
+						String loc = element.getAttribute(TargetDefinitionPersistenceHelper.LOCATION);
+						if (loc.length() > 0) {
+							try {
+								repos.add(new URI(loc));
+							} catch (URISyntaxException e) {
+							}
+						}
+					}
+				}
+			}
+			String[] iuIDs = ids.toArray(new String[ids.size()]);
+			String[] iuVer = versions.toArray(new String[versions.size()]);
+			URI[] uris = repos.toArray(new URI[repos.size()]);
+
+			int flags = IUBundleContainer.INCLUDE_REQUIRED;
+			if (includeMode != null &amp;&amp; includeMode.trim().length() > 0) {
+				if (includeMode.equals(TargetDefinitionPersistenceHelper.MODE_SLICER)) {
+					flags = 0;
+				}
+			}
+			flags |= Boolean.parseBoolean(includeAllPlatforms) ? IUBundleContainer.INCLUDE_ALL_ENVIRONMENTS : 0;
+			flags |= Boolean.parseBoolean(includeSource) ? IUBundleContainer.INCLUDE_SOURCE : 0;
+			flags |= Boolean.parseBoolean(includeConfigurePhase) ? IUBundleContainer.INCLUDE_CONFIGURE_PHASE : 0;
+			IUBundleContainer targetLocation = new IUBundleContainer(iuIDs, iuVer, uris, flags);
+			return targetLocation;
+		}
+		return null;
+	}
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetLocationTypeManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetLocationTypeManager.java
位置:  -1,109 +1,109  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.core.target;
-
-import java.util.HashMap;
-import java.util.Map;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IConfigurationElement;
-import org.eclipse.core.runtime.IExtension;
-import org.eclipse.core.runtime.IExtensionPoint;
-import org.eclipse.core.runtime.IExtensionRegistry;
-import org.eclipse.core.runtime.Platform;
-import org.eclipse.pde.core.target.ITargetLocation;
-import org.eclipse.pde.core.target.ITargetLocationFactory;
-import org.eclipse.pde.internal.core.PDECore;
-
-/**
- * Keeps a track of the contributed Target Locations and provides helper functions to
- * access them
- *
- */
-public class TargetLocationTypeManager {
-
-	private static final String ATTR_TYPE = 
-	private static final String ATTR_LOCFACTORY = 
-	private static final String TARGET_LOC_EXTPT = 
-
-	private final Map<String, IConfigurationElement> fExtentionMap;
-	private final Map<String, ITargetLocationFactory> fFactoryMap;
-
-	static TargetLocationTypeManager INSTANCE;
-
-	private TargetLocationTypeManager() {
-		//singleton
-		fExtentionMap = new HashMap<>(4);
-		fFactoryMap = new HashMap<>(4);
-		readExtentions();
-	}
-
-	/**
-	 * @return the singleton instanceof this manager
-	 */
-	public static TargetLocationTypeManager getInstance() {
-		if (INSTANCE == null) {
-			INSTANCE = new TargetLocationTypeManager();
-		}
-		return INSTANCE;
-	}
-
-	/**
-	 * Returns an instance of {@link ITargetLocationFactory} from an extension that provides
-	 * them for locations of the given type or <code>null</code> if no extension can be found.
-	 *
-	 * @param type string identifying the type of target location, see {@link ITargetLocation#getType()}
-	 * @return an instance of <code>ITargetLocationFactory</code> or <code>null</code>
-	 */
-	public ITargetLocationFactory getTargetLocationFactory(String type) {
-		ITargetLocationFactory factory = fFactoryMap.get(type);
-		if (factory == null) {
-			IConfigurationElement extension = fExtentionMap.get(type);
-			if (extension != null) {
-				factory = (ITargetLocationFactory) createExecutableExtension(extension);
-				if (factory != null) {
-					fFactoryMap.put(type, factory);
-					return factory;
-				}
-			}
-		}
-		return factory;
-	}
-
-	private Object createExecutableExtension(IConfigurationElement element) {
-		try {
-			return element.createExecutableExtension(ATTR_LOCFACTORY);
-		} catch (CoreException e) {
-			return null;
-		}
-	}
-
-	private void readExtentions() {
-		IExtensionRegistry registry = Platform.getExtensionRegistry();
-		IExtensionPoint point = registry.getExtensionPoint(PDECore.PLUGIN_ID, TARGET_LOC_EXTPT);
-		if (point == null) {
-			return;
-		}
-		IExtension[] extensions = point.getExtensions();
-		for (IExtension extension : extensions) {
-			IConfigurationElement[] elements = extension.getConfigurationElements();
-			for (IConfigurationElement element : elements) {
-				String type = element.getAttribute(ATTR_TYPE);
-				if (type != null) {
-					fExtentionMap.put(type, element);
-				}
-			}
-		}
-	}
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.core.target;
+
+import java.util.HashMap;
+import java.util.Map;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IConfigurationElement;
+import org.eclipse.core.runtime.IExtension;
+import org.eclipse.core.runtime.IExtensionPoint;
+import org.eclipse.core.runtime.IExtensionRegistry;
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.pde.core.target.ITargetLocation;
+import org.eclipse.pde.core.target.ITargetLocationFactory;
+import org.eclipse.pde.internal.core.PDECore;
+
+/**
+ * Keeps a track of the contributed Target Locations and provides helper functions to
+ * access them
+ *
+ */
+public class TargetLocationTypeManager {
+
+	private static final String ATTR_TYPE = 
+	private static final String ATTR_LOCFACTORY = 
+	private static final String TARGET_LOC_EXTPT = 
+
+	private final Map<String, IConfigurationElement> fExtentionMap;
+	private final Map<String, ITargetLocationFactory> fFactoryMap;
+
+	static TargetLocationTypeManager INSTANCE;
+
+	private TargetLocationTypeManager() {
+		//singleton
+		fExtentionMap = new HashMap<>(4);
+		fFactoryMap = new HashMap<>(4);
+		readExtentions();
+	}
+
+	/**
+	 * @return the singleton instanceof this manager
+	 */
+	public static TargetLocationTypeManager getInstance() {
+		if (INSTANCE == null) {
+			INSTANCE = new TargetLocationTypeManager();
+		}
+		return INSTANCE;
+	}
+
+	/**
+	 * Returns an instance of {@link ITargetLocationFactory} from an extension that provides
+	 * them for locations of the given type or <code>null</code> if no extension can be found.
+	 *
+	 * @param type string identifying the type of target location, see {@link ITargetLocation#getType()}
+	 * @return an instance of <code>ITargetLocationFactory</code> or <code>null</code>
+	 */
+	public ITargetLocationFactory getTargetLocationFactory(String type) {
+		ITargetLocationFactory factory = fFactoryMap.get(type);
+		if (factory == null) {
+			IConfigurationElement extension = fExtentionMap.get(type);
+			if (extension != null) {
+				factory = (ITargetLocationFactory) createExecutableExtension(extension);
+				if (factory != null) {
+					fFactoryMap.put(type, factory);
+					return factory;
+				}
+			}
+		}
+		return factory;
+	}
+
+	private Object createExecutableExtension(IConfigurationElement element) {
+		try {
+			return element.createExecutableExtension(ATTR_LOCFACTORY);
+		} catch (CoreException e) {
+			return null;
+		}
+	}
+
+	private void readExtentions() {
+		IExtensionRegistry registry = Platform.getExtensionRegistry();
+		IExtensionPoint point = registry.getExtensionPoint(PDECore.PLUGIN_ID, TARGET_LOC_EXTPT);
+		if (point == null) {
+			return;
+		}
+		IExtension[] extensions = point.getExtensions();
+		for (IExtension extension : extensions) {
+			IConfigurationElement[] elements = extension.getConfigurationElements();
+			for (IConfigurationElement element : elements) {
+				String type = element.getAttribute(ATTR_TYPE);
+				if (type != null) {
+					fExtentionMap.put(type, element);
+				}
+			}
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java
位置:  -1,260 +1,260  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.core.target;
-
-import java.io.StringWriter;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import javax.xml.transform.OutputKeys;
-import javax.xml.transform.Transformer;
-import javax.xml.transform.TransformerException;
-import javax.xml.transform.TransformerFactory;
-import javax.xml.transform.TransformerFactoryConfigurationError;
-import javax.xml.transform.dom.DOMSource;
-import javax.xml.transform.stream.StreamResult;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IPath;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Path;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.core.target.ITargetLocation;
-import org.eclipse.pde.core.target.ITargetLocationFactory;
-import org.eclipse.pde.core.target.NameVersionDescriptor;
-import org.eclipse.pde.internal.core.PDECore;
-import org.w3c.dom.Element;
-import org.w3c.dom.Node;
-import org.w3c.dom.NodeList;
-
-/**
- * Handles reading of target definition files that were created in 3.8.
- * Only significant different between 3.5 and 3.6 is that the included and optional
- * bundle restrictions are set at the target level rather than the bundle container
- * level.  In addition, features can be use on the included settings to restrict
- * by feature. In 3.8 the custom target locations can be contributed
- *
- * @see TargetDefinitionPersistenceHelper
- */
-public class TargetPersistence38Helper {
-
-	/* Example 3.8 target file
-
-	<?xml version=
-	<?pde version=
-
-	<target name=
-	<locations>
-	<location path=
-	<location path=
-	<location id=
-	<location id=
-	<location id=
-	<location includeAllPlatforms=
-	<unit id=
-	<repository location=
-	</location>
-	<location includeAllPlatforms=
-	<unit id=
-	<repository location=
-	</location>
-	</locations>
-	</target>
-
-	*/
-	public static void initFromDoc(ITargetDefinition definition, Element root) {
-		String name = root.getAttribute(TargetDefinitionPersistenceHelper.ATTR_NAME);
-		if (name.length() > 0) {
-			definition.setName(name);
-		}
-
-		String mode = root.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_MODE);
-		if (mode.equalsIgnoreCase(TargetDefinitionPersistenceHelper.FEATURE)) {
-			((TargetDefinition) definition).setUIMode(TargetDefinition.MODE_FEATURE);
-		}
-
-		NodeList list = root.getChildNodes();
-		for (int i = 0; i < list.getLength(); ++i) {
-			Node node = list.item(i);
-			if (node.getNodeType() == Node.ELEMENT_NODE) {
-				Element element = (Element) node;
-				String nodeName = element.getNodeName();
-				if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.LOCATIONS)) {
-					NodeList locations = element.getChildNodes();
-					List<ITargetLocation> bundleContainers = new ArrayList<>();
-					for (int j = 0; j < locations.getLength(); ++j) {
-						Node locationNode = locations.item(j);
-						if (locationNode.getNodeType() == Node.ELEMENT_NODE) {
-							Element locationElement = (Element) locationNode;
-							if (locationElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.LOCATION)) {
-								try {
-									ITargetLocation container = deserializeBundleContainer(locationElement);
-									if (container != null) {
-										bundleContainers.add(container);
-									}
-								} catch (CoreException e) {
-									// Log the problem and move on to the next location
-									PDECore.log(e);
-								}
-							}
-						}
-					}
-					definition.setTargetLocations(bundleContainers.toArray(new ITargetLocation[bundleContainers.size()]));
-				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.INCLUDE_BUNDLES) || nodeName.equalsIgnoreCase(TargetPersistence35Helper.OPTIONAL_BUNDLES)) {
-					NodeList children = element.getChildNodes();
-					List<NameVersionDescriptor> included = new ArrayList<>();
-					for (int j = 0; j < children.getLength(); ++j) {
-						Node child = children.item(j);
-						if (child.getNodeType() == Node.ELEMENT_NODE) {
-							Element includeElement = (Element) child;
-							if (includeElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.PLUGIN)) {
-								String id = includeElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID);
-								String version = includeElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
-								included.add(new NameVersionDescriptor(id, version.length() > 0 ? version : null));
-							} else if (includeElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.FEATURE)) {
-								String id = includeElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID);
-								String version = includeElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
-								included.add(new NameVersionDescriptor(id, version.length() > 0 ? version : null, NameVersionDescriptor.TYPE_FEATURE));
-							}
-						}
-					}
-					// Don't overwrite includes with optional or vice versa
-					NameVersionDescriptor[] previousIncluded = definition.getIncluded();
-					if (previousIncluded == null || previousIncluded.length == 0) {
-						definition.setIncluded(included.toArray(new NameVersionDescriptor[included.size()]));
-					} else {
-						List<NameVersionDescriptor> allIncluded = new ArrayList<>();
-						Collections.addAll(allIncluded, previousIncluded);
-						allIncluded.addAll(included);
-						definition.setIncluded(allIncluded.toArray(new NameVersionDescriptor[included.size()]));
-					}
-				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.ENVIRONMENT)) {
-					NodeList envEntries = element.getChildNodes();
-					for (int j = 0; j < envEntries.getLength(); ++j) {
-						Node entry = envEntries.item(j);
-						if (entry.getNodeType() == Node.ELEMENT_NODE) {
-							Element currentElement = (Element) entry;
-							if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.OS)) {
-								definition.setOS(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
-							} else if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.WS)) {
-								definition.setWS(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
-							} else if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.ARCH)) {
-								definition.setArch(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
-							} else if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.NL)) {
-								definition.setNL(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
-							}
-						}
-					}
-				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.TARGET_JRE)) {
-					String text = element.getAttribute(TargetDefinitionPersistenceHelper.ATTR_LOCATION_PATH);
-					if (text.length() != 0) {
-						// new format - JRE container path
-						IPath path = Path.fromPortableString(text);
-						definition.setJREContainer(path);
-					}
-				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.ARGUMENTS)) {
-					NodeList argEntries = element.getChildNodes();
-					for (int j = 0; j < argEntries.getLength(); ++j) {
-						Node entry = argEntries.item(j);
-						if (entry.getNodeType() == Node.ELEMENT_NODE) {
-							Element currentElement = (Element) entry;
-							if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.PROGRAM_ARGS)) {
-								definition.setProgramArguments(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
-							} else if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.VM_ARGS)) {
-								definition.setVMArguments(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
-							}
-						}
-					}
-				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.IMPLICIT)) {
-					NodeList implicitEntries = element.getChildNodes();
-					List<NameVersionDescriptor> implicit = new ArrayList<>(implicitEntries.getLength());
-					for (int j = 0; j < implicitEntries.getLength(); ++j) {
-						Node entry = implicitEntries.item(j);
-						if (entry.getNodeType() == Node.ELEMENT_NODE) {
-							Element currentElement = (Element) entry;
-							if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.PLUGIN)) {
-								String version = currentElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
-								NameVersionDescriptor bundle = new NameVersionDescriptor(currentElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID), version.length() > 0 ? version : null);
-								implicit.add(bundle);
-							}
-						}
-					}
-					definition.setImplicitDependencies(implicit.toArray(new NameVersionDescriptor[implicit.size()]));
-				}
-			}
-		}
-
-		// Set the sequence number at the very end
-		String sequenceNumber = root.getAttribute(TargetDefinitionPersistenceHelper.ATTR_SEQUENCE_NUMBER);
-		try {
-			((TargetDefinition) definition).setSequenceNumber(Integer.parseInt(sequenceNumber));
-		} catch (NumberFormatException e) {
-			((TargetDefinition) definition).setSequenceNumber(0);
-		}
-	}
-
-	/**
-	 * Uses the given location to create a target locations.  If the container had included or optional bundles set, add them
-	 * to the appropriate set (in 3.5 each container had included/optional, in 3.6 only the target has included/optional).  The
-	 * sets may be null to indicate that no container has specified inclusion restrictions yet.
-	 * In 3.8 the target location types can be contributed
-	 *
-	 * @param location document element representing a bundle container
-	 * @return target location instance
-	 * @throws CoreException
-	 */
-	private static ITargetLocation deserializeBundleContainer(Element location) throws CoreException {
-		String type = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_LOCATION_TYPE);
-		String path = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_LOCATION_PATH);
-
-		// Type should always be specified, but if not set, guess at type
-		if (type.length() == 0) {
-			if (path.endsWith(
-				type = DirectoryBundleContainer.TYPE;
-			} else {
-				type = ProfileBundleContainer.TYPE;
-			}
-		}
-
-		ITargetLocation container = null;
-		if (DirectoryBundleContainer.TYPE.equals(type)) {
-			container = TargetDefinitionPersistenceHelper.getTargetPlatformService().newDirectoryLocation(path);
-		} else if (ProfileBundleContainer.TYPE.equals(type)) {
-			String configArea = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_CONFIGURATION);
-			container = TargetDefinitionPersistenceHelper.getTargetPlatformService().newProfileLocation(path, configArea.length() > 0 ? configArea : null);
-		} else if (FeatureBundleContainer.TYPE.equals(type)) {
-			String version = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
-			container = TargetDefinitionPersistenceHelper.getTargetPlatformService().newFeatureLocation(path, location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID), version.length() > 0 ? version : null);
-		} else {
-			// The container is of an unknown type, should have a contribution through
-			try {
-				// Convert the xml to a string to pass to the extension
-				ITargetLocationFactory locFactory = TargetLocationTypeManager.getInstance().getTargetLocationFactory(type);
-				if (locFactory == null) {
-					throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetPersistence38Helper_NoTargetLocationExtension, type)));
-				}
-				StreamResult result = new StreamResult(new StringWriter());
-				Transformer transformer = TransformerFactory.newInstance().newTransformer();
-				transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, 
-				transformer.transform(new DOMSource(location), result);
-				container = locFactory.getTargetLocation(type, result.getWriter().toString());
-			} catch (TransformerException | TransformerFactoryConfigurationError e) {
-				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, Messages.TargetDefinitionPersistenceHelper_0, e));
-			}
-		}
-		return container;
-	}
-
-}
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.core.target;
+
+import java.io.StringWriter;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+import javax.xml.transform.OutputKeys;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerException;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.TransformerFactoryConfigurationError;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.core.target.ITargetLocation;
+import org.eclipse.pde.core.target.ITargetLocationFactory;
+import org.eclipse.pde.core.target.NameVersionDescriptor;
+import org.eclipse.pde.internal.core.PDECore;
+import org.w3c.dom.Element;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+
+/**
+ * Handles reading of target definition files that were created in 3.8.
+ * Only significant different between 3.5 and 3.6 is that the included and optional
+ * bundle restrictions are set at the target level rather than the bundle container
+ * level.  In addition, features can be use on the included settings to restrict
+ * by feature. In 3.8 the custom target locations can be contributed
+ *
+ * @see TargetDefinitionPersistenceHelper
+ */
+public class TargetPersistence38Helper {
+
+	/* Example 3.8 target file
+
+	<?xml version=
+	<?pde version=
+
+	<target name=
+	<locations>
+	<location path=
+	<location path=
+	<location id=
+	<location id=
+	<location id=
+	<location includeAllPlatforms=
+	<unit id=
+	<repository location=
+	</location>
+	<location includeAllPlatforms=
+	<unit id=
+	<repository location=
+	</location>
+	</locations>
+	</target>
+
+	*/
+	public static void initFromDoc(ITargetDefinition definition, Element root) {
+		String name = root.getAttribute(TargetDefinitionPersistenceHelper.ATTR_NAME);
+		if (name.length() > 0) {
+			definition.setName(name);
+		}
+
+		String mode = root.getAttribute(TargetDefinitionPersistenceHelper.ATTR_INCLUDE_MODE);
+		if (mode.equalsIgnoreCase(TargetDefinitionPersistenceHelper.FEATURE)) {
+			((TargetDefinition) definition).setUIMode(TargetDefinition.MODE_FEATURE);
+		}
+
+		NodeList list = root.getChildNodes();
+		for (int i = 0; i < list.getLength(); ++i) {
+			Node node = list.item(i);
+			if (node.getNodeType() == Node.ELEMENT_NODE) {
+				Element element = (Element) node;
+				String nodeName = element.getNodeName();
+				if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.LOCATIONS)) {
+					NodeList locations = element.getChildNodes();
+					List<ITargetLocation> bundleContainers = new ArrayList<>();
+					for (int j = 0; j < locations.getLength(); ++j) {
+						Node locationNode = locations.item(j);
+						if (locationNode.getNodeType() == Node.ELEMENT_NODE) {
+							Element locationElement = (Element) locationNode;
+							if (locationElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.LOCATION)) {
+								try {
+									ITargetLocation container = deserializeBundleContainer(locationElement);
+									if (container != null) {
+										bundleContainers.add(container);
+									}
+								} catch (CoreException e) {
+									// Log the problem and move on to the next location
+									PDECore.log(e);
+								}
+							}
+						}
+					}
+					definition.setTargetLocations(bundleContainers.toArray(new ITargetLocation[bundleContainers.size()]));
+				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.INCLUDE_BUNDLES) || nodeName.equalsIgnoreCase(TargetPersistence35Helper.OPTIONAL_BUNDLES)) {
+					NodeList children = element.getChildNodes();
+					List<NameVersionDescriptor> included = new ArrayList<>();
+					for (int j = 0; j < children.getLength(); ++j) {
+						Node child = children.item(j);
+						if (child.getNodeType() == Node.ELEMENT_NODE) {
+							Element includeElement = (Element) child;
+							if (includeElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.PLUGIN)) {
+								String id = includeElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID);
+								String version = includeElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
+								included.add(new NameVersionDescriptor(id, version.length() > 0 ? version : null));
+							} else if (includeElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.FEATURE)) {
+								String id = includeElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID);
+								String version = includeElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
+								included.add(new NameVersionDescriptor(id, version.length() > 0 ? version : null, NameVersionDescriptor.TYPE_FEATURE));
+							}
+						}
+					}
+					// Don't overwrite includes with optional or vice versa
+					NameVersionDescriptor[] previousIncluded = definition.getIncluded();
+					if (previousIncluded == null || previousIncluded.length == 0) {
+						definition.setIncluded(included.toArray(new NameVersionDescriptor[included.size()]));
+					} else {
+						List<NameVersionDescriptor> allIncluded = new ArrayList<>();
+						Collections.addAll(allIncluded, previousIncluded);
+						allIncluded.addAll(included);
+						definition.setIncluded(allIncluded.toArray(new NameVersionDescriptor[included.size()]));
+					}
+				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.ENVIRONMENT)) {
+					NodeList envEntries = element.getChildNodes();
+					for (int j = 0; j < envEntries.getLength(); ++j) {
+						Node entry = envEntries.item(j);
+						if (entry.getNodeType() == Node.ELEMENT_NODE) {
+							Element currentElement = (Element) entry;
+							if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.OS)) {
+								definition.setOS(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
+							} else if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.WS)) {
+								definition.setWS(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
+							} else if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.ARCH)) {
+								definition.setArch(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
+							} else if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.NL)) {
+								definition.setNL(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
+							}
+						}
+					}
+				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.TARGET_JRE)) {
+					String text = element.getAttribute(TargetDefinitionPersistenceHelper.ATTR_LOCATION_PATH);
+					if (text.length() != 0) {
+						// new format - JRE container path
+						IPath path = Path.fromPortableString(text);
+						definition.setJREContainer(path);
+					}
+				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.ARGUMENTS)) {
+					NodeList argEntries = element.getChildNodes();
+					for (int j = 0; j < argEntries.getLength(); ++j) {
+						Node entry = argEntries.item(j);
+						if (entry.getNodeType() == Node.ELEMENT_NODE) {
+							Element currentElement = (Element) entry;
+							if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.PROGRAM_ARGS)) {
+								definition.setProgramArguments(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
+							} else if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.VM_ARGS)) {
+								definition.setVMArguments(TargetDefinitionPersistenceHelper.getTextContent(currentElement));
+							}
+						}
+					}
+				} else if (nodeName.equalsIgnoreCase(TargetDefinitionPersistenceHelper.IMPLICIT)) {
+					NodeList implicitEntries = element.getChildNodes();
+					List<NameVersionDescriptor> implicit = new ArrayList<>(implicitEntries.getLength());
+					for (int j = 0; j < implicitEntries.getLength(); ++j) {
+						Node entry = implicitEntries.item(j);
+						if (entry.getNodeType() == Node.ELEMENT_NODE) {
+							Element currentElement = (Element) entry;
+							if (currentElement.getNodeName().equalsIgnoreCase(TargetDefinitionPersistenceHelper.PLUGIN)) {
+								String version = currentElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
+								NameVersionDescriptor bundle = new NameVersionDescriptor(currentElement.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID), version.length() > 0 ? version : null);
+								implicit.add(bundle);
+							}
+						}
+					}
+					definition.setImplicitDependencies(implicit.toArray(new NameVersionDescriptor[implicit.size()]));
+				}
+			}
+		}
+
+		// Set the sequence number at the very end
+		String sequenceNumber = root.getAttribute(TargetDefinitionPersistenceHelper.ATTR_SEQUENCE_NUMBER);
+		try {
+			((TargetDefinition) definition).setSequenceNumber(Integer.parseInt(sequenceNumber));
+		} catch (NumberFormatException e) {
+			((TargetDefinition) definition).setSequenceNumber(0);
+		}
+	}
+
+	/**
+	 * Uses the given location to create a target locations.  If the container had included or optional bundles set, add them
+	 * to the appropriate set (in 3.5 each container had included/optional, in 3.6 only the target has included/optional).  The
+	 * sets may be null to indicate that no container has specified inclusion restrictions yet.
+	 * In 3.8 the target location types can be contributed
+	 *
+	 * @param location document element representing a bundle container
+	 * @return target location instance
+	 * @throws CoreException
+	 */
+	private static ITargetLocation deserializeBundleContainer(Element location) throws CoreException {
+		String type = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_LOCATION_TYPE);
+		String path = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_LOCATION_PATH);
+
+		// Type should always be specified, but if not set, guess at type
+		if (type.length() == 0) {
+			if (path.endsWith(
+				type = DirectoryBundleContainer.TYPE;
+			} else {
+				type = ProfileBundleContainer.TYPE;
+			}
+		}
+
+		ITargetLocation container = null;
+		if (DirectoryBundleContainer.TYPE.equals(type)) {
+			container = TargetDefinitionPersistenceHelper.getTargetPlatformService().newDirectoryLocation(path);
+		} else if (ProfileBundleContainer.TYPE.equals(type)) {
+			String configArea = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_CONFIGURATION);
+			container = TargetDefinitionPersistenceHelper.getTargetPlatformService().newProfileLocation(path, configArea.length() > 0 ? configArea : null);
+		} else if (FeatureBundleContainer.TYPE.equals(type)) {
+			String version = location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_VERSION);
+			container = TargetDefinitionPersistenceHelper.getTargetPlatformService().newFeatureLocation(path, location.getAttribute(TargetDefinitionPersistenceHelper.ATTR_ID), version.length() > 0 ? version : null);
+		} else {
+			// The container is of an unknown type, should have a contribution through
+			try {
+				// Convert the xml to a string to pass to the extension
+				ITargetLocationFactory locFactory = TargetLocationTypeManager.getInstance().getTargetLocationFactory(type);
+				if (locFactory == null) {
+					throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetPersistence38Helper_NoTargetLocationExtension, type)));
+				}
+				StreamResult result = new StreamResult(new StringWriter());
+				Transformer transformer = TransformerFactory.newInstance().newTransformer();
+				transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, 
+				transformer.transform(new DOMSource(location), result);
+				container = locFactory.getTargetLocation(type, result.getWriter().toString());
+			} catch (TransformerException | TransformerFactoryConfigurationError e) {
+				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, Messages.TargetDefinitionPersistenceHelper_0, e));
+			}
+		}
+		return container;
+	}
+
+}

原文件: ui/org.eclipse.pde.genericeditor.extension/.settings/org.eclipse.pde.api.tools.prefs 
新文件: ui/org.eclipse.pde.genericeditor.extension/.settings/org.eclipse.pde.api.tools.prefs
位置:  -1,102 +1,102  
-ANNOTATION_ELEMENT_TYPE_ADDED_FIELD=Error
-ANNOTATION_ELEMENT_TYPE_ADDED_METHOD_WITHOUT_DEFAULT_VALUE=Error
-ANNOTATION_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
-ANNOTATION_ELEMENT_TYPE_REMOVED_FIELD=Error
-ANNOTATION_ELEMENT_TYPE_REMOVED_METHOD=Error
-ANNOTATION_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
-API_COMPONENT_ELEMENT_TYPE_REMOVED_API_TYPE=Error
-API_COMPONENT_ELEMENT_TYPE_REMOVED_REEXPORTED_API_TYPE=Error
-API_COMPONENT_ELEMENT_TYPE_REMOVED_REEXPORTED_TYPE=Error
-API_COMPONENT_ELEMENT_TYPE_REMOVED_TYPE=Error
-API_USE_SCAN_FIELD_SEVERITY=Error
-API_USE_SCAN_METHOD_SEVERITY=Error
-API_USE_SCAN_TYPE_SEVERITY=Error
-CLASS_ELEMENT_TYPE_ADDED_FIELD=Error
-CLASS_ELEMENT_TYPE_ADDED_METHOD=Error
-CLASS_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
-CLASS_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
-CLASS_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
-CLASS_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
-CLASS_ELEMENT_TYPE_CHANGED_NON_ABSTRACT_TO_ABSTRACT=Error
-CLASS_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
-CLASS_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
-CLASS_ELEMENT_TYPE_REMOVED_CONSTRUCTOR=Error
-CLASS_ELEMENT_TYPE_REMOVED_FIELD=Error
-CLASS_ELEMENT_TYPE_REMOVED_METHOD=Error
-CLASS_ELEMENT_TYPE_REMOVED_SUPERCLASS=Error
-CLASS_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
-CLASS_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
-CONSTRUCTOR_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
-CONSTRUCTOR_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
-CONSTRUCTOR_ELEMENT_TYPE_CHANGED_VARARGS_TO_ARRAY=Error
-CONSTRUCTOR_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
-ENUM_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
-ENUM_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
-ENUM_ELEMENT_TYPE_REMOVED_ENUM_CONSTANT=Error
-ENUM_ELEMENT_TYPE_REMOVED_FIELD=Error
-ENUM_ELEMENT_TYPE_REMOVED_METHOD=Error
-ENUM_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
-FIELD_ELEMENT_TYPE_ADDED_VALUE=Error
-FIELD_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
-FIELD_ELEMENT_TYPE_CHANGED_FINAL_TO_NON_FINAL_STATIC_CONSTANT=Error
-FIELD_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
-FIELD_ELEMENT_TYPE_CHANGED_NON_STATIC_TO_STATIC=Error
-FIELD_ELEMENT_TYPE_CHANGED_STATIC_TO_NON_STATIC=Error
-FIELD_ELEMENT_TYPE_CHANGED_TYPE=Error
-FIELD_ELEMENT_TYPE_CHANGED_VALUE=Error
-FIELD_ELEMENT_TYPE_REMOVED_TYPE_ARGUMENT=Error
-FIELD_ELEMENT_TYPE_REMOVED_VALUE=Error
-ILLEGAL_EXTEND=Warning
-ILLEGAL_IMPLEMENT=Warning
-ILLEGAL_INSTANTIATE=Warning
-ILLEGAL_OVERRIDE=Warning
-ILLEGAL_REFERENCE=Warning
-INTERFACE_ELEMENT_TYPE_ADDED_DEFAULT_METHOD=Error
-INTERFACE_ELEMENT_TYPE_ADDED_FIELD=Error
-INTERFACE_ELEMENT_TYPE_ADDED_METHOD=Error
-INTERFACE_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
-INTERFACE_ELEMENT_TYPE_ADDED_SUPER_INTERFACE_WITH_METHODS=Error
-INTERFACE_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
-INTERFACE_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
-INTERFACE_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
-INTERFACE_ELEMENT_TYPE_REMOVED_FIELD=Error
-INTERFACE_ELEMENT_TYPE_REMOVED_METHOD=Error
-INTERFACE_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
-INTERFACE_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
-INVALID_ANNOTATION=Ignore
-INVALID_JAVADOC_TAG=Ignore
-INVALID_REFERENCE_IN_SYSTEM_LIBRARIES=Ignore
-LEAK_EXTEND=Warning
-LEAK_FIELD_DECL=Warning
-LEAK_IMPLEMENT=Warning
-LEAK_METHOD_PARAM=Warning
-LEAK_METHOD_RETURN_TYPE=Warning
-METHOD_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
-METHOD_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
-METHOD_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
-METHOD_ELEMENT_TYPE_CHANGED_NON_ABSTRACT_TO_ABSTRACT=Error
-METHOD_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
-METHOD_ELEMENT_TYPE_CHANGED_NON_STATIC_TO_STATIC=Error
-METHOD_ELEMENT_TYPE_CHANGED_STATIC_TO_NON_STATIC=Error
-METHOD_ELEMENT_TYPE_CHANGED_VARARGS_TO_ARRAY=Error
-METHOD_ELEMENT_TYPE_REMOVED_ANNOTATION_DEFAULT_VALUE=Error
-METHOD_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
-MISSING_EE_DESCRIPTIONS=Warning
-TYPE_PARAMETER_ELEMENT_TYPE_ADDED_CLASS_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_ADDED_INTERFACE_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_CHANGED_CLASS_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_CHANGED_INTERFACE_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_REMOVED_CLASS_BOUND=Error
-TYPE_PARAMETER_ELEMENT_TYPE_REMOVED_INTERFACE_BOUND=Error
-UNUSED_PROBLEM_FILTERS=Warning
-automatically_removed_unused_problem_filters=false
-changed_execution_env=Error
-eclipse.preferences.version=1
-incompatible_api_component_version=Error
-incompatible_api_component_version_report_major_without_breaking_change=Error
-incompatible_api_component_version_report_minor_without_api_change=Error
-invalid_since_tag_version=Error
-malformed_since_tag=Error
-missing_since_tag=Error
-report_api_breakage_when_major_version_incremented=Disabled
-report_resolution_errors_api_component=Warning
+ANNOTATION_ELEMENT_TYPE_ADDED_FIELD=Error
+ANNOTATION_ELEMENT_TYPE_ADDED_METHOD_WITHOUT_DEFAULT_VALUE=Error
+ANNOTATION_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
+ANNOTATION_ELEMENT_TYPE_REMOVED_FIELD=Error
+ANNOTATION_ELEMENT_TYPE_REMOVED_METHOD=Error
+ANNOTATION_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
+API_COMPONENT_ELEMENT_TYPE_REMOVED_API_TYPE=Error
+API_COMPONENT_ELEMENT_TYPE_REMOVED_REEXPORTED_API_TYPE=Error
+API_COMPONENT_ELEMENT_TYPE_REMOVED_REEXPORTED_TYPE=Error
+API_COMPONENT_ELEMENT_TYPE_REMOVED_TYPE=Error
+API_USE_SCAN_FIELD_SEVERITY=Error
+API_USE_SCAN_METHOD_SEVERITY=Error
+API_USE_SCAN_TYPE_SEVERITY=Error
+CLASS_ELEMENT_TYPE_ADDED_FIELD=Error
+CLASS_ELEMENT_TYPE_ADDED_METHOD=Error
+CLASS_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
+CLASS_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
+CLASS_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
+CLASS_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
+CLASS_ELEMENT_TYPE_CHANGED_NON_ABSTRACT_TO_ABSTRACT=Error
+CLASS_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
+CLASS_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
+CLASS_ELEMENT_TYPE_REMOVED_CONSTRUCTOR=Error
+CLASS_ELEMENT_TYPE_REMOVED_FIELD=Error
+CLASS_ELEMENT_TYPE_REMOVED_METHOD=Error
+CLASS_ELEMENT_TYPE_REMOVED_SUPERCLASS=Error
+CLASS_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
+CLASS_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
+CONSTRUCTOR_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
+CONSTRUCTOR_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
+CONSTRUCTOR_ELEMENT_TYPE_CHANGED_VARARGS_TO_ARRAY=Error
+CONSTRUCTOR_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
+ENUM_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
+ENUM_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
+ENUM_ELEMENT_TYPE_REMOVED_ENUM_CONSTANT=Error
+ENUM_ELEMENT_TYPE_REMOVED_FIELD=Error
+ENUM_ELEMENT_TYPE_REMOVED_METHOD=Error
+ENUM_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
+FIELD_ELEMENT_TYPE_ADDED_VALUE=Error
+FIELD_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
+FIELD_ELEMENT_TYPE_CHANGED_FINAL_TO_NON_FINAL_STATIC_CONSTANT=Error
+FIELD_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
+FIELD_ELEMENT_TYPE_CHANGED_NON_STATIC_TO_STATIC=Error
+FIELD_ELEMENT_TYPE_CHANGED_STATIC_TO_NON_STATIC=Error
+FIELD_ELEMENT_TYPE_CHANGED_TYPE=Error
+FIELD_ELEMENT_TYPE_CHANGED_VALUE=Error
+FIELD_ELEMENT_TYPE_REMOVED_TYPE_ARGUMENT=Error
+FIELD_ELEMENT_TYPE_REMOVED_VALUE=Error
+ILLEGAL_EXTEND=Warning
+ILLEGAL_IMPLEMENT=Warning
+ILLEGAL_INSTANTIATE=Warning
+ILLEGAL_OVERRIDE=Warning
+ILLEGAL_REFERENCE=Warning
+INTERFACE_ELEMENT_TYPE_ADDED_DEFAULT_METHOD=Error
+INTERFACE_ELEMENT_TYPE_ADDED_FIELD=Error
+INTERFACE_ELEMENT_TYPE_ADDED_METHOD=Error
+INTERFACE_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
+INTERFACE_ELEMENT_TYPE_ADDED_SUPER_INTERFACE_WITH_METHODS=Error
+INTERFACE_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
+INTERFACE_ELEMENT_TYPE_CHANGED_CONTRACTED_SUPERINTERFACES_SET=Error
+INTERFACE_ELEMENT_TYPE_CHANGED_TYPE_CONVERSION=Error
+INTERFACE_ELEMENT_TYPE_REMOVED_FIELD=Error
+INTERFACE_ELEMENT_TYPE_REMOVED_METHOD=Error
+INTERFACE_ELEMENT_TYPE_REMOVED_TYPE_MEMBER=Error
+INTERFACE_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
+INVALID_ANNOTATION=Ignore
+INVALID_JAVADOC_TAG=Ignore
+INVALID_REFERENCE_IN_SYSTEM_LIBRARIES=Ignore
+LEAK_EXTEND=Warning
+LEAK_FIELD_DECL=Warning
+LEAK_IMPLEMENT=Warning
+LEAK_METHOD_PARAM=Warning
+LEAK_METHOD_RETURN_TYPE=Warning
+METHOD_ELEMENT_TYPE_ADDED_RESTRICTIONS=Error
+METHOD_ELEMENT_TYPE_ADDED_TYPE_PARAMETER=Error
+METHOD_ELEMENT_TYPE_CHANGED_DECREASE_ACCESS=Error
+METHOD_ELEMENT_TYPE_CHANGED_NON_ABSTRACT_TO_ABSTRACT=Error
+METHOD_ELEMENT_TYPE_CHANGED_NON_FINAL_TO_FINAL=Error
+METHOD_ELEMENT_TYPE_CHANGED_NON_STATIC_TO_STATIC=Error
+METHOD_ELEMENT_TYPE_CHANGED_STATIC_TO_NON_STATIC=Error
+METHOD_ELEMENT_TYPE_CHANGED_VARARGS_TO_ARRAY=Error
+METHOD_ELEMENT_TYPE_REMOVED_ANNOTATION_DEFAULT_VALUE=Error
+METHOD_ELEMENT_TYPE_REMOVED_TYPE_PARAMETER=Error
+MISSING_EE_DESCRIPTIONS=Warning
+TYPE_PARAMETER_ELEMENT_TYPE_ADDED_CLASS_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_ADDED_INTERFACE_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_CHANGED_CLASS_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_CHANGED_INTERFACE_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_REMOVED_CLASS_BOUND=Error
+TYPE_PARAMETER_ELEMENT_TYPE_REMOVED_INTERFACE_BOUND=Error
+UNUSED_PROBLEM_FILTERS=Warning
+automatically_removed_unused_problem_filters=false
+changed_execution_env=Error
+eclipse.preferences.version=1
+incompatible_api_component_version=Error
+incompatible_api_component_version_report_major_without_breaking_change=Error
+incompatible_api_component_version_report_minor_without_api_change=Error
+invalid_since_tag_version=Error
+malformed_since_tag=Error
+missing_since_tag=Error
+report_api_breakage_when_major_version_incremented=Disabled
+report_resolution_errors_api_component=Warning

原文件: ui/org.eclipse.pde.genericeditor.extension/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.genericeditor.extension/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.genericeditor.extension;singleton:=true
-Bundle-Version: 1.0.500.qualifier
+Bundle-Version: 1.0.600.qualifier
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.core.runtime,
  org.eclipse.jface.text,

原文件: ui/org.eclipse.pde.genericeditor.extension/pom.xml 
新文件: ui/org.eclipse.pde.genericeditor.extension/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.pde.ui</groupId>
   <artifactId>org.eclipse.pde.genericeditor.extension</artifactId>
-  <version>1.0.500-SNAPSHOT</version>
+  <version>1.0.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.pde.junit.runtime/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime/.settings/org.eclipse.jdt.core.prefs
位置:  -1,364 +1,364  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=error
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=false
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=false
-org.eclipse.jdt.core.formatter.comment.format_line_comments=false
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=false
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=false
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=true
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=800
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=true
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=false
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=error
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=false
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=false
+org.eclipse.jdt.core.formatter.comment.format_line_comments=false
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=false
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=false
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=true
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=800
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=true
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=false
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error

原文件: ui/org.eclipse.pde.junit.runtime/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.junit.runtime; singleton:=true
-Bundle-Version: 3.5.500.qualifier
+Bundle-Version: 3.5.600.qualifier
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.jdt.junit.runtime;bundle-version=

原文件: ui/org.eclipse.pde.junit.runtime/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.junit.runtime</artifactId>
-  <version>3.5.500-SNAPSHOT</version>
+  <version>3.5.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.pde.launching/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.launching/.settings/org.eclipse.jdt.core.prefs
位置:  -1,385 +1,385  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
-org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
-org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
-org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
-org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=error
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=return_tag
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
-org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
-org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
-org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=false
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=false
-org.eclipse.jdt.core.formatter.comment.format_line_comments=false
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=false
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=false
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=true
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=800
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=true
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=false
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=error
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=return_tag
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters=disabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=false
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=false
+org.eclipse.jdt.core.formatter.comment.format_line_comments=false
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=false
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=false
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=do not insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=true
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=800
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=true
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=false
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error

原文件: ui/org.eclipse.pde.launching/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.launching/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.launching;singleton:=true
-Bundle-Version: 3.7.700.qualifier
+Bundle-Version: 3.7.800.qualifier
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Bundle-Vendor: %provider-name
 Require-Bundle: org.eclipse.jdt.junit.core;bundle-version=

原文件: ui/org.eclipse.pde.launching/pom.xml 
新文件: ui/org.eclipse.pde.launching/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.launching</artifactId>
-  <version>3.7.700-SNAPSHOT</version>
+  <version>3.7.800-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <code.ignoredWarnings>-warn:-deprecation,unavoidableGenericProblems</code.ignoredWarnings>

原文件: ui/org.eclipse.pde.runtime/.project 
新文件: ui/org.eclipse.pde.runtime/.project
位置:  -1,34 +1,34  
-<?xml version=
-<projectDescription>
-	<name>org.eclipse.pde.runtime</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.ManifestBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.SchemaBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
-	</natures>
-</projectDescription>
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.pde.runtime</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.runtime/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.runtime/.settings/org.eclipse.jdt.core.prefs
位置:  -1,394 +1,394  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=error
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=disabled
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=return_tag
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=warning
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=120
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_on_off_tags=false
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
-org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=error
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTags=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=disabled
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription=return_tag
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=warning
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=120
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error
+org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter

原文件: ui/org.eclipse.pde.runtime/META-INF/p2.inf 
新文件: ui/org.eclipse.pde.runtime/META-INF/p2.inf
位置:  -1,42 +1,42  
-###############################################################################
-# Copyright (c) 2011 Wind River Systems, Inc. and others.
+###############################################################################
+# Copyright (c) 2011 Wind River Systems, Inc. and others.
 #
-# This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License 2.0
-# which accompanies this distribution, and is available at
+# This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License 2.0
+# which accompanies this distribution, and is available at
 # https://www.eclipse.org/legal/epl-2.0/
 #
-# SPDX-License-Identifier: EPL-2.0
-#
-# Contributors:
-# Martin Oberhuber (Wind River) - initial API and implementation
-###############################################################################
-
-# Instruct the p2 publisher that each of the optional dependencies in 
-# MANIFEST.MF should be non-greedy: use the dependencies when installed, but 
-# do not install them automatically. See also http://bugs.eclipse.org/351830   
-
-requires.0.namespace = osgi.bundle
-requires.0.name = org.eclipse.jdt.core
-requires.0.greedy = false
-requires.0.optional = true
-
-requires.1.namespace = osgi.bundle
-requires.1.name = org.eclipse.core.resources
-requires.1.greedy = false
-requires.1.optional = true
-
-requires.2.namespace = osgi.bundle
-requires.2.name = org.eclipse.jdt.ui
-requires.2.greedy = false
-requires.2.optional = true
-
-requires.3.namespace = osgi.bundle
-requires.3.name = org.eclipse.pde.ui
-requires.3.greedy = false
-requires.3.optional = true
-
-requires.4.namespace = osgi.bundle
-requires.4.name = org.eclipse.help
-requires.4.greedy = false
-requires.4.optional = true
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+# Martin Oberhuber (Wind River) - initial API and implementation
+###############################################################################
+
+# Instruct the p2 publisher that each of the optional dependencies in 
+# MANIFEST.MF should be non-greedy: use the dependencies when installed, but 
+# do not install them automatically. See also http://bugs.eclipse.org/351830   
+
+requires.0.namespace = osgi.bundle
+requires.0.name = org.eclipse.jdt.core
+requires.0.greedy = false
+requires.0.optional = true
+
+requires.1.namespace = osgi.bundle
+requires.1.name = org.eclipse.core.resources
+requires.1.greedy = false
+requires.1.optional = true
+
+requires.2.namespace = osgi.bundle
+requires.2.name = org.eclipse.jdt.ui
+requires.2.greedy = false
+requires.2.optional = true
+
+requires.3.namespace = osgi.bundle
+requires.3.name = org.eclipse.pde.ui
+requires.3.greedy = false
+requires.3.optional = true
+
+requires.4.namespace = osgi.bundle
+requires.4.name = org.eclipse.help
+requires.4.greedy = false
+requires.4.optional = true

原文件: ui/org.eclipse.pde.ui.templates.tests/.settings/org.eclipse.pde.prefs 
新文件: ui/org.eclipse.pde.ui.templates.tests/.settings/org.eclipse.pde.prefs
位置:  -1,34 +1,34  
-compilers.f.unresolved-features=1
-compilers.f.unresolved-plugins=1
-compilers.incompatible-environment=1
-compilers.p.build=1
-compilers.p.build.bin.includes=1
-compilers.p.build.encodings=2
-compilers.p.build.java.compiler=2
-compilers.p.build.java.compliance=1
-compilers.p.build.missing.output=1
-compilers.p.build.output.library=1
-compilers.p.build.source.library=1
-compilers.p.build.src.includes=1
-compilers.p.deprecated=2
-compilers.p.discouraged-class=1
-compilers.p.internal=1
-compilers.p.matching-pom-version=0
-compilers.p.missing-packages=2
-compilers.p.missing-version-export-package=2
-compilers.p.missing-version-import-package=2
-compilers.p.missing-version-require-bundle=2
-compilers.p.no-required-att=0
-compilers.p.not-externalized-att=2
-compilers.p.unknown-attribute=1
-compilers.p.unknown-class=1
-compilers.p.unknown-element=1
-compilers.p.unknown-identifier=1
-compilers.p.unknown-resource=1
-compilers.p.unresolved-ex-points=0
-compilers.p.unresolved-import=0
-compilers.s.create-docs=false
-compilers.s.doc-folder=doc
-compilers.s.open-tags=1
-compilers.use-project=true
-eclipse.preferences.version=1
+compilers.f.unresolved-features=1
+compilers.f.unresolved-plugins=1
+compilers.incompatible-environment=1
+compilers.p.build=1
+compilers.p.build.bin.includes=1
+compilers.p.build.encodings=2
+compilers.p.build.java.compiler=2
+compilers.p.build.java.compliance=1
+compilers.p.build.missing.output=1
+compilers.p.build.output.library=1
+compilers.p.build.source.library=1
+compilers.p.build.src.includes=1
+compilers.p.deprecated=2
+compilers.p.discouraged-class=1
+compilers.p.internal=1
+compilers.p.matching-pom-version=0
+compilers.p.missing-packages=2
+compilers.p.missing-version-export-package=2
+compilers.p.missing-version-import-package=2
+compilers.p.missing-version-require-bundle=2
+compilers.p.no-required-att=0
+compilers.p.not-externalized-att=2
+compilers.p.unknown-attribute=1
+compilers.p.unknown-class=1
+compilers.p.unknown-element=1
+compilers.p.unknown-identifier=1
+compilers.p.unknown-resource=1
+compilers.p.unresolved-ex-points=0
+compilers.p.unresolved-import=0
+compilers.s.create-docs=false
+compilers.s.doc-folder=doc
+compilers.s.open-tags=1
+compilers.use-project=true
+eclipse.preferences.version=1

原文件: ui/org.eclipse.pde.ui.templates.tests/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.templates.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Tests for PDE templates
 Bundle-SymbolicName: org.eclipse.pde.ui.templates.tests
-Bundle-Version: 1.0.500.qualifier
+Bundle-Version: 1.0.600.qualifier
 Bundle-Vendor: Eclipse.org
 Bundle-ClassPath: tests.jar
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: ui/org.eclipse.pde.ui.templates.tests/pom.xml 
新文件: ui/org.eclipse.pde.ui.templates.tests/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ui.templates.tests</artifactId>
-  <version>1.0.500-SNAPSHOT</version>
+  <version>1.0.600-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 
   <properties>

原文件: ui/org.eclipse.pde.ui.templates/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui.templates/.settings/org.eclipse.jdt.core.prefs
位置:  -1,406 +1,406  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
-org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
-org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
-org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
-org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=error
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=error
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
-org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
-org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=warning
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=warning
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=120
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_on_off_tags=false
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
-org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=error
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=error
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=warning
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=120
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error
+org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter

原文件: ui/org.eclipse.pde.ui.templates/templates_3.2/universalWelcome/$introDir$/css/sample.css 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.2/universalWelcome/$introDir$/css/sample.css
位置:  -1,3 +1,3  
-
-a#$linkId$ img { background-image : url(graphics/sample.gif); }
+
+a#$linkId$ img { background-image : url(graphics/sample.gif); }
 a#$linkId$:hover img { background-image : url(graphics/sample_hov.gif); }
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui.templates/templates_3.3/intro/content/root.css 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.3/intro/content/root.css
位置:  -1,28 +1,28  
-img {
-	width: 48px;
-	height: 48px;
-	vertical-align: middle;
-	}
-
-/* Give some space for main div.*/	
-.page-style {
-	text-align: center;
-	margin-top:100px;
-	}
-	
-/* satisfy Mozilla */	
-body > div.page-style {
-	padding-left:30%;
-	}
-
-
-#content {
-	text-align:left;
-	width:23em;
-	} 
-
-
-
-
-		
-
+img {
+	width: 48px;
+	height: 48px;
+	vertical-align: middle;
+	}
+
+/* Give some space for main div.*/	
+.page-style {
+	text-align: center;
+	margin-top:100px;
+	}
+	
+/* satisfy Mozilla */	
+body > div.page-style {
+	padding-left:30%;
+	}
+
+
+#content {
+	text-align:left;
+	width:23em;
+	} 
+
+
+
+
+		
+

原文件: ui/org.eclipse.pde.ui.templates/templates_3.3/intro/content/shared.css 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.3/intro/content/shared.css
位置:  -1,45 +1,45  
-/* Shared style applied to all pages */
-/* trick to get desired scroll bar behavior on all browsers */ 
-html {
-	overflow:auto;
-	border:0px;
-	height:100%;
-	}
-
-	
-body {	
-	margin-left:14px;
-	margin-top:10px;
-	font-family:Tahoma;
-	font-size: 12px;
-	color:#000000;
-	background-image:url(
-	background-repeat: repeat-x;
-	} 
-	
-h1 {
-	text-align:left;
-	font-size: 16pt;
-	font-weight:normal;
-	color:#E5E5E5;
-	} 
-
-h4 {
-	color:#787878;
-	}	
-	
-a {
-	display:block;
-	font-family:Tahoma;
-	font-size: 12px;
-	color:#000000;
-	font-weight:normal;
-	text-decoration:none;
-	padding-bottom:20px;
-	}
-	
-p {
-	padding-left:14px;
-	}
-	
-
+/* Shared style applied to all pages */
+/* trick to get desired scroll bar behavior on all browsers */ 
+html {
+	overflow:auto;
+	border:0px;
+	height:100%;
+	}
+
+	
+body {	
+	margin-left:14px;
+	margin-top:10px;
+	font-family:Tahoma;
+	font-size: 12px;
+	color:#000000;
+	background-image:url(
+	background-repeat: repeat-x;
+	} 
+	
+h1 {
+	text-align:left;
+	font-size: 16pt;
+	font-weight:normal;
+	color:#E5E5E5;
+	} 
+
+h4 {
+	color:#787878;
+	}	
+	
+a {
+	display:block;
+	font-family:Tahoma;
+	font-size: 12px;
+	color:#000000;
+	font-weight:normal;
+	text-decoration:none;
+	padding-bottom:20px;
+	}
+	
+p {
+	padding-left:14px;
+	}
+	
+

原文件: ui/org.eclipse.pde.ui.tests.smartimport/.settings/org.eclipse.core.runtime.prefs 
新文件: ui/org.eclipse.pde.ui.tests.smartimport/.settings/org.eclipse.core.runtime.prefs
位置:  -1,2 +1,2  
-eclipse.preferences.version=1
-line.separator=\n
+eclipse.preferences.version=1
+line.separator=\n

原文件: ui/org.eclipse.pde.ui.tests/.settings/org.eclipse.pde.prefs 
新文件: ui/org.eclipse.pde.ui.tests/.settings/org.eclipse.pde.prefs
位置:  -1,34 +1,34  
-compilers.f.unresolved-features=1
-compilers.f.unresolved-plugins=1
-compilers.incompatible-environment=1
-compilers.p.build=1
-compilers.p.build.bin.includes=1
-compilers.p.build.encodings=2
-compilers.p.build.java.compiler=2
-compilers.p.build.java.compliance=1
-compilers.p.build.missing.output=1
-compilers.p.build.output.library=1
-compilers.p.build.source.library=1
-compilers.p.build.src.includes=1
-compilers.p.deprecated=2
-compilers.p.discouraged-class=1
-compilers.p.internal=1
-compilers.p.matching-pom-version=0
-compilers.p.missing-packages=2
-compilers.p.missing-version-export-package=2
-compilers.p.missing-version-import-package=2
-compilers.p.missing-version-require-bundle=2
-compilers.p.no-required-att=0
-compilers.p.not-externalized-att=2
-compilers.p.unknown-attribute=1
-compilers.p.unknown-class=1
-compilers.p.unknown-element=1
-compilers.p.unknown-identifier=1
-compilers.p.unknown-resource=1
-compilers.p.unresolved-ex-points=0
-compilers.p.unresolved-import=0
-compilers.s.create-docs=false
-compilers.s.doc-folder=doc
-compilers.s.open-tags=1
-compilers.use-project=true
-eclipse.preferences.version=1
+compilers.f.unresolved-features=1
+compilers.f.unresolved-plugins=1
+compilers.incompatible-environment=1
+compilers.p.build=1
+compilers.p.build.bin.includes=1
+compilers.p.build.encodings=2
+compilers.p.build.java.compiler=2
+compilers.p.build.java.compliance=1
+compilers.p.build.missing.output=1
+compilers.p.build.output.library=1
+compilers.p.build.source.library=1
+compilers.p.build.src.includes=1
+compilers.p.deprecated=2
+compilers.p.discouraged-class=1
+compilers.p.internal=1
+compilers.p.matching-pom-version=0
+compilers.p.missing-packages=2
+compilers.p.missing-version-export-package=2
+compilers.p.missing-version-import-package=2
+compilers.p.missing-version-require-bundle=2
+compilers.p.no-required-att=0
+compilers.p.not-externalized-att=2
+compilers.p.unknown-attribute=1
+compilers.p.unknown-class=1
+compilers.p.unknown-element=1
+compilers.p.unknown-identifier=1
+compilers.p.unknown-resource=1
+compilers.p.unresolved-ex-points=0
+compilers.p.unresolved-import=0
+compilers.s.create-docs=false
+compilers.s.doc-folder=doc
+compilers.s.open-tags=1
+compilers.use-project=true
+eclipse.preferences.version=1

原文件: ui/org.eclipse.pde.ui.tests/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: PDE JUnit Tests
 Bundle-SymbolicName: org.eclipse.pde.ui.tests; singleton:=true
-Bundle-Version: 3.10.600.qualifier
+Bundle-Version: 3.10.700.qualifier
 Bundle-ClassPath: tests.jar
 Bundle-Activator: org.eclipse.pde.ui.tests.PDETestsPlugin
 Bundle-Vendor: Eclipse.org

原文件: ui/org.eclipse.pde.ui.tests/pom.xml 
新文件: ui/org.eclipse.pde.ui.tests/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ui.tests</artifactId>
-  <version>3.10.600-SNAPSHOT</version>
+  <version>3.10.700-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 
   <properties>

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/runtime/AbstractRegistryModelTest.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/runtime/AbstractRegistryModelTest.java
位置:  -1,297 +1,297  
-/*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2008, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.ui.tests.runtime;
-
-import java.net.URISyntaxException;
-import java.util.EventListener;
-import junit.framework.TestCase;
-import org.eclipse.core.runtime.*;
-import org.eclipse.pde.internal.runtime.registry.model.*;
-import org.eclipse.pde.internal.runtime.registry.model.Bundle;
-import org.eclipse.pde.internal.runtime.registry.model.ServiceRegistration;
-import org.eclipse.pde.ui.tests.PDETestsPlugin;
-import org.osgi.framework.*;
-
-public abstract class AbstractRegistryModelTest extends TestCase implements ModelChangeListener  {
-
-	public static class MockFramework {
-		private EventListener listener;
-
-		public void createBundleEvent(int type, org.osgi.framework.Bundle bundle) {
-			assertTrue(listener instanceof BundleListener);
-			((BundleListener)listener).bundleChanged(new BundleEvent(type, bundle));
-		}
-
-		public void createRegistryAddedEvent(IExtension[] ext) {
-			assertTrue(listener instanceof IRegistryEventListener);
-			((IRegistryEventListener)listener).added(ext);
-		}
-
-		public void createRegistryRemovedEvent(IExtension[] ext) {
-			assertTrue(listener instanceof IRegistryEventListener);
-			((IRegistryEventListener)listener).removed(ext);
-		}
-
-		public void createRegistryAddedEvent(IExtensionPoint[] ext) {
-			assertTrue(listener instanceof IRegistryEventListener);
-			((IRegistryEventListener)listener).added(ext);
-		}
-
-		public void createRegistryRemovedEvent(IExtensionPoint[] ext) {
-			assertTrue(listener instanceof IRegistryEventListener);
-			((IRegistryEventListener)listener).removed(ext);
-		}
-
-		public void createServiceEvent(int type, ServiceReference<?> ref) {
-			assertTrue(listener instanceof ServiceListener);
-			((ServiceListener)listener).serviceChanged(new ServiceEvent(type, ref));
-		}
-
-		public void setListener(EventListener listener) {
-			this.listener = listener;
-		}
-	}
-
-	public static final String TEST_EXT_POINT = 
-	public static final String TEST_EXT_POINT_BUNDLE = 
-
-	protected MockFramework mockFramework = new MockFramework();
-
-	protected org.osgi.framework.Bundle testBundle;
-	protected ServiceReference<?> testServiceReference;
-
-	protected IExtensionPoint testExtPoint;
-	protected org.osgi.framework.Bundle testExtPointBundle;
-
-	protected RegistryModel model;
-
-	protected ModelChangeDelta[] deltas;
-
-	@Override
-	public void modelChanged(ModelChangeDelta[] deltas) {
-		this.deltas = deltas;
-	}
-
-	abstract protected RegistryModel createModel() throws URISyntaxException;
-
-	public AbstractRegistryModelTest() {
-		testBundle = PDETestsPlugin.getBundleContext().getBundle();
-		org.osgi.framework.ServiceRegistration<?> registration = PDETestsPlugin.getBundleContext()
-				.registerService(getClass().getName(), this, null);
-		testServiceReference = registration.getReference();
-
-		testExtPoint = Platform.getExtensionRegistry().getExtensionPoint(TEST_EXT_POINT);
-		testExtPointBundle = Platform.getBundle(TEST_EXT_POINT_BUNDLE);
-	}
-
-	@Override
-	protected void setUp() throws Exception {
-		model = createModel();
-		model.connect(new NullProgressMonitor(), false);
-
-		deltas = new ModelChangeDelta[0];
-		model.addModelChangeListener(this);
-	}
-
-	@Override
-	protected void tearDown() {
-		model.removeModelChangeListener(this);
-		model.disconnect();
-	}
-
-	/**
-	 * Verifies that model provides correct list of installed bundles
-	 */
-	public void testInstalledBundles() {
-		org.osgi.framework.Bundle[] origBundles = PDETestsPlugin.getBundleContext().getBundles();
-		model.initialize(new NullProgressMonitor());
-		Bundle[] bundles = model.getBundles();
-
-		assertEquals(origBundles.length, bundles.length);
-	}
-
-	public void testBundleInstalled() {
-		mockFramework.createBundleEvent(BundleEvent.INSTALLED, testBundle);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Bundle);
-		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
-		assertEquals(ModelChangeDelta.ADDED, deltas[0].getFlag());
-	}
-
-	public void testBundleStartedEvent() {
-		mockFramework.createBundleEvent(BundleEvent.STARTED, testBundle);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Bundle);
-		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
-		assertEquals(ModelChangeDelta.STARTED, deltas[0].getFlag());
-	}
-
-	public void testBundleStoppedEvent() {
-		mockFramework.createBundleEvent(BundleEvent.STOPPED, testBundle);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Bundle);
-		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
-		assertEquals(ModelChangeDelta.STOPPED, deltas[0].getFlag());
-	}
-
-	public void testBundleUpdatedEvent() {
-		mockFramework.createBundleEvent(BundleEvent.UPDATED, testBundle);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Bundle);
-		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
-		assertEquals(ModelChangeDelta.UPDATED, deltas[0].getFlag());
-	}
-
-	public void testBundleUninstalledEvent() {
-		mockFramework.createBundleEvent(BundleEvent.UNINSTALLED, testBundle);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Bundle);
-		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
-		assertEquals(ModelChangeDelta.REMOVED, deltas[0].getFlag());
-	}
-
-	public void testBundleResolvedEvent() {
-		mockFramework.createBundleEvent(BundleEvent.RESOLVED, testBundle);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Bundle);
-		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
-		assertEquals(ModelChangeDelta.RESOLVED, deltas[0].getFlag());
-	}
-
-	public void testBundleUnresolvedEvent() {
-		mockFramework.createBundleEvent(BundleEvent.UNRESOLVED, testBundle);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Bundle);
-		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
-		assertEquals(ModelChangeDelta.UNRESOLVED, deltas[0].getFlag());
-	}
-
-	public void testBundleStartingEvent() {
-		mockFramework.createBundleEvent(BundleEvent.STARTING, testBundle);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Bundle);
-		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
-		assertEquals(ModelChangeDelta.STARTING, deltas[0].getFlag());
-	}
-
-	public void testBundleStoppingEvent() {
-		mockFramework.createBundleEvent(BundleEvent.STOPPING, testBundle);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Bundle);
-		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
-		assertEquals(ModelChangeDelta.STOPPING, deltas[0].getFlag());
-	}
-
-	public void testServiceRegisteredEvent() {
-		mockFramework.createServiceEvent(ServiceEvent.REGISTERED, testServiceReference);
-
-		assertEquals(2, deltas.length);
-		ModelChangeDelta delta = deltas[0];
-		assertTrue(delta.getModelObject() instanceof ServiceName);
-		assertEquals(getClass().getName(), ((ServiceName)delta.getModelObject()).getClasses()[0]);
-		assertEquals(ModelChangeDelta.ADDED, delta.getFlag());
-
-		delta = deltas[1];
-		assertTrue(delta.getModelObject() instanceof ServiceRegistration);
-		assertEquals(getClass().getName(), ((ServiceRegistration)delta.getModelObject()).getName().getClasses()[0]);
-		assertEquals(ModelChangeDelta.ADDED, delta.getFlag());
-	}
-
-	public void testServiceUnregisteringEvent() {
-		mockFramework.createServiceEvent(ServiceEvent.UNREGISTERING, testServiceReference);
-
-		assertEquals(2, deltas.length);
-		ModelChangeDelta delta = deltas[0];
-		assertTrue(delta.getModelObject() instanceof ServiceName);
-		assertEquals(getClass().getName(), ((ServiceName)delta.getModelObject()).getClasses()[0]);
-		assertEquals(ModelChangeDelta.REMOVED, delta.getFlag());
-
-		delta = deltas[1];
-		assertTrue(delta.getModelObject() instanceof ServiceRegistration);
-		assertEquals(getClass().getName(), ((ServiceRegistration)delta.getModelObject()).getName().getClasses()[0]);
-		assertEquals(ModelChangeDelta.REMOVED, delta.getFlag());
-	}
-
-	public void testServiceModifiedEvent() {
-		mockFramework.createServiceEvent(ServiceEvent.MODIFIED, testServiceReference);
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof ServiceRegistration);
-		assertEquals(getClass().getName(), ((ServiceRegistration)deltas[0].getModelObject()).getName().getClasses()[0]);
-		assertEquals(ModelChangeDelta.UPDATED, deltas[0].getFlag());
-	}
-
-	public void testExtensionAddedEvent() {
-		mockFramework.createRegistryAddedEvent(new IExtensionPoint[] {testExtPoint});
-
-		IExtension ext = testExtPoint.getExtensions()[0];
-
-		mockFramework.createRegistryAddedEvent(new IExtension[] {ext});
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Extension);
-		assertEquals(ext.getLabel(), ((Extension)deltas[0].getModelObject()).getLabel());
-		assertEquals(ext.getExtensionPointUniqueIdentifier(), ((Extension)deltas[0].getModelObject()).getExtensionPointUniqueIdentifier());
-		assertEquals(ext.getNamespaceIdentifier(), ((Extension)deltas[0].getModelObject()).getNamespaceIdentifier());
-		assertEquals(ModelChangeDelta.ADDED, deltas[0].getFlag());
-	}
-
-	public void testExtensionRemovedEvent() {
-		mockFramework.createRegistryAddedEvent(new IExtensionPoint[] {testExtPoint});
-
-		IExtension ext = testExtPoint.getExtensions()[0];
-
-		mockFramework.createRegistryRemovedEvent(new IExtension[] {ext});
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof Extension);
-		Extension modelObject = ((Extension)deltas[0].getModelObject());
-		assertEquals(ext.getLabel(), modelObject.getLabel());
-		assertEquals(ext.getExtensionPointUniqueIdentifier(), modelObject.getExtensionPointUniqueIdentifier());
-		assertEquals(ext.getNamespaceIdentifier(), modelObject.getNamespaceIdentifier());
-		assertEquals(ModelChangeDelta.REMOVED, deltas[0].getFlag());
-	}
-
-	public void testExtensionPointAddedEvent() {
-		mockFramework.createRegistryAddedEvent(new IExtensionPoint[] {testExtPoint});
-
-		assertEquals(1, deltas.length);
-		assertTrue(deltas[0].getModelObject() instanceof ExtensionPoint);
-
-		ExtensionPoint modelObject = ((ExtensionPoint)deltas[0].getModelObject());
-		assertEquals(testExtPoint.getLabel(), modelObject.getLabel());
-		assertEquals(testExtPoint.getNamespaceIdentifier(), modelObject.getNamespaceIdentifier());
-		assertEquals(testExtPoint.getUniqueIdentifier(), modelObject.getUniqueIdentifier());
-		assertEquals(ModelChangeDelta.ADDED, deltas[0].getFlag());
-	}
-
-	public void testExtensionPointRemovedEvent() {
-		mockFramework.createRegistryRemovedEvent(new IExtensionPoint[] {testExtPoint});
-
-		ExtensionPoint modelObject = ((ExtensionPoint)deltas[0].getModelObject());
-		assertEquals(testExtPoint.getLabel(), modelObject.getLabel());
-		assertEquals(testExtPoint.getNamespaceIdentifier(), modelObject.getNamespaceIdentifier());
-		assertEquals(testExtPoint.getUniqueIdentifier(), modelObject.getUniqueIdentifier());
-		assertEquals(ModelChangeDelta.REMOVED, deltas[0].getFlag());
-	}
-}
+package org.eclipse.pde.ui.tests.runtime;
+
+import java.net.URISyntaxException;
+import java.util.EventListener;
+import junit.framework.TestCase;
+import org.eclipse.core.runtime.*;
+import org.eclipse.pde.internal.runtime.registry.model.*;
+import org.eclipse.pde.internal.runtime.registry.model.Bundle;
+import org.eclipse.pde.internal.runtime.registry.model.ServiceRegistration;
+import org.eclipse.pde.ui.tests.PDETestsPlugin;
+import org.osgi.framework.*;
+
+public abstract class AbstractRegistryModelTest extends TestCase implements ModelChangeListener  {
+
+	public static class MockFramework {
+		private EventListener listener;
+
+		public void createBundleEvent(int type, org.osgi.framework.Bundle bundle) {
+			assertTrue(listener instanceof BundleListener);
+			((BundleListener)listener).bundleChanged(new BundleEvent(type, bundle));
+		}
+
+		public void createRegistryAddedEvent(IExtension[] ext) {
+			assertTrue(listener instanceof IRegistryEventListener);
+			((IRegistryEventListener)listener).added(ext);
+		}
+
+		public void createRegistryRemovedEvent(IExtension[] ext) {
+			assertTrue(listener instanceof IRegistryEventListener);
+			((IRegistryEventListener)listener).removed(ext);
+		}
+
+		public void createRegistryAddedEvent(IExtensionPoint[] ext) {
+			assertTrue(listener instanceof IRegistryEventListener);
+			((IRegistryEventListener)listener).added(ext);
+		}
+
+		public void createRegistryRemovedEvent(IExtensionPoint[] ext) {
+			assertTrue(listener instanceof IRegistryEventListener);
+			((IRegistryEventListener)listener).removed(ext);
+		}
+
+		public void createServiceEvent(int type, ServiceReference<?> ref) {
+			assertTrue(listener instanceof ServiceListener);
+			((ServiceListener)listener).serviceChanged(new ServiceEvent(type, ref));
+		}
+
+		public void setListener(EventListener listener) {
+			this.listener = listener;
+		}
+	}
+
+	public static final String TEST_EXT_POINT = 
+	public static final String TEST_EXT_POINT_BUNDLE = 
+
+	protected MockFramework mockFramework = new MockFramework();
+
+	protected org.osgi.framework.Bundle testBundle;
+	protected ServiceReference<?> testServiceReference;
+
+	protected IExtensionPoint testExtPoint;
+	protected org.osgi.framework.Bundle testExtPointBundle;
+
+	protected RegistryModel model;
+
+	protected ModelChangeDelta[] deltas;
+
+	@Override
+	public void modelChanged(ModelChangeDelta[] deltas) {
+		this.deltas = deltas;
+	}
+
+	abstract protected RegistryModel createModel() throws URISyntaxException;
+
+	public AbstractRegistryModelTest() {
+		testBundle = PDETestsPlugin.getBundleContext().getBundle();
+		org.osgi.framework.ServiceRegistration<?> registration = PDETestsPlugin.getBundleContext()
+				.registerService(getClass().getName(), this, null);
+		testServiceReference = registration.getReference();
+
+		testExtPoint = Platform.getExtensionRegistry().getExtensionPoint(TEST_EXT_POINT);
+		testExtPointBundle = Platform.getBundle(TEST_EXT_POINT_BUNDLE);
+	}
+
+	@Override
+	protected void setUp() throws Exception {
+		model = createModel();
+		model.connect(new NullProgressMonitor(), false);
+
+		deltas = new ModelChangeDelta[0];
+		model.addModelChangeListener(this);
+	}
+
+	@Override
+	protected void tearDown() {
+		model.removeModelChangeListener(this);
+		model.disconnect();
+	}
+
+	/**
+	 * Verifies that model provides correct list of installed bundles
+	 */
+	public void testInstalledBundles() {
+		org.osgi.framework.Bundle[] origBundles = PDETestsPlugin.getBundleContext().getBundles();
+		model.initialize(new NullProgressMonitor());
+		Bundle[] bundles = model.getBundles();
+
+		assertEquals(origBundles.length, bundles.length);
+	}
+
+	public void testBundleInstalled() {
+		mockFramework.createBundleEvent(BundleEvent.INSTALLED, testBundle);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Bundle);
+		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
+		assertEquals(ModelChangeDelta.ADDED, deltas[0].getFlag());
+	}
+
+	public void testBundleStartedEvent() {
+		mockFramework.createBundleEvent(BundleEvent.STARTED, testBundle);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Bundle);
+		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
+		assertEquals(ModelChangeDelta.STARTED, deltas[0].getFlag());
+	}
+
+	public void testBundleStoppedEvent() {
+		mockFramework.createBundleEvent(BundleEvent.STOPPED, testBundle);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Bundle);
+		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
+		assertEquals(ModelChangeDelta.STOPPED, deltas[0].getFlag());
+	}
+
+	public void testBundleUpdatedEvent() {
+		mockFramework.createBundleEvent(BundleEvent.UPDATED, testBundle);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Bundle);
+		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
+		assertEquals(ModelChangeDelta.UPDATED, deltas[0].getFlag());
+	}
+
+	public void testBundleUninstalledEvent() {
+		mockFramework.createBundleEvent(BundleEvent.UNINSTALLED, testBundle);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Bundle);
+		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
+		assertEquals(ModelChangeDelta.REMOVED, deltas[0].getFlag());
+	}
+
+	public void testBundleResolvedEvent() {
+		mockFramework.createBundleEvent(BundleEvent.RESOLVED, testBundle);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Bundle);
+		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
+		assertEquals(ModelChangeDelta.RESOLVED, deltas[0].getFlag());
+	}
+
+	public void testBundleUnresolvedEvent() {
+		mockFramework.createBundleEvent(BundleEvent.UNRESOLVED, testBundle);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Bundle);
+		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
+		assertEquals(ModelChangeDelta.UNRESOLVED, deltas[0].getFlag());
+	}
+
+	public void testBundleStartingEvent() {
+		mockFramework.createBundleEvent(BundleEvent.STARTING, testBundle);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Bundle);
+		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
+		assertEquals(ModelChangeDelta.STARTING, deltas[0].getFlag());
+	}
+
+	public void testBundleStoppingEvent() {
+		mockFramework.createBundleEvent(BundleEvent.STOPPING, testBundle);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Bundle);
+		assertEquals(testBundle.getSymbolicName(), ((Bundle)deltas[0].getModelObject()).getSymbolicName());
+		assertEquals(ModelChangeDelta.STOPPING, deltas[0].getFlag());
+	}
+
+	public void testServiceRegisteredEvent() {
+		mockFramework.createServiceEvent(ServiceEvent.REGISTERED, testServiceReference);
+
+		assertEquals(2, deltas.length);
+		ModelChangeDelta delta = deltas[0];
+		assertTrue(delta.getModelObject() instanceof ServiceName);
+		assertEquals(getClass().getName(), ((ServiceName)delta.getModelObject()).getClasses()[0]);
+		assertEquals(ModelChangeDelta.ADDED, delta.getFlag());
+
+		delta = deltas[1];
+		assertTrue(delta.getModelObject() instanceof ServiceRegistration);
+		assertEquals(getClass().getName(), ((ServiceRegistration)delta.getModelObject()).getName().getClasses()[0]);
+		assertEquals(ModelChangeDelta.ADDED, delta.getFlag());
+	}
+
+	public void testServiceUnregisteringEvent() {
+		mockFramework.createServiceEvent(ServiceEvent.UNREGISTERING, testServiceReference);
+
+		assertEquals(2, deltas.length);
+		ModelChangeDelta delta = deltas[0];
+		assertTrue(delta.getModelObject() instanceof ServiceName);
+		assertEquals(getClass().getName(), ((ServiceName)delta.getModelObject()).getClasses()[0]);
+		assertEquals(ModelChangeDelta.REMOVED, delta.getFlag());
+
+		delta = deltas[1];
+		assertTrue(delta.getModelObject() instanceof ServiceRegistration);
+		assertEquals(getClass().getName(), ((ServiceRegistration)delta.getModelObject()).getName().getClasses()[0]);
+		assertEquals(ModelChangeDelta.REMOVED, delta.getFlag());
+	}
+
+	public void testServiceModifiedEvent() {
+		mockFramework.createServiceEvent(ServiceEvent.MODIFIED, testServiceReference);
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof ServiceRegistration);
+		assertEquals(getClass().getName(), ((ServiceRegistration)deltas[0].getModelObject()).getName().getClasses()[0]);
+		assertEquals(ModelChangeDelta.UPDATED, deltas[0].getFlag());
+	}
+
+	public void testExtensionAddedEvent() {
+		mockFramework.createRegistryAddedEvent(new IExtensionPoint[] {testExtPoint});
+
+		IExtension ext = testExtPoint.getExtensions()[0];
+
+		mockFramework.createRegistryAddedEvent(new IExtension[] {ext});
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Extension);
+		assertEquals(ext.getLabel(), ((Extension)deltas[0].getModelObject()).getLabel());
+		assertEquals(ext.getExtensionPointUniqueIdentifier(), ((Extension)deltas[0].getModelObject()).getExtensionPointUniqueIdentifier());
+		assertEquals(ext.getNamespaceIdentifier(), ((Extension)deltas[0].getModelObject()).getNamespaceIdentifier());
+		assertEquals(ModelChangeDelta.ADDED, deltas[0].getFlag());
+	}
+
+	public void testExtensionRemovedEvent() {
+		mockFramework.createRegistryAddedEvent(new IExtensionPoint[] {testExtPoint});
+
+		IExtension ext = testExtPoint.getExtensions()[0];
+
+		mockFramework.createRegistryRemovedEvent(new IExtension[] {ext});
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof Extension);
+		Extension modelObject = ((Extension)deltas[0].getModelObject());
+		assertEquals(ext.getLabel(), modelObject.getLabel());
+		assertEquals(ext.getExtensionPointUniqueIdentifier(), modelObject.getExtensionPointUniqueIdentifier());
+		assertEquals(ext.getNamespaceIdentifier(), modelObject.getNamespaceIdentifier());
+		assertEquals(ModelChangeDelta.REMOVED, deltas[0].getFlag());
+	}
+
+	public void testExtensionPointAddedEvent() {
+		mockFramework.createRegistryAddedEvent(new IExtensionPoint[] {testExtPoint});
+
+		assertEquals(1, deltas.length);
+		assertTrue(deltas[0].getModelObject() instanceof ExtensionPoint);
+
+		ExtensionPoint modelObject = ((ExtensionPoint)deltas[0].getModelObject());
+		assertEquals(testExtPoint.getLabel(), modelObject.getLabel());
+		assertEquals(testExtPoint.getNamespaceIdentifier(), modelObject.getNamespaceIdentifier());
+		assertEquals(testExtPoint.getUniqueIdentifier(), modelObject.getUniqueIdentifier());
+		assertEquals(ModelChangeDelta.ADDED, deltas[0].getFlag());
+	}
+
+	public void testExtensionPointRemovedEvent() {
+		mockFramework.createRegistryRemovedEvent(new IExtensionPoint[] {testExtPoint});
+
+		ExtensionPoint modelObject = ((ExtensionPoint)deltas[0].getModelObject());
+		assertEquals(testExtPoint.getLabel(), modelObject.getLabel());
+		assertEquals(testExtPoint.getNamespaceIdentifier(), modelObject.getNamespaceIdentifier());
+		assertEquals(testExtPoint.getUniqueIdentifier(), modelObject.getUniqueIdentifier());
+		assertEquals(ModelChangeDelta.REMOVED, deltas[0].getFlag());
+	}
+}

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/runtime/TestUtils.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/runtime/TestUtils.java
位置:  -1,294 +1,294  
-/*******************************************************************************
- * Copyright (c) 2008, 2017 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *     Stefan Xenos (Google) - Initial implementation
- *     Andrey Loskutov (loskutov@gmx.de) - many different extensions
- *******************************************************************************/
-package org.eclipse.pde.ui.tests.runtime;
-
-import java.lang.management.ManagementFactory;
-import java.lang.management.ThreadInfo;
-import java.util.*;
-import java.util.function.Function;
-import junit.framework.AssertionFailedError;
-import junit.framework.TestCase;
-import org.eclipse.core.runtime.*;
-import org.eclipse.core.runtime.jobs.Job;
-import org.eclipse.pde.ui.tests.PDETestsPlugin;
-import org.eclipse.swt.widgets.Display;
-import org.junit.Assert;
-
-/**
- * Utility methods for JUnit tests.
- */
-public class TestUtils {
-	public static IExtensionPoint getExtensionPoint(String extensionPointId) {
-		return Platform.getExtensionRegistry().getExtensionPoint(extensionPointId);
-	}
-
-	public static IExtension getExtension(String extensionId) {
-		return Platform.getExtensionRegistry().getExtension(extensionId);
-	}
-
-	public static String findPath(String path) {
-		return FileLocator.find(PDETestsPlugin.getBundleContext().getBundle(), new Path(path), Collections.EMPTY_MAP).toString();
-	}
-
-	/**
-	 * Call this in the tearDown method of every test to clean up state that can
-	 * otherwise leak through SWT between tests.
-	 */
-	public static void cleanUp(String owner) {
-		// Ensure that the Thread.interrupted() flag didn't leak.
-		Assert.assertFalse(
-
-		// Wait for any outstanding jobs to finish. Protect against deadlock by
-		// terminating the wait after a timeout.
-		boolean timedOut = waitForJobs(owner, 5, 5000);
-		if (timedOut) {
-			// We don't expect any extra jobs run during the test: try to cancel
-			// them
-			log(IStatus.INFO, owner, 
-			getRunningOrWaitingJobs(null).forEach(job -> job.cancel());
-			waitForJobs(owner, 5, 1000);
-		}
-
-		// Ensure that the Thread.interrupted() flag didn't leak.
-		Assert.assertFalse(
-	}
-
-	public static void log(int severity, String owner, String message, Throwable... optionalError) {
-		message = 
-		Throwable error = null;
-		if (optionalError != null &amp;&amp; optionalError.length > 0) {
-			error = optionalError[0];
-		}
-		Status status = new Status(severity, PDETestsPlugin.getDefault().getBundle().getSymbolicName(), message, error);
-		PDETestsPlugin.getDefault().getLog().log(status);
-	}
-
-	/**
-	 * Process all queued UI events. If called from background thread, does
-	 * nothing.
-	 */
-	public static void processUIEvents() {
-		Display display = Display.getCurrent();
-		if (display != null &amp;&amp; !display.isDisposed()) {
-			while (display.readAndDispatch()) {
-				// Keep pumping events until the queue is empty
-			}
-		}
-	}
-
-	/**
-	 * Process all queued UI events. If called from background thread, just
-	 * waits
-	 *
-	 * @param millis
-	 *            max wait time to process events
-	 */
-	public static void processUIEvents(final long millis) throws Exception {
-		long start = System.currentTimeMillis();
-		while (System.currentTimeMillis() - start < millis) {
-			Display display = Display.getCurrent();
-			if (display != null &amp;&amp; !display.isDisposed()) {
-				while (display.readAndDispatch()) {
-					// loop until the queue is empty
-				}
-			} else {
-				Thread.sleep(10);
-			}
-		}
-	}
-
-	/**
-	 * Waits while given condition is {@code true} for a given amount of
-	 * milliseconds. If the actual wait time exceeds given timeout and condition
-	 * will be still {@code true}, throws {@link AssertionFailedError} with
-	 * given message.
-	 * <p>
-	 * Will process UI events while waiting in UI thread, if called from
-	 * background thread, just waits.
-	 *
-	 * @param <T>
-	 *            type of the context
-	 * @param context
-	 *            test context
-	 * @param condition
-	 *            function which will be evaluated while waiting
-	 * @param timeout
-	 *            max wait time in milliseconds to wait on given condition
-	 * @param errorMessage
-	 *            message which will be used to construct the failure exception
-	 *            in case the condition will still return {@code true} after
-	 *            given timeout
-	 */
-	public static <T> void waitWhile(Function<T, Boolean> condition, T context, long timeout,
-			Function<T, String> errorMessage) throws Exception {
-		long start = System.currentTimeMillis();
-		Display display = Display.getCurrent();
-		while (System.currentTimeMillis() - start < timeout &amp;&amp; condition.apply(context)) {
-			if (display != null &amp;&amp; !display.isDisposed()) {
-				if (!display.readAndDispatch()) {
-					Thread.sleep(0);
-				}
-			} else {
-				Thread.sleep(5);
-			}
-		}
-		Boolean stillTrue = condition.apply(context);
-		if (stillTrue) {
-			TestCase.fail(errorMessage.apply(context));
-		}
-	}
-
-	/**
-	 * Utility for waiting until the execution of jobs of any family has
-	 * finished or timeout is reached. If no jobs are running, the method waits
-	 * given minimum wait time. While this method is waiting for jobs, UI events
-	 * are processed.
-	 *
-	 * @param owner
-	 *            name of the caller which will be logged as prefix if the wait
-	 *            times out
-	 * @param minTimeMs
-	 *            minimum wait time in milliseconds
-	 * @param maxTimeMs
-	 *            maximum wait time in milliseconds
-	 * @return true if the method timed out, false if all the jobs terminated
-	 *         before the timeout
-	 */
-	public static boolean waitForJobs(String owner, long minTimeMs, long maxTimeMs) {
-		return waitForJobs(owner, minTimeMs, maxTimeMs, (Object[]) null);
-	}
-
-	/**
-	 * Utility for waiting until the execution of jobs of any family has
-	 * finished or timeout is reached. If no jobs are running, the method waits
-	 * given minimum wait time. While this method is waiting for jobs, UI events
-	 * are processed.
-	 *
-	 * @param owner
-	 *            name of the caller which will be logged as prefix if the wait
-	 *            times out
-	 * @param minTimeMs
-	 *            minimum wait time in milliseconds
-	 * @param maxTimeMs
-	 *            maximum wait time in milliseconds
-	 * @param excludedFamilies
-	 *            optional list of job families to NOT wait for
-	 *
-	 * @return true if the method timed out, false if all the jobs terminated
-	 *         before the timeout
-	 */
-	public static boolean waitForJobs(String owner, long minTimeMs, long maxTimeMs, Object... excludedFamilies) {
-		if (maxTimeMs < minTimeMs) {
-			throw new IllegalArgumentException(
-		}
-		final long start = System.currentTimeMillis();
-		while (System.currentTimeMillis() - start < minTimeMs) {
-			processUIEvents();
-			try {
-				Thread.sleep(Math.min(10, minTimeMs));
-			} catch (InterruptedException e) {
-				// Uninterruptable
-			}
-		}
-		while (!Job.getJobManager().isIdle()) {
-			List<Job> jobs = getRunningOrWaitingJobs(null, excludedFamilies);
-			if (jobs.isEmpty()) {
-				// only uninteresting jobs running
-				break;
-			}
-
-			if (!Collections.disjoint(runningJobs, jobs)) {
-				// There is a job which runs already quite some time, don't wait
-				// for it to avoid test timeouts
-				dumpRunningOrWaitingJobs(owner, jobs);
-				return true;
-			}
-
-			if (System.currentTimeMillis() - start >= maxTimeMs) {
-				dumpRunningOrWaitingJobs(owner, jobs);
-				return true;
-			}
-			processUIEvents();
-			try {
-				Thread.sleep(10);
-			} catch (InterruptedException e) {
-				// Uninterruptable
-			}
-		}
-		runningJobs.clear();
-		return false;
-	}
-
-	static Set<Job> runningJobs = new LinkedHashSet<>();
-
-	private static void dumpRunningOrWaitingJobs(String owner, List<Job> jobs) {
-		String message = 
-		log(IStatus.ERROR, owner, message);
-	}
-
-	private static String dumpRunningOrWaitingJobs(List<Job> jobs) {
-		if (jobs.isEmpty()) {
-			return 
-		}
-		// clear 
-		runningJobs.clear();
-		StringBuilder sb = new StringBuilder();
-		for (Job job : jobs) {
-			runningJobs.add(job);
-			sb.append(
-			sb.append(job.getClass().getName());
-			Thread thread = job.getThread();
-			if (thread != null) {
-				ThreadInfo[] threadInfos = ManagementFactory.getThreadMXBean()
-						.getThreadInfo(new long[] { thread.getId() }, true, true);
-				if (threadInfos[0] != null) {
-					sb.append(
-				}
-			}
-			sb.append(
-		}
-		sb.setLength(sb.length() - 2);
-		return sb.toString();
-	}
-
-	public static List<Job> getRunningOrWaitingJobs(Object jobFamily, Object... excludedFamilies) {
-		List<Job> running = new ArrayList<>();
-		Job[] jobs = Job.getJobManager().find(jobFamily);
-		for (Job job : jobs) {
-			if (isRunningOrWaitingJob(job) &amp;&amp; !belongsToFamilies(job, excludedFamilies)) {
-				running.add(job);
-			}
-		}
-		return running;
-	}
-
-	private static boolean isRunningOrWaitingJob(Job job) {
-		int state = job.getState();
-		return (state == Job.RUNNING || state == Job.WAITING);
-	}
-
-	private static boolean belongsToFamilies(Job job, Object... excludedFamilies) {
-		if (excludedFamilies == null || excludedFamilies.length == 0) {
-			return false;
-		}
-		for (Object family : excludedFamilies) {
-			if (job.belongsTo(family)) {
-				return true;
-			}
-		}
-		return false;
-	}
-}
+/*******************************************************************************
+ * Copyright (c) 2008, 2017 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *     Stefan Xenos (Google) - Initial implementation
+ *     Andrey Loskutov (loskutov@gmx.de) - many different extensions
+ *******************************************************************************/
+package org.eclipse.pde.ui.tests.runtime;
+
+import java.lang.management.ManagementFactory;
+import java.lang.management.ThreadInfo;
+import java.util.*;
+import java.util.function.Function;
+import junit.framework.AssertionFailedError;
+import junit.framework.TestCase;
+import org.eclipse.core.runtime.*;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.pde.ui.tests.PDETestsPlugin;
+import org.eclipse.swt.widgets.Display;
+import org.junit.Assert;
+
+/**
+ * Utility methods for JUnit tests.
+ */
+public class TestUtils {
+	public static IExtensionPoint getExtensionPoint(String extensionPointId) {
+		return Platform.getExtensionRegistry().getExtensionPoint(extensionPointId);
+	}
+
+	public static IExtension getExtension(String extensionId) {
+		return Platform.getExtensionRegistry().getExtension(extensionId);
+	}
+
+	public static String findPath(String path) {
+		return FileLocator.find(PDETestsPlugin.getBundleContext().getBundle(), new Path(path), Collections.EMPTY_MAP).toString();
+	}
+
+	/**
+	 * Call this in the tearDown method of every test to clean up state that can
+	 * otherwise leak through SWT between tests.
+	 */
+	public static void cleanUp(String owner) {
+		// Ensure that the Thread.interrupted() flag didn't leak.
+		Assert.assertFalse(
+
+		// Wait for any outstanding jobs to finish. Protect against deadlock by
+		// terminating the wait after a timeout.
+		boolean timedOut = waitForJobs(owner, 5, 5000);
+		if (timedOut) {
+			// We don't expect any extra jobs run during the test: try to cancel
+			// them
+			log(IStatus.INFO, owner, 
+			getRunningOrWaitingJobs(null).forEach(job -> job.cancel());
+			waitForJobs(owner, 5, 1000);
+		}
+
+		// Ensure that the Thread.interrupted() flag didn't leak.
+		Assert.assertFalse(
+	}
+
+	public static void log(int severity, String owner, String message, Throwable... optionalError) {
+		message = 
+		Throwable error = null;
+		if (optionalError != null &amp;&amp; optionalError.length > 0) {
+			error = optionalError[0];
+		}
+		Status status = new Status(severity, PDETestsPlugin.getDefault().getBundle().getSymbolicName(), message, error);
+		PDETestsPlugin.getDefault().getLog().log(status);
+	}
+
+	/**
+	 * Process all queued UI events. If called from background thread, does
+	 * nothing.
+	 */
+	public static void processUIEvents() {
+		Display display = Display.getCurrent();
+		if (display != null &amp;&amp; !display.isDisposed()) {
+			while (display.readAndDispatch()) {
+				// Keep pumping events until the queue is empty
+			}
+		}
+	}
+
+	/**
+	 * Process all queued UI events. If called from background thread, just
+	 * waits
+	 *
+	 * @param millis
+	 *            max wait time to process events
+	 */
+	public static void processUIEvents(final long millis) throws Exception {
+		long start = System.currentTimeMillis();
+		while (System.currentTimeMillis() - start < millis) {
+			Display display = Display.getCurrent();
+			if (display != null &amp;&amp; !display.isDisposed()) {
+				while (display.readAndDispatch()) {
+					// loop until the queue is empty
+				}
+			} else {
+				Thread.sleep(10);
+			}
+		}
+	}
+
+	/**
+	 * Waits while given condition is {@code true} for a given amount of
+	 * milliseconds. If the actual wait time exceeds given timeout and condition
+	 * will be still {@code true}, throws {@link AssertionFailedError} with
+	 * given message.
+	 * <p>
+	 * Will process UI events while waiting in UI thread, if called from
+	 * background thread, just waits.
+	 *
+	 * @param <T>
+	 *            type of the context
+	 * @param context
+	 *            test context
+	 * @param condition
+	 *            function which will be evaluated while waiting
+	 * @param timeout
+	 *            max wait time in milliseconds to wait on given condition
+	 * @param errorMessage
+	 *            message which will be used to construct the failure exception
+	 *            in case the condition will still return {@code true} after
+	 *            given timeout
+	 */
+	public static <T> void waitWhile(Function<T, Boolean> condition, T context, long timeout,
+			Function<T, String> errorMessage) throws Exception {
+		long start = System.currentTimeMillis();
+		Display display = Display.getCurrent();
+		while (System.currentTimeMillis() - start < timeout &amp;&amp; condition.apply(context)) {
+			if (display != null &amp;&amp; !display.isDisposed()) {
+				if (!display.readAndDispatch()) {
+					Thread.sleep(0);
+				}
+			} else {
+				Thread.sleep(5);
+			}
+		}
+		Boolean stillTrue = condition.apply(context);
+		if (stillTrue) {
+			TestCase.fail(errorMessage.apply(context));
+		}
+	}
+
+	/**
+	 * Utility for waiting until the execution of jobs of any family has
+	 * finished or timeout is reached. If no jobs are running, the method waits
+	 * given minimum wait time. While this method is waiting for jobs, UI events
+	 * are processed.
+	 *
+	 * @param owner
+	 *            name of the caller which will be logged as prefix if the wait
+	 *            times out
+	 * @param minTimeMs
+	 *            minimum wait time in milliseconds
+	 * @param maxTimeMs
+	 *            maximum wait time in milliseconds
+	 * @return true if the method timed out, false if all the jobs terminated
+	 *         before the timeout
+	 */
+	public static boolean waitForJobs(String owner, long minTimeMs, long maxTimeMs) {
+		return waitForJobs(owner, minTimeMs, maxTimeMs, (Object[]) null);
+	}
+
+	/**
+	 * Utility for waiting until the execution of jobs of any family has
+	 * finished or timeout is reached. If no jobs are running, the method waits
+	 * given minimum wait time. While this method is waiting for jobs, UI events
+	 * are processed.
+	 *
+	 * @param owner
+	 *            name of the caller which will be logged as prefix if the wait
+	 *            times out
+	 * @param minTimeMs
+	 *            minimum wait time in milliseconds
+	 * @param maxTimeMs
+	 *            maximum wait time in milliseconds
+	 * @param excludedFamilies
+	 *            optional list of job families to NOT wait for
+	 *
+	 * @return true if the method timed out, false if all the jobs terminated
+	 *         before the timeout
+	 */
+	public static boolean waitForJobs(String owner, long minTimeMs, long maxTimeMs, Object... excludedFamilies) {
+		if (maxTimeMs < minTimeMs) {
+			throw new IllegalArgumentException(
+		}
+		final long start = System.currentTimeMillis();
+		while (System.currentTimeMillis() - start < minTimeMs) {
+			processUIEvents();
+			try {
+				Thread.sleep(Math.min(10, minTimeMs));
+			} catch (InterruptedException e) {
+				// Uninterruptable
+			}
+		}
+		while (!Job.getJobManager().isIdle()) {
+			List<Job> jobs = getRunningOrWaitingJobs(null, excludedFamilies);
+			if (jobs.isEmpty()) {
+				// only uninteresting jobs running
+				break;
+			}
+
+			if (!Collections.disjoint(runningJobs, jobs)) {
+				// There is a job which runs already quite some time, don't wait
+				// for it to avoid test timeouts
+				dumpRunningOrWaitingJobs(owner, jobs);
+				return true;
+			}
+
+			if (System.currentTimeMillis() - start >= maxTimeMs) {
+				dumpRunningOrWaitingJobs(owner, jobs);
+				return true;
+			}
+			processUIEvents();
+			try {
+				Thread.sleep(10);
+			} catch (InterruptedException e) {
+				// Uninterruptable
+			}
+		}
+		runningJobs.clear();
+		return false;
+	}
+
+	static Set<Job> runningJobs = new LinkedHashSet<>();
+
+	private static void dumpRunningOrWaitingJobs(String owner, List<Job> jobs) {
+		String message = 
+		log(IStatus.ERROR, owner, message);
+	}
+
+	private static String dumpRunningOrWaitingJobs(List<Job> jobs) {
+		if (jobs.isEmpty()) {
+			return 
+		}
+		// clear 
+		runningJobs.clear();
+		StringBuilder sb = new StringBuilder();
+		for (Job job : jobs) {
+			runningJobs.add(job);
+			sb.append(
+			sb.append(job.getClass().getName());
+			Thread thread = job.getThread();
+			if (thread != null) {
+				ThreadInfo[] threadInfos = ManagementFactory.getThreadMXBean()
+						.getThreadInfo(new long[] { thread.getId() }, true, true);
+				if (threadInfos[0] != null) {
+					sb.append(
+				}
+			}
+			sb.append(
+		}
+		sb.setLength(sb.length() - 2);
+		return sb.toString();
+	}
+
+	public static List<Job> getRunningOrWaitingJobs(Object jobFamily, Object... excludedFamilies) {
+		List<Job> running = new ArrayList<>();
+		Job[] jobs = Job.getJobManager().find(jobFamily);
+		for (Job job : jobs) {
+			if (isRunningOrWaitingJob(job) &amp;&amp; !belongsToFamilies(job, excludedFamilies)) {
+				running.add(job);
+			}
+		}
+		return running;
+	}
+
+	private static boolean isRunningOrWaitingJob(Job job) {
+		int state = job.getState();
+		return (state == Job.RUNNING || state == Job.WAITING);
+	}
+
+	private static boolean belongsToFamilies(Job job, Object... excludedFamilies) {
+		if (excludedFamilies == null || excludedFamilies.length == 0) {
+			return false;
+		}
+		for (Object family : excludedFamilies) {
+			if (job.belongsTo(family)) {
+				return true;
+			}
+		}
+		return false;
+	}
+}

原文件: ui/org.eclipse.pde.ui.tests/tests/targets/target-files/emptycontent.trgt 
新文件: ui/org.eclipse.pde.ui.tests/tests/targets/target-files/emptycontent.trgt
位置:  -1,15 +1,15  
-<?xml version=
-<?pde version=
-
-<target name=
-
-   <location path=
-
-   <content>
-      <plugins>
-      </plugins>
-      <features>
-      </features>
-   </content>
-
-</target>
+<?xml version=
+<?pde version=
+
+<target name=
+
+   <location path=
+
+   <content>
+      <plugins>
+      </plugins>
+      <features>
+      </features>
+   </content>
+
+</target>

原文件: ui/org.eclipse.pde.ui.tests/tests/targets/target-files/windowsLineDelimiters.trgt 
新文件: ui/org.eclipse.pde.ui.tests/tests/targets/target-files/windowsLineDelimiters.trgt
位置:  -1,15 +1,15  
-<?xml version=
-
-   <location useDefault=
-
-   <content useAllPlugins=
-      <plugins>
-      </plugins>
-      <features>
-      </features>
-      <extraLocations>
-         <location path=
-         <location path=
-      </extraLocations>
-   </content>
+<?xml version=
+
+   <location useDefault=
+
+   <content useAllPlugins=
+      <plugins>
+      </plugins>
+      <features>
+      </features>
+      <extraLocations>
+         <location path=
+         <location path=
+      </extraLocations>
+   </content>
 </target>
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/.project 
新文件: ui/org.eclipse.pde.ui/.project
位置:  -1,34 +1,34  
-<?xml version=
-<projectDescription>
-	<name>org.eclipse.pde.ui</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.ManifestBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.SchemaBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
-	</natures>
-</projectDescription>
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.pde.ui</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.ui/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.ui/.settings/org.eclipse.jdt.core.prefs
位置:  -1,407 +1,407  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
-org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
-org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
-org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
-org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
-org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=error
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
-org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
-org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
-org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=next_line_shifted
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=120
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_on_off_tags=false
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
-org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=error
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=error
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=next_line_shifted
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=120
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error
+org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter

原文件: ui/org.eclipse.pde.ui/build.properties 
新文件: ui/org.eclipse.pde.ui/build.properties
位置:  -1,25 +1,25  
-###############################################################################
-# Copyright (c) 2003, 2014 IBM Corporation and others.
-#
-# This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License 2.0
-# which accompanies this distribution, and is available at
-# https://www.eclipse.org/legal/epl-2.0/
-#
-# SPDX-License-Identifier: EPL-2.0
-#
-# Contributors:
-#     IBM Corporation - initial API and implementation
-###############################################################################
-bin.includes = plugin.properties,\
-               icons/,\
-               .,\
-               plugin.xml,\
-               about.html,\
-               META-INF/,\
-               css/
-src.includes = about.html,\
-               schema/
-source.. = src/,\
-           src_samples/
-output.. = bin/
+###############################################################################
+# Copyright (c) 2003, 2014 IBM Corporation and others.
+#
+# This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License 2.0
+# which accompanies this distribution, and is available at
+# https://www.eclipse.org/legal/epl-2.0/
+#
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+#     IBM Corporation - initial API and implementation
+###############################################################################
+bin.includes = plugin.properties,\
+               icons/,\
+               .,\
+               plugin.xml,\
+               about.html,\
+               META-INF/,\
+               css/
+src.includes = about.html,\
+               schema/
+source.. = src/,\
+           src_samples/
+output.. = bin/

原文件: ui/org.eclipse.pde.ui/schem
原文件: targetLocationProvisioners.exsd 
新文件: ui/org.eclipse.pde.ui/schema/targetLocationProvisioners.exsd
位置:  -1,186 +1,186  
-<?xml version='1.0' encoding='UTF-8'?>
-<!-- Schema file written by PDE -->
-<schema targetNamespace=
-<annotation>
-      <appInfo>
-         <meta.schema plugin=
-      </appInfo>
-      <documentation>
-         &amp;lt;p&amp;gt;
-This extension point is used to register a target location provisioner wizard that will create new target locations. Each plug-in provisioner is listed when the user attempts to add plug-ins to a target definition from the Target Platform Preference Page or Target Editor.  The selected provisioner is responsible for providing the target location or locations to add to the target definition.
-&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;
-Clients can provide their own target location implementations through the &amp;lt;code&amp;gt;org.eclipse.pde.core.targetLocations&amp;lt;/code&amp;gt; extension point.  This extension point allows custom location implementations to be added by the user. Additional UI interaction is handled using the adapter framework (see documentation on &amp;lt;code&amp;gt;org.eclipse.pde.core.target.ITargetDefinition&amp;lt;/code&amp;gt;).
-&amp;lt;/p&amp;gt;
-      </documentation>
-   </annotation>
-
-   <element name=
-      <annotation>
-         <appInfo>
-            <meta.element />
-         </appInfo>
-      </annotation>
-      <complexType>
-         <sequence>
-            <element ref=
-         </sequence>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  
-               </documentation>
-            </annotation>
-         </attribute>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  
-               </documentation>
-            </annotation>
-         </attribute>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  
-               </documentation>
-               <appInfo>
-                  <meta.attribute translatable=
-               </appInfo>
-            </annotation>
-         </attribute>
-      </complexType>
-   </element>
-
-   <element name=
-      <annotation>
-         <appInfo>
-            <meta.element labelAttribute=
-         </appInfo>
-      </annotation>
-      <complexType>
-         <sequence>
-            <element ref=
-         </sequence>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  a unique identifier of the provisioner
-               </documentation>
-            </annotation>
-         </attribute>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  human readable name of the provisioner
-               </documentation>
-               <appInfo>
-                  <meta.attribute translatable=
-               </appInfo>
-            </annotation>
-         </attribute>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  a relative path of an icon that will be used to visually 
-represent the provisioner.
-               </documentation>
-               <appInfo>
-                  <meta.attribute kind=
-               </appInfo>
-            </annotation>
-         </attribute>
-         <attribute name=
-            <annotation>
-               <documentation>
-                  a class that provides a wizard for the user to add content to the target.  The value of this attribute is the fully qualified name of the Java class that implements &amp;lt;code&amp;gt;org.eclipse.pde.ui.target.ITargetLocationWizard&amp;lt;/code&amp;gt;.
-               </documentation>
-               <appInfo>
-                  <meta.attribute kind=
-               </appInfo>
-            </annotation>
-         </attribute>
-      </complexType>
-   </element>
-
-   <element name=
-      <annotation>
-         <appInfo>
-            <meta.element translatable=
-         </appInfo>
-         <documentation>
-            human-readable description of the provisioner
-         </documentation>
-      </annotation>
-   </element>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         The wizard contributed by this extension point must implement &amp;lt;code&amp;gt;org.eclipse.pde.ui.target.ITargetLocationWizard&amp;lt;/code&amp;gt;.
-      </documentation>
-   </annotation>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         3.8
-      </documentation>
-   </annotation>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         &amp;lt;p&amp;gt;
-The following is an example of the extension point:
-&amp;lt;pre&amp;gt;
-    &amp;lt;extension
-         point=&amp;quot;org.eclipse.pde.ui.targetLocationProvisioners&amp;quot;&amp;gt;
-      &amp;lt;locationProvider
-            class=&amp;quot;org.eclipse.example.exampleTargetWizard&amp;quot;
-            icon=&amp;quot;icons/obj16/exampleTargetLocation.png&amp;quot;
-            id=&amp;quot;org.eclipse.example.exampleTargetProvisioner&amp;quot;
-            name=&amp;quot;%targetLocationProvider.example.name&amp;quot;
-         &amp;lt;description&amp;gt;
-            %targetLocationProvider.example.description
-         &amp;lt;/description&amp;gt;
-      &amp;lt;/locationProvider&amp;gt;
-   &amp;lt;/extension&amp;gt;
-&amp;lt;/pre&amp;gt;
-      </documentation>
-   </annotation>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         &amp;lt;p&amp;gt;
-PDE supplies an internal location provisioner implementation to add plug-ins from update sites and p2 repositories. See &amp;lt;code&amp;gt;org.eclipse.pde.ui.shared.target.InstallableUnitWizard&amp;lt;/code&amp;gt;.
-&amp;lt;/p&amp;gt;
-      </documentation>
-   </annotation>
-
-   <annotation>
-      <appInfo>
-         <meta.section type=
-      </appInfo>
-      <documentation>
-         Copyright (c) 2011, 2014 IBM Corporation and others.
-&amp;lt;br&amp;gt;
+<?xml version='1.0' encoding='UTF-8'?>
+<!-- Schema file written by PDE -->
+<schema targetNamespace=
+<annotation>
+      <appInfo>
+         <meta.schema plugin=
+      </appInfo>
+      <documentation>
+         &amp;lt;p&amp;gt;
+This extension point is used to register a target location provisioner wizard that will create new target locations. Each plug-in provisioner is listed when the user attempts to add plug-ins to a target definition from the Target Platform Preference Page or Target Editor.  The selected provisioner is responsible for providing the target location or locations to add to the target definition.
+&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;
+Clients can provide their own target location implementations through the &amp;lt;code&amp;gt;org.eclipse.pde.core.targetLocations&amp;lt;/code&amp;gt; extension point.  This extension point allows custom location implementations to be added by the user. Additional UI interaction is handled using the adapter framework (see documentation on &amp;lt;code&amp;gt;org.eclipse.pde.core.target.ITargetDefinition&amp;lt;/code&amp;gt;).
+&amp;lt;/p&amp;gt;
+      </documentation>
+   </annotation>
 
-This program and the accompanying materials are made 
-available under the terms of the Eclipse Public License 2.0 which 
-accompanies this distribution, and is available at 
+   <element name=
+      <annotation>
+         <appInfo>
+            <meta.element />
+         </appInfo>
+      </annotation>
+      <complexType>
+         <sequence>
+            <element ref=
+         </sequence>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+               <appInfo>
+                  <meta.attribute translatable=
+               </appInfo>
+            </annotation>
+         </attribute>
+      </complexType>
+   </element>
+
+   <element name=
+      <annotation>
+         <appInfo>
+            <meta.element labelAttribute=
+         </appInfo>
+      </annotation>
+      <complexType>
+         <sequence>
+            <element ref=
+         </sequence>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  a unique identifier of the provisioner
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  human readable name of the provisioner
+               </documentation>
+               <appInfo>
+                  <meta.attribute translatable=
+               </appInfo>
+            </annotation>
+         </attribute>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  a relative path of an icon that will be used to visually 
+represent the provisioner.
+               </documentation>
+               <appInfo>
+                  <meta.attribute kind=
+               </appInfo>
+            </annotation>
+         </attribute>
+         <attribute name=
+            <annotation>
+               <documentation>
+                  a class that provides a wizard for the user to add content to the target.  The value of this attribute is the fully qualified name of the Java class that implements &amp;lt;code&amp;gt;org.eclipse.pde.ui.target.ITargetLocationWizard&amp;lt;/code&amp;gt;.
+               </documentation>
+               <appInfo>
+                  <meta.attribute kind=
+               </appInfo>
+            </annotation>
+         </attribute>
+      </complexType>
+   </element>
+
+   <element name=
+      <annotation>
+         <appInfo>
+            <meta.element translatable=
+         </appInfo>
+         <documentation>
+            human-readable description of the provisioner
+         </documentation>
+      </annotation>
+   </element>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         The wizard contributed by this extension point must implement &amp;lt;code&amp;gt;org.eclipse.pde.ui.target.ITargetLocationWizard&amp;lt;/code&amp;gt;.
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         3.8
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         &amp;lt;p&amp;gt;
+The following is an example of the extension point:
+&amp;lt;pre&amp;gt;
+    &amp;lt;extension
+         point=&amp;quot;org.eclipse.pde.ui.targetLocationProvisioners&amp;quot;&amp;gt;
+      &amp;lt;locationProvider
+            class=&amp;quot;org.eclipse.example.exampleTargetWizard&amp;quot;
+            icon=&amp;quot;icons/obj16/exampleTargetLocation.png&amp;quot;
+            id=&amp;quot;org.eclipse.example.exampleTargetProvisioner&amp;quot;
+            name=&amp;quot;%targetLocationProvider.example.name&amp;quot;
+         &amp;lt;description&amp;gt;
+            %targetLocationProvider.example.description
+         &amp;lt;/description&amp;gt;
+      &amp;lt;/locationProvider&amp;gt;
+   &amp;lt;/extension&amp;gt;
+&amp;lt;/pre&amp;gt;
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         &amp;lt;p&amp;gt;
+PDE supplies an internal location provisioner implementation to add plug-ins from update sites and p2 repositories. See &amp;lt;code&amp;gt;org.eclipse.pde.ui.shared.target.InstallableUnitWizard&amp;lt;/code&amp;gt;.
+&amp;lt;/p&amp;gt;
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appInfo>
+         <meta.section type=
+      </appInfo>
+      <documentation>
+         Copyright (c) 2011, 2014 IBM Corporation and others.
+&amp;lt;br&amp;gt;
+
+This program and the accompanying materials are made 
+available under the terms of the Eclipse Public License 2.0 which 
+accompanies this distribution, and is available at 
 &amp;lt;a href=&amp;quot;https://www.eclipse.org/legal/epl-2.0&amp;quot;&amp;gt;https://www.eclipse.org/legal/epl-v20.html&amp;lt;/a&amp;gt;/
 
-SPDX-License-Identifier: EPL-2.0.
-      </documentation>
-   </annotation>
-
-</schema>
+SPDX-License-Identifier: EPL-2.0.
+      </documentation>
+   </annotation>
+
+</schema>

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/Utilities.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/Utilities.java
位置:  -1,114 +1,114  
-/*******************************************************************************
- *  Copyright (c) 2000, 2010 IBM Corporation and others.
+/*******************************************************************************
+ *  Copyright (c) 2000, 2010 IBM Corporation and others.
  *
- *  This program and the accompanying materials
- *  are made available under the terms of the Eclipse Public License 2.0
- *  which accompanies this distribution, and is available at
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
  *  https://www.eclipse.org/legal/epl-2.0/
  *
- *  SPDX-License-Identifier: EPL-2.0
- *
- *  Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.ui;
-
-import java.io.*;
-import java.util.Date;
-import org.eclipse.core.runtime.Platform;
-
-/**
- * This class is a collection of utility functions for creating and using temporary working directories.
- */
-public class Utilities {
-
-	private static long tmpseed = (new Date()).getTime();
-	private static String dirRoot = null;
-
-	/**
-	 * Returns a new working directory (in temporary space). Ensures
-	 * the directory exists. Any directory levels that had to be created
-	 * are marked for deletion on exit.
-	 *
-	 * @return working directory
-	 * @exception IOException
-	 * @since 2.0
-	 */
-	public static synchronized File createWorkingDirectory() throws IOException {
-
-		if (dirRoot == null) {
-			dirRoot = System.getProperty(
-			// in Linux, returns '/tmp', we must add '/'
-			if (!dirRoot.endsWith(File.separator))
-				dirRoot += File.separator;
-
-			// on Unix/Linux, the temp dir is shared by many users, so we need to ensure
-			// that the top working directory is different for each user
-			if (!Platform.getOS().equals(
-				String home = System.getProperty(
-				home = Integer.toString(home.hashCode());
-				dirRoot += home + File.separator;
-			}
-			dirRoot += 
-		}
-
-		String tmpName = dirRoot + Long.toString(++tmpseed) + File.separator;
-
-		File tmpDir = new File(tmpName);
-		verifyPath(tmpDir, false);
-		if (!tmpDir.exists())
-			throw new FileNotFoundException(tmpName);
-		return tmpDir;
-	}
-
-	/**
-	 * Perform shutdown processing for temporary file handling.
-	 * This method is called when platform is shutting down.
-	 * It is not intended to be called at any other time under
-	 * normal circumstances. A side-effect of calling this method
-	 * is that the contents of the temporary directory managed
-	 * by this class are deleted.
-	 *
-	 * @since 2.0
-	 */
-	public static void shutdown() {
-		if (dirRoot == null)
-			return;
-		File temp = new File(dirRoot); // temp directory root for this run
-		cleanupTemp(temp);
-		temp.delete();
-	}
-
-	private static void cleanupTemp(File root) {
-		File[] files = root.listFiles();
-		for (int i = 0; files != null &amp;&amp; i < files.length; i++) {
-			if (files[i].isDirectory())
-				cleanupTemp(files[i]);
-			files[i].delete();
-		}
-	}
-
-	private static void verifyPath(File path, boolean isFile) {
-		// if we are expecting a file back off 1 path element
-		if (isFile) {
-			if (path.getAbsolutePath().endsWith(File.separator)) {
-				// make sure this is a file
-				path = path.getParentFile();
-				isFile = false;
-			}
-		}
-
-		// already exists ... just return
-		if (path.exists())
-			return;
-
-		// does not exist ... ensure parent exists
-		File parent = path.getParentFile();
-		verifyPath(parent, false);
-
-		// ensure directories are made. Mark files or directories for deletion
-		if (!isFile)
-			path.mkdir();
-		path.deleteOnExit();
-	}
-}
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui;
+
+import java.io.*;
+import java.util.Date;
+import org.eclipse.core.runtime.Platform;
+
+/**
+ * This class is a collection of utility functions for creating and using temporary working directories.
+ */
+public class Utilities {
+
+	private static long tmpseed = (new Date()).getTime();
+	private static String dirRoot = null;
+
+	/**
+	 * Returns a new working directory (in temporary space). Ensures
+	 * the directory exists. Any directory levels that had to be created
+	 * are marked for deletion on exit.
+	 *
+	 * @return working directory
+	 * @exception IOException
+	 * @since 2.0
+	 */
+	public static synchronized File createWorkingDirectory() throws IOException {
+
+		if (dirRoot == null) {
+			dirRoot = System.getProperty(
+			// in Linux, returns '/tmp', we must add '/'
+			if (!dirRoot.endsWith(File.separator))
+				dirRoot += File.separator;
+
+			// on Unix/Linux, the temp dir is shared by many users, so we need to ensure
+			// that the top working directory is different for each user
+			if (!Platform.getOS().equals(
+				String home = System.getProperty(
+				home = Integer.toString(home.hashCode());
+				dirRoot += home + File.separator;
+			}
+			dirRoot += 
+		}
+
+		String tmpName = dirRoot + Long.toString(++tmpseed) + File.separator;
+
+		File tmpDir = new File(tmpName);
+		verifyPath(tmpDir, false);
+		if (!tmpDir.exists())
+			throw new FileNotFoundException(tmpName);
+		return tmpDir;
+	}
+
+	/**
+	 * Perform shutdown processing for temporary file handling.
+	 * This method is called when platform is shutting down.
+	 * It is not intended to be called at any other time under
+	 * normal circumstances. A side-effect of calling this method
+	 * is that the contents of the temporary directory managed
+	 * by this class are deleted.
+	 *
+	 * @since 2.0
+	 */
+	public static void shutdown() {
+		if (dirRoot == null)
+			return;
+		File temp = new File(dirRoot); // temp directory root for this run
+		cleanupTemp(temp);
+		temp.delete();
+	}
+
+	private static void cleanupTemp(File root) {
+		File[] files = root.listFiles();
+		for (int i = 0; files != null &amp;&amp; i < files.length; i++) {
+			if (files[i].isDirectory())
+				cleanupTemp(files[i]);
+			files[i].delete();
+		}
+	}
+
+	private static void verifyPath(File path, boolean isFile) {
+		// if we are expecting a file back off 1 path element
+		if (isFile) {
+			if (path.getAbsolutePath().endsWith(File.separator)) {
+				// make sure this is a file
+				path = path.getParentFile();
+				isFile = false;
+			}
+		}
+
+		// already exists ... just return
+		if (path.exists())
+			return;
+
+		// does not exist ... ensure parent exists
+		File parent = path.getParentFile();
+		verifyPath(parent, false);
+
+		// ensure directories are made. Mark files or directories for deletion
+		if (!isFile)
+			path.mkdir();
+		path.deleteOnExit();
+	}
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddBundleManifestVersionResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddBundleManifestVersionResolution.java
位置:  -1,47 +1,47  
-/*******************************************************************************
- * Copyright (c) 2011, 2019 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+/*******************************************************************************
+ * Copyright (c) 2011, 2019 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.correction;
-
-import org.eclipse.core.resources.IMarker;
-import org.eclipse.pde.internal.core.text.bundle.BundleModel;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.osgi.framework.Constants;
-
-/**
- * Resolution to add the Bundle-ManifestVersion header to the manifest.  Will set the manifest
- * version to 2 to support OSGi R4 headers.
- */
-public class AddBundleManifestVersionResolution extends AbstractManifestMarkerResolution {
-
-	public AddBundleManifestVersionResolution(IMarker marker) {
-		super(AbstractPDEMarkerResolution.CREATE_TYPE, marker);
-	}
-
-	@Override
-	public String getLabel() {
-		return PDEUIMessages.AddBundleManifestVersionResolution_label;
-	}
-
-	@Override
-	public String getDescription() {
-		return PDEUIMessages.AddBundleManifestVersionResolution_description;
-	}
-
-	@Override
-	protected void createChange(BundleModel model) {
-		// Add the Bundle-ManifestVersion header.
-		model.getBundle().setHeader(Constants.BUNDLE_MANIFESTVERSION, String.valueOf(2));
-	}
-
-}
+package org.eclipse.pde.internal.ui.correction;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.pde.internal.core.text.bundle.BundleModel;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.osgi.framework.Constants;
+
+/**
+ * Resolution to add the Bundle-ManifestVersion header to the manifest.  Will set the manifest
+ * version to 2 to support OSGi R4 headers.
+ */
+public class AddBundleManifestVersionResolution extends AbstractManifestMarkerResolution {
+
+	public AddBundleManifestVersionResolution(IMarker marker) {
+		super(AbstractPDEMarkerResolution.CREATE_TYPE, marker);
+	}
+
+	@Override
+	public String getLabel() {
+		return PDEUIMessages.AddBundleManifestVersionResolution_label;
+	}
+
+	@Override
+	public String getDescription() {
+		return PDEUIMessages.AddBundleManifestVersionResolution_description;
+	}
+
+	@Override
+	protected void createChange(BundleModel model) {
+		// Add the Bundle-ManifestVersion header.
+		model.getBundle().setHeader(Constants.BUNDLE_MANIFESTVERSION, String.valueOf(2));
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/NoLineTerminationResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/NoLineTerminationResolution.java
位置:  -1,90 +1,90  
-/*******************************************************************************
- *  Copyright (c) 2011, 2019 IBM Corporation and others.
- *
- *  This program and the accompanying materials
- *  are made available under the terms of the Eclipse Public License 2.0
- *  which accompanies this distribution, and is available at
- *  https://www.eclipse.org/legal/epl-2.0/
- *
- *  SPDX-License-Identifier: EPL-2.0
- *
- *  Contributors:
- *     IBM Corporation - initial API and implementation
+/*******************************************************************************
+ *  Copyright (c) 2011, 2019 IBM Corporation and others.
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.correction;
-
-import org.eclipse.core.resources.IMarker;
-import org.eclipse.jface.text.*;
-import org.eclipse.pde.internal.core.text.bundle.BundleModel;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-
-/**
- * <p>Represents a resolution to the problem of the bundle manifest not ending
- * with a line termination character.</p>
- */
-public class NoLineTerminationResolution extends AbstractManifestMarkerResolution {
-
-	/**
-	 * Creates a new resolution
-	 * @param type Either {@link AbstractPDEMarkerResolution#REMOVE_TYPE} to delete a whitespace only line
-	 * or {@link AbstractPDEMarkerResolution#CREATE_TYPE} to add a new line
-	 */
-	public NoLineTerminationResolution(int type, IMarker marker) {
-		super(type, marker);
-	}
-
-	/**
-	 * <p>Resolves the problem using one of two methods, depending on the
-	 * content of manifest.</p>
-	 *
-	 * <ul>
-	 *   <li>If the final line of the manifest contains only whitespace, delete
-	 *   all the whitespace.</li>
-	 *   <li>If the final line of the manifest contains actual content, add a
-	 *   new line.</li>
-	 * </ul>
-	 *
-	 * <p>The post-condition will be that the manifest ends with a line delimiter.</p>
-	 */
-	@Override
-	protected void createChange(BundleModel model) {
-		if (getType() == AbstractPDEMarkerResolution.REMOVE_TYPE) {
-			// indicates last line is purely whitespace; we need to delete the whitespace.
-			IDocument doc = model.getDocument();
-			try {
-				IRegion lastLine = doc.getLineInformation(doc.getNumberOfLines() - 1);
-				doc.replace(lastLine.getOffset(), lastLine.getLength(), 
-			} catch (BadLocationException e) {
-			}
-		} else if (getType() == AbstractPDEMarkerResolution.CREATE_TYPE) {
-			// indicates last line is true content; we need to add a new line.
-			IDocument doc = model.getDocument();
-			try {
-				String lineDelimiter = doc.getLineDelimiter(0);
-				if (lineDelimiter == null) {
-					lineDelimiter = 
-				}
-				doc.replace(doc.getLength(), 0, lineDelimiter);
-			} catch (BadLocationException e) {
-				e.printStackTrace();
-			}
-		}
-	}
-
-	@Override
-	public String getDescription() {
-		if (getType() == AbstractPDEMarkerResolution.REMOVE_TYPE) {
-			return PDEUIMessages.NoLineTerminationResolutionRemove_description;
-		}
-		return PDEUIMessages.NoLineTerminationResolutionCreate_description;
-	}
-
-	@Override
-	public String getLabel() {
-		if (getType() == AbstractPDEMarkerResolution.REMOVE_TYPE) {
-			return PDEUIMessages.NoLineTerminationResolutionRemove_label;
-		}
-		return PDEUIMessages.NoLineTerminationResolutionCreate_label;
-	}
-
-}
+package org.eclipse.pde.internal.ui.correction;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.jface.text.*;
+import org.eclipse.pde.internal.core.text.bundle.BundleModel;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+
+/**
+ * <p>Represents a resolution to the problem of the bundle manifest not ending
+ * with a line termination character.</p>
+ */
+public class NoLineTerminationResolution extends AbstractManifestMarkerResolution {
+
+	/**
+	 * Creates a new resolution
+	 * @param type Either {@link AbstractPDEMarkerResolution#REMOVE_TYPE} to delete a whitespace only line
+	 * or {@link AbstractPDEMarkerResolution#CREATE_TYPE} to add a new line
+	 */
+	public NoLineTerminationResolution(int type, IMarker marker) {
+		super(type, marker);
+	}
+
+	/**
+	 * <p>Resolves the problem using one of two methods, depending on the
+	 * content of manifest.</p>
+	 *
+	 * <ul>
+	 *   <li>If the final line of the manifest contains only whitespace, delete
+	 *   all the whitespace.</li>
+	 *   <li>If the final line of the manifest contains actual content, add a
+	 *   new line.</li>
+	 * </ul>
+	 *
+	 * <p>The post-condition will be that the manifest ends with a line delimiter.</p>
+	 */
+	@Override
+	protected void createChange(BundleModel model) {
+		if (getType() == AbstractPDEMarkerResolution.REMOVE_TYPE) {
+			// indicates last line is purely whitespace; we need to delete the whitespace.
+			IDocument doc = model.getDocument();
+			try {
+				IRegion lastLine = doc.getLineInformation(doc.getNumberOfLines() - 1);
+				doc.replace(lastLine.getOffset(), lastLine.getLength(), 
+			} catch (BadLocationException e) {
+			}
+		} else if (getType() == AbstractPDEMarkerResolution.CREATE_TYPE) {
+			// indicates last line is true content; we need to add a new line.
+			IDocument doc = model.getDocument();
+			try {
+				String lineDelimiter = doc.getLineDelimiter(0);
+				if (lineDelimiter == null) {
+					lineDelimiter = 
+				}
+				doc.replace(doc.getLength(), 0, lineDelimiter);
+			} catch (BadLocationException e) {
+				e.printStackTrace();
+			}
+		}
+	}
+
+	@Override
+	public String getDescription() {
+		if (getType() == AbstractPDEMarkerResolution.REMOVE_TYPE) {
+			return PDEUIMessages.NoLineTerminationResolutionRemove_description;
+		}
+		return PDEUIMessages.NoLineTerminationResolutionCreate_description;
+	}
+
+	@Override
+	public String getLabel() {
+		if (getType() == AbstractPDEMarkerResolution.REMOVE_TYPE) {
+			return PDEUIMessages.NoLineTerminationResolutionRemove_label;
+		}
+		return PDEUIMessages.NoLineTerminationResolutionCreate_label;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDEFormPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDEFormPage.java
位置:  -1,449 +1,449  
-/*******************************************************************************
- * Copyright (c) 2003, 2016 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2003, 2016 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *     Benjamin Cabe <benjamin.cabe@anyware-tech.com> - bug 251339
- *     Martin Karpisek <martin.karpisek@gmail.com> - Bug 507831
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *     Benjamin Cabe <benjamin.cabe@anyware-tech.com> - bug 251339
+ *     Martin Karpisek <martin.karpisek@gmail.com> - Bug 507831
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.editor;
-
-import java.io.*;
-import org.eclipse.core.runtime.IAdaptable;
-import org.eclipse.jface.action.*;
-import org.eclipse.jface.dialogs.Dialog;
-import org.eclipse.jface.resource.JFaceResources;
-import org.eclipse.jface.viewers.ISelection;
-import org.eclipse.pde.core.IBaseModel;
-import org.eclipse.pde.internal.ui.PDEPluginImages;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.custom.CCombo;
-import org.eclipse.swt.custom.CTabFolder;
-import org.eclipse.swt.dnd.Clipboard;
-import org.eclipse.swt.events.FocusEvent;
-import org.eclipse.swt.events.FocusListener;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.layout.GridLayout;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.actions.ActionFactory;
-import org.eclipse.ui.dialogs.FilteredTree;
-import org.eclipse.ui.forms.*;
-import org.eclipse.ui.forms.editor.FormEditor;
-import org.eclipse.ui.forms.editor.FormPage;
-import org.eclipse.ui.forms.widgets.*;
-
-public abstract class PDEFormPage extends FormPage {
-
-	private Control fLastFocusControl;
-
-	public PDEFormPage(FormEditor editor, String id, String title) {
-		super(editor, id, title);
-		fLastFocusControl = null;
-	}
-
-	@Override
-	public void dispose() {
-		Control c = getPartControl();
-		if (c != null &amp;&amp; !c.isDisposed()) {
-			Menu menu = c.getMenu();
-			if (menu != null)
-				resetMenu(menu, c);
-		}
-		super.dispose();
-	}
-
-	private void resetMenu(Menu menu, Control c) {
-		if (c instanceof Composite) {
-			Composite comp = (Composite) c;
-			Control[] children = comp.getChildren();
-			for (Control child : children) {
-				resetMenu(menu, child);
-			}
-		}
-		Menu cmenu = c.getMenu();
-		if (cmenu != null &amp;&amp; cmenu.equals(menu)) {
-			c.setMenu(null);
-		}
-	}
-
-	@Override
-	protected void createFormContent(IManagedForm managedForm) {
-		final ScrolledForm form = managedForm.getForm();
-		FormToolkit toolkit = managedForm.getToolkit();
-		toolkit.decorateFormHeading(form.getForm());
-
-		IToolBarManager manager = form.getToolBarManager();
-
-		getPDEEditor().contributeToToolbar(manager);
-
-		final String helpContextID = getHelpResource();
-		if (helpContextID != null) {
-			Action helpAction = new Action(
-				@Override
-				public void run() {
-					PlatformUI.getWorkbench().getHelpSystem().displayHelp(helpContextID);
-				}
-			};
-			helpAction.setToolTipText(PDEUIMessages.PDEFormPage_help);
-			helpAction.setImageDescriptor(PDEPluginImages.DESC_HELP);
-			manager.add(helpAction);
-		}
-		//check to see if our form parts are contributing actions
-		IFormPart[] parts = managedForm.getParts();
-		for (IFormPart part : parts) {
-			if (part instanceof IAdaptable) {
-				IAdaptable adapter = (IAdaptable) part;
-				IAction[] actions = adapter.getAdapter(IAction[].class);
-				if (actions != null) {
-					for (IAction action : actions) {
-						form.getToolBarManager().add(action);
-					}
-				}
-			}
-		}
-		form.updateToolBar();
-	}
-
-	public PDEFormEditor getPDEEditor() {
-		return (PDEFormEditor) getEditor();
-	}
-
-	/**
-	 * Return a help context id to have the help button at the top right of the form page open
-	 * the dynamic help for the page.
-	 *
-	 * @return a help context id or <code>null</code>
-	 */
-	protected String getHelpResource() {
-		return null;
-	}
-
-	public IBaseModel getModel() {
-		return getPDEEditor().getAggregateModel();
-	}
-
-	public void contextMenuAboutToShow(IMenuManager menu) {
-	}
-
-	protected Control getFocusControl() {
-		IManagedForm form = getManagedForm();
-		if (form == null)
-			return null;
-		Control control = form.getForm();
-		if (control == null || control.isDisposed())
-			return null;
-		Display display = control.getDisplay();
-		Control focusControl = display.getFocusControl();
-		if (focusControl == null || focusControl.isDisposed())
-			return null;
-		return focusControl;
-	}
-
-	public boolean performGlobalAction(String actionId) {
-		Control focusControl = getFocusControl();
-		if (focusControl == null)
-			return false;
-
-		if (canPerformDirectly(actionId, focusControl))
-			return true;
-		AbstractFormPart focusPart = getFocusSection();
-		if (focusPart != null) {
-			if (focusPart instanceof PDESection)
-				return ((PDESection) focusPart).doGlobalAction(actionId);
-			if (focusPart instanceof PDEDetails)
-				return ((PDEDetails) focusPart).doGlobalAction(actionId);
-		}
-		return false;
-	}
-
-	public boolean canPaste(Clipboard clipboard) {
-		AbstractFormPart focusPart = getFocusSection();
-		if (focusPart != null) {
-			if (focusPart instanceof PDESection) {
-				return ((PDESection) focusPart).canPaste(clipboard);
-			}
-			if (focusPart instanceof PDEDetails) {
-				return ((PDEDetails) focusPart).canPaste(clipboard);
-			}
-		}
-		return false;
-	}
-
-	public boolean canCopy(ISelection selection) {
-		AbstractFormPart focusPart = getFocusSection();
-		if (focusPart != null) {
-			if (focusPart instanceof PDESection) {
-				return ((PDESection) focusPart).canCopy(selection);
-			}
-			if (focusPart instanceof PDEDetails) {
-				return ((PDEDetails) focusPart).canCopy(selection);
-			}
-		}
-		return false;
-	}
-
-	public boolean canCut(ISelection selection) {
-		AbstractFormPart focusPart = getFocusSection();
-		if (focusPart != null) {
-			if (focusPart instanceof PDESection) {
-				return ((PDESection) focusPart).canCut(selection);
-			}
-			if (focusPart instanceof PDEDetails) {
-				return ((PDEDetails) focusPart).canCut(selection);
-			}
-		}
-		return false;
-	}
-
-	private AbstractFormPart getFocusSection() {
-		Control focusControl = getFocusControl();
-		if (focusControl == null)
-			return null;
-		Composite parent = focusControl.getParent();
-		AbstractFormPart targetPart = null;
-		while (parent != null) {
-			Object data = parent.getData(
-			if (data != null &amp;&amp; data instanceof AbstractFormPart) {
-				targetPart = (AbstractFormPart) data;
-				break;
-			}
-			parent = parent.getParent();
-		}
-		return targetPart;
-	}
-
-	protected boolean canPerformDirectly(String id, Control control) {
-		if (control instanceof Text) {
-			Text text = (Text) control;
-			if (id.equals(ActionFactory.CUT.getId())) {
-				text.cut();
-				return true;
-			}
-			if (id.equals(ActionFactory.COPY.getId())) {
-				text.copy();
-				return true;
-			}
-			if (id.equals(ActionFactory.PASTE.getId())) {
-				text.paste();
-				return true;
-			}
-			if (id.equals(ActionFactory.SELECT_ALL.getId())) {
-				text.selectAll();
-				return true;
-			}
-			if (id.equals(ActionFactory.DELETE.getId())) {
-				int count = text.getSelectionCount();
-				if (count == 0) {
-					int caretPos = text.getCaretPosition();
-					text.setSelection(caretPos, caretPos + 1);
-				}
-				text.insert(
-				return true;
-			}
-		}
-		return false;
-	}
-
-	public void cancelEdit() {
-		IFormPart[] parts = getManagedForm().getParts();
-		for (IFormPart part : parts) {
-			if (part instanceof IContextPart)
-				((IContextPart) part).cancelEdit();
-		}
-	}
-
-	@Override
-	public void createPartControl(Composite parent) {
-		super.createPartControl(parent);
-		// Dynamically add focus listeners to all the forms children in order
-		// to track the last focus control
-		IManagedForm managedForm = getManagedForm();
-		if (managedForm != null) {
-			addLastFocusListeners(managedForm.getForm());
-		}
-	}
-
-	/**
-	 * Programatically and recursively add focus listeners to the specified
-	 * composite and its children that track the last control to have focus
-	 * before a page change or the editor lost focus
-	 *
-	 * @param composite
-	 */
-	public void addLastFocusListeners(Composite composite) {
-		Control[] controls = composite.getChildren();
-		for (Control control : controls) {
-			// Add a focus listener if the control is any one of the below types
-			// Note that the controls listed below represent all the controls
-			// currently in use by all form pages in PDE.  In the future,
-			// more controls will have to be added.
-			// Could not add super class categories of controls because it
-			// would include things like tool bars that we don't want to track
-			// focus for.
-			if ((control instanceof Text) || (control instanceof Button) || (control instanceof Combo) || (control instanceof CCombo) || (control instanceof Tree) || (control instanceof Table) || (control instanceof Spinner) || (control instanceof Link) || (control instanceof List) || (control instanceof TabFolder) || (control instanceof CTabFolder) || (control instanceof Hyperlink) || (control instanceof FilteredTree)) {
-				addLastFocusListener(control);
-			}
-			if (control instanceof Composite) {
-				// Recursively add focus listeners to this composites children
-				addLastFocusListeners((Composite) control);
-			}
-		}
-	}
-
-	/**
-	 * Add a focus listener to the specified control that tracks the last
-	 * control to have focus on this page.
-	 * When focus is gained by this control, it registers itself as the last
-	 * control to have focus.  The last control to have focus is stored in order
-	 * to be restored after a page change or editor loses focus.
-	 *
-	 * @param control
-	 */
-	private void addLastFocusListener(final Control control) {
-		control.addFocusListener(new FocusListener() {
-			@Override
-			public void focusGained(FocusEvent e) {
-				// NO-OP
-			}
-
-			@Override
-			public void focusLost(FocusEvent e) {
-				fLastFocusControl = control;
-			}
-		});
-	}
-
-	/**
-	 * Set the focus on the last control to have focus before a page change
-	 * or the editor lost focus.
-	 */
-	public void updateFormSelection() {
-		if ((fLastFocusControl != null) &amp;&amp; (fLastFocusControl.isDisposed() == false)) {
-			Control lastControl = fLastFocusControl;
-			// Set focus on the control
-			lastControl.forceFocus();
-			// If the control is a Text widget, select its contents
-			if (lastControl instanceof Text) {
-				Text text = (Text) lastControl;
-				text.setSelection(0, text.getText().length());
-			}
-		} else {
-			// No focus control set
-			// Fallback on managed form selection mechanism by setting the
-			// focus on this page itself.
-			// The managed form will set focus on the first managed part.
-			// Most likely this will turn out to be a section.
-			// In order for this to work properly, we must override the
-			// sections setFocus() method and set focus on a child control
-			// (preferrably first) that can practically take focus.
-			setFocus();
-		}
-	}
-
-	public Control getLastFocusControl() {
-		return fLastFocusControl;
-	}
-
-	/**
-	 * @param control
-	 */
-	public void setLastFocusControl(Control control) {
-		fLastFocusControl = control;
-	}
-
-	protected void createFormErrorContent(IManagedForm managedForm, String errorTitle, String errorMessage, Exception e) {
-
-		ScrolledForm form = managedForm.getForm();
-		FormToolkit toolkit = managedForm.getToolkit();
-		toolkit.decorateFormHeading(form.getForm());
-
-		Composite parent = form.getBody();
-		GridLayout layout = new GridLayout();
-		GridData data2 = new GridData(GridData.FILL_BOTH);
-		layout.marginWidth = 7;
-		layout.marginHeight = 7;
-		parent.setLayout(layout);
-		parent.setLayoutData(data2);
-		// Set the title and image of the form
-		form.setText(errorTitle);
-		form.setImage(JFaceResources.getImage(Dialog.DLG_IMG_MESSAGE_ERROR));
-
-		int sectionStyle = Section.DESCRIPTION | ExpandableComposite.TITLE_BAR;
-		// Create the message section
-		Section messageSection = createUISection(parent, PDEUIMessages.PDEFormPage_titleMessage, errorMessage, sectionStyle);
-		Composite messageClient = createUISectionContainer(messageSection, 1);
-		// Bind the widgets
-		toolkit.paintBordersFor(messageClient);
-		messageSection.setClient(messageClient);
-		// Ensure the exception was defined
-		if (e == null) {
-			return;
-		}
-		// Create the details section
-		Section detailsSection = createUISection(parent, PDEUIMessages.PDEFormPage_titleDetails, e.getMessage(), sectionStyle);
-		Composite detailsClient = createUISectionContainer(detailsSection, 1);
-		// Create text widget holding the exception trace
-		int style = SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.READ_ONLY;
-		Text text = toolkit.createText(detailsClient, getStackTrace(e), style);
-		GridData data = new GridData(GridData.FILL_HORIZONTAL);
-		data.heightHint = 160;
-		data.widthHint = 200;
-		text.setLayoutData(data);
-		// Bind the widgets
-		toolkit.paintBordersFor(detailsClient);
-		detailsSection.setClient(detailsClient);
-		// Note: The veritical scrollbar fails to appear when text widget is
-		// not entirely shown
-	}
-
-	public Section createUISection(Composite parent, String text, String description, int style) {
-		Section section = getManagedForm().getToolkit().createSection(parent, style);
-		section.clientVerticalSpacing = FormLayoutFactory.SECTION_HEADER_VERTICAL_SPACING;
-		section.setLayout(FormLayoutFactory.createClearGridLayout(false, 1));
-		section.setText(text);
-		section.setDescription(description);
-		GridData data = new GridData(GridData.FILL_HORIZONTAL);
-		section.setLayoutData(data);
-		return section;
-	}
-
-	public Composite createUISectionContainer(Composite parent, int columns) {
-		Composite container = getManagedForm().getToolkit().createComposite(parent);
-		container.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, columns));
-		return container;
-	}
-
-	private String getStackTrace(Throwable throwable) {
-		try (StringWriter swriter = new StringWriter(); PrintWriter pwriter = new PrintWriter(swriter)) {
-			throwable.printStackTrace(pwriter);
-			pwriter.flush();
-			pwriter.close();
-			return swriter.toString();
-		} catch (IOException e) {
-			return 
-		}
-
-	}
-
-	/**
-	 * Used to align the section client / decriptions of two section headers
-	 * horizontally adjacent to each other.  The misalignment is caused by one
-	 * section header containing toolbar icons and the other not.
-	 *
-	 * @param masterSection
-	 * @param detailsSection
-	 */
-	public void alignSectionHeaders(Section masterSection, Section detailsSection) {
-		detailsSection.descriptionVerticalSpacing += masterSection.getTextClientHeightDifference();
-	}
-
-}
+package org.eclipse.pde.internal.ui.editor;
+
+import java.io.*;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.jface.action.*;
+import org.eclipse.jface.dialogs.Dialog;
+import org.eclipse.jface.resource.JFaceResources;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.pde.core.IBaseModel;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.custom.CCombo;
+import org.eclipse.swt.custom.CTabFolder;
+import org.eclipse.swt.dnd.Clipboard;
+import org.eclipse.swt.events.FocusEvent;
+import org.eclipse.swt.events.FocusListener;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
+import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.actions.ActionFactory;
+import org.eclipse.ui.dialogs.FilteredTree;
+import org.eclipse.ui.forms.*;
+import org.eclipse.ui.forms.editor.FormEditor;
+import org.eclipse.ui.forms.editor.FormPage;
+import org.eclipse.ui.forms.widgets.*;
+
+public abstract class PDEFormPage extends FormPage {
+
+	private Control fLastFocusControl;
+
+	public PDEFormPage(FormEditor editor, String id, String title) {
+		super(editor, id, title);
+		fLastFocusControl = null;
+	}
+
+	@Override
+	public void dispose() {
+		Control c = getPartControl();
+		if (c != null &amp;&amp; !c.isDisposed()) {
+			Menu menu = c.getMenu();
+			if (menu != null)
+				resetMenu(menu, c);
+		}
+		super.dispose();
+	}
+
+	private void resetMenu(Menu menu, Control c) {
+		if (c instanceof Composite) {
+			Composite comp = (Composite) c;
+			Control[] children = comp.getChildren();
+			for (Control child : children) {
+				resetMenu(menu, child);
+			}
+		}
+		Menu cmenu = c.getMenu();
+		if (cmenu != null &amp;&amp; cmenu.equals(menu)) {
+			c.setMenu(null);
+		}
+	}
+
+	@Override
+	protected void createFormContent(IManagedForm managedForm) {
+		final ScrolledForm form = managedForm.getForm();
+		FormToolkit toolkit = managedForm.getToolkit();
+		toolkit.decorateFormHeading(form.getForm());
+
+		IToolBarManager manager = form.getToolBarManager();
+
+		getPDEEditor().contributeToToolbar(manager);
+
+		final String helpContextID = getHelpResource();
+		if (helpContextID != null) {
+			Action helpAction = new Action(
+				@Override
+				public void run() {
+					PlatformUI.getWorkbench().getHelpSystem().displayHelp(helpContextID);
+				}
+			};
+			helpAction.setToolTipText(PDEUIMessages.PDEFormPage_help);
+			helpAction.setImageDescriptor(PDEPluginImages.DESC_HELP);
+			manager.add(helpAction);
+		}
+		//check to see if our form parts are contributing actions
+		IFormPart[] parts = managedForm.getParts();
+		for (IFormPart part : parts) {
+			if (part instanceof IAdaptable) {
+				IAdaptable adapter = (IAdaptable) part;
+				IAction[] actions = adapter.getAdapter(IAction[].class);
+				if (actions != null) {
+					for (IAction action : actions) {
+						form.getToolBarManager().add(action);
+					}
+				}
+			}
+		}
+		form.updateToolBar();
+	}
+
+	public PDEFormEditor getPDEEditor() {
+		return (PDEFormEditor) getEditor();
+	}
+
+	/**
+	 * Return a help context id to have the help button at the top right of the form page open
+	 * the dynamic help for the page.
+	 *
+	 * @return a help context id or <code>null</code>
+	 */
+	protected String getHelpResource() {
+		return null;
+	}
+
+	public IBaseModel getModel() {
+		return getPDEEditor().getAggregateModel();
+	}
+
+	public void contextMenuAboutToShow(IMenuManager menu) {
+	}
+
+	protected Control getFocusControl() {
+		IManagedForm form = getManagedForm();
+		if (form == null)
+			return null;
+		Control control = form.getForm();
+		if (control == null || control.isDisposed())
+			return null;
+		Display display = control.getDisplay();
+		Control focusControl = display.getFocusControl();
+		if (focusControl == null || focusControl.isDisposed())
+			return null;
+		return focusControl;
+	}
+
+	public boolean performGlobalAction(String actionId) {
+		Control focusControl = getFocusControl();
+		if (focusControl == null)
+			return false;
+
+		if (canPerformDirectly(actionId, focusControl))
+			return true;
+		AbstractFormPart focusPart = getFocusSection();
+		if (focusPart != null) {
+			if (focusPart instanceof PDESection)
+				return ((PDESection) focusPart).doGlobalAction(actionId);
+			if (focusPart instanceof PDEDetails)
+				return ((PDEDetails) focusPart).doGlobalAction(actionId);
+		}
+		return false;
+	}
+
+	public boolean canPaste(Clipboard clipboard) {
+		AbstractFormPart focusPart = getFocusSection();
+		if (focusPart != null) {
+			if (focusPart instanceof PDESection) {
+				return ((PDESection) focusPart).canPaste(clipboard);
+			}
+			if (focusPart instanceof PDEDetails) {
+				return ((PDEDetails) focusPart).canPaste(clipboard);
+			}
+		}
+		return false;
+	}
+
+	public boolean canCopy(ISelection selection) {
+		AbstractFormPart focusPart = getFocusSection();
+		if (focusPart != null) {
+			if (focusPart instanceof PDESection) {
+				return ((PDESection) focusPart).canCopy(selection);
+			}
+			if (focusPart instanceof PDEDetails) {
+				return ((PDEDetails) focusPart).canCopy(selection);
+			}
+		}
+		return false;
+	}
+
+	public boolean canCut(ISelection selection) {
+		AbstractFormPart focusPart = getFocusSection();
+		if (focusPart != null) {
+			if (focusPart instanceof PDESection) {
+				return ((PDESection) focusPart).canCut(selection);
+			}
+			if (focusPart instanceof PDEDetails) {
+				return ((PDEDetails) focusPart).canCut(selection);
+			}
+		}
+		return false;
+	}
+
+	private AbstractFormPart getFocusSection() {
+		Control focusControl = getFocusControl();
+		if (focusControl == null)
+			return null;
+		Composite parent = focusControl.getParent();
+		AbstractFormPart targetPart = null;
+		while (parent != null) {
+			Object data = parent.getData(
+			if (data != null &amp;&amp; data instanceof AbstractFormPart) {
+				targetPart = (AbstractFormPart) data;
+				break;
+			}
+			parent = parent.getParent();
+		}
+		return targetPart;
+	}
+
+	protected boolean canPerformDirectly(String id, Control control) {
+		if (control instanceof Text) {
+			Text text = (Text) control;
+			if (id.equals(ActionFactory.CUT.getId())) {
+				text.cut();
+				return true;
+			}
+			if (id.equals(ActionFactory.COPY.getId())) {
+				text.copy();
+				return true;
+			}
+			if (id.equals(ActionFactory.PASTE.getId())) {
+				text.paste();
+				return true;
+			}
+			if (id.equals(ActionFactory.SELECT_ALL.getId())) {
+				text.selectAll();
+				return true;
+			}
+			if (id.equals(ActionFactory.DELETE.getId())) {
+				int count = text.getSelectionCount();
+				if (count == 0) {
+					int caretPos = text.getCaretPosition();
+					text.setSelection(caretPos, caretPos + 1);
+				}
+				text.insert(
+				return true;
+			}
+		}
+		return false;
+	}
+
+	public void cancelEdit() {
+		IFormPart[] parts = getManagedForm().getParts();
+		for (IFormPart part : parts) {
+			if (part instanceof IContextPart)
+				((IContextPart) part).cancelEdit();
+		}
+	}
+
+	@Override
+	public void createPartControl(Composite parent) {
+		super.createPartControl(parent);
+		// Dynamically add focus listeners to all the forms children in order
+		// to track the last focus control
+		IManagedForm managedForm = getManagedForm();
+		if (managedForm != null) {
+			addLastFocusListeners(managedForm.getForm());
+		}
+	}
+
+	/**
+	 * Programatically and recursively add focus listeners to the specified
+	 * composite and its children that track the last control to have focus
+	 * before a page change or the editor lost focus
+	 *
+	 * @param composite
+	 */
+	public void addLastFocusListeners(Composite composite) {
+		Control[] controls = composite.getChildren();
+		for (Control control : controls) {
+			// Add a focus listener if the control is any one of the below types
+			// Note that the controls listed below represent all the controls
+			// currently in use by all form pages in PDE.  In the future,
+			// more controls will have to be added.
+			// Could not add super class categories of controls because it
+			// would include things like tool bars that we don't want to track
+			// focus for.
+			if ((control instanceof Text) || (control instanceof Button) || (control instanceof Combo) || (control instanceof CCombo) || (control instanceof Tree) || (control instanceof Table) || (control instanceof Spinner) || (control instanceof Link) || (control instanceof List) || (control instanceof TabFolder) || (control instanceof CTabFolder) || (control instanceof Hyperlink) || (control instanceof FilteredTree)) {
+				addLastFocusListener(control);
+			}
+			if (control instanceof Composite) {
+				// Recursively add focus listeners to this composites children
+				addLastFocusListeners((Composite) control);
+			}
+		}
+	}
+
+	/**
+	 * Add a focus listener to the specified control that tracks the last
+	 * control to have focus on this page.
+	 * When focus is gained by this control, it registers itself as the last
+	 * control to have focus.  The last control to have focus is stored in order
+	 * to be restored after a page change or editor loses focus.
+	 *
+	 * @param control
+	 */
+	private void addLastFocusListener(final Control control) {
+		control.addFocusListener(new FocusListener() {
+			@Override
+			public void focusGained(FocusEvent e) {
+				// NO-OP
+			}
+
+			@Override
+			public void focusLost(FocusEvent e) {
+				fLastFocusControl = control;
+			}
+		});
+	}
+
+	/**
+	 * Set the focus on the last control to have focus before a page change
+	 * or the editor lost focus.
+	 */
+	public void updateFormSelection() {
+		if ((fLastFocusControl != null) &amp;&amp; (fLastFocusControl.isDisposed() == false)) {
+			Control lastControl = fLastFocusControl;
+			// Set focus on the control
+			lastControl.forceFocus();
+			// If the control is a Text widget, select its contents
+			if (lastControl instanceof Text) {
+				Text text = (Text) lastControl;
+				text.setSelection(0, text.getText().length());
+			}
+		} else {
+			// No focus control set
+			// Fallback on managed form selection mechanism by setting the
+			// focus on this page itself.
+			// The managed form will set focus on the first managed part.
+			// Most likely this will turn out to be a section.
+			// In order for this to work properly, we must override the
+			// sections setFocus() method and set focus on a child control
+			// (preferrably first) that can practically take focus.
+			setFocus();
+		}
+	}
+
+	public Control getLastFocusControl() {
+		return fLastFocusControl;
+	}
+
+	/**
+	 * @param control
+	 */
+	public void setLastFocusControl(Control control) {
+		fLastFocusControl = control;
+	}
+
+	protected void createFormErrorContent(IManagedForm managedForm, String errorTitle, String errorMessage, Exception e) {
+
+		ScrolledForm form = managedForm.getForm();
+		FormToolkit toolkit = managedForm.getToolkit();
+		toolkit.decorateFormHeading(form.getForm());
+
+		Composite parent = form.getBody();
+		GridLayout layout = new GridLayout();
+		GridData data2 = new GridData(GridData.FILL_BOTH);
+		layout.marginWidth = 7;
+		layout.marginHeight = 7;
+		parent.setLayout(layout);
+		parent.setLayoutData(data2);
+		// Set the title and image of the form
+		form.setText(errorTitle);
+		form.setImage(JFaceResources.getImage(Dialog.DLG_IMG_MESSAGE_ERROR));
+
+		int sectionStyle = Section.DESCRIPTION | ExpandableComposite.TITLE_BAR;
+		// Create the message section
+		Section messageSection = createUISection(parent, PDEUIMessages.PDEFormPage_titleMessage, errorMessage, sectionStyle);
+		Composite messageClient = createUISectionContainer(messageSection, 1);
+		// Bind the widgets
+		toolkit.paintBordersFor(messageClient);
+		messageSection.setClient(messageClient);
+		// Ensure the exception was defined
+		if (e == null) {
+			return;
+		}
+		// Create the details section
+		Section detailsSection = createUISection(parent, PDEUIMessages.PDEFormPage_titleDetails, e.getMessage(), sectionStyle);
+		Composite detailsClient = createUISectionContainer(detailsSection, 1);
+		// Create text widget holding the exception trace
+		int style = SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.READ_ONLY;
+		Text text = toolkit.createText(detailsClient, getStackTrace(e), style);
+		GridData data = new GridData(GridData.FILL_HORIZONTAL);
+		data.heightHint = 160;
+		data.widthHint = 200;
+		text.setLayoutData(data);
+		// Bind the widgets
+		toolkit.paintBordersFor(detailsClient);
+		detailsSection.setClient(detailsClient);
+		// Note: The veritical scrollbar fails to appear when text widget is
+		// not entirely shown
+	}
+
+	public Section createUISection(Composite parent, String text, String description, int style) {
+		Section section = getManagedForm().getToolkit().createSection(parent, style);
+		section.clientVerticalSpacing = FormLayoutFactory.SECTION_HEADER_VERTICAL_SPACING;
+		section.setLayout(FormLayoutFactory.createClearGridLayout(false, 1));
+		section.setText(text);
+		section.setDescription(description);
+		GridData data = new GridData(GridData.FILL_HORIZONTAL);
+		section.setLayoutData(data);
+		return section;
+	}
+
+	public Composite createUISectionContainer(Composite parent, int columns) {
+		Composite container = getManagedForm().getToolkit().createComposite(parent);
+		container.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, columns));
+		return container;
+	}
+
+	private String getStackTrace(Throwable throwable) {
+		try (StringWriter swriter = new StringWriter(); PrintWriter pwriter = new PrintWriter(swriter)) {
+			throwable.printStackTrace(pwriter);
+			pwriter.flush();
+			pwriter.close();
+			return swriter.toString();
+		} catch (IOException e) {
+			return 
+		}
+
+	}
+
+	/**
+	 * Used to align the section client / decriptions of two section headers
+	 * horizontally adjacent to each other.  The misalignment is caused by one
+	 * section header containing toolbar icons and the other not.
+	 *
+	 * @param masterSection
+	 * @param detailsSection
+	 */
+	public void alignSectionHeaders(Section masterSection, Section detailsSection) {
+		detailsSection.descriptionVerticalSpacing += masterSection.getTextClientHeightDifference();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/ArgumentsSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/ArgumentsSection.java
位置:  -1,204 +1,204  
-/*******************************************************************************
- * Copyright (c) 2005, 2015 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2005, 2015 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.editor.targetdefinition;
-
-import org.eclipse.pde.core.target.ITargetDefinition;
-
-import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
-
-import org.eclipse.debug.ui.StringVariableSelectionDialog;
-import org.eclipse.jface.window.Window;
-import org.eclipse.pde.internal.ui.PDEPluginImages;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.editor.FormLayoutFactory;
-import org.eclipse.pde.internal.ui.parts.FormEntry;
-import org.eclipse.pde.internal.ui.shared.target.ArgumentsFromContainerSelectionDialog;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.custom.CTabFolder;
-import org.eclipse.swt.custom.CTabItem;
-import org.eclipse.swt.graphics.Color;
-import org.eclipse.swt.graphics.Image;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.layout.GridLayout;
-import org.eclipse.swt.widgets.Button;
-import org.eclipse.swt.widgets.Composite;
-import org.eclipse.ui.forms.IFormColors;
-import org.eclipse.ui.forms.SectionPart;
-import org.eclipse.ui.forms.editor.FormPage;
-import org.eclipse.ui.forms.widgets.*;
-
-/**
- * Section for editing VM and program arguments in the target definition editor
- * @see EnvironmentPage
- * @see TargetEditor
- */
-public class ArgumentsSection extends SectionPart {
-
-	private CTabFolder fTabFolder;
-	private FormEntry fProgramArguments;
-	private FormEntry fVMArguments;
-	private Image fImage;
-	private TargetEditor fEditor;
-
-	public ArgumentsSection(FormPage page, Composite parent) {
-		super(parent, page.getManagedForm().getToolkit(), Section.DESCRIPTION | ExpandableComposite.TITLE_BAR);
-		fEditor = (TargetEditor) page.getEditor();
-		fImage = PDEPluginImages.DESC_ARGUMENT_TAB.createImage();
-		createClient(getSection(), page.getEditor().getToolkit());
-	}
-
-	/**
-	 * @return The target model backing this editor
-	 */
-	private ITargetDefinition getTarget() {
-		return fEditor.getTarget();
-	}
-
-	/**
-	 * Creates the UI for this section.
-	 *
-	 * @param section section the UI is being added to
-	 * @param toolkit form toolkit used to create the widgets
-	 */
-	protected void createClient(Section section, FormToolkit toolkit) {
-		section.setLayout(FormLayoutFactory.createClearGridLayout(false, 1));
-		section.setText(PDEUIMessages.ArgumentsSection_editorTitle);
-		section.setDescription(PDEUIMessages.ArgumentsSection_description);
-		GridData data = new GridData(GridData.FILL_BOTH);
-		data.horizontalSpan = 1;
-		section.setLayoutData(data);
-
-		Composite client = toolkit.createComposite(section);
-		client.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 1));
-		GridData gd = new GridData(GridData.FILL_BOTH);
-		gd.widthHint = 100;
-		client.setLayoutData(gd);
-
-		fTabFolder = new CTabFolder(client, SWT.FLAT | SWT.TOP);
-		toolkit.adapt(fTabFolder, true, true);
-		gd = new GridData(GridData.FILL_BOTH);
-		fTabFolder.setLayoutData(gd);
-		toolkit.getColors().initializeSectionToolBarColors();
-		Color selectedColor = toolkit.getColors().getColor(IFormColors.TB_BG);
-		fTabFolder.setSelectionBackground(new Color[] {selectedColor, toolkit.getColors().getBackground()}, new int[] {100}, true);
-
-		Composite programComp = toolkit.createComposite(fTabFolder);
-		programComp.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 1));
-		programComp.setLayoutData(new GridData(GridData.FILL_BOTH));
-		fProgramArguments = new FormEntry(programComp, toolkit, PDEUIMessages.ArgumentsSection_0, SWT.MULTI | SWT.WRAP);
-		fProgramArguments.getText().setLayoutData(new GridData(GridData.FILL_BOTH));
-		fProgramArguments.setFormEntryListener(new SimpleFormEntryAdapter(this) {
-			@Override
-			public void textValueChanged(FormEntry entry) {
-				String value = entry.getValue().trim();
-				getTarget().setProgramArguments(value.length() > 0 ? value : null);
-			}
-		});
-		Button variables = toolkit.createButton(programComp, PDEUIMessages.ArgumentsSection_variableButtonTitle, SWT.NONE);
-		variables.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END));
-		variables.addSelectionListener(widgetSelectedAdapter(e -> {
-			StringVariableSelectionDialog dialog = new StringVariableSelectionDialog(getSection().getShell());
-			dialog.open();
-			String variable = dialog.getVariableExpression();
-			if (variable != null) {
-				fProgramArguments.getText().insert(variable);
-			}
-		}));
-		CTabItem programTab = new CTabItem(fTabFolder, SWT.NULL);
-		programTab.setText(PDEUIMessages.ArgumentsSection_programTabLabel);
-		programTab.setImage(fImage);
-		programTab.setControl(programComp);
-		toolkit.paintBordersFor(programComp);
-
-		Composite vmComp = toolkit.createComposite(fTabFolder);
-		vmComp.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 1));
-		vmComp.setLayoutData(new GridData(GridData.FILL_BOTH));
-		fVMArguments = new FormEntry(vmComp, toolkit, PDEUIMessages.ArgumentsSection_1, SWT.MULTI | SWT.WRAP);
-		fVMArguments.getText().setLayoutData(new GridData(GridData.FILL_BOTH));
-		fVMArguments.setFormEntryListener(new SimpleFormEntryAdapter(this) {
-			@Override
-			public void textValueChanged(FormEntry entry) {
-				String value = entry.getValue().trim();
-				getTarget().setVMArguments(value.length() > 0 ? value : null);
-			}
-		});
-
-		Composite buttons = new Composite(vmComp, SWT.NONE);
-		GridLayout layout = FormLayoutFactory.createSectionClientGridLayout(false, 2);
-		layout.marginTop = 0;
-		layout.marginBottom = 0;
-		layout.marginRight = 0;
-		layout.marginLeft = 0;
-		buttons.setLayout(layout);
-		buttons.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END));
-		Button vmArgs = toolkit.createButton(buttons, PDEUIMessages.ArgumentsSection_argumentsButtonTitle, SWT.NONE);
-		vmArgs.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END));
-		vmArgs.addSelectionListener(widgetSelectedAdapter(e -> {
-			ArgumentsFromContainerSelectionDialog dialog = new ArgumentsFromContainerSelectionDialog(getSection().getShell(), getTarget());
-			if (dialog.open() == Window.OK) {
-				String[] args = dialog.getSelectedArguments();
-				if (args != null &amp;&amp; args.length > 0) {
-					StringBuilder resultBuffer = new StringBuilder();
-					for (String arg : args) {
-						resultBuffer.append(arg + 
-					}
-					fVMArguments.getText().insert(resultBuffer.toString());
-				}
-			}
-		}));
-
-		variables = toolkit.createButton(buttons, PDEUIMessages.ArgumentsSection_variableButtonTitle, SWT.NONE);
-		variables.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END));
-		variables.addSelectionListener(widgetSelectedAdapter(e -> {
-			StringVariableSelectionDialog dialog = new StringVariableSelectionDialog(getSection().getShell());
-			dialog.open();
-			String variable = dialog.getVariableExpression();
-			if (variable != null) {
-				fVMArguments.getText().insert(variable);
-			}
-		}));
-		CTabItem vmTab = new CTabItem(fTabFolder, SWT.NULL);
-		vmTab.setText(PDEUIMessages.ArgumentsSection_vmTabLabel);
-		vmTab.setImage(fImage);
-		vmTab.setControl(vmComp);
-		toolkit.paintBordersFor(vmComp);
-
-		fTabFolder.setSelection(programTab);
-
-		toolkit.paintBordersFor(client);
-		section.setClient(client);
-	}
-
-	@Override
-	public void refresh() {
-		fProgramArguments.setValue(getTarget().getProgramArguments(), true);
-		fVMArguments.setValue(getTarget().getVMArguments(), true);
-		super.refresh();
-	}
-
-	@Override
-	public void commit(boolean onSave) {
-		fProgramArguments.commit();
-		fVMArguments.commit();
-		super.commit(onSave);
-	}
-
-	@Override
-	public void dispose() {
-		if (fImage != null)
-			fImage.dispose();
-		super.dispose();
-	}
-
-}
+package org.eclipse.pde.internal.ui.editor.targetdefinition;
+
+import org.eclipse.pde.core.target.ITargetDefinition;
+
+import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
+
+import org.eclipse.debug.ui.StringVariableSelectionDialog;
+import org.eclipse.jface.window.Window;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.editor.FormLayoutFactory;
+import org.eclipse.pde.internal.ui.parts.FormEntry;
+import org.eclipse.pde.internal.ui.shared.target.ArgumentsFromContainerSelectionDialog;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.custom.CTabFolder;
+import org.eclipse.swt.custom.CTabItem;
+import org.eclipse.swt.graphics.Color;
+import org.eclipse.swt.graphics.Image;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
+import org.eclipse.swt.widgets.Button;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.ui.forms.IFormColors;
+import org.eclipse.ui.forms.SectionPart;
+import org.eclipse.ui.forms.editor.FormPage;
+import org.eclipse.ui.forms.widgets.*;
+
+/**
+ * Section for editing VM and program arguments in the target definition editor
+ * @see EnvironmentPage
+ * @see TargetEditor
+ */
+public class ArgumentsSection extends SectionPart {
+
+	private CTabFolder fTabFolder;
+	private FormEntry fProgramArguments;
+	private FormEntry fVMArguments;
+	private Image fImage;
+	private TargetEditor fEditor;
+
+	public ArgumentsSection(FormPage page, Composite parent) {
+		super(parent, page.getManagedForm().getToolkit(), Section.DESCRIPTION | ExpandableComposite.TITLE_BAR);
+		fEditor = (TargetEditor) page.getEditor();
+		fImage = PDEPluginImages.DESC_ARGUMENT_TAB.createImage();
+		createClient(getSection(), page.getEditor().getToolkit());
+	}
+
+	/**
+	 * @return The target model backing this editor
+	 */
+	private ITargetDefinition getTarget() {
+		return fEditor.getTarget();
+	}
+
+	/**
+	 * Creates the UI for this section.
+	 *
+	 * @param section section the UI is being added to
+	 * @param toolkit form toolkit used to create the widgets
+	 */
+	protected void createClient(Section section, FormToolkit toolkit) {
+		section.setLayout(FormLayoutFactory.createClearGridLayout(false, 1));
+		section.setText(PDEUIMessages.ArgumentsSection_editorTitle);
+		section.setDescription(PDEUIMessages.ArgumentsSection_description);
+		GridData data = new GridData(GridData.FILL_BOTH);
+		data.horizontalSpan = 1;
+		section.setLayoutData(data);
+
+		Composite client = toolkit.createComposite(section);
+		client.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 1));
+		GridData gd = new GridData(GridData.FILL_BOTH);
+		gd.widthHint = 100;
+		client.setLayoutData(gd);
+
+		fTabFolder = new CTabFolder(client, SWT.FLAT | SWT.TOP);
+		toolkit.adapt(fTabFolder, true, true);
+		gd = new GridData(GridData.FILL_BOTH);
+		fTabFolder.setLayoutData(gd);
+		toolkit.getColors().initializeSectionToolBarColors();
+		Color selectedColor = toolkit.getColors().getColor(IFormColors.TB_BG);
+		fTabFolder.setSelectionBackground(new Color[] {selectedColor, toolkit.getColors().getBackground()}, new int[] {100}, true);
+
+		Composite programComp = toolkit.createComposite(fTabFolder);
+		programComp.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 1));
+		programComp.setLayoutData(new GridData(GridData.FILL_BOTH));
+		fProgramArguments = new FormEntry(programComp, toolkit, PDEUIMessages.ArgumentsSection_0, SWT.MULTI | SWT.WRAP);
+		fProgramArguments.getText().setLayoutData(new GridData(GridData.FILL_BOTH));
+		fProgramArguments.setFormEntryListener(new SimpleFormEntryAdapter(this) {
+			@Override
+			public void textValueChanged(FormEntry entry) {
+				String value = entry.getValue().trim();
+				getTarget().setProgramArguments(value.length() > 0 ? value : null);
+			}
+		});
+		Button variables = toolkit.createButton(programComp, PDEUIMessages.ArgumentsSection_variableButtonTitle, SWT.NONE);
+		variables.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END));
+		variables.addSelectionListener(widgetSelectedAdapter(e -> {
+			StringVariableSelectionDialog dialog = new StringVariableSelectionDialog(getSection().getShell());
+			dialog.open();
+			String variable = dialog.getVariableExpression();
+			if (variable != null) {
+				fProgramArguments.getText().insert(variable);
+			}
+		}));
+		CTabItem programTab = new CTabItem(fTabFolder, SWT.NULL);
+		programTab.setText(PDEUIMessages.ArgumentsSection_programTabLabel);
+		programTab.setImage(fImage);
+		programTab.setControl(programComp);
+		toolkit.paintBordersFor(programComp);
+
+		Composite vmComp = toolkit.createComposite(fTabFolder);
+		vmComp.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 1));
+		vmComp.setLayoutData(new GridData(GridData.FILL_BOTH));
+		fVMArguments = new FormEntry(vmComp, toolkit, PDEUIMessages.ArgumentsSection_1, SWT.MULTI | SWT.WRAP);
+		fVMArguments.getText().setLayoutData(new GridData(GridData.FILL_BOTH));
+		fVMArguments.setFormEntryListener(new SimpleFormEntryAdapter(this) {
+			@Override
+			public void textValueChanged(FormEntry entry) {
+				String value = entry.getValue().trim();
+				getTarget().setVMArguments(value.length() > 0 ? value : null);
+			}
+		});
+
+		Composite buttons = new Composite(vmComp, SWT.NONE);
+		GridLayout layout = FormLayoutFactory.createSectionClientGridLayout(false, 2);
+		layout.marginTop = 0;
+		layout.marginBottom = 0;
+		layout.marginRight = 0;
+		layout.marginLeft = 0;
+		buttons.setLayout(layout);
+		buttons.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END));
+		Button vmArgs = toolkit.createButton(buttons, PDEUIMessages.ArgumentsSection_argumentsButtonTitle, SWT.NONE);
+		vmArgs.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END));
+		vmArgs.addSelectionListener(widgetSelectedAdapter(e -> {
+			ArgumentsFromContainerSelectionDialog dialog = new ArgumentsFromContainerSelectionDialog(getSection().getShell(), getTarget());
+			if (dialog.open() == Window.OK) {
+				String[] args = dialog.getSelectedArguments();
+				if (args != null &amp;&amp; args.length > 0) {
+					StringBuilder resultBuffer = new StringBuilder();
+					for (String arg : args) {
+						resultBuffer.append(arg + 
+					}
+					fVMArguments.getText().insert(resultBuffer.toString());
+				}
+			}
+		}));
+
+		variables = toolkit.createButton(buttons, PDEUIMessages.ArgumentsSection_variableButtonTitle, SWT.NONE);
+		variables.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_END));
+		variables.addSelectionListener(widgetSelectedAdapter(e -> {
+			StringVariableSelectionDialog dialog = new StringVariableSelectionDialog(getSection().getShell());
+			dialog.open();
+			String variable = dialog.getVariableExpression();
+			if (variable != null) {
+				fVMArguments.getText().insert(variable);
+			}
+		}));
+		CTabItem vmTab = new CTabItem(fTabFolder, SWT.NULL);
+		vmTab.setText(PDEUIMessages.ArgumentsSection_vmTabLabel);
+		vmTab.setImage(fImage);
+		vmTab.setControl(vmComp);
+		toolkit.paintBordersFor(vmComp);
+
+		fTabFolder.setSelection(programTab);
+
+		toolkit.paintBordersFor(client);
+		section.setClient(client);
+	}
+
+	@Override
+	public void refresh() {
+		fProgramArguments.setValue(getTarget().getProgramArguments(), true);
+		fVMArguments.setValue(getTarget().getVMArguments(), true);
+		super.refresh();
+	}
+
+	@Override
+	public void commit(boolean onSave) {
+		fProgramArguments.commit();
+		fVMArguments.commit();
+		super.commit(onSave);
+	}
+
+	@Override
+	public void dispose() {
+		if (fImage != null)
+			fImage.dispose();
+		super.dispose();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentPage.java
位置:  -1,81 +1,81  
-/*******************************************************************************
- * Copyright (c) 2005, 2015 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2005, 2015 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.editor.targetdefinition;
-
-import org.eclipse.pde.internal.ui.*;
-import org.eclipse.pde.internal.ui.editor.FormLayoutFactory;
-import org.eclipse.swt.widgets.Composite;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.forms.IManagedForm;
-import org.eclipse.ui.forms.editor.FormEditor;
-import org.eclipse.ui.forms.editor.FormPage;
-import org.eclipse.ui.forms.widgets.FormToolkit;
-import org.eclipse.ui.forms.widgets.ScrolledForm;
-
-/**
- * Second page for the target definition editor.  Provides ability to alter various
- * environment elements of the target.
- * @see TargetEditor
- * @see EnvironmentSection
- * @see JRESection
- * @see ArgumentsSection
- * @see ImplicitDependenciesSection
- */
-public class EnvironmentPage extends FormPage {
-
-	public static final String PAGE_ID = 
+package org.eclipse.pde.internal.ui.editor.targetdefinition;
+
+import org.eclipse.pde.internal.ui.*;
+import org.eclipse.pde.internal.ui.editor.FormLayoutFactory;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.forms.IManagedForm;
+import org.eclipse.ui.forms.editor.FormEditor;
+import org.eclipse.ui.forms.editor.FormPage;
+import org.eclipse.ui.forms.widgets.FormToolkit;
+import org.eclipse.ui.forms.widgets.ScrolledForm;
+
+/**
+ * Second page for the target definition editor.  Provides ability to alter various
+ * environment elements of the target.
+ * @see TargetEditor
+ * @see EnvironmentSection
+ * @see JRESection
+ * @see ArgumentsSection
+ * @see ImplicitDependenciesSection
+ */
+public class EnvironmentPage extends FormPage {
+
+	public static final String PAGE_ID = 
+
+	public EnvironmentPage(FormEditor editor) {
+		super(editor, PAGE_ID, PDEUIMessages.EnvironmentPage_title);
+	}
 
-	public EnvironmentPage(FormEditor editor) {
-		super(editor, PAGE_ID, PDEUIMessages.EnvironmentPage_title);
-	}
-
-	@Override
-	protected void createFormContent(IManagedForm managedForm) {
-		super.createFormContent(managedForm);
-		ScrolledForm form = managedForm.getForm();
-		form.setText(PDEUIMessages.EnvironmentPage_title);
-		PDEPlugin.getDefault().getLabelProvider().connect(this);
-		form.setImage(PDEPlugin.getDefault().getLabelProvider().get(PDEPluginImages.DESC_TARGET_ENVIRONMENT));
-		FormToolkit toolkit = managedForm.getToolkit();
-		fillBody(managedForm, toolkit);
-		toolkit.decorateFormHeading(form.getForm());
-		((TargetEditor) getEditor()).contributeToToolbar(managedForm.getForm(), IHelpContextIds.TARGET_EDITOR_ENVIRONMENT_PAGE);
-		((TargetEditor) getEditor()).addForm(managedForm);
-		form.updateToolBar();
-		PlatformUI.getWorkbench().getHelpSystem().setHelp(form.getBody(), IHelpContextIds.TARGET_EDITOR_ENVIRONMENT_PAGE);
-		PlatformUI.getWorkbench().getHelpSystem().setHelp(form, IHelpContextIds.TARGET_EDITOR_ENVIRONMENT_PAGE);
-	}
-
-	@Override
-	public void dispose() {
-		PDEPlugin.getDefault().getLabelProvider().disconnect(this);
-		super.dispose();
-	}
+	@Override
+	protected void createFormContent(IManagedForm managedForm) {
+		super.createFormContent(managedForm);
+		ScrolledForm form = managedForm.getForm();
+		form.setText(PDEUIMessages.EnvironmentPage_title);
+		PDEPlugin.getDefault().getLabelProvider().connect(this);
+		form.setImage(PDEPlugin.getDefault().getLabelProvider().get(PDEPluginImages.DESC_TARGET_ENVIRONMENT));
+		FormToolkit toolkit = managedForm.getToolkit();
+		fillBody(managedForm, toolkit);
+		toolkit.decorateFormHeading(form.getForm());
+		((TargetEditor) getEditor()).contributeToToolbar(managedForm.getForm(), IHelpContextIds.TARGET_EDITOR_ENVIRONMENT_PAGE);
+		((TargetEditor) getEditor()).addForm(managedForm);
+		form.updateToolBar();
+		PlatformUI.getWorkbench().getHelpSystem().setHelp(form.getBody(), IHelpContextIds.TARGET_EDITOR_ENVIRONMENT_PAGE);
+		PlatformUI.getWorkbench().getHelpSystem().setHelp(form, IHelpContextIds.TARGET_EDITOR_ENVIRONMENT_PAGE);
+	}
 
-	private void fillBody(IManagedForm managedForm, FormToolkit toolkit) {
-		Composite body = managedForm.getForm().getBody();
-		body.setLayout(FormLayoutFactory.createFormGridLayout(false, 2));
+	@Override
+	public void dispose() {
+		PDEPlugin.getDefault().getLabelProvider().disconnect(this);
+		super.dispose();
+	}
+
+	private void fillBody(IManagedForm managedForm, FormToolkit toolkit) {
+		Composite body = managedForm.getForm().getBody();
+		body.setLayout(FormLayoutFactory.createFormGridLayout(false, 2));
+
+		managedForm.addPart(new EnvironmentSection(this, body));
+		managedForm.addPart(new JRESection(this, body));
+		managedForm.addPart(new ArgumentsSection(this, body));
+		managedForm.addPart(new ImplicitDependenciesSection(this, body));
+	}
 
-		managedForm.addPart(new EnvironmentSection(this, body));
-		managedForm.addPart(new JRESection(this, body));
-		managedForm.addPart(new ArgumentsSection(this, body));
-		managedForm.addPart(new ImplicitDependenciesSection(this, body));
-	}
-
-	@Override
-	public boolean canLeaveThePage() {
-		((TargetEditor) getEditor()).setDirty(isDirty());
-		return true;
-	}
-}
+	@Override
+	public boolean canLeaveThePage() {
+		((TargetEditor) getEditor()).setDirty(isDirty());
+		return true;
+	}
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/InformationSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/InformationSection.java
位置:  -1,113 +1,113  
-/*******************************************************************************
- * Copyright (c) 2009, 2018 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.ui.editor.targetdefinition;
-
-import org.eclipse.jface.dialogs.IMessageProvider;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.editor.FormLayoutFactory;
-import org.eclipse.pde.internal.ui.editor.validation.ControlValidationUtility;
-import org.eclipse.pde.internal.ui.editor.validation.TextValidator;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.widgets.Composite;
-import org.eclipse.swt.widgets.Text;
-import org.eclipse.ui.forms.SectionPart;
-import org.eclipse.ui.forms.editor.FormPage;
-import org.eclipse.ui.forms.widgets.*;
-
-/**
- * Section for editing target name and description in the target definition editor
- * @see DefinitionPage
- * @see TargetEditor
- */
-public class InformationSection extends SectionPart {
-
-	private Text fNameText;
-	private TargetEditor fEditor;
-
-	private TextValidator fNameTextValidator;
-	private FormPage fPage;
-
-	public InformationSection(FormPage page, Composite parent) {
-		super(parent, page.getManagedForm().getToolkit(), ExpandableComposite.TITLE_BAR);
-		fPage = page;
-		fEditor = (TargetEditor) page.getEditor();
-		createClient(getSection(), page.getEditor().getToolkit());
-	}
-
-	/**
-	 * @return The target model backing this editor
-	 */
-	private ITargetDefinition getTarget() {
-		return fEditor.getTarget();
-	}
-
-	/**
-	 * Creates the UI for this section.
-	 *
-	 * @param section section the UI is being added to
-	 * @param toolkit form toolkit used to create the widgets
-	 */
-	protected void createClient(Section section, FormToolkit toolkit) {
-		section.setLayout(FormLayoutFactory.createClearGridLayout(false, 1));
-		GridData data = new GridData(GridData.FILL_HORIZONTAL);
-		data.verticalAlignment = SWT.TOP;
-		data.horizontalSpan = 2;
-		section.setLayoutData(data);
-
-		section.setText(PDEUIMessages.InformationSection_0);
-
-		Composite client = toolkit.createComposite(section);
-		client.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 2));
-		client.setLayoutData(new GridData(GridData.FILL_BOTH));
-
-		fNameText = toolkit.createText(client, getTarget().getName());
-		fNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
-		fNameText.addModifyListener(e -> {
-			String value = fNameText.getText().trim();
-			String name = getTarget().getName();
-			if (!value.equals(name)) {
-				getTarget().setName(value.length() > 0 ? value : null);
-				markDirty();
-			}
-
-		});
-
-		fNameTextValidator = new TextValidator(fPage.getManagedForm(), fNameText, null, true) {
-
-			@Override
-			protected boolean autoEnable() {
-				if (getText().getEditable() == false) {
-					return false;
-				}
-				return true;
-			}
-
-			@Override
-			protected boolean validateControl() {
-				return ControlValidationUtility.validateRequiredField(fNameText.getText(), fNameTextValidator, IMessageProvider.ERROR);
-			}
-		};
-		toolkit.paintBordersFor(client);
-		section.setClient(client);
-	}
-
-	@Override
-	public void refresh() {
-		fNameText.setText(getTarget().getName() != null ? getTarget().getName() : 
-		super.refresh();
-	}
-
-}
+/*******************************************************************************
+ * Copyright (c) 2009, 2018 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.editor.targetdefinition;
+
+import org.eclipse.jface.dialogs.IMessageProvider;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.editor.FormLayoutFactory;
+import org.eclipse.pde.internal.ui.editor.validation.ControlValidationUtility;
+import org.eclipse.pde.internal.ui.editor.validation.TextValidator;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Text;
+import org.eclipse.ui.forms.SectionPart;
+import org.eclipse.ui.forms.editor.FormPage;
+import org.eclipse.ui.forms.widgets.*;
+
+/**
+ * Section for editing target name and description in the target definition editor
+ * @see DefinitionPage
+ * @see TargetEditor
+ */
+public class InformationSection extends SectionPart {
+
+	private Text fNameText;
+	private TargetEditor fEditor;
+
+	private TextValidator fNameTextValidator;
+	private FormPage fPage;
+
+	public InformationSection(FormPage page, Composite parent) {
+		super(parent, page.getManagedForm().getToolkit(), ExpandableComposite.TITLE_BAR);
+		fPage = page;
+		fEditor = (TargetEditor) page.getEditor();
+		createClient(getSection(), page.getEditor().getToolkit());
+	}
+
+	/**
+	 * @return The target model backing this editor
+	 */
+	private ITargetDefinition getTarget() {
+		return fEditor.getTarget();
+	}
+
+	/**
+	 * Creates the UI for this section.
+	 *
+	 * @param section section the UI is being added to
+	 * @param toolkit form toolkit used to create the widgets
+	 */
+	protected void createClient(Section section, FormToolkit toolkit) {
+		section.setLayout(FormLayoutFactory.createClearGridLayout(false, 1));
+		GridData data = new GridData(GridData.FILL_HORIZONTAL);
+		data.verticalAlignment = SWT.TOP;
+		data.horizontalSpan = 2;
+		section.setLayoutData(data);
+
+		section.setText(PDEUIMessages.InformationSection_0);
+
+		Composite client = toolkit.createComposite(section);
+		client.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 2));
+		client.setLayoutData(new GridData(GridData.FILL_BOTH));
+
+		fNameText = toolkit.createText(client, getTarget().getName());
+		fNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
+		fNameText.addModifyListener(e -> {
+			String value = fNameText.getText().trim();
+			String name = getTarget().getName();
+			if (!value.equals(name)) {
+				getTarget().setName(value.length() > 0 ? value : null);
+				markDirty();
+			}
+
+		});
+
+		fNameTextValidator = new TextValidator(fPage.getManagedForm(), fNameText, null, true) {
+
+			@Override
+			protected boolean autoEnable() {
+				if (getText().getEditable() == false) {
+					return false;
+				}
+				return true;
+			}
+
+			@Override
+			protected boolean validateControl() {
+				return ControlValidationUtility.validateRequiredField(fNameText.getText(), fNameTextValidator, IMessageProvider.ERROR);
+			}
+		};
+		toolkit.paintBordersFor(client);
+		section.setClient(client);
+	}
+
+	@Override
+	public void refresh() {
+		fNameText.setText(getTarget().getName() != null ? getTarget().getName() : 
+		super.refresh();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/JRESection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/JRESection.java
位置:  -1,226 +1,226  
-/*******************************************************************************
- * Copyright (c) 2005, 2015 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2005, 2015 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.editor.targetdefinition;
-
-import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
-
-import java.util.TreeSet;
-import org.eclipse.core.runtime.IPath;
-import org.eclipse.jdt.launching.JavaRuntime;
-import org.eclipse.jdt.launching.environments.IExecutionEnvironment;
-import org.eclipse.jdt.launching.environments.IExecutionEnvironmentsManager;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.internal.core.util.VMUtil;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.SWTFactory;
-import org.eclipse.pde.internal.ui.editor.FormLayoutFactory;
-import org.eclipse.pde.internal.ui.parts.ComboPart;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.widgets.Button;
-import org.eclipse.swt.widgets.Composite;
-import org.eclipse.ui.dialogs.PreferencesUtil;
-import org.eclipse.ui.forms.SectionPart;
-import org.eclipse.ui.forms.editor.FormPage;
-import org.eclipse.ui.forms.widgets.*;
-
-/**
- * Section for editing the JRE path in the target definition editor
- * @see EnvironmentPage
- * @see TargetEditor
- */
-public class JRESection extends SectionPart {
-
-	private Button fDefaultJREButton;
-	private Button fNamedJREButton;
-	private Button fExecEnvButton;
-	private ComboPart fNamedJREsCombo;
-	private ComboPart fExecEnvsCombo;
-	private TreeSet<String> fExecEnvChoices;
-	private boolean fBlockChanges;
-	private Button fConfigureJREButton;
-	private TargetEditor fEditor;
-
-	private static String JRE_PREF_PAGE_ID = 
-	private static String EE_PREF_PAGE_ID = 
-
-	public JRESection(FormPage page, Composite parent) {
-		super(parent, page.getManagedForm().getToolkit(), Section.DESCRIPTION | ExpandableComposite.TITLE_BAR);
-		fEditor = (TargetEditor) page.getEditor();
-		createClient(getSection(), page.getEditor().getToolkit());
-	}
-
-	/**
-	 * @return The target model backing this editor
-	 */
-	private ITargetDefinition getTarget() {
-		return fEditor.getTarget();
-	}
-
-	/**
-	 * Creates the UI for this section.
-	 *
-	 * @param section section the UI is being added to
-	 * @param toolkit form toolkit used to create the widgets
-	 */
-	protected void createClient(Section section, FormToolkit toolkit) {
-		section.setText(PDEUIMessages.EnvironmentBlock_jreTitle);
-		section.setDescription(PDEUIMessages.JRESection_description);
-		section.setLayout(FormLayoutFactory.createClearGridLayout(false, 1));
-		GridData data = new GridData(GridData.FILL_HORIZONTAL);
-		data.verticalAlignment = SWT.TOP;
-		data.horizontalSpan = 2;
-		section.setLayoutData(data);
-
-		Composite client = toolkit.createComposite(section);
-		client.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 3));
-
-		initializeValues();
-
-		fDefaultJREButton = toolkit.createButton(client, PDEUIMessages.JRESection_defaultJRE, SWT.RADIO);
-		GridData gd = new GridData();
-		gd.horizontalSpan = 3;
-		fDefaultJREButton.setLayoutData(gd);
-		fDefaultJREButton.addSelectionListener(widgetSelectedAdapter(e -> {
-			updateWidgets();
-			if (!fBlockChanges) {
-				getTarget().setJREContainer(null);
-				markDirty();
-			}
-		}));
-
-		fNamedJREButton = toolkit.createButton(client, PDEUIMessages.JRESection_JREName, SWT.RADIO);
-		fNamedJREButton.addSelectionListener(widgetSelectedAdapter(e -> {
-			updateWidgets();
-			if (!fBlockChanges) {
-				getTarget().setJREContainer(JavaRuntime.newJREContainerPath(VMUtil.getVMInstall(fNamedJREsCombo.getSelection())));
-				markDirty();
-			}
-		}));
-
-		fNamedJREsCombo = new ComboPart();
-		fNamedJREsCombo.createControl(client, toolkit, SWT.SINGLE | SWT.BORDER | SWT.READ_ONLY);
-		fNamedJREsCombo.getControl().setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
-		String[] installs = VMUtil.getVMInstallNames();
-		fNamedJREsCombo.setItems(installs);
-		fNamedJREsCombo.setVisibleItemCount(30);
-		fNamedJREsCombo.addModifyListener(e -> {
-			if (!fBlockChanges) {
-				getTarget().setJREContainer(JavaRuntime.newJREContainerPath(VMUtil.getVMInstall(fNamedJREsCombo.getSelection())));
-				markDirty();
-			}
-		});
-
-		fConfigureJREButton = toolkit.createButton(client, PDEUIMessages.JRESection_jrePreference, SWT.PUSH);
-		fConfigureJREButton.addSelectionListener(widgetSelectedAdapter(e -> openPreferencePage(JRE_PREF_PAGE_ID)));
-		fConfigureJREButton.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL));
-		SWTFactory.setButtonDimensionHint(fConfigureJREButton);
-
-		fExecEnvButton = toolkit.createButton(client, PDEUIMessages.JRESection_ExecutionEnv, SWT.RADIO);
-		fExecEnvButton.addSelectionListener(widgetSelectedAdapter(e -> {
-			updateWidgets();
-			if (!fBlockChanges) {
-				getTarget().setJREContainer(JavaRuntime.newJREContainerPath(VMUtil.getExecutionEnvironment(fExecEnvsCombo.getSelection())));
-				markDirty();
-			}
-		}));
-
-		fExecEnvsCombo = new ComboPart();
-		fExecEnvsCombo.createControl(client, toolkit, SWT.SINGLE | SWT.BORDER | SWT.READ_ONLY);
-		fExecEnvsCombo.getControl().setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
-		fExecEnvsCombo.setItems(fExecEnvChoices.toArray(new String[fExecEnvChoices.size()]));
-		fExecEnvsCombo.setVisibleItemCount(30);
-		fExecEnvsCombo.addModifyListener(e -> {
-			if (!fBlockChanges) {
-				getTarget().setJREContainer(JavaRuntime.newJREContainerPath(VMUtil.getExecutionEnvironment(fExecEnvsCombo.getSelection())));
-				markDirty();
-			}
-		});
-
-		Button configureEEButton = toolkit.createButton(client, PDEUIMessages.JRESection_eePreference, SWT.PUSH);
-		configureEEButton.addSelectionListener(widgetSelectedAdapter(e -> openPreferencePage(EE_PREF_PAGE_ID)));
-		configureEEButton.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL));
-		SWTFactory.setButtonDimensionHint(configureEEButton);
-
-		refresh();
-		section.setClient(client);
-	}
-
-	/**
-	 * Initializes the combo with possible execution enviroments
-	 */
-	protected void initializeValues() {
-		fExecEnvChoices = new TreeSet<>();
-		IExecutionEnvironmentsManager manager = JavaRuntime.getExecutionEnvironmentsManager();
-		IExecutionEnvironment[] envs = manager.getExecutionEnvironments();
-		for (IExecutionEnvironment env : envs)
-			fExecEnvChoices.add(env.getId());
-	}
-
-	protected void updateWidgets() {
-		fNamedJREsCombo.setEnabled(fNamedJREButton.getSelection());
-		fExecEnvsCombo.setEnabled(fExecEnvButton.getSelection());
-	}
-
-	@Override
-	public void refresh() {
-		fBlockChanges = true;
-		IPath jrePath = getTarget().getJREContainer();
-		if (jrePath == null || jrePath.equals(JavaRuntime.newDefaultJREContainerPath())) {
-			fDefaultJREButton.setSelection(true);
-			fExecEnvButton.setSelection(false);
-			fNamedJREButton.setSelection(false);
-		} else {
-			String ee = JavaRuntime.getExecutionEnvironmentId(jrePath);
-			if (ee != null) {
-				fExecEnvButton.setSelection(true);
-				fDefaultJREButton.setSelection(false);
-				fNamedJREButton.setSelection(false);
-				fExecEnvsCombo.select(fExecEnvsCombo.indexOf(ee));
-			} else {
-				String vm = JavaRuntime.getVMInstallName(jrePath);
-				if (vm != null) {
-					fNamedJREButton.setSelection(true);
-					fDefaultJREButton.setSelection(false);
-					fExecEnvButton.setSelection(false);
-					fNamedJREsCombo.select(fNamedJREsCombo.indexOf(vm));
-				}
-			}
-		}
-
-		if (fExecEnvsCombo.getSelectionIndex() == -1)
-			fExecEnvsCombo.setText(fExecEnvChoices.first().toString());
-
-		if (fNamedJREsCombo.getSelectionIndex() == -1)
-			fNamedJREsCombo.setText(VMUtil.getDefaultVMInstallName());
-
-		updateWidgets();
-		super.refresh();
-		fBlockChanges = false;
-	}
-
-	/**
-	 * Opens a preference page and refreshes the combo choices when closed
-	 * @param pageID the preference page ID to open
-	 */
-	private void openPreferencePage(String pageID) {
-		fBlockChanges = true;
-		PreferencesUtil.createPreferenceDialogOn(fEditor.getEditorSite().getShell(), pageID, new String[] {pageID}, null).open();
-		// reset JRE select because either JDT preference page allows user to add/remove JREs
-		fNamedJREsCombo.setItems(VMUtil.getVMInstallNames());
-		refresh();
-		fBlockChanges = false;
-	}
-
-}
+package org.eclipse.pde.internal.ui.editor.targetdefinition;
+
+import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
+
+import java.util.TreeSet;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.jdt.launching.JavaRuntime;
+import org.eclipse.jdt.launching.environments.IExecutionEnvironment;
+import org.eclipse.jdt.launching.environments.IExecutionEnvironmentsManager;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.internal.core.util.VMUtil;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.SWTFactory;
+import org.eclipse.pde.internal.ui.editor.FormLayoutFactory;
+import org.eclipse.pde.internal.ui.parts.ComboPart;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.widgets.Button;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.ui.dialogs.PreferencesUtil;
+import org.eclipse.ui.forms.SectionPart;
+import org.eclipse.ui.forms.editor.FormPage;
+import org.eclipse.ui.forms.widgets.*;
+
+/**
+ * Section for editing the JRE path in the target definition editor
+ * @see EnvironmentPage
+ * @see TargetEditor
+ */
+public class JRESection extends SectionPart {
+
+	private Button fDefaultJREButton;
+	private Button fNamedJREButton;
+	private Button fExecEnvButton;
+	private ComboPart fNamedJREsCombo;
+	private ComboPart fExecEnvsCombo;
+	private TreeSet<String> fExecEnvChoices;
+	private boolean fBlockChanges;
+	private Button fConfigureJREButton;
+	private TargetEditor fEditor;
+
+	private static String JRE_PREF_PAGE_ID = 
+	private static String EE_PREF_PAGE_ID = 
+
+	public JRESection(FormPage page, Composite parent) {
+		super(parent, page.getManagedForm().getToolkit(), Section.DESCRIPTION | ExpandableComposite.TITLE_BAR);
+		fEditor = (TargetEditor) page.getEditor();
+		createClient(getSection(), page.getEditor().getToolkit());
+	}
+
+	/**
+	 * @return The target model backing this editor
+	 */
+	private ITargetDefinition getTarget() {
+		return fEditor.getTarget();
+	}
+
+	/**
+	 * Creates the UI for this section.
+	 *
+	 * @param section section the UI is being added to
+	 * @param toolkit form toolkit used to create the widgets
+	 */
+	protected void createClient(Section section, FormToolkit toolkit) {
+		section.setText(PDEUIMessages.EnvironmentBlock_jreTitle);
+		section.setDescription(PDEUIMessages.JRESection_description);
+		section.setLayout(FormLayoutFactory.createClearGridLayout(false, 1));
+		GridData data = new GridData(GridData.FILL_HORIZONTAL);
+		data.verticalAlignment = SWT.TOP;
+		data.horizontalSpan = 2;
+		section.setLayoutData(data);
+
+		Composite client = toolkit.createComposite(section);
+		client.setLayout(FormLayoutFactory.createSectionClientGridLayout(false, 3));
+
+		initializeValues();
+
+		fDefaultJREButton = toolkit.createButton(client, PDEUIMessages.JRESection_defaultJRE, SWT.RADIO);
+		GridData gd = new GridData();
+		gd.horizontalSpan = 3;
+		fDefaultJREButton.setLayoutData(gd);
+		fDefaultJREButton.addSelectionListener(widgetSelectedAdapter(e -> {
+			updateWidgets();
+			if (!fBlockChanges) {
+				getTarget().setJREContainer(null);
+				markDirty();
+			}
+		}));
+
+		fNamedJREButton = toolkit.createButton(client, PDEUIMessages.JRESection_JREName, SWT.RADIO);
+		fNamedJREButton.addSelectionListener(widgetSelectedAdapter(e -> {
+			updateWidgets();
+			if (!fBlockChanges) {
+				getTarget().setJREContainer(JavaRuntime.newJREContainerPath(VMUtil.getVMInstall(fNamedJREsCombo.getSelection())));
+				markDirty();
+			}
+		}));
+
+		fNamedJREsCombo = new ComboPart();
+		fNamedJREsCombo.createControl(client, toolkit, SWT.SINGLE | SWT.BORDER | SWT.READ_ONLY);
+		fNamedJREsCombo.getControl().setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
+		String[] installs = VMUtil.getVMInstallNames();
+		fNamedJREsCombo.setItems(installs);
+		fNamedJREsCombo.setVisibleItemCount(30);
+		fNamedJREsCombo.addModifyListener(e -> {
+			if (!fBlockChanges) {
+				getTarget().setJREContainer(JavaRuntime.newJREContainerPath(VMUtil.getVMInstall(fNamedJREsCombo.getSelection())));
+				markDirty();
+			}
+		});
+
+		fConfigureJREButton = toolkit.createButton(client, PDEUIMessages.JRESection_jrePreference, SWT.PUSH);
+		fConfigureJREButton.addSelectionListener(widgetSelectedAdapter(e -> openPreferencePage(JRE_PREF_PAGE_ID)));
+		fConfigureJREButton.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL));
+		SWTFactory.setButtonDimensionHint(fConfigureJREButton);
+
+		fExecEnvButton = toolkit.createButton(client, PDEUIMessages.JRESection_ExecutionEnv, SWT.RADIO);
+		fExecEnvButton.addSelectionListener(widgetSelectedAdapter(e -> {
+			updateWidgets();
+			if (!fBlockChanges) {
+				getTarget().setJREContainer(JavaRuntime.newJREContainerPath(VMUtil.getExecutionEnvironment(fExecEnvsCombo.getSelection())));
+				markDirty();
+			}
+		}));
+
+		fExecEnvsCombo = new ComboPart();
+		fExecEnvsCombo.createControl(client, toolkit, SWT.SINGLE | SWT.BORDER | SWT.READ_ONLY);
+		fExecEnvsCombo.getControl().setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
+		fExecEnvsCombo.setItems(fExecEnvChoices.toArray(new String[fExecEnvChoices.size()]));
+		fExecEnvsCombo.setVisibleItemCount(30);
+		fExecEnvsCombo.addModifyListener(e -> {
+			if (!fBlockChanges) {
+				getTarget().setJREContainer(JavaRuntime.newJREContainerPath(VMUtil.getExecutionEnvironment(fExecEnvsCombo.getSelection())));
+				markDirty();
+			}
+		});
+
+		Button configureEEButton = toolkit.createButton(client, PDEUIMessages.JRESection_eePreference, SWT.PUSH);
+		configureEEButton.addSelectionListener(widgetSelectedAdapter(e -> openPreferencePage(EE_PREF_PAGE_ID)));
+		configureEEButton.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL));
+		SWTFactory.setButtonDimensionHint(configureEEButton);
+
+		refresh();
+		section.setClient(client);
+	}
+
+	/**
+	 * Initializes the combo with possible execution enviroments
+	 */
+	protected void initializeValues() {
+		fExecEnvChoices = new TreeSet<>();
+		IExecutionEnvironmentsManager manager = JavaRuntime.getExecutionEnvironmentsManager();
+		IExecutionEnvironment[] envs = manager.getExecutionEnvironments();
+		for (IExecutionEnvironment env : envs)
+			fExecEnvChoices.add(env.getId());
+	}
+
+	protected void updateWidgets() {
+		fNamedJREsCombo.setEnabled(fNamedJREButton.getSelection());
+		fExecEnvsCombo.setEnabled(fExecEnvButton.getSelection());
+	}
+
+	@Override
+	public void refresh() {
+		fBlockChanges = true;
+		IPath jrePath = getTarget().getJREContainer();
+		if (jrePath == null || jrePath.equals(JavaRuntime.newDefaultJREContainerPath())) {
+			fDefaultJREButton.setSelection(true);
+			fExecEnvButton.setSelection(false);
+			fNamedJREButton.setSelection(false);
+		} else {
+			String ee = JavaRuntime.getExecutionEnvironmentId(jrePath);
+			if (ee != null) {
+				fExecEnvButton.setSelection(true);
+				fDefaultJREButton.setSelection(false);
+				fNamedJREButton.setSelection(false);
+				fExecEnvsCombo.select(fExecEnvsCombo.indexOf(ee));
+			} else {
+				String vm = JavaRuntime.getVMInstallName(jrePath);
+				if (vm != null) {
+					fNamedJREButton.setSelection(true);
+					fDefaultJREButton.setSelection(false);
+					fExecEnvButton.setSelection(false);
+					fNamedJREsCombo.select(fNamedJREsCombo.indexOf(vm));
+				}
+			}
+		}
+
+		if (fExecEnvsCombo.getSelectionIndex() == -1)
+			fExecEnvsCombo.setText(fExecEnvChoices.first().toString());
+
+		if (fNamedJREsCombo.getSelectionIndex() == -1)
+			fNamedJREsCombo.setText(VMUtil.getDefaultVMInstallName());
+
+		updateWidgets();
+		super.refresh();
+		fBlockChanges = false;
+	}
+
+	/**
+	 * Opens a preference page and refreshes the combo choices when closed
+	 * @param pageID the preference page ID to open
+	 */
+	private void openPreferencePage(String pageID) {
+		fBlockChanges = true;
+		PreferencesUtil.createPreferenceDialogOn(fEditor.getEditorSite().getShell(), pageID, new String[] {pageID}, null).open();
+		// reset JRE select because either JDT preference page allows user to add/remove JREs
+		fNamedJREsCombo.setItems(VMUtil.getVMInstallNames());
+		refresh();
+		fBlockChanges = false;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/GenericExceptionStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/GenericExceptionStatusHandler.java
位置:  -1,29 +1,29  
-/*******************************************************************************
- * Copyright (c) 2009, 2015 eXXcellent solutions gmbh and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2015 eXXcellent solutions gmbh and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.launcher;
-
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.debug.core.IStatusHandler;
-import org.eclipse.pde.internal.ui.PDEPlugin;
-
-public class GenericExceptionStatusHandler implements IStatusHandler {
-
-	@Override
-	public Object handleStatus(IStatus status, Object source) throws CoreException {
-		PDEPlugin.logException(status.getException());
-		return null;
-	}
-
-}
+package org.eclipse.pde.internal.ui.launcher;
+
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.debug.core.IStatusHandler;
+import org.eclipse.pde.internal.ui.PDEPlugin;
+
+public class GenericExceptionStatusHandler implements IStatusHandler {
+
+	@Override
+	public Object handleStatus(IStatus status, Object source) throws CoreException {
+		PDEPlugin.logException(status.getException());
+		return null;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java
位置:  -1,204 +1,204  
-/*******************************************************************************
- * Copyright (c) 2009, 2019 eXXcellent solutions gmbh, EclipseSource Corporation,
- * IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
- *     EclipseSource - initial API and implementation, ongoing enhancements
- *     IBM Corporation - ongoing enhancements
- *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
- *******************************************************************************/
-package org.eclipse.pde.internal.ui.launcher;
-
-import java.util.*;
-import org.eclipse.core.resources.IProject;
-import org.eclipse.core.runtime.*;
-import org.eclipse.debug.core.ILaunchConfiguration;
-import org.eclipse.debug.core.IStatusHandler;
-import org.eclipse.debug.ui.*;
-import org.eclipse.jface.dialogs.IDialogConstants;
-import org.eclipse.jface.dialogs.MessageDialog;
-import org.eclipse.jface.viewers.IStructuredSelection;
-import org.eclipse.jface.viewers.StructuredSelection;
-import org.eclipse.ltk.core.refactoring.Change;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.internal.launching.PDELaunchingPlugin;
-import org.eclipse.pde.internal.launching.PDEMessages;
-import org.eclipse.pde.internal.launching.launcher.LauncherUtils;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.wizards.tools.OrganizeManifestsProcessor;
-import org.eclipse.pde.launching.IPDELauncherConstants;
-import org.eclipse.pde.ui.launcher.MainTab;
-import org.eclipse.swt.widgets.Display;
-import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.*;
-
-public class LauncherUtilsStatusHandler implements IStatusHandler {
-
-	@Override
-	public Object handleStatus(IStatus status, Object source) throws CoreException {
-		int code = status.getCode();
-		switch (code) {
-			case LauncherUtils.WORKSPACE_LOCKED :
-				Object[] args = (Object[]) source;
-				handleWorkspaceLocked((String) args[0], (ILaunchConfiguration) args[1], (String) args[2]);
-				break;
-
-			case LauncherUtils.CLEAR_LOG :
-				return clearLog();
-
-			case LauncherUtils.DELETE_WORKSPACE :
-				return deleteWorkspace((String) source);
-
-			case LauncherUtils.GENERATE_CONFIG_INI :
-				return generateConfigIni();
-
-			case LauncherUtils.ORGANIZE_MANIFESTS :
-				Object[] args2 = (Object[]) source;
-				organizeManifests((ArrayList<?>) args2[0], (IProgressMonitor) args2[1], (Properties) args2[2]);
-				break;
-
-			case LauncherUtils.SELECT_WORKSPACE_FIELD :
-				ILaunchConfigurationDialog dialog = (ILaunchConfigurationDialog) source;
-				selectWorkspaceField(dialog);
-				break;
-		}
-		return null;
-	}
-
-	private void selectWorkspaceField(ILaunchConfigurationDialog dialog) {
-		ILaunchConfigurationTab[] tabs = dialog.getTabs();
-		if (tabs != null) {
-			for (ILaunchConfigurationTab tab : tabs) {
-				if (tab instanceof MainTab) {
-					MainTab mainTab = (MainTab) tab;
-					dialog.setActiveTab(mainTab);
-					mainTab.applyData(IPDELauncherConstants.LOCATION);
-				}
-			}
-		}
-	}
-
-	private Boolean generateConfigIni() {
-		String message = PDEUIMessages.LauncherUtils_generateConfigIni;
-		return Boolean.valueOf(
-				generateConfirmDialog(message, IDialogConstants.YES_LABEL, IDialogConstants.NO_LABEL, 0).intValue() == 0);
-	}
-
-	private Integer deleteWorkspace(String path) {
-		return generateConfirmDialog(
-				NLS.bind(PDEUIMessages.WorkbenchLauncherConfigurationDelegate_confirmDeleteWorkspace, path),
-				PDEUIMessages.WorkbenchLauncherConfigurationDelegate_clearButtonLabel,
-				PDEUIMessages.WorkbenchLauncherConfigurationDelegate_dontClearButtonLabel, 1);
-	}
-
-	private Integer clearLog() {
-		return generateConfirmDialog(PDEUIMessages.LauncherUtils_clearLogFile,
-				PDEUIMessages.WorkbenchLauncherConfigurationDelegate_clearButtonLabel,
-				PDEUIMessages.WorkbenchLauncherConfigurationDelegate_dontClearButtonLabel, 0);
-	}
-
-	private void handleWorkspaceLocked(String workspace, ILaunchConfiguration launchConfig, String mode) {
-		String message = NLS.bind(PDEMessages.LauncherUtils_cannotLaunchApplication, workspace);
-		generateErrorDialog(PDEUIMessages.LauncherUtils_workspaceLocked, message, launchConfig, mode);
-	}
-
-	private void organizeManifests(final ArrayList<?> projects, final IProgressMonitor monitor, final Properties lastRun) {
-		Display.getDefault().syncExec(() -> {
-			OrganizeManifestsProcessor processor = new OrganizeManifestsProcessor(projects);
-			initializeProcessor(processor);
-			try {
-				Change change = processor.createChange(monitor);
-				change.perform(monitor);
-				// update table for each project with current time stamp
-				Properties table = lastRun;
-				String ts = Long.toString(System.currentTimeMillis());
-				Iterator<?> it = projects.iterator();
-				while (it.hasNext())
-					table.put(((IProject) it.next()).getName(), ts);
-			} catch (OperationCanceledException | CoreException e2) {
-			}
-		});
-	}
-
-	public static Display getDisplay() {
-		Display display = Display.getCurrent();
-		if (display == null) {
-			display = Display.getDefault();
-		}
-		return display;
-	}
-
-	public final static Shell getActiveShell() {
-		IWorkbench workbench = PlatformUI.getWorkbench();
-		IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
-		if (window == null) {
-			IWorkbenchWindow[] windows = workbench.getWorkbenchWindows();
-			if (windows.length > 0) {
-				return windows[0].getShell();
-			}
-		} else {
-			return window.getShell();
-		}
-		return getDisplay().getActiveShell();
-	}
-
-	private static void initializeProcessor(OrganizeManifestsProcessor processor) {
-		processor.setAddMissing(false);
-		processor.setRemoveUnresolved(false);
-		processor.setModifyDep(false);
-		processor.setRemoveLazy(false);
-		processor.setRemoveUselessFiles(false);
-		processor.setAddDependencies(true);
-		processor.setCalculateUses(false);
-		processor.setMarkInternal(false);
-		processor.setPrefixIconNL(false);
-		processor.setUnusedDependencies(false);
-		processor.setUnusedKeys(false);
-	}
-
-	/**
-	 * Creates a message dialog using a syncExec in case we are launching in the background.
-	 * Dialog will be a question dialog with Yes, No and Cancel buttons.
-	 * @param message Message to use in the dialog
-	 * @param yesLabel the label for the accepting button
-	 * @param noLabel the label for the rejecting button
-	 * @param defaultButton the initial selected button (0 for yes, 1 for no, 2 for cancel)
-	 * @return int representing the button clicked (-1 or 2 for cancel, 0 for yes, 1 for no).
-	 */
-	private static Integer generateConfirmDialog(final String message, final String yesLabel, final String noLabel,
-			final int defaultButton) {
-		final int[] result = new int[1];
-		getDisplay().syncExec(() -> {
-			String title = PDEUIMessages.LauncherUtils_title;
-			MessageDialog dialog = new MessageDialog(getActiveShell(), title, null, message, MessageDialog.QUESTION,
-					defaultButton, yesLabel, noLabel, IDialogConstants.CANCEL_LABEL);
-			result[0] = dialog.open();
-		});
-		return Integer.valueOf(result[0]);
-	}
-
-	private static void generateErrorDialog(final String title, final String message, final ILaunchConfiguration launchConfig, final String mode) {
-		getDisplay().syncExec(() -> {
-			Shell parentShell = getActiveShell();
-			MessageDialog dialog = new MessageDialog(parentShell, title, null, message, MessageDialog.ERROR, 1,
-					PDEUIMessages.LauncherUtils_edit, PDEUIMessages.LauncherUtils_cancelLaunch);
-			int res = dialog.open();
-			if (res == 0) {
-				IStructuredSelection selection = new StructuredSelection(launchConfig);
-				ILaunchGroup group = DebugUITools.getLaunchGroup(launchConfig, mode);
-				String groupIdentifier = group == null ? IDebugUIConstants.ID_RUN_LAUNCH_GROUP : group.getIdentifier();
-				IStatus status = new Status(IStatus.OK, PDELaunchingPlugin.getPluginId(), LauncherUtils.SELECT_WORKSPACE_FIELD, 
-				DebugUITools.openLaunchConfigurationDialogOnGroup(parentShell, selection, groupIdentifier, status);
-			}
-		});
-	}
-
-}
+/*******************************************************************************
+ * Copyright (c) 2009, 2019 eXXcellent solutions gmbh, EclipseSource Corporation,
+ * IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
+ *     EclipseSource - initial API and implementation, ongoing enhancements
+ *     IBM Corporation - ongoing enhancements
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.launcher;
+
+import java.util.*;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.runtime.*;
+import org.eclipse.debug.core.ILaunchConfiguration;
+import org.eclipse.debug.core.IStatusHandler;
+import org.eclipse.debug.ui.*;
+import org.eclipse.jface.dialogs.IDialogConstants;
+import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.ltk.core.refactoring.Change;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.internal.launching.PDELaunchingPlugin;
+import org.eclipse.pde.internal.launching.PDEMessages;
+import org.eclipse.pde.internal.launching.launcher.LauncherUtils;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.wizards.tools.OrganizeManifestsProcessor;
+import org.eclipse.pde.launching.IPDELauncherConstants;
+import org.eclipse.pde.ui.launcher.MainTab;
+import org.eclipse.swt.widgets.Display;
+import org.eclipse.swt.widgets.Shell;
+import org.eclipse.ui.*;
+
+public class LauncherUtilsStatusHandler implements IStatusHandler {
+
+	@Override
+	public Object handleStatus(IStatus status, Object source) throws CoreException {
+		int code = status.getCode();
+		switch (code) {
+			case LauncherUtils.WORKSPACE_LOCKED :
+				Object[] args = (Object[]) source;
+				handleWorkspaceLocked((String) args[0], (ILaunchConfiguration) args[1], (String) args[2]);
+				break;
+
+			case LauncherUtils.CLEAR_LOG :
+				return clearLog();
+
+			case LauncherUtils.DELETE_WORKSPACE :
+				return deleteWorkspace((String) source);
+
+			case LauncherUtils.GENERATE_CONFIG_INI :
+				return generateConfigIni();
+
+			case LauncherUtils.ORGANIZE_MANIFESTS :
+				Object[] args2 = (Object[]) source;
+				organizeManifests((ArrayList<?>) args2[0], (IProgressMonitor) args2[1], (Properties) args2[2]);
+				break;
+
+			case LauncherUtils.SELECT_WORKSPACE_FIELD :
+				ILaunchConfigurationDialog dialog = (ILaunchConfigurationDialog) source;
+				selectWorkspaceField(dialog);
+				break;
+		}
+		return null;
+	}
+
+	private void selectWorkspaceField(ILaunchConfigurationDialog dialog) {
+		ILaunchConfigurationTab[] tabs = dialog.getTabs();
+		if (tabs != null) {
+			for (ILaunchConfigurationTab tab : tabs) {
+				if (tab instanceof MainTab) {
+					MainTab mainTab = (MainTab) tab;
+					dialog.setActiveTab(mainTab);
+					mainTab.applyData(IPDELauncherConstants.LOCATION);
+				}
+			}
+		}
+	}
+
+	private Boolean generateConfigIni() {
+		String message = PDEUIMessages.LauncherUtils_generateConfigIni;
+		return Boolean.valueOf(
+				generateConfirmDialog(message, IDialogConstants.YES_LABEL, IDialogConstants.NO_LABEL, 0).intValue() == 0);
+	}
+
+	private Integer deleteWorkspace(String path) {
+		return generateConfirmDialog(
+				NLS.bind(PDEUIMessages.WorkbenchLauncherConfigurationDelegate_confirmDeleteWorkspace, path),
+				PDEUIMessages.WorkbenchLauncherConfigurationDelegate_clearButtonLabel,
+				PDEUIMessages.WorkbenchLauncherConfigurationDelegate_dontClearButtonLabel, 1);
+	}
+
+	private Integer clearLog() {
+		return generateConfirmDialog(PDEUIMessages.LauncherUtils_clearLogFile,
+				PDEUIMessages.WorkbenchLauncherConfigurationDelegate_clearButtonLabel,
+				PDEUIMessages.WorkbenchLauncherConfigurationDelegate_dontClearButtonLabel, 0);
+	}
+
+	private void handleWorkspaceLocked(String workspace, ILaunchConfiguration launchConfig, String mode) {
+		String message = NLS.bind(PDEMessages.LauncherUtils_cannotLaunchApplication, workspace);
+		generateErrorDialog(PDEUIMessages.LauncherUtils_workspaceLocked, message, launchConfig, mode);
+	}
+
+	private void organizeManifests(final ArrayList<?> projects, final IProgressMonitor monitor, final Properties lastRun) {
+		Display.getDefault().syncExec(() -> {
+			OrganizeManifestsProcessor processor = new OrganizeManifestsProcessor(projects);
+			initializeProcessor(processor);
+			try {
+				Change change = processor.createChange(monitor);
+				change.perform(monitor);
+				// update table for each project with current time stamp
+				Properties table = lastRun;
+				String ts = Long.toString(System.currentTimeMillis());
+				Iterator<?> it = projects.iterator();
+				while (it.hasNext())
+					table.put(((IProject) it.next()).getName(), ts);
+			} catch (OperationCanceledException | CoreException e2) {
+			}
+		});
+	}
+
+	public static Display getDisplay() {
+		Display display = Display.getCurrent();
+		if (display == null) {
+			display = Display.getDefault();
+		}
+		return display;
+	}
+
+	public final static Shell getActiveShell() {
+		IWorkbench workbench = PlatformUI.getWorkbench();
+		IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
+		if (window == null) {
+			IWorkbenchWindow[] windows = workbench.getWorkbenchWindows();
+			if (windows.length > 0) {
+				return windows[0].getShell();
+			}
+		} else {
+			return window.getShell();
+		}
+		return getDisplay().getActiveShell();
+	}
+
+	private static void initializeProcessor(OrganizeManifestsProcessor processor) {
+		processor.setAddMissing(false);
+		processor.setRemoveUnresolved(false);
+		processor.setModifyDep(false);
+		processor.setRemoveLazy(false);
+		processor.setRemoveUselessFiles(false);
+		processor.setAddDependencies(true);
+		processor.setCalculateUses(false);
+		processor.setMarkInternal(false);
+		processor.setPrefixIconNL(false);
+		processor.setUnusedDependencies(false);
+		processor.setUnusedKeys(false);
+	}
+
+	/**
+	 * Creates a message dialog using a syncExec in case we are launching in the background.
+	 * Dialog will be a question dialog with Yes, No and Cancel buttons.
+	 * @param message Message to use in the dialog
+	 * @param yesLabel the label for the accepting button
+	 * @param noLabel the label for the rejecting button
+	 * @param defaultButton the initial selected button (0 for yes, 1 for no, 2 for cancel)
+	 * @return int representing the button clicked (-1 or 2 for cancel, 0 for yes, 1 for no).
+	 */
+	private static Integer generateConfirmDialog(final String message, final String yesLabel, final String noLabel,
+			final int defaultButton) {
+		final int[] result = new int[1];
+		getDisplay().syncExec(() -> {
+			String title = PDEUIMessages.LauncherUtils_title;
+			MessageDialog dialog = new MessageDialog(getActiveShell(), title, null, message, MessageDialog.QUESTION,
+					defaultButton, yesLabel, noLabel, IDialogConstants.CANCEL_LABEL);
+			result[0] = dialog.open();
+		});
+		return Integer.valueOf(result[0]);
+	}
+
+	private static void generateErrorDialog(final String title, final String message, final ILaunchConfiguration launchConfig, final String mode) {
+		getDisplay().syncExec(() -> {
+			Shell parentShell = getActiveShell();
+			MessageDialog dialog = new MessageDialog(parentShell, title, null, message, MessageDialog.ERROR, 1,
+					PDEUIMessages.LauncherUtils_edit, PDEUIMessages.LauncherUtils_cancelLaunch);
+			int res = dialog.open();
+			if (res == 0) {
+				IStructuredSelection selection = new StructuredSelection(launchConfig);
+				ILaunchGroup group = DebugUITools.getLaunchGroup(launchConfig, mode);
+				String groupIdentifier = group == null ? IDebugUIConstants.ID_RUN_LAUNCH_GROUP : group.getIdentifier();
+				IStatus status = new Status(IStatus.OK, PDELaunchingPlugin.getPluginId(), LauncherUtils.SELECT_WORKSPACE_FIELD, 
+				DebugUITools.openLaunchConfigurationDialogOnGroup(parentShell, selection, groupIdentifier, status);
+			}
+		});
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginValidationStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/PluginValidationStatusHandler.java
位置:  -1,59 +1,59  
-/*******************************************************************************
- * Copyright (c) 2009, 2015 eXXcellent solutions gmbh, EclipseSource Corporation
- * and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2015 eXXcellent solutions gmbh, EclipseSource Corporation
+ * and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
- *     EclipseSource - initial API and implementation, ongoing enhancements
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
+ *     EclipseSource - initial API and implementation, ongoing enhancements
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.launcher;
-
-import org.eclipse.core.runtime.*;
-import org.eclipse.debug.core.IStatusHandler;
-import org.eclipse.jface.dialogs.IDialogConstants;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.internal.launching.PDEMessages;
-import org.eclipse.pde.internal.launching.launcher.*;
-import org.eclipse.pde.internal.ui.*;
-import org.eclipse.pde.internal.ui.elements.NamedElement;
-import org.eclipse.swt.graphics.Image;
-import org.eclipse.swt.widgets.Display;
-
-public class PluginValidationStatusHandler implements IStatusHandler {
-	@Override
-	public Object handleStatus(IStatus status, Object source) throws CoreException {
-		if (status.getCode() == EclipsePluginValidationOperation.CREATE_EXTENSION_ERROR_CODE)
-			return createExtensionError((String) source);
-		else if (status.getCode() == LaunchPluginValidator.DISPLAY_VALIDATION_ERROR_CODE)
-			displayValidationError((LaunchValidationOperation) source);
-		return null;
-	}
-
-	private Object createExtensionError(String bundleID) {
-		String name = NLS.bind(PDEMessages.EclipsePluginValidationOperation_pluginMissing, bundleID);
-		PDELabelProvider provider = PDEPlugin.getDefault().getLabelProvider();
-		Image image = provider.get(PDEPluginImages.DESC_PLUGIN_OBJ);
-		return new NamedElement(name, image);
-	}
-
-	private void displayValidationError(final LaunchValidationOperation op) throws CoreException {
-		final int[] result = new int[1];
-		final Display display = LauncherUtilsStatusHandler.getDisplay();
-		display.syncExec(() -> {
-			PluginStatusDialog dialog = new PluginStatusDialog(display.getActiveShell());
-			dialog.showCancelButton(true);
-			dialog.setInput(op.getInput());
-			result[0] = dialog.open();
-		});
-		if (result[0] == IDialogConstants.CANCEL_ID)
-			throw new CoreException(Status.CANCEL_STATUS);
-	}
-
-}
+package org.eclipse.pde.internal.ui.launcher;
+
+import org.eclipse.core.runtime.*;
+import org.eclipse.debug.core.IStatusHandler;
+import org.eclipse.jface.dialogs.IDialogConstants;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.internal.launching.PDEMessages;
+import org.eclipse.pde.internal.launching.launcher.*;
+import org.eclipse.pde.internal.ui.*;
+import org.eclipse.pde.internal.ui.elements.NamedElement;
+import org.eclipse.swt.graphics.Image;
+import org.eclipse.swt.widgets.Display;
+
+public class PluginValidationStatusHandler implements IStatusHandler {
+	@Override
+	public Object handleStatus(IStatus status, Object source) throws CoreException {
+		if (status.getCode() == EclipsePluginValidationOperation.CREATE_EXTENSION_ERROR_CODE)
+			return createExtensionError((String) source);
+		else if (status.getCode() == LaunchPluginValidator.DISPLAY_VALIDATION_ERROR_CODE)
+			displayValidationError((LaunchValidationOperation) source);
+		return null;
+	}
+
+	private Object createExtensionError(String bundleID) {
+		String name = NLS.bind(PDEMessages.EclipsePluginValidationOperation_pluginMissing, bundleID);
+		PDELabelProvider provider = PDEPlugin.getDefault().getLabelProvider();
+		Image image = provider.get(PDEPluginImages.DESC_PLUGIN_OBJ);
+		return new NamedElement(name, image);
+	}
+
+	private void displayValidationError(final LaunchValidationOperation op) throws CoreException {
+		final int[] result = new int[1];
+		final Display display = LauncherUtilsStatusHandler.getDisplay();
+		display.syncExec(() -> {
+			PluginStatusDialog dialog = new PluginStatusDialog(display.getActiveShell());
+			dialog.showCancelButton(true);
+			dialog.setInput(op.getInput());
+			result[0] = dialog.open();
+		});
+		if (result[0] == IDialogConstants.CANCEL_ID)
+			throw new CoreException(Status.CANCEL_STATUS);
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/IUContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/IUContentProvider.java
位置:  -1,96 +1,96  
-/*******************************************************************************
- * Copyright (c) 2011, 2016 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2016 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 487988
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 487988
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.shared.target;
-
-import java.util.ArrayList;
-import java.util.List;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.equinox.p2.metadata.IInstallableUnit;
-import org.eclipse.jface.viewers.ITreeContentProvider;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.internal.core.target.IUBundleContainer;
-import org.eclipse.pde.internal.core.target.P2TargetUtils;
-
-/**
- * Content Provider for the  {@link IUBundleContainer} target location
- *
- */
-public class IUContentProvider implements ITreeContentProvider {
-
-	@Override
-	public Object[] getElements(Object inputElement) {
-		return null;
-	}
-
-	@Override
-	public Object[] getChildren(Object parentElement) {
-		IUBundleContainer location = (IUBundleContainer) parentElement;
-		if (location.isResolved()) {
-			try {
-				// if this is a bundle container then we must be sure that all bundle containers are
-				// happy since they all share the same profile.
-				ITargetDefinition target = location.getTarget();
-				if (target == null || !P2TargetUtils.isResolved(target)) {
-					return new Object[0];
-				}
-				IInstallableUnit[] units = location.getInstallableUnits();
-				// Wrap the units so that they remember their parent container
-				List<IUWrapper> wrappedUnits = new ArrayList<>(units.length);
-				for (IInstallableUnit unit : units) {
-					wrappedUnits.add(new IUWrapper(unit, location));
-				}
-				return wrappedUnits.toArray();
-			} catch (CoreException e) {
-				return new Object[] {e.getStatus()};
-			}
-		}
-		return new Object[0];
-	}
-
-	@Override
-	public Object getParent(Object element) {
-		if (element instanceof IUWrapper) {
-			return ((IUWrapper) element).getParent();
-		}
-		return null;
-	}
-
-	@Override
-	public boolean hasChildren(Object element) {
-		return false;
-	}
+package org.eclipse.pde.internal.ui.shared.target;
+
+import java.util.ArrayList;
+import java.util.List;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.equinox.p2.metadata.IInstallableUnit;
+import org.eclipse.jface.viewers.ITreeContentProvider;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.internal.core.target.IUBundleContainer;
+import org.eclipse.pde.internal.core.target.P2TargetUtils;
+
+/**
+ * Content Provider for the  {@link IUBundleContainer} target location
+ *
+ */
+public class IUContentProvider implements ITreeContentProvider {
 
-	/**
-	 * Wraps an installable unit so that it knows what bundle container parent it belongs to
-	 * in the tree.
-	 */
-	public class IUWrapper {
-		private IInstallableUnit fIU;
-		private IUBundleContainer fParent;
+	@Override
+	public Object[] getElements(Object inputElement) {
+		return null;
+	}
 
-		public IUWrapper(IInstallableUnit unit, IUBundleContainer parent) {
-			fIU = unit;
-			fParent = parent;
-		}
+	@Override
+	public Object[] getChildren(Object parentElement) {
+		IUBundleContainer location = (IUBundleContainer) parentElement;
+		if (location.isResolved()) {
+			try {
+				// if this is a bundle container then we must be sure that all bundle containers are
+				// happy since they all share the same profile.
+				ITargetDefinition target = location.getTarget();
+				if (target == null || !P2TargetUtils.isResolved(target)) {
+					return new Object[0];
+				}
+				IInstallableUnit[] units = location.getInstallableUnits();
+				// Wrap the units so that they remember their parent container
+				List<IUWrapper> wrappedUnits = new ArrayList<>(units.length);
+				for (IInstallableUnit unit : units) {
+					wrappedUnits.add(new IUWrapper(unit, location));
+				}
+				return wrappedUnits.toArray();
+			} catch (CoreException e) {
+				return new Object[] {e.getStatus()};
+			}
+		}
+		return new Object[0];
+	}
 
-		public IInstallableUnit getIU() {
-			return fIU;
-		}
+	@Override
+	public Object getParent(Object element) {
+		if (element instanceof IUWrapper) {
+			return ((IUWrapper) element).getParent();
+		}
+		return null;
+	}
 
-		public IUBundleContainer getParent() {
-			return fParent;
-		}
-	}
-}
+	@Override
+	public boolean hasChildren(Object element) {
+		return false;
+	}
+
+	/**
+	 * Wraps an installable unit so that it knows what bundle container parent it belongs to
+	 * in the tree.
+	 */
+	public class IUWrapper {
+		private IInstallableUnit fIU;
+		private IUBundleContainer fParent;
+
+		public IUWrapper(IInstallableUnit unit, IUBundleContainer parent) {
+			fIU = unit;
+			fParent = parent;
+		}
+
+		public IInstallableUnit getIU() {
+			return fIU;
+		}
+
+		public IUBundleContainer getParent() {
+			return fParent;
+		}
+	}
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/InstallableUnitWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/InstallableUnitWizard.java
位置:  -1,74 +1,74  
-/*******************************************************************************
- * Copyright (c) 2011, 2015 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.ui.shared.target;
+/*******************************************************************************
+ * Copyright (c) 2011, 2015 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.shared.target;
+
+import org.eclipse.jface.dialogs.IDialogSettings;
+import org.eclipse.jface.wizard.Wizard;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.core.target.ITargetLocation;
+import org.eclipse.pde.internal.ui.PDEPlugin;
+import org.eclipse.pde.ui.target.ITargetLocationWizard;
+
+/**
+ * Wizard for selecting Installable Units.
+ *
+ * Contributed to provide UI for <code>IUBundleContainer</code> target location through extension to
+ * org.eclipse.pde.ui.targetProvisioner
+ *
+ */
+public class InstallableUnitWizard extends Wizard implements ITargetLocationWizard {
+
+	public static final String CONTRIBUTION_ID = 
+
+	private ITargetDefinition fTarget;
+
+	private ITargetLocation fLocation;
+
+	/**
+	 * Section in the dialog settings for this wizard and the wizards created with selection
+	 * Shared with the EditBundleContainerWizard
+	 */
+	static final String SETTINGS_SECTION = 
+
+	public InstallableUnitWizard() {
+		setWindowTitle(Messages.AddBundleContainerSelectionPage_1);
+	}
 
-import org.eclipse.jface.dialogs.IDialogSettings;
-import org.eclipse.jface.wizard.Wizard;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.core.target.ITargetLocation;
-import org.eclipse.pde.internal.ui.PDEPlugin;
-import org.eclipse.pde.ui.target.ITargetLocationWizard;
+	@Override
+	public void setTarget(ITargetDefinition target) {
+		fTarget = target;
+	}
 
-/**
- * Wizard for selecting Installable Units.
- *
- * Contributed to provide UI for <code>IUBundleContainer</code> target location through extension to
- * org.eclipse.pde.ui.targetProvisioner
- *
- */
-public class InstallableUnitWizard extends Wizard implements ITargetLocationWizard {
+	@Override
+	public void addPages() {
+		IDialogSettings settings = PDEPlugin.getDefault().getDialogSettings().getSection(SETTINGS_SECTION);
+		if (settings == null) {
+			settings = PDEPlugin.getDefault().getDialogSettings().addNewSection(SETTINGS_SECTION);
+		}
+		setDialogSettings(settings);
+		addPage(new EditIUContainerPage(fTarget));
+	}
 
-	public static final String CONTRIBUTION_ID = 
+	@Override
+	public boolean performFinish() {
+		fLocation = ((EditIUContainerPage) getPages()[0]).getBundleContainer();
+		return true;
+	}
 
-	private ITargetDefinition fTarget;
-
-	private ITargetLocation fLocation;
-
-	/**
-	 * Section in the dialog settings for this wizard and the wizards created with selection
-	 * Shared with the EditBundleContainerWizard
-	 */
-	static final String SETTINGS_SECTION = 
-
-	public InstallableUnitWizard() {
-		setWindowTitle(Messages.AddBundleContainerSelectionPage_1);
-	}
-
-	@Override
-	public void setTarget(ITargetDefinition target) {
-		fTarget = target;
-	}
-
-	@Override
-	public void addPages() {
-		IDialogSettings settings = PDEPlugin.getDefault().getDialogSettings().getSection(SETTINGS_SECTION);
-		if (settings == null) {
-			settings = PDEPlugin.getDefault().getDialogSettings().addNewSection(SETTINGS_SECTION);
-		}
-		setDialogSettings(settings);
-		addPage(new EditIUContainerPage(fTarget));
-	}
-
-	@Override
-	public boolean performFinish() {
-		fLocation = ((EditIUContainerPage) getPages()[0]).getBundleContainer();
-		return true;
-	}
-
-	@Override
-	public ITargetLocation[] getLocations() {
-		return new ITargetLocation[] {fLocation};
-	}
-
-}
+	@Override
+	public ITargetLocation[] getLocations() {
+		return new ITargetLocation[] {fLocation};
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/TargetLocationLabelProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/target/TargetLocationLabelProvider.java
位置:  -1,63 +1,63  
-/*******************************************************************************
- * Copyright (c) 2011, 2016 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2016 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *     Martin Karpisek <martin.karpisek@gmail.com> - Bug 507831
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *     Martin Karpisek <martin.karpisek@gmail.com> - Bug 507831
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.shared.target;
-
-import org.eclipse.core.runtime.Platform;
-import org.eclipse.jface.viewers.ILabelProvider;
-import org.eclipse.jface.viewers.ViewerCell;
-import org.eclipse.swt.graphics.Image;
-
-/**
- * Label provider for the tree.  Will try to adapt the element to an ILabelProvider to create
- * the text and image.
- */
-public class TargetLocationLabelProvider extends StyledBundleLabelProvider {
-
-	public TargetLocationLabelProvider(boolean showVersion, boolean appendResolvedVariables) {
-		super(showVersion, appendResolvedVariables);
-	}
-
-	@Override
-	public void update(ViewerCell cell) {
-		Object element = cell.getElement();
-		cell.setText(getText(element));
-		cell.setImage(getImage(element));
-	}
-
-	@Override
-	public Image getImage(Object element) {
-		ILabelProvider provider = Platform.getAdapterManager().getAdapter(element, ILabelProvider.class);
-		if (provider != null) {
-			return provider.getImage(element);
-		}
-
-		// TODO If all locations are set up to use adapters, we could log an error here
-
-		return super.getImage(element);
-	}
-
-	@Override
-	public String getText(Object element) {
-		ILabelProvider provider = Platform.getAdapterManager().getAdapter(element, ILabelProvider.class);
-		if (provider != null) {
-			return provider.getText(element);
-		}
-
-		// TODO If all locations are set up to use adapters, we could log an error here
-
-		return super.getText(element);
-	}
-
+package org.eclipse.pde.internal.ui.shared.target;
+
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.jface.viewers.ILabelProvider;
+import org.eclipse.jface.viewers.ViewerCell;
+import org.eclipse.swt.graphics.Image;
+
+/**
+ * Label provider for the tree.  Will try to adapt the element to an ILabelProvider to create
+ * the text and image.
+ */
+public class TargetLocationLabelProvider extends StyledBundleLabelProvider {
+
+	public TargetLocationLabelProvider(boolean showVersion, boolean appendResolvedVariables) {
+		super(showVersion, appendResolvedVariables);
+	}
+
+	@Override
+	public void update(ViewerCell cell) {
+		Object element = cell.getElement();
+		cell.setText(getText(element));
+		cell.setImage(getImage(element));
+	}
+
+	@Override
+	public Image getImage(Object element) {
+		ILabelProvider provider = Platform.getAdapterManager().getAdapter(element, ILabelProvider.class);
+		if (provider != null) {
+			return provider.getImage(element);
+		}
+
+		// TODO If all locations are set up to use adapters, we could log an error here
+
+		return super.getImage(element);
+	}
+
+	@Override
+	public String getText(Object element) {
+		ILabelProvider provider = Platform.getAdapterManager().getAdapter(element, ILabelProvider.class);
+		if (provider != null) {
+			return provider.getText(element);
+		}
+
+		// TODO If all locations are set up to use adapters, we could log an error here
+
+		return super.getText(element);
+	}
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/BaseExportWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/BaseExportWizardPage.java
位置:  -1,393 +1,393  
-/*******************************************************************************
- * Copyright (c) 2005, 2017 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 487943
- *     Martin Karpisek <martin.karpisek@gmail.com> - Bug 249374
- *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.exports;
-
-import java.util.*;
-import java.util.List;
-import org.eclipse.core.resources.IFile;
-import org.eclipse.core.resources.IProject;
-import org.eclipse.core.runtime.IAdaptable;
-import org.eclipse.core.runtime.Path;
-import org.eclipse.jdt.core.IJavaProject;
-import org.eclipse.jface.dialogs.Dialog;
-import org.eclipse.jface.dialogs.IDialogSettings;
-import org.eclipse.jface.dialogs.IMessageProvider;
-import org.eclipse.jface.viewers.IStructuredSelection;
-import org.eclipse.jface.viewers.ITreeContentProvider;
-import org.eclipse.jface.window.Window;
-import org.eclipse.pde.core.IModel;
-import org.eclipse.pde.internal.core.FeatureModelManager;
-import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
-import org.eclipse.pde.internal.ui.PDEPlugin;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.parts.WizardCheckboxTreePart;
-import org.eclipse.pde.internal.ui.shared.CachedCheckboxTreeViewer;
-import org.eclipse.pde.internal.ui.wizards.ListUtil;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.layout.GridLayout;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.ui.*;
-import org.eclipse.ui.dialogs.IWorkingSetSelectionDialog;
-
-public abstract class BaseExportWizardPage extends AbstractExportWizardPage {
-
-	protected ExportPart fExportPart;
-	private IStructuredSelection fSelection;
-	protected ExportDestinationTab fDestinationTab;
-	protected ExportOptionsTab fOptionsTab;
-	protected JARSigningTab fJARSiginingTab;
-	protected TabFolder fTabFolder;
-
-	private class ExportListProvider implements ITreeContentProvider {
-		@Override
-		public Object[] getElements(Object parent) {
-			return getListElements();
-		}
-
-		@Override
-		public Object[] getChildren(Object parentElement) {
-			return new Object[0];
-		}
-
-		@Override
-		public Object getParent(Object element) {
-			return null;
-		}
-
-		@Override
-		public boolean hasChildren(Object element) {
-			return false;
-		}
-	}
-
-	class ExportPart extends WizardCheckboxTreePart {
-		public ExportPart(String label, String[] buttonLabels) {
-			super(label, buttonLabels);
-		}
-
-		@Override
-		public void updateCounterLabel() {
-			super.updateCounterLabel();
-			pageChanged();
-		}
-
-		@Override
-		protected void buttonSelected(Button button, int index) {
-			switch (index) {
-				case 0 :
-					handleSelectAll(true);
-					break;
-				case 1 :
-					handleSelectAll(false);
-					break;
-				case 2 :
-					handleWorkingSets();
-			}
-		}
-	}
-
-	public BaseExportWizardPage(IStructuredSelection selection, String name, String choiceLabel) {
-		super(name);
-		fSelection = selection;
-		fExportPart = new ExportPart(choiceLabel, new String[] {PDEUIMessages.WizardCheckboxTablePart_selectAll, PDEUIMessages.WizardCheckboxTablePart_deselectAll, PDEUIMessages.ExportWizard_workingSet});
-		setDescription(PDEUIMessages.ExportWizard_Plugin_description);
-	}
-
-	@Override
-	public void createControl(Composite parent) {
-		Composite container = new Composite(parent, SWT.NULL);
-		GridLayout layout = new GridLayout();
-		layout.verticalSpacing = 10;
-		container.setLayout(layout);
-
-		createViewer(container);
-
-		fTabFolder = new TabFolder(container, SWT.NONE);
-		fTabFolder.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
-		createTabs(fTabFolder, getDialogSettings());
-
-		initializeViewer();
-		if (getErrorMessage() != null) {
-			setMessage(getErrorMessage());
-			setErrorMessage(null);
-		}
-		setControl(container);
-		hookHelpContext(container);
-		Dialog.applyDialogFont(container);
-	}
-
-	protected void createTabs(TabFolder folder, IDialogSettings settings) {
-		createDestinationTab(folder);
-		createOptionsTab(folder);
-
-		fDestinationTab.initialize(settings);
-		fOptionsTab.initialize(settings);
-		if (fOptionsTab.useJARFormat()) {
-			createJARSigningTab(folder);
-			fJARSiginingTab.initialize(settings);
-		}
-	}
-
-	protected void createDestinationTab(TabFolder folder) {
-		fDestinationTab = new ExportDestinationTab(this);
-		TabItem item = new TabItem(folder, SWT.NONE);
-		item.setControl(fDestinationTab.createControl(folder));
-		item.setText(PDEUIMessages.ExportWizard_destination);
-	}
-
-	protected void createOptionsTab(TabFolder folder) {
-		fOptionsTab = new ExportOptionsTab(this);
-		TabItem item = new TabItem(folder, SWT.NONE);
-		item.setControl(fOptionsTab.createControl(folder));
-		item.setText(PDEUIMessages.ExportWizard_options);
-	}
-
-	protected void createJARSigningTab(TabFolder folder) {
-		fJARSiginingTab = new JARSigningTab(this);
-		TabItem item = new TabItem(folder, SWT.NONE);
-		item.setControl(fJARSiginingTab.createControl(folder));
-		item.setText(PDEUIMessages.AdvancedPluginExportPage_signJar);
-	}
-
-	protected void createViewer(Composite parent) {
-		Composite composite = new Composite(parent, SWT.NONE);
-		GridLayout layout = new GridLayout();
-		layout.numColumns = 3;
-		layout.marginHeight = 0;
-		layout.marginWidth = 0;
-		composite.setLayout(layout);
-		composite.setLayoutData(new GridData(GridData.FILL_BOTH));
-
-		fExportPart.createControl(composite, 4, true);
-		GridData gd = (GridData) fExportPart.getControl().getLayoutData();
-		gd.heightHint = 125;
-		gd.widthHint = 150;
-		gd.horizontalSpan = 2;
-
-		CachedCheckboxTreeViewer viewer = fExportPart.getTreeViewer();
-		viewer.setContentProvider(new ExportListProvider());
-		viewer.setLabelProvider(PDEPlugin.getDefault().getLabelProvider());
-		viewer.setComparator(ListUtil.PLUGIN_COMPARATOR);
-		viewer.addDoubleClickListener(event -> {
-			TreeItem firstTI = fExportPart.getTreeViewer().getTree().getSelection()[0];
-			fExportPart.getTreeViewer().setChecked(firstTI.getData(), !firstTI.getChecked());
-			fExportPart.updateCounterLabel();
-		});
-		Object input = getInput();
-		if (input instanceof FeatureModelManager) {
-			FeatureModelManager fmm = (FeatureModelManager) input;
-			IFeatureModel[] models = fmm.getWorkspaceModels();
-			for (IFeatureModel iFeatureModel : models) {
-				if (iFeatureModel.getFeature().getId() == null) {
-					fmm.removeFromWorkspaceFeature(iFeatureModel);
-				}
-			}
-		}
-		fExportPart.getTreeViewer().setInput(getInput());
-	}
-
-	protected abstract Object getInput();
-
-	protected void initializeViewer() {
-		final Set<IModel> selected = new HashSet<>();
-
-		// collect from original selection proper models which can be used for export
-		for (Object elem : fSelection.toArray()) {
-			IProject project = null;
-
-			if (elem instanceof IFile) {
-				IFile file = (IFile) elem;
-				project = file.getProject();
-			} else if (elem instanceof IProject) {
-				project = (IProject) elem;
-			} else if (elem instanceof IJavaProject) {
-				project = ((IJavaProject) elem).getProject();
-			}
-			if (project != null) {
-				IModel model = findModelFor(project);
-				if (model != null &amp;&amp; !selected.contains(model)) {
-					selected.add(model);
-				}
-			}
-		}
-
-		//collected models from selection actually doesn't have to be valid for 
-		//this export page (or subclass) - select those which fits
-		//because otherwise we could try to select for export something which is not
-		//in the viewer visible for user
-		final List<IModel> checked = new ArrayList<>(selected.size());
-		for (Object o : getListElements()) {
-			if (selected.contains(o)) {
-				checked.add((IModel) o);
-			}
-		}
-
-		//preselect all models which were deduced and if possible
-		//scroll-down viewer to first one
-		fExportPart.setSelection(checked.toArray());
-		if (!checked.isEmpty()) {
-			fExportPart.getTreeViewer().reveal(checked.get(0));
-		}
-	}
-
-	private void handleWorkingSets() {
-		IWorkingSetManager manager = PlatformUI.getWorkbench().getWorkingSetManager();
-		IWorkingSetSelectionDialog dialog = manager.createWorkingSetSelectionDialog(getShell(), true);
-		if (dialog.open() == Window.OK) {
-			//collect proper models from working set
-			Set<IModel> selected = new HashSet<>();
-			IWorkingSet[] workingSets = dialog.getSelection();
-			for (IWorkingSet workingSet : workingSets) {
-				IAdaptable[] elements = workingSet.getElements();
-				for (IAdaptable element : elements) {
-					IModel model = findModelFor(element);
-					if (isValidModel(model)) {
-						selected.add(model);
-					}
-				}
-			}
-			//select only those which are possible to use in viewer list for exort
-			final List<IModel> checked = new ArrayList<>(selected.size());
-			for (Object o : getListElements()) {
-				if (selected.contains(o)) {
-					checked.add((IModel) o);
-				}
-			}
-
-			fExportPart.setSelection(checked.toArray());
-		}
-	}
-
-	public Object[] getSelectedItems() {
-		return fExportPart.getSelection();
-	}
-
-	@Override
-	protected void pageChanged() {
-		if (getMessage() != null)
-			setMessage(null);
-		if (fOptionsTab != null) {
-			String path = fOptionsTab.getAntBuildFileName();
-			String warningMessage = null;
-			if (path != null &amp;&amp; path.length() > 0 &amp;&amp; 
-				warningMessage = PDEUIMessages.ExportOptionsTab_antReservedMessage;
-			setMessage(warningMessage, IMessageProvider.WARNING);
-		}
-		String error = fExportPart.getSelectionCount() > 0 ? null : PDEUIMessages.ExportWizard_status_noselection;
-		if (error == null)
-			error = validateTabs();
-		setErrorMessage(error);
-		setPageComplete(error == null);
-	}
-
-	protected String validateTabs() {
-		String message = fDestinationTab.validate();
-		if (message == null)
-			message = fOptionsTab.validate();
-		if (message == null &amp;&amp; fTabFolder.getItemCount() > 2)
-			message = fJARSiginingTab.validate();
-		return message;
-	}
-
-	protected abstract void hookHelpContext(Control control);
-
-	protected abstract boolean isValidModel(IModel model);
-
-	public abstract Object[] getListElements();
-
-	protected abstract IModel findModelFor(IAdaptable object);
-
-	@Override
-	protected void saveSettings(IDialogSettings settings) {
-		fDestinationTab.saveSettings(settings);
-		fOptionsTab.saveSettings(settings);
-		if (fJARSiginingTab != null)
-			fJARSiginingTab.saveSettings(settings);
-	}
-
-	protected boolean doExportToDirectory() {
-		return fDestinationTab.doExportToDirectory();
-	}
-
-	protected String getFileName() {
-		return fDestinationTab.getFileName();
-	}
-
-	protected String getDestination() {
-		return fDestinationTab.getDestination();
-	}
-
-	protected boolean doInstall() {
-		return fDestinationTab.doInstall();
-	}
-
-	protected boolean doExportSource() {
-		return fOptionsTab.doExportSource();
-	}
-
-	protected boolean doExportSourceBundles() {
-		return fOptionsTab.doExportSourceBundles();
-	}
-
-	protected boolean useJARFormat() {
-		return fOptionsTab.useJARFormat();
-	}
-
-	protected boolean allowBinaryCycles() {
-		return fOptionsTab.doBinaryCycles();
-	}
-
-	protected boolean useWorkspaceCompiledClasses() {
-		return fOptionsTab.useWorkspaceCompiledClasses();
-	}
-
-	protected boolean doGenerateAntFile() {
-		return fOptionsTab.doGenerateAntFile();
-	}
-
-	protected String getAntBuildFileName() {
-		return fOptionsTab.getAntBuildFileName();
-	}
-
-	protected String getQualifier() {
-		return fOptionsTab.getQualifier();
-	}
-
-	protected String[] getSigningInfo() {
-		if (fJARSiginingTab == null || fTabFolder.getItemCount() < 3)
-			return null;
-		return fJARSiginingTab.getSigningInfo();
-	}
-
-	protected abstract void adjustAdvancedTabsVisibility();
-
-	protected void adjustJARSigningTabVisibility() {
-		IDialogSettings settings = getDialogSettings();
-		if (useJARFormat()) {
-			if (fTabFolder.getItemCount() < 3) {
-				createJARSigningTab(fTabFolder);
-				fJARSiginingTab.initialize(settings);
-			}
-		} else {
-			if (fTabFolder.getItemCount() >= 3) {
-				fJARSiginingTab.saveSettings(settings);
-				fTabFolder.getItem(2).dispose();
-			}
-		}
-	}
-
-}
+/*******************************************************************************
+ * Copyright (c) 2005, 2017 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 487943
+ *     Martin Karpisek <martin.karpisek@gmail.com> - Bug 249374
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.wizards.exports;
+
+import java.util.*;
+import java.util.List;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.jdt.core.IJavaProject;
+import org.eclipse.jface.dialogs.Dialog;
+import org.eclipse.jface.dialogs.IDialogSettings;
+import org.eclipse.jface.dialogs.IMessageProvider;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.viewers.ITreeContentProvider;
+import org.eclipse.jface.window.Window;
+import org.eclipse.pde.core.IModel;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.PDEPlugin;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.parts.WizardCheckboxTreePart;
+import org.eclipse.pde.internal.ui.shared.CachedCheckboxTreeViewer;
+import org.eclipse.pde.internal.ui.wizards.ListUtil;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
+import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.*;
+import org.eclipse.ui.dialogs.IWorkingSetSelectionDialog;
+
+public abstract class BaseExportWizardPage extends AbstractExportWizardPage {
+
+	protected ExportPart fExportPart;
+	private IStructuredSelection fSelection;
+	protected ExportDestinationTab fDestinationTab;
+	protected ExportOptionsTab fOptionsTab;
+	protected JARSigningTab fJARSiginingTab;
+	protected TabFolder fTabFolder;
+
+	private class ExportListProvider implements ITreeContentProvider {
+		@Override
+		public Object[] getElements(Object parent) {
+			return getListElements();
+		}
+
+		@Override
+		public Object[] getChildren(Object parentElement) {
+			return new Object[0];
+		}
+
+		@Override
+		public Object getParent(Object element) {
+			return null;
+		}
+
+		@Override
+		public boolean hasChildren(Object element) {
+			return false;
+		}
+	}
+
+	class ExportPart extends WizardCheckboxTreePart {
+		public ExportPart(String label, String[] buttonLabels) {
+			super(label, buttonLabels);
+		}
+
+		@Override
+		public void updateCounterLabel() {
+			super.updateCounterLabel();
+			pageChanged();
+		}
+
+		@Override
+		protected void buttonSelected(Button button, int index) {
+			switch (index) {
+				case 0 :
+					handleSelectAll(true);
+					break;
+				case 1 :
+					handleSelectAll(false);
+					break;
+				case 2 :
+					handleWorkingSets();
+			}
+		}
+	}
+
+	public BaseExportWizardPage(IStructuredSelection selection, String name, String choiceLabel) {
+		super(name);
+		fSelection = selection;
+		fExportPart = new ExportPart(choiceLabel, new String[] {PDEUIMessages.WizardCheckboxTablePart_selectAll, PDEUIMessages.WizardCheckboxTablePart_deselectAll, PDEUIMessages.ExportWizard_workingSet});
+		setDescription(PDEUIMessages.ExportWizard_Plugin_description);
+	}
+
+	@Override
+	public void createControl(Composite parent) {
+		Composite container = new Composite(parent, SWT.NULL);
+		GridLayout layout = new GridLayout();
+		layout.verticalSpacing = 10;
+		container.setLayout(layout);
+
+		createViewer(container);
+
+		fTabFolder = new TabFolder(container, SWT.NONE);
+		fTabFolder.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
+		createTabs(fTabFolder, getDialogSettings());
+
+		initializeViewer();
+		if (getErrorMessage() != null) {
+			setMessage(getErrorMessage());
+			setErrorMessage(null);
+		}
+		setControl(container);
+		hookHelpContext(container);
+		Dialog.applyDialogFont(container);
+	}
+
+	protected void createTabs(TabFolder folder, IDialogSettings settings) {
+		createDestinationTab(folder);
+		createOptionsTab(folder);
+
+		fDestinationTab.initialize(settings);
+		fOptionsTab.initialize(settings);
+		if (fOptionsTab.useJARFormat()) {
+			createJARSigningTab(folder);
+			fJARSiginingTab.initialize(settings);
+		}
+	}
+
+	protected void createDestinationTab(TabFolder folder) {
+		fDestinationTab = new ExportDestinationTab(this);
+		TabItem item = new TabItem(folder, SWT.NONE);
+		item.setControl(fDestinationTab.createControl(folder));
+		item.setText(PDEUIMessages.ExportWizard_destination);
+	}
+
+	protected void createOptionsTab(TabFolder folder) {
+		fOptionsTab = new ExportOptionsTab(this);
+		TabItem item = new TabItem(folder, SWT.NONE);
+		item.setControl(fOptionsTab.createControl(folder));
+		item.setText(PDEUIMessages.ExportWizard_options);
+	}
+
+	protected void createJARSigningTab(TabFolder folder) {
+		fJARSiginingTab = new JARSigningTab(this);
+		TabItem item = new TabItem(folder, SWT.NONE);
+		item.setControl(fJARSiginingTab.createControl(folder));
+		item.setText(PDEUIMessages.AdvancedPluginExportPage_signJar);
+	}
+
+	protected void createViewer(Composite parent) {
+		Composite composite = new Composite(parent, SWT.NONE);
+		GridLayout layout = new GridLayout();
+		layout.numColumns = 3;
+		layout.marginHeight = 0;
+		layout.marginWidth = 0;
+		composite.setLayout(layout);
+		composite.setLayoutData(new GridData(GridData.FILL_BOTH));
+
+		fExportPart.createControl(composite, 4, true);
+		GridData gd = (GridData) fExportPart.getControl().getLayoutData();
+		gd.heightHint = 125;
+		gd.widthHint = 150;
+		gd.horizontalSpan = 2;
+
+		CachedCheckboxTreeViewer viewer = fExportPart.getTreeViewer();
+		viewer.setContentProvider(new ExportListProvider());
+		viewer.setLabelProvider(PDEPlugin.getDefault().getLabelProvider());
+		viewer.setComparator(ListUtil.PLUGIN_COMPARATOR);
+		viewer.addDoubleClickListener(event -> {
+			TreeItem firstTI = fExportPart.getTreeViewer().getTree().getSelection()[0];
+			fExportPart.getTreeViewer().setChecked(firstTI.getData(), !firstTI.getChecked());
+			fExportPart.updateCounterLabel();
+		});
+		Object input = getInput();
+		if (input instanceof FeatureModelManager) {
+			FeatureModelManager fmm = (FeatureModelManager) input;
+			IFeatureModel[] models = fmm.getWorkspaceModels();
+			for (IFeatureModel iFeatureModel : models) {
+				if (iFeatureModel.getFeature().getId() == null) {
+					fmm.removeFromWorkspaceFeature(iFeatureModel);
+				}
+			}
+		}
+		fExportPart.getTreeViewer().setInput(getInput());
+	}
+
+	protected abstract Object getInput();
+
+	protected void initializeViewer() {
+		final Set<IModel> selected = new HashSet<>();
+
+		// collect from original selection proper models which can be used for export
+		for (Object elem : fSelection.toArray()) {
+			IProject project = null;
+
+			if (elem instanceof IFile) {
+				IFile file = (IFile) elem;
+				project = file.getProject();
+			} else if (elem instanceof IProject) {
+				project = (IProject) elem;
+			} else if (elem instanceof IJavaProject) {
+				project = ((IJavaProject) elem).getProject();
+			}
+			if (project != null) {
+				IModel model = findModelFor(project);
+				if (model != null &amp;&amp; !selected.contains(model)) {
+					selected.add(model);
+				}
+			}
+		}
+
+		//collected models from selection actually doesn't have to be valid for 
+		//this export page (or subclass) - select those which fits
+		//because otherwise we could try to select for export something which is not
+		//in the viewer visible for user
+		final List<IModel> checked = new ArrayList<>(selected.size());
+		for (Object o : getListElements()) {
+			if (selected.contains(o)) {
+				checked.add((IModel) o);
+			}
+		}
+
+		//preselect all models which were deduced and if possible
+		//scroll-down viewer to first one
+		fExportPart.setSelection(checked.toArray());
+		if (!checked.isEmpty()) {
+			fExportPart.getTreeViewer().reveal(checked.get(0));
+		}
+	}
+
+	private void handleWorkingSets() {
+		IWorkingSetManager manager = PlatformUI.getWorkbench().getWorkingSetManager();
+		IWorkingSetSelectionDialog dialog = manager.createWorkingSetSelectionDialog(getShell(), true);
+		if (dialog.open() == Window.OK) {
+			//collect proper models from working set
+			Set<IModel> selected = new HashSet<>();
+			IWorkingSet[] workingSets = dialog.getSelection();
+			for (IWorkingSet workingSet : workingSets) {
+				IAdaptable[] elements = workingSet.getElements();
+				for (IAdaptable element : elements) {
+					IModel model = findModelFor(element);
+					if (isValidModel(model)) {
+						selected.add(model);
+					}
+				}
+			}
+			//select only those which are possible to use in viewer list for exort
+			final List<IModel> checked = new ArrayList<>(selected.size());
+			for (Object o : getListElements()) {
+				if (selected.contains(o)) {
+					checked.add((IModel) o);
+				}
+			}
+
+			fExportPart.setSelection(checked.toArray());
+		}
+	}
+
+	public Object[] getSelectedItems() {
+		return fExportPart.getSelection();
+	}
+
+	@Override
+	protected void pageChanged() {
+		if (getMessage() != null)
+			setMessage(null);
+		if (fOptionsTab != null) {
+			String path = fOptionsTab.getAntBuildFileName();
+			String warningMessage = null;
+			if (path != null &amp;&amp; path.length() > 0 &amp;&amp; 
+				warningMessage = PDEUIMessages.ExportOptionsTab_antReservedMessage;
+			setMessage(warningMessage, IMessageProvider.WARNING);
+		}
+		String error = fExportPart.getSelectionCount() > 0 ? null : PDEUIMessages.ExportWizard_status_noselection;
+		if (error == null)
+			error = validateTabs();
+		setErrorMessage(error);
+		setPageComplete(error == null);
+	}
+
+	protected String validateTabs() {
+		String message = fDestinationTab.validate();
+		if (message == null)
+			message = fOptionsTab.validate();
+		if (message == null &amp;&amp; fTabFolder.getItemCount() > 2)
+			message = fJARSiginingTab.validate();
+		return message;
+	}
+
+	protected abstract void hookHelpContext(Control control);
+
+	protected abstract boolean isValidModel(IModel model);
+
+	public abstract Object[] getListElements();
+
+	protected abstract IModel findModelFor(IAdaptable object);
+
+	@Override
+	protected void saveSettings(IDialogSettings settings) {
+		fDestinationTab.saveSettings(settings);
+		fOptionsTab.saveSettings(settings);
+		if (fJARSiginingTab != null)
+			fJARSiginingTab.saveSettings(settings);
+	}
+
+	protected boolean doExportToDirectory() {
+		return fDestinationTab.doExportToDirectory();
+	}
+
+	protected String getFileName() {
+		return fDestinationTab.getFileName();
+	}
+
+	protected String getDestination() {
+		return fDestinationTab.getDestination();
+	}
+
+	protected boolean doInstall() {
+		return fDestinationTab.doInstall();
+	}
+
+	protected boolean doExportSource() {
+		return fOptionsTab.doExportSource();
+	}
+
+	protected boolean doExportSourceBundles() {
+		return fOptionsTab.doExportSourceBundles();
+	}
+
+	protected boolean useJARFormat() {
+		return fOptionsTab.useJARFormat();
+	}
+
+	protected boolean allowBinaryCycles() {
+		return fOptionsTab.doBinaryCycles();
+	}
+
+	protected boolean useWorkspaceCompiledClasses() {
+		return fOptionsTab.useWorkspaceCompiledClasses();
+	}
+
+	protected boolean doGenerateAntFile() {
+		return fOptionsTab.doGenerateAntFile();
+	}
+
+	protected String getAntBuildFileName() {
+		return fOptionsTab.getAntBuildFileName();
+	}
+
+	protected String getQualifier() {
+		return fOptionsTab.getQualifier();
+	}
+
+	protected String[] getSigningInfo() {
+		if (fJARSiginingTab == null || fTabFolder.getItemCount() < 3)
+			return null;
+		return fJARSiginingTab.getSigningInfo();
+	}
+
+	protected abstract void adjustAdvancedTabsVisibility();
+
+	protected void adjustJARSigningTabVisibility() {
+		IDialogSettings settings = getDialogSettings();
+		if (useJARFormat()) {
+			if (fTabFolder.getItemCount() < 3) {
+				createJARSigningTab(fTabFolder);
+				fJARSiginingTab.initialize(settings);
+			}
+		} else {
+			if (fTabFolder.getItemCount() >= 3) {
+				fJARSiginingTab.saveSettings(settings);
+				fTabFolder.getItem(2).dispose();
+			}
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/FeatureExportWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/FeatureExportWizard.java
位置:  -1,177 +1,177  
-/*******************************************************************************
- * Copyright (c) 2000, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2000, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.exports;
-
-import java.io.File;
-import javax.xml.parsers.*;
-import org.eclipse.core.resources.ResourcesPlugin;
-import org.eclipse.core.runtime.URIUtil;
-import org.eclipse.core.runtime.jobs.IJobChangeEvent;
-import org.eclipse.core.runtime.jobs.JobChangeAdapter;
-import org.eclipse.pde.internal.build.site.QualifierReplacer;
-import org.eclipse.pde.internal.core.FeatureModelManager;
-import org.eclipse.pde.internal.core.PDECore;
-import org.eclipse.pde.internal.core.exports.FeatureExportInfo;
-import org.eclipse.pde.internal.core.exports.FeatureExportOperation;
-import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
-import org.eclipse.pde.internal.ui.PDEPluginImages;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.build.RuntimeInstallJob;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.progress.IProgressConstants;
-import org.w3c.dom.*;
-
-public class FeatureExportWizard extends AntGeneratingExportWizard {
-	private static final String STORE_SECTION = 
-	private CrossPlatformExportPage fPage2;
-
-	/**
-	 * The constructor.
-	 */
-	public FeatureExportWizard() {
-		setDefaultPageImageDescriptor(PDEPluginImages.DESC_FEATURE_EXPORT_WIZ);
-	}
-
-	@Override
-	public void addPages() {
-		super.addPages();
-		FeatureModelManager manager = PDECore.getDefault().getFeatureModelManager();
-		IFeatureModel model = manager.getDeltaPackFeature();
-		if (model != null) {
-			fPage2 = new CrossPlatformExportPage(
-			addPage(fPage2);
-		}
-	}
-
-	@Override
-	protected BaseExportWizardPage createPage1() {
-		return new FeatureExportWizardPage(getSelection());
-	}
-
-	@Override
-	protected String getSettingsSectionName() {
-		return STORE_SECTION;
-	}
-
-	@Override
-	protected void scheduleExportJob() {
-		// NOTE: Any changes to the content here must also be copied to generateAntTask() and FeatureExportTask
-		final FeatureExportInfo info = new FeatureExportInfo();
-		info.toDirectory = fPage.doExportToDirectory();
-		info.useJarFormat = fPage.useJARFormat();
-		info.exportSource = fPage.doExportSource();
-		info.exportSourceBundle = fPage.doExportSourceBundles();
-		info.allowBinaryCycles = fPage.allowBinaryCycles();
-		info.useWorkspaceCompiledClasses = fPage.useWorkspaceCompiledClasses();
-		info.destinationDirectory = fPage.getDestination();
-		info.zipFileName = fPage.getFileName();
-		if (fPage2 != null &amp;&amp; ((FeatureExportWizardPage) fPage).doMultiPlatform())
-			info.targets = fPage2.getTargets();
-		info.exportMetadata = ((FeatureExportWizardPage) fPage).doExportMetadata();
-		info.items = fPage.getSelectedItems();
-		info.signingInfo = fPage.getSigningInfo();
-		info.jnlpInfo = ((FeatureExportWizardPage) fPage).getJNLPInfo();
-		info.qualifier = fPage.getQualifier();
-		if (((FeatureExportWizardPage) fPage).getCategoryDefinition() != null)
-			info.categoryDefinition = URIUtil.toUnencodedString(((FeatureExportWizardPage) fPage).getCategoryDefinition());
-
-		final boolean installAfterExport = fPage.doInstall();
-		if (installAfterExport) {
-			info.useJarFormat = true;
-			info.exportMetadata = true;
-			if (info.qualifier == null) {
-				// Set the date explicitly since the time can change before the install job runs
-				info.qualifier = QualifierReplacer.getDateQualifier();
-			}
-		}
-
-		final FeatureExportOperation job = new FeatureExportOperation(info, PDEUIMessages.FeatureExportJob_name);
-		job.setUser(true);
-		job.setRule(ResourcesPlugin.getWorkspace().getRoot());
-		job.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_FEATURE_OBJ);
-		job.addJobChangeListener(new JobChangeAdapter() {
-			@Override
-			public void done(IJobChangeEvent event) {
-				if (job.hasAntErrors()) {
-					// If there were errors when running the ant scripts, inform the user where the logs can be found.
-					final File logLocation = new File(info.destinationDirectory, 
-					if (logLocation.exists()) {
-						PlatformUI.getWorkbench().getDisplay().syncExec(() -> {
-							AntErrorDialog dialog = new AntErrorDialog(logLocation);
-							dialog.open();
-						});
-					}
-				} else if (event.getResult().isOK() &amp;&amp; installAfterExport) {
-					// Install the export into the current running platform
-					RuntimeInstallJob installJob = new RuntimeInstallJob(PDEUIMessages.PluginExportWizard_InstallJobName, info);
-					installJob.setUser(true);
-					installJob.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_FEATURE_OBJ);
-					installJob.schedule();
-				}
-			}
-		});
-		job.schedule();
-	}
-
-	@Override
-	protected Document generateAntTask() {
-		try {
-			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
-			Document doc = factory.newDocumentBuilder().newDocument();
-			Element root = doc.createElement(
-			root.setAttribute(
-			root.setAttribute(
-			doc.appendChild(root);
-
-			Element target = doc.createElement(
-			target.setAttribute(
-			root.appendChild(target);
-
-			Element export = doc.createElement(
-			export.setAttribute(
-			export.setAttribute(
-			String filename = fPage.getFileName();
-			if (filename != null)
-				export.setAttribute(
-			export.setAttribute(
-			export.setAttribute(
-			export.setAttribute(
-			if (fPage.doExportSource()) {
-				export.setAttribute(
-			}
-			String qualifier = fPage.getQualifier();
-			if (qualifier != null)
-				export.setAttribute(
-			target.appendChild(export);
-			return doc;
-		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e) {
-		}
-		return null;
-	}
-
-	private String getFeatureIDs() {
-		StringBuilder buffer = new StringBuilder();
-		Object[] objects = fPage.getSelectedItems();
-		for (int i = 0; i < objects.length; i++) {
-			Object object = objects[i];
-			if (object instanceof IFeatureModel) {
-				buffer.append(((IFeatureModel) object).getFeature().getId());
-				if (i < objects.length - 1)
-					buffer.append(
-			}
-		}
-		return buffer.toString();
-	}
-
-}
+package org.eclipse.pde.internal.ui.wizards.exports;
+
+import java.io.File;
+import javax.xml.parsers.*;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.URIUtil;
+import org.eclipse.core.runtime.jobs.IJobChangeEvent;
+import org.eclipse.core.runtime.jobs.JobChangeAdapter;
+import org.eclipse.pde.internal.build.site.QualifierReplacer;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.exports.FeatureExportInfo;
+import org.eclipse.pde.internal.core.exports.FeatureExportOperation;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.build.RuntimeInstallJob;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.progress.IProgressConstants;
+import org.w3c.dom.*;
+
+public class FeatureExportWizard extends AntGeneratingExportWizard {
+	private static final String STORE_SECTION = 
+	private CrossPlatformExportPage fPage2;
+
+	/**
+	 * The constructor.
+	 */
+	public FeatureExportWizard() {
+		setDefaultPageImageDescriptor(PDEPluginImages.DESC_FEATURE_EXPORT_WIZ);
+	}
+
+	@Override
+	public void addPages() {
+		super.addPages();
+		FeatureModelManager manager = PDECore.getDefault().getFeatureModelManager();
+		IFeatureModel model = manager.getDeltaPackFeature();
+		if (model != null) {
+			fPage2 = new CrossPlatformExportPage(
+			addPage(fPage2);
+		}
+	}
+
+	@Override
+	protected BaseExportWizardPage createPage1() {
+		return new FeatureExportWizardPage(getSelection());
+	}
+
+	@Override
+	protected String getSettingsSectionName() {
+		return STORE_SECTION;
+	}
+
+	@Override
+	protected void scheduleExportJob() {
+		// NOTE: Any changes to the content here must also be copied to generateAntTask() and FeatureExportTask
+		final FeatureExportInfo info = new FeatureExportInfo();
+		info.toDirectory = fPage.doExportToDirectory();
+		info.useJarFormat = fPage.useJARFormat();
+		info.exportSource = fPage.doExportSource();
+		info.exportSourceBundle = fPage.doExportSourceBundles();
+		info.allowBinaryCycles = fPage.allowBinaryCycles();
+		info.useWorkspaceCompiledClasses = fPage.useWorkspaceCompiledClasses();
+		info.destinationDirectory = fPage.getDestination();
+		info.zipFileName = fPage.getFileName();
+		if (fPage2 != null &amp;&amp; ((FeatureExportWizardPage) fPage).doMultiPlatform())
+			info.targets = fPage2.getTargets();
+		info.exportMetadata = ((FeatureExportWizardPage) fPage).doExportMetadata();
+		info.items = fPage.getSelectedItems();
+		info.signingInfo = fPage.getSigningInfo();
+		info.jnlpInfo = ((FeatureExportWizardPage) fPage).getJNLPInfo();
+		info.qualifier = fPage.getQualifier();
+		if (((FeatureExportWizardPage) fPage).getCategoryDefinition() != null)
+			info.categoryDefinition = URIUtil.toUnencodedString(((FeatureExportWizardPage) fPage).getCategoryDefinition());
+
+		final boolean installAfterExport = fPage.doInstall();
+		if (installAfterExport) {
+			info.useJarFormat = true;
+			info.exportMetadata = true;
+			if (info.qualifier == null) {
+				// Set the date explicitly since the time can change before the install job runs
+				info.qualifier = QualifierReplacer.getDateQualifier();
+			}
+		}
+
+		final FeatureExportOperation job = new FeatureExportOperation(info, PDEUIMessages.FeatureExportJob_name);
+		job.setUser(true);
+		job.setRule(ResourcesPlugin.getWorkspace().getRoot());
+		job.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_FEATURE_OBJ);
+		job.addJobChangeListener(new JobChangeAdapter() {
+			@Override
+			public void done(IJobChangeEvent event) {
+				if (job.hasAntErrors()) {
+					// If there were errors when running the ant scripts, inform the user where the logs can be found.
+					final File logLocation = new File(info.destinationDirectory, 
+					if (logLocation.exists()) {
+						PlatformUI.getWorkbench().getDisplay().syncExec(() -> {
+							AntErrorDialog dialog = new AntErrorDialog(logLocation);
+							dialog.open();
+						});
+					}
+				} else if (event.getResult().isOK() &amp;&amp; installAfterExport) {
+					// Install the export into the current running platform
+					RuntimeInstallJob installJob = new RuntimeInstallJob(PDEUIMessages.PluginExportWizard_InstallJobName, info);
+					installJob.setUser(true);
+					installJob.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_FEATURE_OBJ);
+					installJob.schedule();
+				}
+			}
+		});
+		job.schedule();
+	}
+
+	@Override
+	protected Document generateAntTask() {
+		try {
+			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
+			Document doc = factory.newDocumentBuilder().newDocument();
+			Element root = doc.createElement(
+			root.setAttribute(
+			root.setAttribute(
+			doc.appendChild(root);
+
+			Element target = doc.createElement(
+			target.setAttribute(
+			root.appendChild(target);
+
+			Element export = doc.createElement(
+			export.setAttribute(
+			export.setAttribute(
+			String filename = fPage.getFileName();
+			if (filename != null)
+				export.setAttribute(
+			export.setAttribute(
+			export.setAttribute(
+			export.setAttribute(
+			if (fPage.doExportSource()) {
+				export.setAttribute(
+			}
+			String qualifier = fPage.getQualifier();
+			if (qualifier != null)
+				export.setAttribute(
+			target.appendChild(export);
+			return doc;
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e) {
+		}
+		return null;
+	}
+
+	private String getFeatureIDs() {
+		StringBuilder buffer = new StringBuilder();
+		Object[] objects = fPage.getSelectedItems();
+		for (int i = 0; i < objects.length; i++) {
+			Object object = objects[i];
+			if (object instanceof IFeatureModel) {
+				buffer.append(((IFeatureModel) object).getFeature().getId());
+				if (i < objects.length - 1)
+					buffer.append(
+			}
+		}
+		return buffer.toString();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/PluginExportWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/PluginExportWizard.java
位置:  -1,147 +1,147  
-/*******************************************************************************
- * Copyright (c) 2000, 2015 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.exports;
-
-import java.io.File;
-import javax.xml.parsers.*;
-import org.eclipse.core.resources.ResourcesPlugin;
-import org.eclipse.core.runtime.jobs.IJobChangeEvent;
-import org.eclipse.core.runtime.jobs.JobChangeAdapter;
-import org.eclipse.pde.core.plugin.IPluginModelBase;
-import org.eclipse.pde.internal.core.exports.FeatureExportInfo;
-import org.eclipse.pde.internal.core.exports.PluginExportOperation;
-import org.eclipse.pde.internal.ui.PDEPluginImages;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.build.RuntimeInstallJob;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.progress.IProgressConstants;
-import org.w3c.dom.*;
-
-public class PluginExportWizard extends AntGeneratingExportWizard {
-	private static final String STORE_SECTION = 
-
-	public PluginExportWizard() {
-		setDefaultPageImageDescriptor(PDEPluginImages.DESC_PLUGIN_EXPORT_WIZ);
-	}
-
-	@Override
-	protected BaseExportWizardPage createPage1() {
-		return new PluginExportWizardPage(getSelection());
-	}
-
-	@Override
-	protected String getSettingsSectionName() {
-		return STORE_SECTION;
-	}
-
-	@Override
-	protected void scheduleExportJob() {
-		// NOTE: Any changes to the content here must also be copied to generateAntTask() and PluginExportTask
-		final FeatureExportInfo info = new FeatureExportInfo();
-		info.toDirectory = fPage.doExportToDirectory();
-		info.useJarFormat = fPage.useJARFormat();
-		info.exportSource = fPage.doExportSource();
-		info.exportSourceBundle = fPage.doExportSourceBundles();
-		info.allowBinaryCycles = fPage.allowBinaryCycles();
-		info.useWorkspaceCompiledClasses = fPage.useWorkspaceCompiledClasses();
-		info.destinationDirectory = fPage.getDestination();
-		info.zipFileName = fPage.getFileName();
-		info.items = fPage.getSelectedItems();
-		info.signingInfo = fPage.useJARFormat() ? fPage.getSigningInfo() : null;
-		info.qualifier = fPage.getQualifier();
-
-		final boolean installAfterExport = fPage.doInstall();
-		if (installAfterExport) {
-			RuntimeInstallJob.modifyInfoForInstall(info);
-		}
-
-		final PluginExportOperation job = new PluginExportOperation(info, PDEUIMessages.PluginExportJob_name);
-		job.setUser(true);
-		job.setRule(ResourcesPlugin.getWorkspace().getRoot());
-		job.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_PLUGIN_OBJ);
-		job.addJobChangeListener(new JobChangeAdapter() {
-			@Override
-			public void done(IJobChangeEvent event) {
-				if (job.hasAntErrors()) {
-					// If there were errors when running the ant scripts, inform the user where the logs can be found.
-					final File logLocation = new File(info.destinationDirectory, 
-					if (logLocation.exists()) {
-						PlatformUI.getWorkbench().getDisplay().syncExec(() -> {
-							AntErrorDialog dialog = new AntErrorDialog(logLocation);
-							dialog.open();
-						});
-					}
-				} else if (event.getResult().isOK() &amp;&amp; installAfterExport) {
-					// Install the export into the current running platform
-					RuntimeInstallJob installJob = new RuntimeInstallJob(PDEUIMessages.PluginExportWizard_InstallJobName, info);
-					installJob.setUser(true);
-					installJob.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_FEATURE_OBJ);
-					installJob.schedule();
-				}
-			}
-		});
-		job.schedule();
-	}
-
-	@Override
-	protected Document generateAntTask() {
-		try {
-			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
-			Document doc = factory.newDocumentBuilder().newDocument();
-			Element root = doc.createElement(
-			root.setAttribute(
-			root.setAttribute(
-			doc.appendChild(root);
-
-			Element target = doc.createElement(
-			target.setAttribute(
-			root.appendChild(target);
-
-			Element export = doc.createElement(
-			export.setAttribute(
-			export.setAttribute(
-			String filename = fPage.getFileName();
-			if (filename != null)
-				export.setAttribute(
-			export.setAttribute(
-			export.setAttribute(
-			export.setAttribute(
-			if (fPage.doExportSource()) {
-				export.setAttribute(
-			}
-			String qualifier = fPage.getQualifier();
-			if (qualifier != null)
-				export.setAttribute(
-			target.appendChild(export);
-			return doc;
-		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e) {
-		}
-		return null;
-	}
-
-	private String getPluginIDs() {
-		StringBuilder buffer = new StringBuilder();
-		Object[] objects = fPage.getSelectedItems();
-		for (int i = 0; i < objects.length; i++) {
-			Object object = objects[i];
-			if (object instanceof IPluginModelBase) {
-				buffer.append(((IPluginModelBase) object).getPluginBase().getId());
-				if (i < objects.length - 1)
-					buffer.append(
-			}
-		}
-		return buffer.toString();
-	}
-
-}
+/*******************************************************************************
+ * Copyright (c) 2000, 2015 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.wizards.exports;
+
+import java.io.File;
+import javax.xml.parsers.*;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.jobs.IJobChangeEvent;
+import org.eclipse.core.runtime.jobs.JobChangeAdapter;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.internal.core.exports.FeatureExportInfo;
+import org.eclipse.pde.internal.core.exports.PluginExportOperation;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.build.RuntimeInstallJob;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.progress.IProgressConstants;
+import org.w3c.dom.*;
+
+public class PluginExportWizard extends AntGeneratingExportWizard {
+	private static final String STORE_SECTION = 
+
+	public PluginExportWizard() {
+		setDefaultPageImageDescriptor(PDEPluginImages.DESC_PLUGIN_EXPORT_WIZ);
+	}
+
+	@Override
+	protected BaseExportWizardPage createPage1() {
+		return new PluginExportWizardPage(getSelection());
+	}
+
+	@Override
+	protected String getSettingsSectionName() {
+		return STORE_SECTION;
+	}
+
+	@Override
+	protected void scheduleExportJob() {
+		// NOTE: Any changes to the content here must also be copied to generateAntTask() and PluginExportTask
+		final FeatureExportInfo info = new FeatureExportInfo();
+		info.toDirectory = fPage.doExportToDirectory();
+		info.useJarFormat = fPage.useJARFormat();
+		info.exportSource = fPage.doExportSource();
+		info.exportSourceBundle = fPage.doExportSourceBundles();
+		info.allowBinaryCycles = fPage.allowBinaryCycles();
+		info.useWorkspaceCompiledClasses = fPage.useWorkspaceCompiledClasses();
+		info.destinationDirectory = fPage.getDestination();
+		info.zipFileName = fPage.getFileName();
+		info.items = fPage.getSelectedItems();
+		info.signingInfo = fPage.useJARFormat() ? fPage.getSigningInfo() : null;
+		info.qualifier = fPage.getQualifier();
+
+		final boolean installAfterExport = fPage.doInstall();
+		if (installAfterExport) {
+			RuntimeInstallJob.modifyInfoForInstall(info);
+		}
+
+		final PluginExportOperation job = new PluginExportOperation(info, PDEUIMessages.PluginExportJob_name);
+		job.setUser(true);
+		job.setRule(ResourcesPlugin.getWorkspace().getRoot());
+		job.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_PLUGIN_OBJ);
+		job.addJobChangeListener(new JobChangeAdapter() {
+			@Override
+			public void done(IJobChangeEvent event) {
+				if (job.hasAntErrors()) {
+					// If there were errors when running the ant scripts, inform the user where the logs can be found.
+					final File logLocation = new File(info.destinationDirectory, 
+					if (logLocation.exists()) {
+						PlatformUI.getWorkbench().getDisplay().syncExec(() -> {
+							AntErrorDialog dialog = new AntErrorDialog(logLocation);
+							dialog.open();
+						});
+					}
+				} else if (event.getResult().isOK() &amp;&amp; installAfterExport) {
+					// Install the export into the current running platform
+					RuntimeInstallJob installJob = new RuntimeInstallJob(PDEUIMessages.PluginExportWizard_InstallJobName, info);
+					installJob.setUser(true);
+					installJob.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_FEATURE_OBJ);
+					installJob.schedule();
+				}
+			}
+		});
+		job.schedule();
+	}
+
+	@Override
+	protected Document generateAntTask() {
+		try {
+			DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
+			Document doc = factory.newDocumentBuilder().newDocument();
+			Element root = doc.createElement(
+			root.setAttribute(
+			root.setAttribute(
+			doc.appendChild(root);
+
+			Element target = doc.createElement(
+			target.setAttribute(
+			root.appendChild(target);
+
+			Element export = doc.createElement(
+			export.setAttribute(
+			export.setAttribute(
+			String filename = fPage.getFileName();
+			if (filename != null)
+				export.setAttribute(
+			export.setAttribute(
+			export.setAttribute(
+			export.setAttribute(
+			if (fPage.doExportSource()) {
+				export.setAttribute(
+			}
+			String qualifier = fPage.getQualifier();
+			if (qualifier != null)
+				export.setAttribute(
+			target.appendChild(export);
+			return doc;
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e) {
+		}
+		return null;
+	}
+
+	private String getPluginIDs() {
+		StringBuilder buffer = new StringBuilder();
+		Object[] objects = fPage.getSelectedItems();
+		for (int i = 0; i < objects.length; i++) {
+			Object object = objects[i];
+			if (object instanceof IPluginModelBase) {
+				buffer.append(((IPluginModelBase) object).getPluginBase().getId());
+				if (i < objects.length - 1)
+					buffer.append(
+			}
+		}
+		return buffer.toString();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/ProductExportWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/ProductExportWizard.java
位置:  -1,176 +1,176  
-/*******************************************************************************
- * Copyright (c) 2005, 2015 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2005, 2015 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.exports;
-
-import java.io.File;
-import java.lang.reflect.InvocationTargetException;
-import java.util.ArrayList;
-import org.eclipse.core.resources.IProject;
-import org.eclipse.core.resources.ResourcesPlugin;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.jface.dialogs.MessageDialog;
-import org.eclipse.osgi.service.resolver.BundleDescription;
-import org.eclipse.osgi.service.resolver.State;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.internal.core.*;
-import org.eclipse.pde.internal.core.exports.FeatureExportInfo;
-import org.eclipse.pde.internal.core.exports.ProductExportOperation;
-import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
-import org.eclipse.pde.internal.core.iproduct.IProductFeature;
-import org.eclipse.pde.internal.core.iproduct.IProductPlugin;
-import org.eclipse.pde.internal.core.product.WorkspaceProductModel;
-import org.eclipse.pde.internal.ui.PDEPluginImages;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.pde.internal.ui.wizards.product.SynchronizationOperation;
-import org.eclipse.ui.progress.IProgressConstants;
-import org.osgi.framework.Version;
-
-public class ProductExportWizard extends BaseExportWizard {
-
-	private static final String STORE_SECTION = 
-	private WorkspaceProductModel fProductModel;
-	private CrossPlatformExportPage fPage2;
-	private ProductExportWizardPage fPage;
-	private IProject fProject;
-
-	public ProductExportWizard() {
-		this(null);
-	}
-
-	public ProductExportWizard(IProject project) {
-		setDefaultPageImageDescriptor(PDEPluginImages.DESC_PRODUCT_EXPORT_WIZ);
-		fProject = project;
-	}
-
-	@Override
-	public void addPages() {
-		fPage = new ProductExportWizardPage(getSelection());
-		addPage(fPage);
-
-		IFeatureModel model = PDECore.getDefault().getFeatureModelManager().getDeltaPackFeature();
-		if (model != null) {
-			fPage2 = new CrossPlatformExportPage(
-			addPage(fPage2);
-		}
-	}
-
-	@Override
-	protected String getSettingsSectionName() {
-		return STORE_SECTION;
-	}
-
-	@Override
-	protected void scheduleExportJob() {
-		FeatureExportInfo info = new FeatureExportInfo();
-		info.toDirectory = fPage.doExportToDirectory();
-		info.exportSource = fPage.doExportSource();
-		info.exportSourceBundle = fPage.doExportSourceBundles();
-		info.allowBinaryCycles = fPage.doBinaryCycles();
-		info.exportMetadata = fPage.doExportMetadata();
-		info.destinationDirectory = fPage.getDestination();
-		info.zipFileName = fPage.getFileName();
-		if (fPage2 != null &amp;&amp; fPage.doMultiPlatform())
-			info.targets = fPage2.getTargets();
-		if (fProductModel.getProduct().useFeatures())
-			info.items = getFeatureModels();
-		else
-			info.items = getPluginModels();
-
-		String rootDirectory = fPage.getRootDirectory();
-		if (
-			rootDirectory = 
-		ProductExportOperation job = new ProductExportOperation(info, PDEUIMessages.ProductExportJob_name, fProductModel.getProduct(), rootDirectory);
-		job.setUser(true);
-		job.setRule(ResourcesPlugin.getWorkspace().getRoot());
-		job.schedule();
-		job.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_FEATURE_OBJ);
-	}
-
-	private IFeatureModel[] getFeatureModels() {
-		ArrayList<IFeatureModel> list = new ArrayList<>();
-		FeatureModelManager manager = PDECore.getDefault().getFeatureModelManager();
-		IProductFeature[] features = fProductModel.getProduct().getFeatures();
-		for (IProductFeature feature : features) {
-			IFeatureModel model = manager.findFeatureModel(feature.getId(), feature.getVersion());
-			if (model != null)
-				list.add(model);
-		}
-		return list.toArray(new IFeatureModel[list.size()]);
-	}
-
-	private BundleDescription[] getPluginModels() {
-		ArrayList<BundleDescription> list = new ArrayList<>();
-		State state = TargetPlatformHelper.getState();
-		IProductPlugin[] plugins = fProductModel.getProduct().getPlugins();
-		for (IProductPlugin plugin : plugins) {
-			BundleDescription bundle = null;
-			String v = plugin.getVersion();
-			if (v != null &amp;&amp; v.length() > 0) {
-				bundle = state.getBundle(plugin.getId(), Version.parseVersion(v));
-			}
-			// if there's no version, just grab a bundle like before
-			if (bundle == null)
-				bundle = state.getBundle(plugin.getId(), null);
-			if (bundle != null)
-				list.add(bundle);
-		}
-		return list.toArray(new BundleDescription[list.size()]);
-	}
-
-	@Override
-	protected boolean performPreliminaryChecks() {
-		fProductModel = new WorkspaceProductModel(fPage.getProductFile(), false);
-		try {
-			fProductModel.load();
-			if (!fProductModel.isLoaded()) {
-				MessageDialog.openError(getContainer().getShell(), PDEUIMessages.ProductExportWizard_error, PDEUIMessages.ProductExportWizard_corrupt); //
-				return false;
-			}
-		} catch (CoreException e) {
-			MessageDialog.openError(getContainer().getShell(), PDEUIMessages.ProductExportWizard_error, PDEUIMessages.ProductExportWizard_corrupt); //
-			return false;
-		}
-
-		if (fPage.doSync()) {
-			try {
-				getContainer().run(false, false, new SynchronizationOperation(fProductModel.getProduct(), getContainer().getShell(), fProject));
-			} catch (InvocationTargetException e) {
-				MessageDialog.openError(getContainer().getShell(), PDEUIMessages.ProductExportWizard_syncTitle, e.getTargetException().getMessage());
-				return false;
-			} catch (InterruptedException e) {
-				return false;
-			}
-		}
-		return true;
-	}
-
-	@Override
-	protected boolean confirmDelete() {
-		if (!fPage.doExportToDirectory()) {
-			File zipFile = new File(fPage.getDestination(), fPage.getFileName());
-			if (zipFile.exists()) {
-				if (!MessageDialog.openQuestion(getContainer().getShell(), PDEUIMessages.BaseExportWizard_confirmReplace_title, NLS.bind(PDEUIMessages.BaseExportWizard_confirmReplace_desc, zipFile.getAbsolutePath())))
-					return false;
-				zipFile.delete();
-			}
-		}
-		return true;
-	}
-
-	@Override
-	public boolean canFinish() {
-		return (fPage.getNextPage() != null) ? super.canFinish() : fPage.isPageComplete();
-	}
-
-}
+package org.eclipse.pde.internal.ui.wizards.exports;
+
+import java.io.File;
+import java.lang.reflect.InvocationTargetException;
+import java.util.ArrayList;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.osgi.service.resolver.BundleDescription;
+import org.eclipse.osgi.service.resolver.State;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.internal.core.*;
+import org.eclipse.pde.internal.core.exports.FeatureExportInfo;
+import org.eclipse.pde.internal.core.exports.ProductExportOperation;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.core.iproduct.IProductFeature;
+import org.eclipse.pde.internal.core.iproduct.IProductPlugin;
+import org.eclipse.pde.internal.core.product.WorkspaceProductModel;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.wizards.product.SynchronizationOperation;
+import org.eclipse.ui.progress.IProgressConstants;
+import org.osgi.framework.Version;
+
+public class ProductExportWizard extends BaseExportWizard {
+
+	private static final String STORE_SECTION = 
+	private WorkspaceProductModel fProductModel;
+	private CrossPlatformExportPage fPage2;
+	private ProductExportWizardPage fPage;
+	private IProject fProject;
+
+	public ProductExportWizard() {
+		this(null);
+	}
+
+	public ProductExportWizard(IProject project) {
+		setDefaultPageImageDescriptor(PDEPluginImages.DESC_PRODUCT_EXPORT_WIZ);
+		fProject = project;
+	}
+
+	@Override
+	public void addPages() {
+		fPage = new ProductExportWizardPage(getSelection());
+		addPage(fPage);
+
+		IFeatureModel model = PDECore.getDefault().getFeatureModelManager().getDeltaPackFeature();
+		if (model != null) {
+			fPage2 = new CrossPlatformExportPage(
+			addPage(fPage2);
+		}
+	}
+
+	@Override
+	protected String getSettingsSectionName() {
+		return STORE_SECTION;
+	}
+
+	@Override
+	protected void scheduleExportJob() {
+		FeatureExportInfo info = new FeatureExportInfo();
+		info.toDirectory = fPage.doExportToDirectory();
+		info.exportSource = fPage.doExportSource();
+		info.exportSourceBundle = fPage.doExportSourceBundles();
+		info.allowBinaryCycles = fPage.doBinaryCycles();
+		info.exportMetadata = fPage.doExportMetadata();
+		info.destinationDirectory = fPage.getDestination();
+		info.zipFileName = fPage.getFileName();
+		if (fPage2 != null &amp;&amp; fPage.doMultiPlatform())
+			info.targets = fPage2.getTargets();
+		if (fProductModel.getProduct().useFeatures())
+			info.items = getFeatureModels();
+		else
+			info.items = getPluginModels();
+
+		String rootDirectory = fPage.getRootDirectory();
+		if (
+			rootDirectory = 
+		ProductExportOperation job = new ProductExportOperation(info, PDEUIMessages.ProductExportJob_name, fProductModel.getProduct(), rootDirectory);
+		job.setUser(true);
+		job.setRule(ResourcesPlugin.getWorkspace().getRoot());
+		job.schedule();
+		job.setProperty(IProgressConstants.ICON_PROPERTY, PDEPluginImages.DESC_FEATURE_OBJ);
+	}
+
+	private IFeatureModel[] getFeatureModels() {
+		ArrayList<IFeatureModel> list = new ArrayList<>();
+		FeatureModelManager manager = PDECore.getDefault().getFeatureModelManager();
+		IProductFeature[] features = fProductModel.getProduct().getFeatures();
+		for (IProductFeature feature : features) {
+			IFeatureModel model = manager.findFeatureModel(feature.getId(), feature.getVersion());
+			if (model != null)
+				list.add(model);
+		}
+		return list.toArray(new IFeatureModel[list.size()]);
+	}
+
+	private BundleDescription[] getPluginModels() {
+		ArrayList<BundleDescription> list = new ArrayList<>();
+		State state = TargetPlatformHelper.getState();
+		IProductPlugin[] plugins = fProductModel.getProduct().getPlugins();
+		for (IProductPlugin plugin : plugins) {
+			BundleDescription bundle = null;
+			String v = plugin.getVersion();
+			if (v != null &amp;&amp; v.length() > 0) {
+				bundle = state.getBundle(plugin.getId(), Version.parseVersion(v));
+			}
+			// if there's no version, just grab a bundle like before
+			if (bundle == null)
+				bundle = state.getBundle(plugin.getId(), null);
+			if (bundle != null)
+				list.add(bundle);
+		}
+		return list.toArray(new BundleDescription[list.size()]);
+	}
+
+	@Override
+	protected boolean performPreliminaryChecks() {
+		fProductModel = new WorkspaceProductModel(fPage.getProductFile(), false);
+		try {
+			fProductModel.load();
+			if (!fProductModel.isLoaded()) {
+				MessageDialog.openError(getContainer().getShell(), PDEUIMessages.ProductExportWizard_error, PDEUIMessages.ProductExportWizard_corrupt); //
+				return false;
+			}
+		} catch (CoreException e) {
+			MessageDialog.openError(getContainer().getShell(), PDEUIMessages.ProductExportWizard_error, PDEUIMessages.ProductExportWizard_corrupt); //
+			return false;
+		}
+
+		if (fPage.doSync()) {
+			try {
+				getContainer().run(false, false, new SynchronizationOperation(fProductModel.getProduct(), getContainer().getShell(), fProject));
+			} catch (InvocationTargetException e) {
+				MessageDialog.openError(getContainer().getShell(), PDEUIMessages.ProductExportWizard_syncTitle, e.getTargetException().getMessage());
+				return false;
+			} catch (InterruptedException e) {
+				return false;
+			}
+		}
+		return true;
+	}
+
+	@Override
+	protected boolean confirmDelete() {
+		if (!fPage.doExportToDirectory()) {
+			File zipFile = new File(fPage.getDestination(), fPage.getFileName());
+			if (zipFile.exists()) {
+				if (!MessageDialog.openQuestion(getContainer().getShell(), PDEUIMessages.BaseExportWizard_confirmReplace_title, NLS.bind(PDEUIMessages.BaseExportWizard_confirmReplace_desc, zipFile.getAbsolutePath())))
+					return false;
+				zipFile.delete();
+			}
+		}
+		return true;
+	}
+
+	@Override
+	public boolean canFinish() {
+		return (fPage.getNextPage() != null) ? super.canFinish() : fPage.isPageComplete();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/EditTargetDefinitionWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/EditTargetDefinitionWizard.java
位置:  -1,134 +1,134  
-/*******************************************************************************
- * Copyright (c) 2009, 2016 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2016 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.target;
-
-import java.util.*;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.jface.wizard.IWizardPage;
-import org.eclipse.jface.wizard.Wizard;
-import org.eclipse.pde.core.target.*;
-import org.eclipse.pde.internal.core.TargetPlatformHelper;
-import org.eclipse.pde.internal.core.target.TargetDefinition;
-import org.eclipse.pde.internal.ui.PDEPlugin;
-
-/**
- * Wizard to edit a target definition, creates a working copy to edit.  Any changes are
- * not saved by this wizard and must be done by the client.  The edited target
- * can be accessed using {@link #getTargetDefinition()}
- */
-public class EditTargetDefinitionWizard extends Wizard {
-
-	/**
-	 * The target definition being edited - a copy of the original
-	 */
-	private ITargetDefinition fDefinition;
-
-	/**
-	 * Constructs a wizard to edit the given definition.
-	 *
-	 * @param definition target definition being edited
-	 * @param createWorkingCopy if true, a copy of the definition will be created to edit, if false the definition will be edited directly
-	 */
-	public EditTargetDefinitionWizard(ITargetDefinition definition, boolean createWorkingCopy) {
-		setTargetDefinition(definition, createWorkingCopy);
-		setNeedsProgressMonitor(true);
-	}
-
-	@Override
-	public boolean performFinish() {
-		// update the cache to remove all other targets with same handle except
-		// this.
-		HashMap<ITargetHandle, List<TargetDefinition>> targetFlagMap = TargetPlatformHelper.getTargetDefinitionMap();
-		for (Map.Entry<ITargetHandle, List<TargetDefinition>> entry : targetFlagMap.entrySet()) {
-			if (entry.getKey().equals(fDefinition.getHandle())) {
-				 List<TargetDefinition> targets = targetFlagMap.get(fDefinition.getHandle());
-				for (Iterator<TargetDefinition> iterator = targets.iterator(); iterator.hasNext();) {
-					TargetDefinition target = iterator.next();
-					if (!target.equals(fDefinition)) {
-						iterator.remove();
-					}
-				}
-			}
-		}
-		return true;
-
-	}
-
-	@Override
-	public boolean performCancel() {
-		// update the cache to remove this target with this handle
-		HashMap<ITargetHandle, List<TargetDefinition>> targetFlagMap = TargetPlatformHelper.getTargetDefinitionMap();
-		for (Map.Entry<ITargetHandle, List<TargetDefinition>> entry : targetFlagMap.entrySet()) {
-			if (entry.getKey().equals(fDefinition.getHandle())) {
-				List<TargetDefinition> targets = targetFlagMap.get(fDefinition.getHandle());
-				for (Iterator<TargetDefinition> iterator = targets.iterator(); iterator.hasNext();) {
-					TargetDefinition target = iterator.next();
-					if (target.equals(fDefinition)) {
-						iterator.remove();
-					}
-				}
-			}
-		}
-		return true;
-	}
-
-	@Override
-	public void addPages() {
-		addPage(new TargetDefinitionContentPage(fDefinition));
-	}
+package org.eclipse.pde.internal.ui.wizards.target;
+
+import java.util.*;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.jface.wizard.IWizardPage;
+import org.eclipse.jface.wizard.Wizard;
+import org.eclipse.pde.core.target.*;
+import org.eclipse.pde.internal.core.TargetPlatformHelper;
+import org.eclipse.pde.internal.core.target.TargetDefinition;
+import org.eclipse.pde.internal.ui.PDEPlugin;
+
+/**
+ * Wizard to edit a target definition, creates a working copy to edit.  Any changes are
+ * not saved by this wizard and must be done by the client.  The edited target
+ * can be accessed using {@link #getTargetDefinition()}
+ */
+public class EditTargetDefinitionWizard extends Wizard {
+
+	/**
+	 * The target definition being edited - a copy of the original
+	 */
+	private ITargetDefinition fDefinition;
+
+	/**
+	 * Constructs a wizard to edit the given definition.
+	 *
+	 * @param definition target definition being edited
+	 * @param createWorkingCopy if true, a copy of the definition will be created to edit, if false the definition will be edited directly
+	 */
+	public EditTargetDefinitionWizard(ITargetDefinition definition, boolean createWorkingCopy) {
+		setTargetDefinition(definition, createWorkingCopy);
+		setNeedsProgressMonitor(true);
+	}
 
-	/**
-	 * Sets the target definition to be edited. Will delegate to pages to
-	 * refresh controls if already created.
-	 *
-	 * @param definition target definition
-	 * @param createWorkingCopy if true, a copy of the definition will be created to edit, if false the definition will be edited directly
-	 */
-	public void setTargetDefinition(ITargetDefinition definition, boolean createWorkingCopy) {
-		ITargetDefinition workingCopy = null;
-		if (createWorkingCopy) {
-			try {
-				ITargetPlatformService service = TargetDefinitionPage.getTargetService();
-				if (service != null) {
-					if (definition.getHandle().exists()) {
-						// Make a copy from the handle
-						workingCopy = definition.getHandle().getTargetDefinition();
-					} else {
-						// If no handle use the service to create a new one
-						workingCopy = service.newTarget();
-					}
-					service.copyTargetDefinition(definition, workingCopy);
-				}
-			} catch (CoreException e) {
-				PDEPlugin.log(e);
-			}
-		} else {
-			workingCopy = definition;
-		}
-		fDefinition = workingCopy;
-		IWizardPage[] pages = getPages();
-		for (IWizardPage page : pages) {
-			((TargetDefinitionPage) page).targetChanged(workingCopy);
-		}
-	}
+	@Override
+	public boolean performFinish() {
+		// update the cache to remove all other targets with same handle except
+		// this.
+		HashMap<ITargetHandle, List<TargetDefinition>> targetFlagMap = TargetPlatformHelper.getTargetDefinitionMap();
+		for (Map.Entry<ITargetHandle, List<TargetDefinition>> entry : targetFlagMap.entrySet()) {
+			if (entry.getKey().equals(fDefinition.getHandle())) {
+				 List<TargetDefinition> targets = targetFlagMap.get(fDefinition.getHandle());
+				for (Iterator<TargetDefinition> iterator = targets.iterator(); iterator.hasNext();) {
+					TargetDefinition target = iterator.next();
+					if (!target.equals(fDefinition)) {
+						iterator.remove();
+					}
+				}
+			}
+		}
+		return true;
+
+	}
+
+	@Override
+	public boolean performCancel() {
+		// update the cache to remove this target with this handle
+		HashMap<ITargetHandle, List<TargetDefinition>> targetFlagMap = TargetPlatformHelper.getTargetDefinitionMap();
+		for (Map.Entry<ITargetHandle, List<TargetDefinition>> entry : targetFlagMap.entrySet()) {
+			if (entry.getKey().equals(fDefinition.getHandle())) {
+				List<TargetDefinition> targets = targetFlagMap.get(fDefinition.getHandle());
+				for (Iterator<TargetDefinition> iterator = targets.iterator(); iterator.hasNext();) {
+					TargetDefinition target = iterator.next();
+					if (target.equals(fDefinition)) {
+						iterator.remove();
+					}
+				}
+			}
+		}
+		return true;
+	}
 
-	/**
-	 * Returns the target definition being edited
-	 *
-	 * @return target definition
-	 */
-	public ITargetDefinition getTargetDefinition() {
-		return fDefinition;
-	}
-}
+	@Override
+	public void addPages() {
+		addPage(new TargetDefinitionContentPage(fDefinition));
+	}
+
+	/**
+	 * Sets the target definition to be edited. Will delegate to pages to
+	 * refresh controls if already created.
+	 *
+	 * @param definition target definition
+	 * @param createWorkingCopy if true, a copy of the definition will be created to edit, if false the definition will be edited directly
+	 */
+	public void setTargetDefinition(ITargetDefinition definition, boolean createWorkingCopy) {
+		ITargetDefinition workingCopy = null;
+		if (createWorkingCopy) {
+			try {
+				ITargetPlatformService service = TargetDefinitionPage.getTargetService();
+				if (service != null) {
+					if (definition.getHandle().exists()) {
+						// Make a copy from the handle
+						workingCopy = definition.getHandle().getTargetDefinition();
+					} else {
+						// If no handle use the service to create a new one
+						workingCopy = service.newTarget();
+					}
+					service.copyTargetDefinition(definition, workingCopy);
+				}
+			} catch (CoreException e) {
+				PDEPlugin.log(e);
+			}
+		} else {
+			workingCopy = definition;
+		}
+		fDefinition = workingCopy;
+		IWizardPage[] pages = getPages();
+		for (IWizardPage page : pages) {
+			((TargetDefinitionPage) page).targetChanged(workingCopy);
+		}
+	}
+
+	/**
+	 * Returns the target definition being edited
+	 *
+	 * @return target definition
+	 */
+	public ITargetDefinition getTargetDefinition() {
+		return fDefinition;
+	}
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/EditTargetNode.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/EditTargetNode.java
位置:  -1,71 +1,71  
-/*******************************************************************************
- * Copyright (c) 2009, 2015 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2015 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.target;
-
-import org.eclipse.pde.core.target.ITargetDefinition;
-
-import org.eclipse.jface.wizard.IWizard;
-import org.eclipse.jface.wizard.IWizardNode;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-import org.eclipse.swt.graphics.Point;
+package org.eclipse.pde.internal.ui.wizards.target;
+
+import org.eclipse.pde.core.target.ITargetDefinition;
+
+import org.eclipse.jface.wizard.IWizard;
+import org.eclipse.jface.wizard.IWizardNode;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.swt.graphics.Point;
+
+/**
+ * Embedded wizard to edit a target
+ */
+public class EditTargetNode implements IWizardNode {
+
+	private EditTargetDefinitionWizard fWizard;
+	private ITargetDefinition fDefinition;
 
-/**
- * Embedded wizard to edit a target
- */
-public class EditTargetNode implements IWizardNode {
+	@Override
+	public void dispose() {
+		if (fWizard != null) {
+			fWizard.dispose();
+			fWizard = null;
+			fDefinition = null;
+		}
+	}
 
-	private EditTargetDefinitionWizard fWizard;
-	private ITargetDefinition fDefinition;
-
-	@Override
-	public void dispose() {
-		if (fWizard != null) {
-			fWizard.dispose();
-			fWizard = null;
-			fDefinition = null;
-		}
-	}
-
-	@Override
-	public Point getExtent() {
-		return new Point(-1, -1);
-	}
-
-	@Override
-	public IWizard getWizard() {
-		if (fWizard == null) {
-			fWizard = new EditTargetDefinitionWizard(fDefinition, false);
-			fWizard.setWindowTitle(PDEUIMessages.EditTargetNode_0);
-		}
-		return fWizard;
-	}
-
-	@Override
-	public boolean isContentCreated() {
-		return fWizard != null;
-	}
+	@Override
+	public Point getExtent() {
+		return new Point(-1, -1);
+	}
 
-	/**
-	 * Sets the target being edited.
-	 *
-	 * @param definition
-	 */
-	public void setTargetDefinition(ITargetDefinition definition) {
-		fDefinition = definition;
-		if (fWizard != null) {
-			fWizard.setTargetDefinition(definition, false);
-		}
-	}
+	@Override
+	public IWizard getWizard() {
+		if (fWizard == null) {
+			fWizard = new EditTargetDefinitionWizard(fDefinition, false);
+			fWizard.setWindowTitle(PDEUIMessages.EditTargetNode_0);
+		}
+		return fWizard;
+	}
 
-}
+	@Override
+	public boolean isContentCreated() {
+		return fWizard != null;
+	}
+
+	/**
+	 * Sets the target being edited.
+	 *
+	 * @param definition
+	 */
+	public void setTargetDefinition(ITargetDefinition definition) {
+		fDefinition = definition;
+		if (fWizard != null) {
+			fWizard.setTargetDefinition(definition, false);
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetCreationPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetCreationPage.java
位置:  -1,229 +1,229  
-/*******************************************************************************
- * Copyright (c) 2005, 2017 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2005, 2017 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.target;
-
-import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
-
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IConfigurationElement;
-import org.eclipse.jface.dialogs.Dialog;
-import org.eclipse.jface.wizard.IWizardPage;
-import org.eclipse.jface.wizard.WizardSelectionPage;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.core.target.ITargetPlatformService;
-import org.eclipse.pde.internal.core.PDECore;
-import org.eclipse.pde.internal.ui.*;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.ui.PlatformUI;
-
-/**
- * First wizard page used to create a target definition. Defines the location where
- * the definition will be created and how to seed the definition.
- */
-public class TargetCreationPage extends WizardSelectionPage {
-
-	protected static final int USE_EMPTY = 0;
-	protected static final int USE_DEFAULT = 1;
-	protected static final int USE_CURRENT_TP = 2;
-	protected static final int USE_EXISTING_TARGET = 3;
-
-	private Button fEmptyButton;
-	private Button fDefaultButton;
-	private Button fCurrentTPButton;
-	private Button fExistingTargetButton;
-	private Combo fTargets;
-	private String[] fTargetIds;
-	private String templateTargetId;
-	private ITargetDefinition[] fTargetDefs = new ITargetDefinition[4];
-
-	public TargetCreationPage(String pageName) {
-		super(pageName);
-		setTitle(PDEUIMessages.TargetProfileWizardPage_title);
-		setDescription(PDEUIMessages.TargetProfileWizardPage_description);
-	}
-
-	/**
-	 * Returns the target service or <code>null</code> if none.
-	 *
-	 * @return target service or <code>null</code>
-	 */
-	protected ITargetPlatformService getTargetService() {
-		return PDECore.getDefault().acquireService(ITargetPlatformService.class);
-	}
-
-	@Override
-	public void createControl(Composite parent) {
-		Composite comp = SWTFactory.createComposite(parent, 2, 1, GridData.FILL_BOTH);
-		SWTFactory.createLabel(comp, PDEUIMessages.TargetCreationPage_0, 3);
-
-		fEmptyButton = SWTFactory.createRadioButton(comp, PDEUIMessages.TargetCreationPage_1, 2);
-		fDefaultButton = SWTFactory.createRadioButton(comp, PDEUIMessages.TargetCreationPage_2, 2);
-		fCurrentTPButton = SWTFactory.createRadioButton(comp, PDEUIMessages.TargetCreationPage_3, 2);
-		fExistingTargetButton = SWTFactory.createRadioButton(comp, PDEUIMessages.TargetCreationPage_4, 1);
-		fExistingTargetButton.addSelectionListener(widgetSelectedAdapter(e -> {
-			boolean enabled = fExistingTargetButton.getSelection();
-			fTargets.setEnabled(enabled);
-		}));
-
-		fEmptyButton.setSelection(true);
-
-		fTargets = SWTFactory.createCombo(comp, SWT.SINGLE | SWT.READ_ONLY, 1, GridData.BEGINNING, null);
-		fTargets.setEnabled(false);
-		initializeTargetCombo();
-		fTargets.addSelectionListener(widgetSelectedAdapter(e -> templateTargetId = fTargetIds[fTargets.getSelectionIndex()]));
-
-		Dialog.applyDialogFont(comp);
-		setSelectedNode(new EditTargetNode());
-		setControl(comp);
-		setPageComplete(true);
-		PlatformUI.getWorkbench().getHelpSystem().setHelp(parent, IHelpContextIds.NEW_TARGET_WIZARD);
-	}
-
-	protected void initializeTargetCombo() {
-		IConfigurationElement[] elements = PDECore.getDefault().getTargetProfileManager().getSortedTargets();
-		fTargetIds = new String[elements.length];
-		for (int i = 0; i < elements.length; i++) {
-			String name = elements[i].getAttribute(
-			if (fTargets.indexOf(name) == -1)
-				fTargets.add(name);
-			fTargetIds[i] = elements[i].getAttribute(
-		}
-		if (elements.length > 0) {
-			fTargets.select(0);
-			setTargetId(fTargetIds[fTargets.getSelectionIndex()]);
-		}
-	}
-
-	protected int getInitializationOption() {
-		if (fEmptyButton.getSelection())
-			return USE_EMPTY;
-		if (fDefaultButton.getSelection())
-			return USE_DEFAULT;
-		else if (fCurrentTPButton.getSelection())
-			return USE_CURRENT_TP;
-		return USE_EXISTING_TARGET;
-	}
-
-	protected String getTargetId() {
-		return templateTargetId;
-	}
-
-	protected void setTargetId(String targetId) {
-		templateTargetId = targetId;
-	}
-
-	protected ITargetDefinition createTarget(int targetOption) {
-		ITargetPlatformService service = getTargetService();
-		if (service != null) {
-			ITargetDefinition definition = service.newTarget();
-			switch (targetOption) {
-				case USE_EMPTY :
-					definition.setName(PDEUIMessages.TargetCreationPage_6);
-					break;
-				case USE_DEFAULT :
-					try {
-						populateBasicTarget(definition);
-					} catch (CoreException e) {
-						setErrorMessage(e.getMessage());
-						return null;
-					}
-					break;
-				case USE_CURRENT_TP :
-					try {
-						populateFromCurrentTargetPlatform(definition);
-					} catch (CoreException e) {
-						setErrorMessage(e.getMessage());
-						return null;
-					}
-					break;
-				case USE_EXISTING_TARGET :
-					try {
-						populateFromTemplate(definition, getTargetId());
-					} catch (CoreException e) {
-						setErrorMessage(e.getMessage());
-						return null;
-					}
-					break;
-			}
-			return definition;
-		}
-		return null;
-	}
-
-	/**
-	 * Applies basic target settings to the given target definition.
-	 *
-	 * @param definition
-	 * @throws CoreException
-	 */
-	private void populateBasicTarget(ITargetDefinition definition) throws CoreException {
-		ITargetPlatformService service = getTargetService();
-		if (service != null) {
-			ITargetDefinition def = service.newDefaultTarget();
-			service.copyTargetDefinition(def, definition);
-		}
-	}
-
-	/**
-	 * Populates the given definition from current target platform settings.
-	 *
-	 * @param definition
-	 * @throws CoreException
-	 */
-	private void populateFromCurrentTargetPlatform(ITargetDefinition definition) throws CoreException {
-		ITargetPlatformService service = getTargetService();
-		if (service != null) {
-			ITargetDefinition current = service.getWorkspaceTargetDefinition();
-			service.copyTargetDefinition(current, definition);
-		}
-	}
-
-	/**
-	 * Populates the given definition from the specified target template.
-	 *
-	 * @param definition
-	 * @param id target extension identifier
-	 * @exception CoreException if unable to complete
-	 */
-	private void populateFromTemplate(ITargetDefinition definition, String id) throws CoreException {
-		ITargetPlatformService service = getTargetService();
-		if (service != null) {
-			service.loadTargetDefinition(definition, id);
-		}
-	}
-
-	@Override
-	public IWizardPage getNextPage() {
-		ITargetDefinition target = null;
-		int option = getInitializationOption();
-		if (fTargetDefs[option] == null) {
-			fTargetDefs[option] = createTarget(option);
-		} else if (option == USE_EXISTING_TARGET) {
-			try {
-				populateFromTemplate(fTargetDefs[option], getTargetId());
-			} catch (CoreException e) {
-				setErrorMessage(e.getMessage());
-			}
-		}
-		target = fTargetDefs[option];
-		if (target != null) {
-			((NewTargetDefinitionWizard2) getWizard()).setTargetDefinition(target);
-			((EditTargetNode) getSelectedNode()).setTargetDefinition(target);
-			return super.getNextPage();
-		}
-		return null;
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.wizards.target;
+
+import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
+
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IConfigurationElement;
+import org.eclipse.jface.dialogs.Dialog;
+import org.eclipse.jface.wizard.IWizardPage;
+import org.eclipse.jface.wizard.WizardSelectionPage;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.core.target.ITargetPlatformService;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.ui.*;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.PlatformUI;
+
+/**
+ * First wizard page used to create a target definition. Defines the location where
+ * the definition will be created and how to seed the definition.
+ */
+public class TargetCreationPage extends WizardSelectionPage {
+
+	protected static final int USE_EMPTY = 0;
+	protected static final int USE_DEFAULT = 1;
+	protected static final int USE_CURRENT_TP = 2;
+	protected static final int USE_EXISTING_TARGET = 3;
+
+	private Button fEmptyButton;
+	private Button fDefaultButton;
+	private Button fCurrentTPButton;
+	private Button fExistingTargetButton;
+	private Combo fTargets;
+	private String[] fTargetIds;
+	private String templateTargetId;
+	private ITargetDefinition[] fTargetDefs = new ITargetDefinition[4];
+
+	public TargetCreationPage(String pageName) {
+		super(pageName);
+		setTitle(PDEUIMessages.TargetProfileWizardPage_title);
+		setDescription(PDEUIMessages.TargetProfileWizardPage_description);
+	}
+
+	/**
+	 * Returns the target service or <code>null</code> if none.
+	 *
+	 * @return target service or <code>null</code>
+	 */
+	protected ITargetPlatformService getTargetService() {
+		return PDECore.getDefault().acquireService(ITargetPlatformService.class);
+	}
+
+	@Override
+	public void createControl(Composite parent) {
+		Composite comp = SWTFactory.createComposite(parent, 2, 1, GridData.FILL_BOTH);
+		SWTFactory.createLabel(comp, PDEUIMessages.TargetCreationPage_0, 3);
+
+		fEmptyButton = SWTFactory.createRadioButton(comp, PDEUIMessages.TargetCreationPage_1, 2);
+		fDefaultButton = SWTFactory.createRadioButton(comp, PDEUIMessages.TargetCreationPage_2, 2);
+		fCurrentTPButton = SWTFactory.createRadioButton(comp, PDEUIMessages.TargetCreationPage_3, 2);
+		fExistingTargetButton = SWTFactory.createRadioButton(comp, PDEUIMessages.TargetCreationPage_4, 1);
+		fExistingTargetButton.addSelectionListener(widgetSelectedAdapter(e -> {
+			boolean enabled = fExistingTargetButton.getSelection();
+			fTargets.setEnabled(enabled);
+		}));
+
+		fEmptyButton.setSelection(true);
+
+		fTargets = SWTFactory.createCombo(comp, SWT.SINGLE | SWT.READ_ONLY, 1, GridData.BEGINNING, null);
+		fTargets.setEnabled(false);
+		initializeTargetCombo();
+		fTargets.addSelectionListener(widgetSelectedAdapter(e -> templateTargetId = fTargetIds[fTargets.getSelectionIndex()]));
+
+		Dialog.applyDialogFont(comp);
+		setSelectedNode(new EditTargetNode());
+		setControl(comp);
+		setPageComplete(true);
+		PlatformUI.getWorkbench().getHelpSystem().setHelp(parent, IHelpContextIds.NEW_TARGET_WIZARD);
+	}
+
+	protected void initializeTargetCombo() {
+		IConfigurationElement[] elements = PDECore.getDefault().getTargetProfileManager().getSortedTargets();
+		fTargetIds = new String[elements.length];
+		for (int i = 0; i < elements.length; i++) {
+			String name = elements[i].getAttribute(
+			if (fTargets.indexOf(name) == -1)
+				fTargets.add(name);
+			fTargetIds[i] = elements[i].getAttribute(
+		}
+		if (elements.length > 0) {
+			fTargets.select(0);
+			setTargetId(fTargetIds[fTargets.getSelectionIndex()]);
+		}
+	}
+
+	protected int getInitializationOption() {
+		if (fEmptyButton.getSelection())
+			return USE_EMPTY;
+		if (fDefaultButton.getSelection())
+			return USE_DEFAULT;
+		else if (fCurrentTPButton.getSelection())
+			return USE_CURRENT_TP;
+		return USE_EXISTING_TARGET;
+	}
+
+	protected String getTargetId() {
+		return templateTargetId;
+	}
+
+	protected void setTargetId(String targetId) {
+		templateTargetId = targetId;
+	}
+
+	protected ITargetDefinition createTarget(int targetOption) {
+		ITargetPlatformService service = getTargetService();
+		if (service != null) {
+			ITargetDefinition definition = service.newTarget();
+			switch (targetOption) {
+				case USE_EMPTY :
+					definition.setName(PDEUIMessages.TargetCreationPage_6);
+					break;
+				case USE_DEFAULT :
+					try {
+						populateBasicTarget(definition);
+					} catch (CoreException e) {
+						setErrorMessage(e.getMessage());
+						return null;
+					}
+					break;
+				case USE_CURRENT_TP :
+					try {
+						populateFromCurrentTargetPlatform(definition);
+					} catch (CoreException e) {
+						setErrorMessage(e.getMessage());
+						return null;
+					}
+					break;
+				case USE_EXISTING_TARGET :
+					try {
+						populateFromTemplate(definition, getTargetId());
+					} catch (CoreException e) {
+						setErrorMessage(e.getMessage());
+						return null;
+					}
+					break;
+			}
+			return definition;
+		}
+		return null;
+	}
+
+	/**
+	 * Applies basic target settings to the given target definition.
+	 *
+	 * @param definition
+	 * @throws CoreException
+	 */
+	private void populateBasicTarget(ITargetDefinition definition) throws CoreException {
+		ITargetPlatformService service = getTargetService();
+		if (service != null) {
+			ITargetDefinition def = service.newDefaultTarget();
+			service.copyTargetDefinition(def, definition);
+		}
+	}
+
+	/**
+	 * Populates the given definition from current target platform settings.
+	 *
+	 * @param definition
+	 * @throws CoreException
+	 */
+	private void populateFromCurrentTargetPlatform(ITargetDefinition definition) throws CoreException {
+		ITargetPlatformService service = getTargetService();
+		if (service != null) {
+			ITargetDefinition current = service.getWorkspaceTargetDefinition();
+			service.copyTargetDefinition(current, definition);
+		}
+	}
+
+	/**
+	 * Populates the given definition from the specified target template.
+	 *
+	 * @param definition
+	 * @param id target extension identifier
+	 * @exception CoreException if unable to complete
+	 */
+	private void populateFromTemplate(ITargetDefinition definition, String id) throws CoreException {
+		ITargetPlatformService service = getTargetService();
+		if (service != null) {
+			service.loadTargetDefinition(definition, id);
+		}
+	}
+
+	@Override
+	public IWizardPage getNextPage() {
+		ITargetDefinition target = null;
+		int option = getInitializationOption();
+		if (fTargetDefs[option] == null) {
+			fTargetDefs[option] = createTarget(option);
+		} else if (option == USE_EXISTING_TARGET) {
+			try {
+				populateFromTemplate(fTargetDefs[option], getTargetId());
+			} catch (CoreException e) {
+				setErrorMessage(e.getMessage());
+			}
+		}
+		target = fTargetDefs[option];
+		if (target != null) {
+			((NewTargetDefinitionWizard2) getWizard()).setTargetDefinition(target);
+			((EditTargetNode) getSelectedNode()).setTargetDefinition(target);
+			return super.getNextPage();
+		}
+		return null;
+	}
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionPage.java
位置:  -1,61 +1,61  
-/*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2017 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.target;
-
-import org.eclipse.jface.wizard.WizardPage;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.core.target.ITargetPlatformService;
-import org.eclipse.pde.internal.core.PDECore;
-
-/**
- * Common function for target definition wizard pages.
- */
-public abstract class TargetDefinitionPage extends WizardPage {
-
-	private ITargetDefinition fDefinition;
-
-	/**
-	 * @param pageName
-	 */
-	protected TargetDefinitionPage(String pageName, ITargetDefinition definition) {
-		super(pageName);
-		fDefinition = definition;
-	}
-
-	/**
-	 * Returns the target being edited.
-	 *
-	 * @return target definition or <code>null</code>
-	 */
-	public ITargetDefinition getTargetDefinition() {
-		return fDefinition;
-	}
-
-	/**
-	 * Notification the target being edited has changed to a new model. Subclasses
-	 * should override.
-	 */
-	protected void targetChanged(ITargetDefinition definition) {
-		fDefinition = definition;
-	}
-
-	/**
-	 * Returns the target service or <code>null</code> if none.
-	 *
-	 * @return target service or <code>null</code>
-	 */
-	protected static ITargetPlatformService getTargetService() {
-		return PDECore.getDefault().acquireService(ITargetPlatformService.class);
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.wizards.target;
+
+import org.eclipse.jface.wizard.WizardPage;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.core.target.ITargetPlatformService;
+import org.eclipse.pde.internal.core.PDECore;
+
+/**
+ * Common function for target definition wizard pages.
+ */
+public abstract class TargetDefinitionPage extends WizardPage {
+
+	private ITargetDefinition fDefinition;
+
+	/**
+	 * @param pageName
+	 */
+	protected TargetDefinitionPage(String pageName, ITargetDefinition definition) {
+		super(pageName);
+		fDefinition = definition;
+	}
+
+	/**
+	 * Returns the target being edited.
+	 *
+	 * @return target definition or <code>null</code>
+	 */
+	public ITargetDefinition getTargetDefinition() {
+		return fDefinition;
+	}
+
+	/**
+	 * Notification the target being edited has changed to a new model. Subclasses
+	 * should override.
+	 */
+	protected void targetChanged(ITargetDefinition definition) {
+		fDefinition = definition;
+	}
+
+	/**
+	 * Returns the target service or <code>null</code> if none.
+	 *
+	 * @return target service or <code>null</code>
+	 */
+	protected static ITargetPlatformService getTargetService() {
+		return PDECore.getDefault().acquireService(ITargetPlatformService.class);
+	}
+}

原文件: ui/org.eclipse.pde/about.ini 
新文件: ui/org.eclipse.pde/about.ini
位置:  -1,32 +1,32  
-# about.ini
-# contains information about a feature
-# java.io.Properties file (ISO 8859-1 with 
-# 
-# This file does not need to be translated.
-
-# Property 
-aboutText=%blurb
-
-# Property 
-# needed for primary features only
-
-# Property 
-featureImage=eclipse32.png
-
-# Property 
-# needed for primary features only
-
-# Property 
-# needed for primary features only
-
-# Property 
-welcomePage=$nl$/welcome.xml
-
-# Property 
-# welcome page is to be opened.
-# optional
-
-# Property 
-# optional
-tipsAndTricksHref=/org.eclipse.pde.doc.user/tips/pde_tips.htm
-
+# about.ini
+# contains information about a feature
+# java.io.Properties file (ISO 8859-1 with 
+# 
+# This file does not need to be translated.
+
+# Property 
+aboutText=%blurb
+
+# Property 
+# needed for primary features only
+
+# Property 
+featureImage=eclipse32.png
+
+# Property 
+# needed for primary features only
+
+# Property 
+# needed for primary features only
+
+# Property 
+welcomePage=$nl$/welcome.xml
+
+# Property 
+# welcome page is to be opened.
+# optional
+
+# Property 
+# optional
+tipsAndTricksHref=/org.eclipse.pde.doc.user/tips/pde_tips.htm
+

原文件: ui/org.eclipse.pde/about.mappings 
新文件: ui/org.eclipse.pde/about.mappings
位置:  -1,6 +1,6  
-# about.mappings
-# contains fill-ins for about.properties
-# java.io.Properties file (ISO 8859-1 with 
-# This file does not need to be translated.
-
-0=${buildId}
+# about.mappings
+# contains fill-ins for about.properties
+# java.io.Properties file (ISO 8859-1 with 
+# This file does not need to be translated.
+
+0=${buildId}

原文件: ui/org.eclipse.pde/cheatsheets/setup-apitools-existing-projects.xml 
新文件: ui/org.eclipse.pde/cheatsheets/setup-apitools-existing-projects.xml
位置:  -1,71 +1,71  
-<?xml version=
-<!--/*******************************************************************************
- * Copyright (c) 2009, 2011 IBM Corporation and others.
- *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/-->
-<cheatsheet
-      title=
-   <intro href=
-      <description>
-         This cheat sheet will help in setting up API Tools for existing plug-in projects.
-      </description>
-   </intro>
-   <item
-         skip=
-         title=
-      <description>
-         The plug-in projects should be located in the workspace and be in open state. The API is public and the relevant packages are exported through the &amp;quot;Exported Packages&amp;quot; on the &amp;quot;Runtime&amp;quot; tab of the Manifest Editor.
-      </description>
-   </item>
-   <item
-         href=
-         title=
-      <description>
-      </description>
-      <subitem
-            label=
-      </subitem>
-      <subitem
-            label=
-      </subitem>
-      <subitem
-            label=
-      </subitem>
-      <subitem
-            label=
-      </subitem>
-   </item>
-   <item
-         title=
-      <description>
-         This is optional and is there just to make sure everything is in place properly.
-         
-      </description>
-      <subitem
-            label=
-            skip=
-      </subitem>
-      <subitem
-            label=
-            skip=
-      </subitem>
-      <subitem
-            label=
-      </subitem>
-      <subitem
-            label=
-      </subitem>
-      <subitem
-            label=
-      </subitem>
-   </item>
-</cheatsheet>
+<?xml version=
+<!--/*******************************************************************************
+ * Copyright (c) 2009, 2011 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/-->
+<cheatsheet
+      title=
+   <intro href=
+      <description>
+         This cheat sheet will help in setting up API Tools for existing plug-in projects.
+      </description>
+   </intro>
+   <item
+         skip=
+         title=
+      <description>
+         The plug-in projects should be located in the workspace and be in open state. The API is public and the relevant packages are exported through the &amp;quot;Exported Packages&amp;quot; on the &amp;quot;Runtime&amp;quot; tab of the Manifest Editor.
+      </description>
+   </item>
+   <item
+         href=
+         title=
+      <description>
+      </description>
+      <subitem
+            label=
+      </subitem>
+      <subitem
+            label=
+      </subitem>
+      <subitem
+            label=
+      </subitem>
+      <subitem
+            label=
+      </subitem>
+   </item>
+   <item
+         title=
+      <description>
+         This is optional and is there just to make sure everything is in place properly.
+         
+      </description>
+      <subitem
+            label=
+            skip=
+      </subitem>
+      <subitem
+            label=
+            skip=
+      </subitem>
+      <subitem
+            label=
+      </subitem>
+      <subitem
+            label=
+      </subitem>
+      <subitem
+            label=
+      </subitem>
+   </item>
+</cheatsheet>

原文件: ui/org.eclipse.pde/intro/css/overview.css 
新文件: ui/org.eclipse.pde/intro/css/overview.css
位置:  -1,2 +1,2  
-a#pde img { background-image : url(../../images/topiclabel/ov_eclplugindev48.gif); }
-a#pde:hover img { background-image : url(../../images/topiclabel/ov_eclplugindev48_hov.gif); }
+a#pde img { background-image : url(../../images/topiclabel/ov_eclplugindev48.gif); }
+a#pde:hover img { background-image : url(../../images/topiclabel/ov_eclplugindev48_hov.gif); }

原文件: ui/org.eclipse.pde/intro/css/samples.css 
新文件: ui/org.eclipse.pde/intro/css/samples.css
位置:  -1,11 +1,11  
-a#swt-examples img { background-image : url(../../images/topiclabel/sa_samplecube48.gif); }
-a#swt-examples:hover img { background-image : url(../../images/topiclabel/sa_samplecube48_hov.gif); }
-
-a#multi-page-editor img { background-image : url(../../images/topiclabel/sa_sampleorb48.gif); }
-a#multi-page-editor:hover img { background-image : url(../../images/topiclabel/sa_sampleorb48_hov.gif); }
-
-a#property-sheet img { background-image : url(../../images/topiclabel/sa_sampleorb48.gif); }
-a#property-sheet:hover img { background-image : url(../../images/topiclabel/sa_sampleorb48_hov.gif); }
-
-a#readmetool img { background-image : url(../../images/topiclabel/sa_sampleorb48.gif); }
-a#readmetool:hover img { background-image : url(../../images/topiclabel/sa_sampleorb48_hov.gif); }
+a#swt-examples img { background-image : url(../../images/topiclabel/sa_samplecube48.gif); }
+a#swt-examples:hover img { background-image : url(../../images/topiclabel/sa_samplecube48_hov.gif); }
+
+a#multi-page-editor img { background-image : url(../../images/topiclabel/sa_sampleorb48.gif); }
+a#multi-page-editor:hover img { background-image : url(../../images/topiclabel/sa_sampleorb48_hov.gif); }
+
+a#property-sheet img { background-image : url(../../images/topiclabel/sa_sampleorb48.gif); }
+a#property-sheet:hover img { background-image : url(../../images/topiclabel/sa_sampleorb48_hov.gif); }
+
+a#readmetool img { background-image : url(../../images/topiclabel/sa_sampleorb48.gif); }
+a#readmetool:hover img { background-image : url(../../images/topiclabel/sa_sampleorb48_hov.gif); }

原文件: ui/org.eclipse.pde/intro/css/tutorials.css 
新文件: ui/org.eclipse.pde/intro/css/tutorials.css
位置:  -1,5 +1,5  
-a#rcp img { background-image : url(../../images/topiclabel/tu_rcpapp48.gif); }
-a#rcp:hover img { background-image : url(../../images/topiclabel/tu_rcpapp48_hov.gif); }
-
-a#pde-hello-world img { background-image : url(../../images/topiclabel/tu_createplugin48.gif); }
-a#pde-hello-world:hover img { background-image : url(../../images/topiclabel/tu_createplugin48_hov.gif); }
+a#rcp img { background-image : url(../../images/topiclabel/tu_rcpapp48.gif); }
+a#rcp:hover img { background-image : url(../../images/topiclabel/tu_rcpapp48_hov.gif); }
+
+a#pde-hello-world img { background-image : url(../../images/topiclabel/tu_createplugin48.gif); }
+a#pde-hello-world:hover img { background-image : url(../../images/topiclabel/tu_createplugin48_hov.gif); }

原文件: ui/org.eclipse.pde/intro/css/whatsnew.css 
新文件: ui/org.eclipse.pde/intro/css/whatsnew.css
位置:  -1,2 +1,2  
-a#pde-noteworthy img { background-image : url(../../images/topiclabel/wn_pluginenviro48.gif); }
-a#pde-noteworthy:hover img { background-image : url(../../images/topiclabel/wn_pluginenviro48_hov.gif); }
+a#pde-noteworthy img { background-image : url(../../images/topiclabel/wn_pluginenviro48.gif); }
+a#pde-noteworthy:hover img { background-image : url(../../images/topiclabel/wn_pluginenviro48_hov.gif); }

原文件: ui/org.eclipse.ui.trace/.project 
新文件: ui/org.eclipse.ui.trace/.project
位置:  -1,39 +1,39  
-<?xml version=
-<projectDescription>
-	<name>org.eclipse.ui.trace</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.ManifestBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.SchemaBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.ds.core.builder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-	</buildSpec>
-	<natures>
-		<nature>org.eclipse.jdt.core.javanature</nature>
-		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
-	</natures>
-</projectDescription>
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.ui.trace</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ds.core.builder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.ui.trace/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.ui.trace/.settings/org.eclipse.jdt.core.prefs
位置:  -1,401 +1,401  
-eclipse.preferences.version=1
-org.eclipse.jdt.core.builder.cleanOutputFolder=clean
-org.eclipse.jdt.core.builder.duplicateResourceTask=warning
-org.eclipse.jdt.core.builder.invalidClasspath=abort
-org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
-org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
-org.eclipse.jdt.core.circularClasspath=error
-org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
-org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
-org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
-org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
-org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
-org.eclipse.jdt.core.compiler.annotation.nonnullisdefault=disabled
-org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
-org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
-org.eclipse.jdt.core.compiler.compliance=1.8
-org.eclipse.jdt.core.compiler.debug.lineNumber=generate
-org.eclipse.jdt.core.compiler.debug.localVariable=generate
-org.eclipse.jdt.core.compiler.debug.sourceFile=generate
-org.eclipse.jdt.core.compiler.doc.comment.support=enabled
-org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
-org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
-org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
-org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
-org.eclipse.jdt.core.compiler.problem.deadCode=error
-org.eclipse.jdt.core.compiler.problem.deprecation=warning
-org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
-org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
-org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
-org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
-org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
-org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
-org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
-org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
-org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
-org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
-org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
-org.eclipse.jdt.core.compiler.problem.includeFieldsInNullAnalysis=disabled
-org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
-org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
-org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
-org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
-org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
-org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
-org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
-org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
-org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
-org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
-org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
-org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
-org.eclipse.jdt.core.compiler.problem.nullReference=error
-org.eclipse.jdt.core.compiler.problem.nullSpecInsufficientInfo=warning
-org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
-org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
-org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
-org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
-org.eclipse.jdt.core.compiler.problem.potentialNullSpecViolation=error
-org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
-org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
-org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
-org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
-org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
-org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
-org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
-org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
-org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
-org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
-org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
-org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
-org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
-org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
-org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
-org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
-org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
-org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
-org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
-org.eclipse.jdt.core.compiler.problem.unusedImport=error
-org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
-org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
-org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
-org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
-org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
-org.eclipse.jdt.core.compiler.problem.unusedWarningToken=ignore
-org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
-org.eclipse.jdt.core.compiler.source=1.8
-org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_assignment=0
-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_after_package=1
-org.eclipse.jdt.core.formatter.blank_lines_before_field=0
-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
-org.eclipse.jdt.core.formatter.blank_lines_before_method=1
-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
-org.eclipse.jdt.core.formatter.blank_lines_before_package=0
-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
-org.eclipse.jdt.core.formatter.comment.format_block_comments=true
-org.eclipse.jdt.core.formatter.comment.format_header=false
-org.eclipse.jdt.core.formatter.comment.format_html=true
-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
-org.eclipse.jdt.core.formatter.comment.format_line_comments=true
-org.eclipse.jdt.core.formatter.comment.format_source_code=true
-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
-org.eclipse.jdt.core.formatter.comment.line_length=80
-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
-org.eclipse.jdt.core.formatter.compact_else_if=true
-org.eclipse.jdt.core.formatter.continuation_indentation=2
-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_empty_lines=false
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
-org.eclipse.jdt.core.formatter.indentation.size=4
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
-org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
-org.eclipse.jdt.core.formatter.join_lines_in_comments=true
-org.eclipse.jdt.core.formatter.join_wrapped_lines=true
-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
-org.eclipse.jdt.core.formatter.lineSplit=120
-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
-org.eclipse.jdt.core.formatter.tabulation.char=tab
-org.eclipse.jdt.core.formatter.tabulation.size=4
-org.eclipse.jdt.core.formatter.use_on_off_tags=false
-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
-org.eclipse.jdt.core.incompatibleJDKLevel=ignore
-org.eclipse.jdt.core.incompleteClasspath=error
-org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter
+eclipse.preferences.version=1
+org.eclipse.jdt.core.builder.cleanOutputFolder=clean
+org.eclipse.jdt.core.builder.duplicateResourceTask=warning
+org.eclipse.jdt.core.builder.invalidClasspath=abort
+org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder=ignore
+org.eclipse.jdt.core.builder.resourceCopyExclusionFilter=*.launch
+org.eclipse.jdt.core.circularClasspath=error
+org.eclipse.jdt.core.classpath.exclusionPatterns=enabled
+org.eclipse.jdt.core.classpath.multipleOutputLocations=enabled
+org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource=error
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullisdefault=disabled
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.doc.comment.support=enabled
+org.eclipse.jdt.core.compiler.maxProblemPerUnit=1000
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=error
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=enabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=warning
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=warning
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=ignore
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeFieldsInNullAnalysis=disabled
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadoc=warning
+org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility=private
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocComments=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingJavadocTags=ignore
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding=enabled
+org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility=public
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
+org.eclipse.jdt.core.compiler.problem.nullReference=error
+org.eclipse.jdt.core.compiler.problem.nullSpecInsufficientInfo=warning
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=warning
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentialNullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=warning
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=warning
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=warning
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unsafeTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=enabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=error
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=ignore
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8
+org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_assignment=0
+org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16
+org.eclipse.jdt.core.formatter.alignment_for_compact_if=16
+org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80
+org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0
+org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16
+org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0
+org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80
+org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16
+org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16
+org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16
+org.eclipse.jdt.core.formatter.blank_lines_after_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_after_package=1
+org.eclipse.jdt.core.formatter.blank_lines_before_field=0
+org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0
+org.eclipse.jdt.core.formatter.blank_lines_before_imports=1
+org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1
+org.eclipse.jdt.core.formatter.blank_lines_before_method=1
+org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1
+org.eclipse.jdt.core.formatter.blank_lines_before_package=0
+org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1
+org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1
+org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_lambda_body=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line
+org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false
+org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false
+org.eclipse.jdt.core.formatter.comment.format_block_comments=true
+org.eclipse.jdt.core.formatter.comment.format_header=false
+org.eclipse.jdt.core.formatter.comment.format_html=true
+org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true
+org.eclipse.jdt.core.formatter.comment.format_line_comments=true
+org.eclipse.jdt.core.formatter.comment.format_source_code=true
+org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true
+org.eclipse.jdt.core.formatter.comment.indent_root_tags=true
+org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert
+org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert
+org.eclipse.jdt.core.formatter.comment.line_length=80
+org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true
+org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true
+org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false
+org.eclipse.jdt.core.formatter.compact_else_if=true
+org.eclipse.jdt.core.formatter.continuation_indentation=2
+org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2
+org.eclipse.jdt.core.formatter.disabling_tag=@formatter\:off
+org.eclipse.jdt.core.formatter.enabling_tag=@formatter\:on
+org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false
+org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true
+org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true
+org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_empty_lines=false
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true
+org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true
+org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=false
+org.eclipse.jdt.core.formatter.indentation.size=4
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert
+org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert
+org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert
+org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert
+org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert
+org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert
+org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert
+org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert
+org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert
+org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert
+org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert
+org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert
+org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert
+org.eclipse.jdt.core.formatter.join_lines_in_comments=true
+org.eclipse.jdt.core.formatter.join_wrapped_lines=true
+org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false
+org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false
+org.eclipse.jdt.core.formatter.lineSplit=120
+org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false
+org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0
+org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1
+org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true
+org.eclipse.jdt.core.formatter.tabulation.char=tab
+org.eclipse.jdt.core.formatter.tabulation.size=4
+org.eclipse.jdt.core.formatter.use_on_off_tags=false
+org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false
+org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true
+org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true
+org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true
+org.eclipse.jdt.core.incompatibleJDKLevel=ignore
+org.eclipse.jdt.core.incompleteClasspath=error
+org.eclipse.jdt.core.javaFormatter=org.eclipse.jdt.core.defaultJavaFormatter

原文件: ui/org.eclipse.ui.trace/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.ui.trace/META-INF/MANIFEST.MF
位置:  -1,19 +1,19  
-Manifest-Version: 1.0
-Bundle-ManifestVersion: 2
-Bundle-Name: %pluginName
-Bundle-SymbolicName: org.eclipse.ui.trace;singleton:=true
-Bundle-Version: 1.1.600.qualifier
-Bundle-Activator: org.eclipse.ui.trace.internal.TracingUIActivator
-Bundle-Vendor: %providerName
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8
-Bundle-ActivationPolicy: lazy
-Bundle-Localization: plugin
-Require-Bundle: org.eclipse.osgi;bundle-version=
- org.eclipse.core.runtime;bundle-version=
- org.eclipse.ui;bundle-version=
-Export-Package: org.eclipse.ui.trace.internal;x-internal:=true,
- org.eclipse.ui.trace.internal.datamodel;x-internal:=true,
- org.eclipse.ui.trace.internal.providers;x-internal:=true,
- org.eclipse.ui.trace.internal.utils;x-internal:=true
-Service-Component: OSGI-INF/tracingInitializer.xml
-Automatic-Module-Name: org.eclipse.ui.trace
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: %pluginName
+Bundle-SymbolicName: org.eclipse.ui.trace;singleton:=true
+Bundle-Version: 1.1.700.qualifier
+Bundle-Activator: org.eclipse.ui.trace.internal.TracingUIActivator
+Bundle-Vendor: %providerName
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Bundle-ActivationPolicy: lazy
+Bundle-Localization: plugin
+Require-Bundle: org.eclipse.osgi;bundle-version=
+ org.eclipse.core.runtime;bundle-version=
+ org.eclipse.ui;bundle-version=
+Export-Package: org.eclipse.ui.trace.internal;x-internal:=true,
+ org.eclipse.ui.trace.internal.datamodel;x-internal:=true,
+ org.eclipse.ui.trace.internal.providers;x-internal:=true,
+ org.eclipse.ui.trace.internal.utils;x-internal:=true
+Service-Component: OSGI-INF/tracingInitializer.xml
+Automatic-Module-Name: org.eclipse.ui.trace

原文件: ui/org.eclipse.ui.trace/build.properties 
新文件: ui/org.eclipse.ui.trace/build.properties
位置:  -1,22 +1,22  
-###############################################################################
-# Copyright (c) 2011, 2016 IBM Corporation and others.
-#
-# This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License 2.0
-# which accompanies this distribution, and is available at
-# https://www.eclipse.org/legal/epl-2.0/
-#
-# SPDX-License-Identifier: EPL-2.0
-#
-# Contributors:
-#     IBM Corporation - initial API and implementation
-###############################################################################
-source.. = src/
-bin.includes = META-INF/,\
-               about.html,\
-               plugin.properties,\
-               plugin.xml,\
-               .,\
-               OSGI-INF/
-src.includes = about.html,\
-               schema/
+###############################################################################
+# Copyright (c) 2011, 2016 IBM Corporation and others.
+#
+# This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License 2.0
+# which accompanies this distribution, and is available at
+# https://www.eclipse.org/legal/epl-2.0/
+#
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+#     IBM Corporation - initial API and implementation
+###############################################################################
+source.. = src/
+bin.includes = META-INF/,\
+               about.html,\
+               plugin.properties,\
+               plugin.xml,\
+               .,\
+               OSGI-INF/
+src.includes = about.html,\
+               schema/

原文件: ui/org.eclipse.ui.trace/plugin.properties 
新文件: ui/org.eclipse.ui.trace/plugin.properties
位置:  -1,26 +1,26  
-###############################################################################
-# Copyright (c) 2011, 2012 IBM Corporation and others.
-#
-# This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License 2.0
-# which accompanies this distribution, and is available at
-# https://www.eclipse.org/legal/epl-2.0/
-#
-# SPDX-License-Identifier: EPL-2.0
-#
-# Contributors:
-#     IBM Corporation - initial API and implementation
-#     Tom Eicher (Avaloq Evolution AG) - block selection mode
-###############################################################################
-
-# NLS_ENCODING=UTF-8
-# NLS_MESSAGEFORMAT_VAR
-
-pluginName=Equinox Dynamic Tracing Enablement UI 
-providerName=Eclipse.org - Equinox
-tracingPrefPageName=Tracing
-transferOptions.name = Tracing Options
-traceComponent.label = Tracing
-keyword.trace = trace
-keyword.debug = debug
-traceComponentExtension.name = Trace Components
+###############################################################################
+# Copyright (c) 2011, 2012 IBM Corporation and others.
+#
+# This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License 2.0
+# which accompanies this distribution, and is available at
+# https://www.eclipse.org/legal/epl-2.0/
+#
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+#     IBM Corporation - initial API and implementation
+#     Tom Eicher (Avaloq Evolution AG) - block selection mode
+###############################################################################
+
+# NLS_ENCODING=UTF-8
+# NLS_MESSAGEFORMAT_VAR
+
+pluginName=Equinox Dynamic Tracing Enablement UI 
+providerName=Eclipse.org - Equinox
+tracingPrefPageName=Tracing
+transferOptions.name = Tracing Options
+traceComponent.label = Tracing
+keyword.trace = trace
+keyword.debug = debug
+traceComponentExtension.name = Trace Components

原文件: ui/org.eclipse.ui.trace/plugin.xml 
新文件: ui/org.eclipse.ui.trace/plugin.xml
位置:  -1,63 +1,63  
-<?xml version=
-<?eclipse version=
-<plugin>
-   <extension-point id=
-   <extension
-         point=
-      <page
-            category=
-            class=
-            id=
-            name=
-         <keywordReference
-               id=
-         </keywordReference>
-         <keywordReference
-               id=
-         </keywordReference>
-      </page>
-   </extension>
-   <extension
-         point=
-      <transfer
-            id=
-            name=
-         <mapping
-               scope=
-            <entry
-                  node=
-               <key
-                     name=
-               </key>
-               <key
-                     name=
-               </key>
-               <key
-                     name=
-               </key>
-               <key
-                     name=
-               </key>
-            </entry>
-         </mapping>
-      </transfer>
-   </extension>
-   <extension
-         point=
-      <initializer
-            class=
-      </initializer>
-   </extension>
-   <extension
-         point=
-      <keyword
-            id=
-            label=
-      </keyword>
-      <keyword
-            id=
-            label=
-      </keyword>
-   </extension>
-
-</plugin>
+<?xml version=
+<?eclipse version=
+<plugin>
+   <extension-point id=
+   <extension
+         point=
+      <page
+            category=
+            class=
+            id=
+            name=
+         <keywordReference
+               id=
+         </keywordReference>
+         <keywordReference
+               id=
+         </keywordReference>
+      </page>
+   </extension>
+   <extension
+         point=
+      <transfer
+            id=
+            name=
+         <mapping
+               scope=
+            <entry
+                  node=
+               <key
+                     name=
+               </key>
+               <key
+                     name=
+               </key>
+               <key
+                     name=
+               </key>
+               <key
+                     name=
+               </key>
+            </entry>
+         </mapping>
+      </transfer>
+   </extension>
+   <extension
+         point=
+      <initializer
+            class=
+      </initializer>
+   </extension>
+   <extension
+         point=
+      <keyword
+            id=
+            label=
+      </keyword>
+      <keyword
+            id=
+            label=
+      </keyword>
+   </extension>
+
+</plugin>

原文件: ui/org.eclipse.ui.trace/pom.xml 
新文件: ui/org.eclipse.ui.trace/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.ui</groupId>
   <artifactId>org.eclipse.ui.trace</artifactId>
-  <version>1.1.600-SNAPSHOT</version>
+  <version>1.1.700-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/Messages.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/Messages.java
位置:  -1,109 +1,109  
-/*******************************************************************************
- * Copyright (c) 2011, 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal;
-
-import org.eclipse.osgi.util.NLS;
-
-/**
- * NLS messages for the Tracing preference page
- */
-public class Messages extends NLS {
-
-	/**
-	 * The text to display if a component label is missing
-	 */
-	public static String missingLabelValue = 
-
-	/**
-	 * Title of the tracing tree
-	 */
-	public static String tracingTreeTile = 
-
-	/**
-	 * Description text for the preference page.
-	 */
-	public static String preferencePageDescription = 
-
-	/**
-	 * 'Enable tracing' button
-	 */
-	public static String enableTracingButtonLabel = 
-
-	/**
-	 * 'Tracing Option' column header text
-	 */
-	public static String columnHeaderTracingString = 
-
-	/**
-	 * 'Value' column header text
-	 */
-	public static String columnHeaderTracingValue = 
-
-	/**
-	 * 'Search for a trace string' filter text field value
-	 */
-	public static String filterSearchText = 
-
-	/**
-	 * 'Browse...' button
-	 */
-	public static String tracingFileBrowseButton = 
-
-	/**
-	 * 'Tracing Options' group label
-	 */
-	public static String tracingOptionsGroup = 
-
-	/**
-	 * Maximum number of backup tracing files label
-	 */
-	public static String tracingFileMaxCountLabel = 
-
-	/**
-	 * Maximum size of the tracing files label
-	 */
-	public static String tracingFileMaxSizeLabel = 
-
-	/**
-	 * 'Specify the tracing file' label
-	 */
-	public static String tracingFileLabel = 
-
-	/**
-	 * 'Invalid maximum value input' for the size field
-	 */
-	public static String tracingFileInvalidMaxSize = 
-
-	/**
-	 * An invalid empty tracing file was specified
-	 */
-	public static String tracingFileInvalid = 
-
-	/**
-	 * 'Invalid maximum value input' for the count field
-	 */
-	public static String tracingFileInvalidMaxCount = 
-
-	private final static String BUNDLE_NAME = 
-	static {
-		NLS.initializeMessages(Messages.BUNDLE_NAME, Messages.class);
-	}
-	public static String TracingComponentColumnEditingSupport_false;
-
-	public static String TracingComponentColumnEditingSupport_true;
-
-	public static String TracingPreferencePageStandardOutput;
-
-	public static String TracingPreferencePage_applicationLaunchedInDebugModeWarning;
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal;
+
+import org.eclipse.osgi.util.NLS;
+
+/**
+ * NLS messages for the Tracing preference page
+ */
+public class Messages extends NLS {
+
+	/**
+	 * The text to display if a component label is missing
+	 */
+	public static String missingLabelValue = 
+
+	/**
+	 * Title of the tracing tree
+	 */
+	public static String tracingTreeTile = 
+
+	/**
+	 * Description text for the preference page.
+	 */
+	public static String preferencePageDescription = 
+
+	/**
+	 * 'Enable tracing' button
+	 */
+	public static String enableTracingButtonLabel = 
+
+	/**
+	 * 'Tracing Option' column header text
+	 */
+	public static String columnHeaderTracingString = 
+
+	/**
+	 * 'Value' column header text
+	 */
+	public static String columnHeaderTracingValue = 
+
+	/**
+	 * 'Search for a trace string' filter text field value
+	 */
+	public static String filterSearchText = 
+
+	/**
+	 * 'Browse...' button
+	 */
+	public static String tracingFileBrowseButton = 
+
+	/**
+	 * 'Tracing Options' group label
+	 */
+	public static String tracingOptionsGroup = 
+
+	/**
+	 * Maximum number of backup tracing files label
+	 */
+	public static String tracingFileMaxCountLabel = 
+
+	/**
+	 * Maximum size of the tracing files label
+	 */
+	public static String tracingFileMaxSizeLabel = 
+
+	/**
+	 * 'Specify the tracing file' label
+	 */
+	public static String tracingFileLabel = 
+
+	/**
+	 * 'Invalid maximum value input' for the size field
+	 */
+	public static String tracingFileInvalidMaxSize = 
+
+	/**
+	 * An invalid empty tracing file was specified
+	 */
+	public static String tracingFileInvalid = 
+
+	/**
+	 * 'Invalid maximum value input' for the count field
+	 */
+	public static String tracingFileInvalidMaxCount = 
+
+	private final static String BUNDLE_NAME = 
+	static {
+		NLS.initializeMessages(Messages.BUNDLE_NAME, Messages.class);
+	}
+	public static String TracingComponentColumnEditingSupport_false;
+
+	public static String TracingComponentColumnEditingSupport_true;
+
+	public static String TracingPreferencePageStandardOutput;
+
+	public static String TracingPreferencePage_applicationLaunchedInDebugModeWarning;
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentColumnEditingSupport.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentColumnEditingSupport.java
位置:  -1,148 +1,148  
-/*******************************************************************************
- * Copyright (c) 2011, 2013 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2013 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *     SAP - ongoing enhancements
- *******************************************************************************/
-package org.eclipse.ui.trace.internal;
-
-import org.eclipse.jface.viewers.*;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.widgets.Composite;
-import org.eclipse.ui.trace.internal.datamodel.TracingCollections;
-import org.eclipse.ui.trace.internal.datamodel.TracingComponentDebugOption;
-import org.eclipse.ui.trace.internal.utils.TracingConstants;
-import org.eclipse.ui.trace.internal.utils.TracingUtils;
-
-/**
- * An editing support object for the tracing UI viewer.
- */
-public class TracingComponentColumnEditingSupport extends EditingSupport {
-
-	/**
-	 * Construct a new {@link TracingComponentColumnEditingSupport} for the specified index.
-	 *
-	 * @param viewer
-	 *            The viewer to add this editing support
-	 * @param index
-	 *            The column index. One of either {@link TracingConstants#LABEL_COLUMN_INDEX} for the label column or
-	 *            {@link TracingConstants#VALUE_COLUMN_INDEX} for the value column.
-	 */
-	public TracingComponentColumnEditingSupport(final ColumnViewer viewer, final int index) {
-
-		super(viewer);
-		this.columnIndex = index;
-		switch (this.columnIndex) {
-			case TracingConstants.VALUE_COLUMN_INDEX :
-				this.textEditor = new TextCellEditor((Composite) viewer.getControl(), SWT.NONE);
-				this.comboEditor = new ComboBoxCellEditor((Composite) viewer.getControl(), new String[] {Messages.TracingComponentColumnEditingSupport_true, Messages.TracingComponentColumnEditingSupport_false}, SWT.READ_ONLY | SWT.SIMPLE);
-				this.comboEditor.setActivationStyle(ComboBoxCellEditor.DROP_DOWN_ON_KEY_ACTIVATION | ComboBoxCellEditor.DROP_DOWN_ON_MOUSE_ACTIVATION);
-				break;
-			default :
-				// do nothing - no other columns provide editing support
-				this.textEditor = null;
-				this.comboEditor = null;
-		}
-	}
-
-	@Override
-	protected boolean canEdit(final Object element) {
-
-		boolean canEdit = false;
-		switch (this.columnIndex) {
-			case TracingConstants.VALUE_COLUMN_INDEX :
-				return true;
-			default :
-				// do nothing - no other columns provide editing support
-				canEdit = false;
-		}
-		return canEdit;
-	}
-
-	@Override
-	protected CellEditor getCellEditor(final Object element) {
-
-		if (element instanceof TracingComponentDebugOption) {
-			TracingComponentDebugOption option = (TracingComponentDebugOption) element;
-			if (TracingUtils.isValueBoolean(option.getOptionPathValue())) {
-				return this.comboEditor;
-			}
-			return this.textEditor;
-		}
-		return null;
-	}
-
-	@Override
-	protected Object getValue(final Object element) {
-
-		Object value = null;
-		switch (this.columnIndex) {
-			case 1 :
-				if (element instanceof TracingComponentDebugOption) {
-					String optionPathValue = ((TracingComponentDebugOption) element).getOptionPathValue();
-					if (TracingUtils.isValueBoolean(optionPathValue)) {
-						value = Boolean.parseBoolean(optionPathValue) ? 0 : 1;
-					} else {
-						value = optionPathValue;
-					}
-				} else if (element instanceof String) {
-					value = element;
-				}
-				break;
-			default :
-				// do nothing - no other columns provide editing support
-		}
-		return value;
-	}
-
-	@Override
-	protected void setValue(final Object element, final Object value) {
-
-		switch (this.columnIndex) {
-			case 1 :
-				if (element instanceof TracingComponentDebugOption) {
-					TracingComponentDebugOption option = (TracingComponentDebugOption) element;
-					String updatedValue = String.valueOf(value);
-					if (value instanceof Integer) {
-						updatedValue = String.valueOf((Integer) value == 0);
-					}
-					if (option.getOptionPathValue().equals(updatedValue)) {
-						return; // nothing changed nothing to do
-					}
-					// find identical debug options and update them (this will include 'this' debug option that was
-					// modified)
-					TracingComponentDebugOption[] identicalOptions = TracingCollections.getInstance().getTracingDebugOptions(option.getOptionPath());
-					for (TracingComponentDebugOption identicalOption : identicalOptions) {
-						TracingCollections.getInstance().getModifiedDebugOptions().removeDebugOption(identicalOption.clone());
-						identicalOption.setOptionPathValue(updatedValue);
-						TracingCollections.getInstance().getModifiedDebugOptions().addDebugOption(identicalOption);
-						this.getViewer().update(identicalOption, null);
-					}
-				}
-				break;
-			default :
-				// do nothing - no other columns provide editing support
-		}
-	}
-
-	/**
-	 * The column index of the editors. One of {@link TracingConstants#LABEL_COLUMN_INDEX} or
-	 * {@link TracingConstants#VALUE_COLUMN_INDEX}
-	 */
-	private int columnIndex;
-
-	/**
-	 * The {@link CellEditor} for the value column
-	 */
-	private CellEditor textEditor;
-	private ComboBoxCellEditor comboEditor;
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *     SAP - ongoing enhancements
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal;
+
+import org.eclipse.jface.viewers.*;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.ui.trace.internal.datamodel.TracingCollections;
+import org.eclipse.ui.trace.internal.datamodel.TracingComponentDebugOption;
+import org.eclipse.ui.trace.internal.utils.TracingConstants;
+import org.eclipse.ui.trace.internal.utils.TracingUtils;
+
+/**
+ * An editing support object for the tracing UI viewer.
+ */
+public class TracingComponentColumnEditingSupport extends EditingSupport {
+
+	/**
+	 * Construct a new {@link TracingComponentColumnEditingSupport} for the specified index.
+	 *
+	 * @param viewer
+	 *            The viewer to add this editing support
+	 * @param index
+	 *            The column index. One of either {@link TracingConstants#LABEL_COLUMN_INDEX} for the label column or
+	 *            {@link TracingConstants#VALUE_COLUMN_INDEX} for the value column.
+	 */
+	public TracingComponentColumnEditingSupport(final ColumnViewer viewer, final int index) {
+
+		super(viewer);
+		this.columnIndex = index;
+		switch (this.columnIndex) {
+			case TracingConstants.VALUE_COLUMN_INDEX :
+				this.textEditor = new TextCellEditor((Composite) viewer.getControl(), SWT.NONE);
+				this.comboEditor = new ComboBoxCellEditor((Composite) viewer.getControl(), new String[] {Messages.TracingComponentColumnEditingSupport_true, Messages.TracingComponentColumnEditingSupport_false}, SWT.READ_ONLY | SWT.SIMPLE);
+				this.comboEditor.setActivationStyle(ComboBoxCellEditor.DROP_DOWN_ON_KEY_ACTIVATION | ComboBoxCellEditor.DROP_DOWN_ON_MOUSE_ACTIVATION);
+				break;
+			default :
+				// do nothing - no other columns provide editing support
+				this.textEditor = null;
+				this.comboEditor = null;
+		}
+	}
+
+	@Override
+	protected boolean canEdit(final Object element) {
+
+		boolean canEdit = false;
+		switch (this.columnIndex) {
+			case TracingConstants.VALUE_COLUMN_INDEX :
+				return true;
+			default :
+				// do nothing - no other columns provide editing support
+				canEdit = false;
+		}
+		return canEdit;
+	}
+
+	@Override
+	protected CellEditor getCellEditor(final Object element) {
+
+		if (element instanceof TracingComponentDebugOption) {
+			TracingComponentDebugOption option = (TracingComponentDebugOption) element;
+			if (TracingUtils.isValueBoolean(option.getOptionPathValue())) {
+				return this.comboEditor;
+			}
+			return this.textEditor;
+		}
+		return null;
+	}
+
+	@Override
+	protected Object getValue(final Object element) {
+
+		Object value = null;
+		switch (this.columnIndex) {
+			case 1 :
+				if (element instanceof TracingComponentDebugOption) {
+					String optionPathValue = ((TracingComponentDebugOption) element).getOptionPathValue();
+					if (TracingUtils.isValueBoolean(optionPathValue)) {
+						value = Boolean.parseBoolean(optionPathValue) ? 0 : 1;
+					} else {
+						value = optionPathValue;
+					}
+				} else if (element instanceof String) {
+					value = element;
+				}
+				break;
+			default :
+				// do nothing - no other columns provide editing support
+		}
+		return value;
+	}
+
+	@Override
+	protected void setValue(final Object element, final Object value) {
+
+		switch (this.columnIndex) {
+			case 1 :
+				if (element instanceof TracingComponentDebugOption) {
+					TracingComponentDebugOption option = (TracingComponentDebugOption) element;
+					String updatedValue = String.valueOf(value);
+					if (value instanceof Integer) {
+						updatedValue = String.valueOf((Integer) value == 0);
+					}
+					if (option.getOptionPathValue().equals(updatedValue)) {
+						return; // nothing changed nothing to do
+					}
+					// find identical debug options and update them (this will include 'this' debug option that was
+					// modified)
+					TracingComponentDebugOption[] identicalOptions = TracingCollections.getInstance().getTracingDebugOptions(option.getOptionPath());
+					for (TracingComponentDebugOption identicalOption : identicalOptions) {
+						TracingCollections.getInstance().getModifiedDebugOptions().removeDebugOption(identicalOption.clone());
+						identicalOption.setOptionPathValue(updatedValue);
+						TracingCollections.getInstance().getModifiedDebugOptions().addDebugOption(identicalOption);
+						this.getViewer().update(identicalOption, null);
+					}
+				}
+				break;
+			default :
+				// do nothing - no other columns provide editing support
+		}
+	}
+
+	/**
+	 * The column index of the editors. One of {@link TracingConstants#LABEL_COLUMN_INDEX} or
+	 * {@link TracingConstants#VALUE_COLUMN_INDEX}
+	 */
+	private int columnIndex;
+
+	/**
+	 * The {@link CellEditor} for the value column
+	 */
+	private CellEditor textEditor;
+	private ComboBoxCellEditor comboEditor;
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentComparator.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentComparator.java
位置:  -1,75 +1,75  
-/*******************************************************************************
- * Copyright (c) 2011 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal;
-
-import org.eclipse.jface.viewers.Viewer;
-import org.eclipse.jface.viewers.ViewerComparator;
-import org.eclipse.ui.trace.internal.datamodel.TracingNode;
-
-/**
- * A Comparator for ordering the list of traceable bundles visible in a viewer in alphabetical order
- */
-public class TracingComponentComparator extends ViewerComparator {
-
-	/**
-	 * Either the first or second object are null - so compare them to ensure they are put in the right order.
-	 *
-	 * @param object1
-	 *            The first object to compare
-	 * @param object2
-	 *            The second object to compare
-	 * @return Return 0 if both objects are null; Returns -1 if object1 is null and object2 is not null; Returns 1 if
-	 *         object1 is not null and object2 is null.
-	 */
-	private int compareNullCases(final Object object1, final Object object2) {
-
-		int result = -1;
-		// take care of the null cases
-		if ((object1 == null) &amp;&amp; (object2 == null)) {
-			result = 0;
-		} else if ((object1 == null) &amp;&amp; (object2 != null)) {
-			result = -1;
-		} else if ((object1 != null) &amp;&amp; (object2 == null)) {
-			result = 1;
-		}
-		return result;
-	}
-
-	@Override
-	public int compare(final Viewer viewer, final Object object1, final Object object2) {
-
-		int result = -1;
-		if ((object1 == null) || (object2 == null)) {
-			// take care of the null cases
-			result = this.compareNullCases(object1, object2);
-		} else {
-			// neither object are null
-			if ((object1 instanceof TracingNode) &amp;&amp; (object2 instanceof TracingNode)) {
-				String name1 = ((TracingNode) object1).getLabel();
-				String name2 = ((TracingNode) object2).getLabel();
-				if ((name1 == null) || (name2 == null)) {
-					// take care of the null cases
-					result = this.compareNullCases(name1, name2);
-				} else {
-					result = name1.compareTo(name2);
-				}
-			} else if (object1 instanceof String &amp;&amp; object2 instanceof String) {
-				String label1 = (String) object1;
-				String label2 = (String) object2;
-				result = label1.compareTo(label2);
-			}
-		}
-		return result;
-	}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal;
+
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.jface.viewers.ViewerComparator;
+import org.eclipse.ui.trace.internal.datamodel.TracingNode;
+
+/**
+ * A Comparator for ordering the list of traceable bundles visible in a viewer in alphabetical order
+ */
+public class TracingComponentComparator extends ViewerComparator {
+
+	/**
+	 * Either the first or second object are null - so compare them to ensure they are put in the right order.
+	 *
+	 * @param object1
+	 *            The first object to compare
+	 * @param object2
+	 *            The second object to compare
+	 * @return Return 0 if both objects are null; Returns -1 if object1 is null and object2 is not null; Returns 1 if
+	 *         object1 is not null and object2 is null.
+	 */
+	private int compareNullCases(final Object object1, final Object object2) {
+
+		int result = -1;
+		// take care of the null cases
+		if ((object1 == null) &amp;&amp; (object2 == null)) {
+			result = 0;
+		} else if ((object1 == null) &amp;&amp; (object2 != null)) {
+			result = -1;
+		} else if ((object1 != null) &amp;&amp; (object2 == null)) {
+			result = 1;
+		}
+		return result;
+	}
+
+	@Override
+	public int compare(final Viewer viewer, final Object object1, final Object object2) {
+
+		int result = -1;
+		if ((object1 == null) || (object2 == null)) {
+			// take care of the null cases
+			result = this.compareNullCases(object1, object2);
+		} else {
+			// neither object are null
+			if ((object1 instanceof TracingNode) &amp;&amp; (object2 instanceof TracingNode)) {
+				String name1 = ((TracingNode) object1).getLabel();
+				String name2 = ((TracingNode) object2).getLabel();
+				if ((name1 == null) || (name2 == null)) {
+					// take care of the null cases
+					result = this.compareNullCases(name1, name2);
+				} else {
+					result = name1.compareTo(name2);
+				}
+			} else if (object1 instanceof String &amp;&amp; object2 instanceof String) {
+				String label1 = (String) object1;
+				String label2 = (String) object2;
+				result = label1.compareTo(label2);
+			}
+		}
+		return result;
+	}
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentViewerFilter.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentViewerFilter.java
位置:  -1,106 +1,106  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal;
-
-import java.util.HashMap;
-import java.util.Map;
-import org.eclipse.jface.viewers.Viewer;
-import org.eclipse.jface.viewers.ViewerFilter;
-import org.eclipse.ui.dialogs.PatternFilter;
-import org.eclipse.ui.trace.internal.datamodel.TracingComponent;
-import org.eclipse.ui.trace.internal.datamodel.TracingComponentDebugOption;
-
-/**
- * A {@link ViewerFilter} for filtering the contents of the trace component tree viewer.
- */
-public class TracingComponentViewerFilter extends PatternFilter {
-
-	/**
-	 * Construct a new {@link TracingComponentViewerFilter}
-	 */
-	public TracingComponentViewerFilter() {
-
-		visibleTracingComponentsCache = new HashMap<TracingComponent, Boolean>();
-		visibleTracingDebugOptions = new HashMap<TracingComponentDebugOption, Boolean>();
-	}
-
-	@Override
-	public void setPattern(final String patternString) {
-
-		super.setPattern(patternString);
-		/**
-		 * Hack to clear my own caches (whenever the contents changes)
-		 */
-		visibleTracingComponentsCache.clear();
-		visibleTracingDebugOptions.clear();
-	}
-
-	/*
-	 * Force the array of {@link TracingComponentDebugOption} and their children to be visible.
-	 */
-	private void forceVisibleDebugOptions(final TracingComponentDebugOption[] options) {
-
-		for (TracingComponentDebugOption option : options) {
-			if (option.hasChildren()) {
-				forceVisibleDebugOptions(option.getChildren());
-			}
-			visibleTracingDebugOptions.put(option, Boolean.TRUE);
-		}
-	}
-
-	/*
-	 * (non-Javadoc)
-	 *
-	 * @see org.eclipse.ui.dialogs.PatternFilter#isElementVisible(org.eclipse.jface.viewers.Viewer, java.lang.Object)
-	 */
-	@Override
-	public boolean isElementVisible(final Viewer viewer, final Object element) {
-
-		boolean isVisible = false;
-		if (element instanceof TracingComponent) {
-			TracingComponent component = (TracingComponent) element;
-			boolean textMatches = super.isLeafMatch(viewer, component);
-			if (textMatches) {
-				// the text matches - make sure all children of this component are visible
-				isVisible = true;
-				visibleTracingComponentsCache.put(component, Boolean.TRUE);
-				// show all children
-				forceVisibleDebugOptions(component.getChildren());
-			} else {
-				// show only if has 1 child that matches
-				isVisible = super.isElementVisible(viewer, element);
-				visibleTracingComponentsCache.put(component, Boolean.valueOf(isVisible));
-			}
-		} else if (element instanceof TracingComponentDebugOption) {
-			// check to see if this debug option is forced to be visible
-			Boolean enabled = visibleTracingDebugOptions.get(element);
-			if (enabled != null) {
-				// it should be enabled because the parent is enabled and forced it to be enabled
-				isVisible = enabled.booleanValue();
-			} else {
-				// make it visible only if it matches
-				isVisible = super.isLeafMatch(viewer, element);
-				if (!isVisible) {
-					// This debug option did not match - does anything for this branch/category match?
-					isVisible = super.isParentMatch(viewer, element);
-				}
-			}
-		}
-		return isVisible;
-	}
-
-	private final Map<TracingComponent, Boolean> visibleTracingComponentsCache;
-
-	private final Map<TracingComponentDebugOption, Boolean> visibleTracingDebugOptions;
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal;
+
+import java.util.HashMap;
+import java.util.Map;
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.jface.viewers.ViewerFilter;
+import org.eclipse.ui.dialogs.PatternFilter;
+import org.eclipse.ui.trace.internal.datamodel.TracingComponent;
+import org.eclipse.ui.trace.internal.datamodel.TracingComponentDebugOption;
+
+/**
+ * A {@link ViewerFilter} for filtering the contents of the trace component tree viewer.
+ */
+public class TracingComponentViewerFilter extends PatternFilter {
+
+	/**
+	 * Construct a new {@link TracingComponentViewerFilter}
+	 */
+	public TracingComponentViewerFilter() {
+
+		visibleTracingComponentsCache = new HashMap<TracingComponent, Boolean>();
+		visibleTracingDebugOptions = new HashMap<TracingComponentDebugOption, Boolean>();
+	}
+
+	@Override
+	public void setPattern(final String patternString) {
+
+		super.setPattern(patternString);
+		/**
+		 * Hack to clear my own caches (whenever the contents changes)
+		 */
+		visibleTracingComponentsCache.clear();
+		visibleTracingDebugOptions.clear();
+	}
+
+	/*
+	 * Force the array of {@link TracingComponentDebugOption} and their children to be visible.
+	 */
+	private void forceVisibleDebugOptions(final TracingComponentDebugOption[] options) {
+
+		for (TracingComponentDebugOption option : options) {
+			if (option.hasChildren()) {
+				forceVisibleDebugOptions(option.getChildren());
+			}
+			visibleTracingDebugOptions.put(option, Boolean.TRUE);
+		}
+	}
+
+	/*
+	 * (non-Javadoc)
+	 *
+	 * @see org.eclipse.ui.dialogs.PatternFilter#isElementVisible(org.eclipse.jface.viewers.Viewer, java.lang.Object)
+	 */
+	@Override
+	public boolean isElementVisible(final Viewer viewer, final Object element) {
+
+		boolean isVisible = false;
+		if (element instanceof TracingComponent) {
+			TracingComponent component = (TracingComponent) element;
+			boolean textMatches = super.isLeafMatch(viewer, component);
+			if (textMatches) {
+				// the text matches - make sure all children of this component are visible
+				isVisible = true;
+				visibleTracingComponentsCache.put(component, Boolean.TRUE);
+				// show all children
+				forceVisibleDebugOptions(component.getChildren());
+			} else {
+				// show only if has 1 child that matches
+				isVisible = super.isElementVisible(viewer, element);
+				visibleTracingComponentsCache.put(component, Boolean.valueOf(isVisible));
+			}
+		} else if (element instanceof TracingComponentDebugOption) {
+			// check to see if this debug option is forced to be visible
+			Boolean enabled = visibleTracingDebugOptions.get(element);
+			if (enabled != null) {
+				// it should be enabled because the parent is enabled and forced it to be enabled
+				isVisible = enabled.booleanValue();
+			} else {
+				// make it visible only if it matches
+				isVisible = super.isLeafMatch(viewer, element);
+				if (!isVisible) {
+					// This debug option did not match - does anything for this branch/category match?
+					isVisible = super.isParentMatch(viewer, element);
+				}
+			}
+		}
+		return isVisible;
+	}
+
+	private final Map<TracingComponent, Boolean> visibleTracingComponentsCache;
+
+	private final Map<TracingComponentDebugOption, Boolean> visibleTracingDebugOptions;
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingDoubleClickListener.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingDoubleClickListener.java
位置:  -1,34 +1,34  
-/*******************************************************************************
- * Copyright (c) 2011, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal;
-
-import org.eclipse.jface.viewers.*;
-import org.eclipse.ui.trace.internal.datamodel.TracingNode;
-
-/**
- * A double-click listener to expand/collapse a root node in the trace component viewer
- */
-public class TracingDoubleClickListener implements IDoubleClickListener {
-
-	public void doubleClick(final DoubleClickEvent event) {
-		// auto-expand or collapse the selected node
-		TreeViewer traceComponentViewer = (TreeViewer) event.getViewer();
-		final Object selectedItem = traceComponentViewer.getStructuredSelection().getFirstElement();
-		final boolean expandedState = traceComponentViewer.getExpandedState(selectedItem);
-		if (selectedItem instanceof TracingNode) {
-			traceComponentViewer.setExpandedState(selectedItem, !expandedState);
-		}
-	}
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal;
+
+import org.eclipse.jface.viewers.*;
+import org.eclipse.ui.trace.internal.datamodel.TracingNode;
+
+/**
+ * A double-click listener to expand/collapse a root node in the trace component viewer
+ */
+public class TracingDoubleClickListener implements IDoubleClickListener {
+
+	public void doubleClick(final DoubleClickEvent event) {
+		// auto-expand or collapse the selected node
+		TreeViewer traceComponentViewer = (TreeViewer) event.getViewer();
+		final Object selectedItem = traceComponentViewer.getStructuredSelection().getFirstElement();
+		final boolean expandedState = traceComponentViewer.getExpandedState(selectedItem);
+		if (selectedItem instanceof TracingNode) {
+			traceComponentViewer.setExpandedState(selectedItem, !expandedState);
+		}
+	}
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingPreferencePage.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingPreferencePage.java
位置:  -1,739 +1,739  
-/*******************************************************************************
- * Copyright (c) 2011, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *     SAP - ongoing enhancements
- *******************************************************************************/
-package org.eclipse.ui.trace.internal;
-
-import static org.eclipse.jface.viewers.ColumnViewerEditor.KEYBOARD_ACTIVATION;
-import static org.eclipse.jface.viewers.ColumnViewerEditor.TABBING_HORIZONTAL;
-import static org.eclipse.jface.viewers.ColumnViewerEditor.TABBING_MOVE_TO_ROW_NEIGHBOR;
-import static org.eclipse.jface.viewers.ColumnViewerEditor.TABBING_VERTICAL;
-import static org.eclipse.jface.viewers.ColumnViewerEditorActivationEvent.KEY_PRESSED;
-import static org.eclipse.jface.viewers.ColumnViewerEditorActivationEvent.MOUSE_CLICK_SELECTION;
-import static org.eclipse.jface.viewers.ColumnViewerEditorActivationEvent.PROGRAMMATIC;
-import static org.eclipse.jface.viewers.ColumnViewerEditorActivationEvent.TRAVERSAL;
-
-import java.io.File;
-import java.util.*;
-import org.eclipse.core.runtime.*;
-import org.eclipse.core.runtime.preferences.IEclipsePreferences;
-import org.eclipse.jface.layout.*;
-import org.eclipse.jface.preference.PreferencePage;
-import org.eclipse.jface.resource.JFaceResources;
-import org.eclipse.jface.util.Util;
-import org.eclipse.jface.viewers.*;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.events.SelectionAdapter;
-import org.eclipse.swt.events.SelectionEvent;
-import org.eclipse.swt.layout.GridData;
-import org.eclipse.swt.layout.GridLayout;
-import org.eclipse.swt.widgets.*;
-import org.eclipse.ui.*;
-import org.eclipse.ui.dialogs.FilteredTree;
-import org.eclipse.ui.trace.internal.datamodel.*;
-import org.eclipse.ui.trace.internal.providers.*;
-import org.eclipse.ui.trace.internal.utils.*;
-
-/**
- * The 'Tracing' workspace preference page.
- */
-public class TracingPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
-
-	/**
-	 * The key to activate the value cell editor.
-	 * Cannot use the usual enter (CR) key to activate it since this would close the page.  Fix is to use
-	 * the space key as replacement.
-	 * On Linux, however, space is used as default key on ComboBoxes, leading to the editor being deactivated.
-	 * We use F2 instead.
-	 */
-	private static final int VALUE_EDITOR_ACTIVATION_KEY = Util.isLinux() ? SWT.F2 : SWT.SPACE;
-
-	/** A list of {@link TracingComponent} objects to display in the UI */
-	private Map<String, TracingComponent> displayableTracingComponents = null;
-
-	// widgets
-	/** Enabling Tracing button */
-	protected Button enableTracingButton = null;
-
-	/** Tracing tree title*/
-	protected Label tracingTreeTitleLabel = null;
-
-	/** A tree that can be filtered based on user input */
-	protected FilteredTree filterTree = null;
-
-	/** A {@link Group} containing all of the tracing file options */
-	protected Group tracingOptionsGroup = null;
-
-	/** A {@link Text} field for specify the tracing file */
-	protected Text tracingFileText = null;
-
-	/** A {@link Text} field for specify the maximum size of the tracing files */
-	protected Spinner maximumFileSizeSpinner = null;
-
-	/** A {@link Text} field for specify the maximum number of tracing files */
-	protected Spinner maximumFileCountSpinner = null;
-
-	/** A {@link Button} for browsing the file-system for the tracing file */
-	protected Button tracingFileBrowseButton = null;
-
-	/** A {@link Button} for 'Output file:' */
-	protected Button tracingOutputFileButton = null;
-
-	/** A {@link Label} for 'Number of historical files:' */
-	protected Label tracingFileMaxCountLabel = null;
-
-	/** A {@link Label} for 'Maximum file size (KB):' */
-	protected Label tracingFileMaxSizeLabel = null;
-
-	/** A {@link Button} for 'Standard output stream:' */
-	protected Button standardOutputStreamButton;
-
-	/**
-	 * Constructor for {@link TracingPreferencePage}
-	 */
-	public TracingPreferencePage() {
-
-		setDescription(Messages.preferencePageDescription);
-	}
-
-	public void init(IWorkbench workbench) {
-
-		// empty implementation
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.jface.dialogs.DialogPage#dispose()
-	 */
-	@Override
-	public void dispose() {
-		super.dispose();
-		disposeWidget(enableTracingButton);
-		disposeWidget(tracingTreeTitleLabel);
-		disposeWidget(filterTree);
-		disposeWidget(tracingOptionsGroup);
-		disposeWidget(tracingOutputFileButton);
-		disposeWidget(tracingFileText);
-		disposeWidget(tracingFileBrowseButton);
-		disposeWidget(tracingFileMaxCountLabel);
-		disposeWidget(maximumFileCountSpinner);
-		disposeWidget(tracingFileMaxSizeLabel);
-		disposeWidget(maximumFileSizeSpinner);
-		disposeWidget(standardOutputStreamButton);
-		purgeModel();
-	}
-
-	/**
-	 * A utility method to purge all caches used by the preference page
-	 */
-	private void purgeModel() {
-
-		if (displayableTracingComponents != null) {
-			// clear the displayable tracing component cache
-			displayableTracingComponents.clear();
-			displayableTracingComponents = null;
-		}
-
-		// clear the component caches
-		TracingCollections.getInstance().clear();
-	}
-
-	/**
-	 * A utility method to dispose a widget.
-	 *
-	 * @param widget
-	 *            The widget to dispose
-	 */
-	private void disposeWidget(Widget widget) {
-
-		if (widget != null) {
-			if (!widget.isDisposed()) {
-				widget.dispose();
-			}
-		}
-	}
-
-	@Override
-	protected Control createContents(Composite parent) {
-		Composite pageComposite = new Composite(parent, SWT.NONE);
-		GridLayoutFactory.fillDefaults().applyTo(pageComposite);
-		GridDataFactory.fillDefaults().grab(true, true).applyTo(pageComposite);
-		// add the widgets
-		addEnableTracingSection(pageComposite);
-		addBundleViewerSection(pageComposite);
-		addTracingOptionsSection(pageComposite);
-		// set the initial values in the widgets
-		setUIValuesFromPreferences();
-		enableTracingButtonSelected(true);
-
-		// disable after enableTracingButton.
-		if (Boolean.parseBoolean(PreferenceHandler.getOutputToStandardStream())) {
-			setEnableTracingOutputFile(false);
-		}
-		// apply the font to this page
-		applyDialogFont(pageComposite);
-
-		PlatformUI.getWorkbench().getHelpSystem().setHelp(pageComposite, IHelpContextIds.TRACING_PREF_PAGE);
-
-		return pageComposite;
-	}
-
-	/**
-	 * Add a section for a check button to be displayed like 
-	 *
-	 * @param parent
-	 *            The parent composite
-	 */
-	protected void addEnableTracingSection(Composite parent) {
-		// If the preferences are being overridden by debug mode at launch time, warn the user
-		if (DebugOptionsHandler.isLaunchInDebugMode()) {
-			Composite warningComp = new Composite(parent, SWT.NONE);
-			GridData gd = new GridData(GridData.FILL, GridData.BEGINNING, true, false);
-			warningComp.setLayoutData(gd);
-			GridLayout gl = new GridLayout(2, false);
-			gl.marginWidth = gl.marginHeight = 0;
-			warningComp.setLayout(gl);
-
-			Label warningImage = new Label(warningComp, SWT.NONE);
-			warningImage.setImage(JFaceResources.getImage(org.eclipse.jface.dialogs.Dialog.DLG_IMG_MESSAGE_WARNING));
-			gd = new GridData(GridData.BEGINNING, GridData.BEGINNING, false, false);
-			warningImage.setLayoutData(gd);
-
-			Label warningText = new Label(warningComp, SWT.WRAP);
-			warningText.setText(Messages.TracingPreferencePage_applicationLaunchedInDebugModeWarning);
-			gd = new GridData(GridData.FILL, GridData.BEGINNING, true, false);
-			gd.widthHint = 200;
-			warningText.setLayoutData(gd);
-		}
-
-		enableTracingButton = new Button(parent, SWT.CHECK);
-		enableTracingButton.setText(Messages.enableTracingButtonLabel);
-		GridDataFactory.fillDefaults().align(SWT.BEGINNING, SWT.BEGINNING).grab(true, false).applyTo(enableTracingButton);
-		enableTracingButton.addSelectionListener(new SelectionAdapter() {
-
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				enableTracingButtonSelected(true);
-			}
-		});
-	}
-
-	/**
-	 * Create a viewer for the list of debug options that are traceable in the product.
-	 *
-	 * @param parent
-	 *            The parent composite
-	 */
-	protected void addBundleViewerSection(Composite parent) {
-
-		tracingTreeTitleLabel = new Label(parent, SWT.NONE);
-		tracingTreeTitleLabel.setText(Messages.tracingTreeTile);
-		filterTree = new TracingComponentTreeViewer(parent);
-		GridDataFactory.fillDefaults().grab(true, true).applyTo(getViewerTree());
-		getViewer().setUseHashlookup(true);
-		getViewerTree().setHeaderVisible(false);
-		getViewer().setLabelProvider(new TracingComponentLabelProvider());
-		getViewer().setContentProvider(new TracingComponentContentProvider());
-		getViewer().setComparator(new TracingComponentComparator());
-		getViewerTree().setLinesVisible(true);
-		getViewer().addDoubleClickListener(new TracingDoubleClickListener());
-		// change the layout of the tree's composite to TreeColumnLayout so we can setup the columns
-		Composite treeViewerComposite = getViewerTree().getParent();
-		TreeColumnLayout treeViewerCompositeLayout = new TreeColumnLayout();
-		treeViewerComposite.setLayout(treeViewerCompositeLayout);
-		GridDataFactory.fillDefaults().grab(true, true).applyTo(treeViewerComposite);
-		// there will be 2 columns. (1) trace string (2) value (which will only be populated when it is a non-boolean
-		// value)
-		// [1] Add the label column (75% column width)
-		TreeViewerColumn labelColumn = new TreeViewerColumn(getViewer(), SWT.NONE);
-		labelColumn.getColumn().setResizable(true);
-		labelColumn.getColumn().setText(Messages.columnHeaderTracingString);
-		labelColumn.setLabelProvider(new TracingComponentColumnLabelProvider(TracingConstants.LABEL_COLUMN_INDEX));
-		treeViewerCompositeLayout.setColumnData(getViewerTree().getColumn(0), new ColumnWeightData(75));
-		// [2] Add the value column (25% column width)
-		TreeViewerColumn valueColumn = new TreeViewerColumn(getViewer(), SWT.NONE);
-		valueColumn.getColumn().setResizable(true);
-		valueColumn.getColumn().setText(Messages.columnHeaderTracingValue);
-		valueColumn.setLabelProvider(new TracingComponentColumnLabelProvider(TracingConstants.VALUE_COLUMN_INDEX));
-		valueColumn.setEditingSupport(new TracingComponentColumnEditingSupport(getViewer(), TracingConstants.VALUE_COLUMN_INDEX));
-		treeViewerCompositeLayout.setColumnData(getViewerTree().getColumn(1), new ColumnWeightData(25));
-
-		// install focus cell and cell editor activation for keyboard access (Bug 385100)
-		TreeViewerFocusCellManager focusCellManager = new TreeViewerFocusCellManager(getViewer(), new FocusCellOwnerDrawHighlighter(getViewer()));
-		ColumnViewerEditorActivationStrategy actSupport = new ColumnViewerEditorActivationStrategy(getViewer()) {
-			@Override
-			protected boolean isEditorActivationEvent(ColumnViewerEditorActivationEvent event) {
-				return (event.eventType == KEY_PRESSED &amp;&amp; event.keyCode == VALUE_EDITOR_ACTIVATION_KEY) //
-						|| event.eventType == TRAVERSAL //
-						|| event.eventType == MOUSE_CLICK_SELECTION //
-						|| event.eventType == PROGRAMMATIC;
-			}
-		};
-		TreeViewerEditor.create(getViewer(), focusCellManager, actSupport, //
-				TABBING_HORIZONTAL | TABBING_MOVE_TO_ROW_NEIGHBOR | TABBING_VERTICAL | KEYBOARD_ACTIVATION);
-	}
-
-	/**
-	 * Create a section for displaying the tracing file options (i.e. maximum size of each file, number of historical
-	 * files, etc).
-	 *
-	 * @param parent
-	 *            The parent composite
-	 */
-	protected void addTracingOptionsSection(Composite parent) {
-		tracingOptionsGroup = new Group(parent, SWT.NONE);
-		tracingOptionsGroup.setText(Messages.tracingOptionsGroup);
-		GridDataFactory.fillDefaults().grab(true, false).applyTo(tracingOptionsGroup);
-		GridLayoutFactory.fillDefaults().margins(5, 5).applyTo(tracingOptionsGroup);
-
-
-		Composite outputComp = new Composite(tracingOptionsGroup, SWT.NONE);
-		GridDataFactory.fillDefaults().grab(true, false).applyTo(outputComp);
-		GridLayoutFactory.fillDefaults().numColumns(3).equalWidth(false).margins(0, 0).applyTo(outputComp);
-
-		// add the 'tracing file' group
-		tracingOutputFileButton = new Button(outputComp, SWT.RADIO);
-		tracingOutputFileButton.setText(Messages.tracingFileLabel);
-		tracingOutputFileButton.setSelection(true); // during creation - select this option
-		tracingOutputFileButton.addSelectionListener(new SelectionAdapter() {
-
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				setEnableTracingOutputFile(true);
-				standardOutputStreamButton.setSelection(false);
-			}
-		});
-		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).applyTo(tracingOutputFileButton);
-		// add the 'tracing file' input field
-		tracingFileText = new Text(outputComp, SWT.SINGLE | SWT.BORDER);
-		tracingFileText.addListener(SWT.Verify, e -> {
-
-			String newInput = TracingPreferencePage.this.getInput(e);
-			if ((newInput == null) || newInput.equals(TracingConstants.EMPTY_STRING)) {
-				TracingPreferencePage.this.setValid(false);
-				TracingPreferencePage.this.setErrorMessage(Messages.tracingFileInvalid);
-			} else {
-				TracingPreferencePage.this.setValid(true);
-				TracingPreferencePage.this.setErrorMessage(null);
-			}
-		});
-		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).grab(true, false).applyTo(tracingFileText);
-		// add the 'tracing file' browse button
-		tracingFileBrowseButton = new Button(outputComp, SWT.PUSH);
-		tracingFileBrowseButton.setText(Messages.tracingFileBrowseButton);
-		tracingFileBrowseButton.addSelectionListener(new SelectionAdapter() {
-
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-				FileDialog dialog = new FileDialog(tracingOptionsGroup.getShell(), SWT.SAVE);
-				dialog.setFileName(tracingFileText.getText());
-				String result = dialog.open();
-				if (result != null) {
-					tracingFileText.setText(result);
-				}
-			}
-		});
-		setButtonLayoutData(tracingFileBrowseButton);
-
-		Composite detailsComp = new Composite(tracingOptionsGroup, SWT.NONE);
-		GridLayoutFactory.fillDefaults().numColumns(5).equalWidth(false).margins(0, 0).applyTo(detailsComp);
-		GridDataFactory.fillDefaults().grab(true, false).applyTo(detailsComp);
-
-		// add the 'max count' label
-		tracingFileMaxCountLabel = new Label(detailsComp, SWT.NONE);
-		tracingFileMaxCountLabel.setText(Messages.tracingFileMaxCountLabel);
-
-		// put horizontal indentation
-		GridData gridData = new GridData();
-		gridData.horizontalIndent = 20;
-		tracingFileMaxCountLabel.setLayoutData(gridData);
-
-		// add the 'max count' input field
-		maximumFileCountSpinner = new Spinner(detailsComp, SWT.SINGLE | SWT.BORDER);
-		maximumFileCountSpinner.setValues(10, 10, 100, 0, 5, 10);
-		maximumFileCountSpinner.addListener(SWT.Verify,
-				e -> TracingPreferencePage.this.verifyIntInput(e, Messages.tracingFileInvalidMaxCount));
-		GridDataFactory.fillDefaults().applyTo(maximumFileCountSpinner);
-
-		Label spacer = new Label(detailsComp, SWT.NONE);
-		GridDataFactory.fillDefaults().hint(10, 10).applyTo(spacer);
-
-		// add the 'max size' label
-		tracingFileMaxSizeLabel = new Label(detailsComp, SWT.NONE);
-		tracingFileMaxSizeLabel.setText(Messages.tracingFileMaxSizeLabel);
-
-		// add the 'max size' input field
-		maximumFileSizeSpinner = new Spinner(detailsComp, SWT.SINGLE | SWT.BORDER);
-		maximumFileSizeSpinner.setValues(100, 100, 10000, 0, 100, 1000);
-		maximumFileSizeSpinner.addListener(SWT.Verify,
-				e -> TracingPreferencePage.this.verifyIntInput(e, Messages.tracingFileInvalidMaxSize));
-		GridDataFactory.fillDefaults().applyTo(maximumFileSizeSpinner);
-
-
-		standardOutputStreamButton = new Button(tracingOptionsGroup, SWT.RADIO);
-		standardOutputStreamButton.setText(Messages.TracingPreferencePageStandardOutput);
-		standardOutputStreamButton.addSelectionListener(new SelectionAdapter() {
-
-			@Override
-			public void widgetSelected(SelectionEvent e) {
-
-				setEnableTracingOutputFile(false);
-				standardOutputStreamButton.setSelection(true);
-			}
-		});
-
-	}
-
-
-	/**
-	 *	 select the outputFileButton and enable rest of the widgets if enable true
-	 *   deselect the outputFileButton and disable rest of the widgets if enable false
-	 */
-	private void setEnableTracingOutputFile(boolean enable) {
-		tracingOutputFileButton.setSelection(enable);
-		tracingFileText.setEnabled(enable);
-		maximumFileSizeSpinner.setEnabled(enable);
-		maximumFileCountSpinner.setEnabled(enable);
-		tracingFileBrowseButton.setEnabled(enable);
-		tracingFileMaxCountLabel.setEnabled(enable);
-		tracingFileMaxSizeLabel.setEnabled(enable);
-	}
-	/**
-	 * Set the default state and value of all the UI elements based on the value in the preferences. This can only be
-	 * called after all the UI elements have been constructed.
-	 */
-	protected void setUIValuesFromPreferences() {
-		// If in debug mode, tracing defaults to disabled
-		if (!DebugOptionsHandler.isLaunchInDebugMode()) {
-			// acquire the preferences service
-			boolean tracingEnabled = PreferenceHandler.isTracingEnabled();
-			// HACK: because there is no way for me to enable tracing during preference import (??) - I am doing it here.
-			if (tracingEnabled &amp;&amp; !DebugOptionsHandler.getDebugOptions().isDebugEnabled()) {
-				// the preferences say that tracing should be enabled
-				DebugOptionsHandler.getDebugOptions().setDebugEnabled(true);
-			}
-			// set enablement button
-			enableTracingButton.setSelection(tracingEnabled);
-		} else {
-			enableTracingButton.setSelection(false);
-		}
-
-		tracingOutputFileButton.setSelection(!Boolean.parseBoolean(PreferenceHandler.getOutputToStandardStream()));
-		// set the tracing file name.
-		tracingFileText.setText(PreferenceHandler.getFilePath());
-
-		// default location needs to be put in preference store once ( fringe scenario)
-		final IEclipsePreferences preferences = PreferenceHandler.getPreferences();
-		preferences.put(TracingConstants.PREFERENCE_FILE_PATH, PreferenceHandler.getFilePath());
-
-		// set the max counter field
-		maximumFileCountSpinner.setSelection(PreferenceHandler.getMaxFileCount());
-		// set the max file size field
-		maximumFileSizeSpinner.setSelection(PreferenceHandler.getMaxFileSize());
-		// update the enablement state of all the UI elements
-		enableTracingButtonSelected(false);
-		standardOutputStreamButton.setSelection(Boolean.parseBoolean(PreferenceHandler.getOutputToStandardStream()));
-	}
-
-	/**
-	 * Retrieve the input
-	 */
-	protected String getInput(Event ev) {
-		String input = null;
-		if ((ev.keyCode == SWT.DEL) || (ev.keyCode == SWT.BS)) {
-			String currentValue = ((Text) ev.widget).getText();
-			String begin = currentValue.substring(0, ev.start);
-			String end = currentValue.substring(ev.start + 1, currentValue.length());
-			input = begin + end;
-		} else {
-			input = ev.text;
-		}
-		return input;
-	}
-
-	/**
-	 * Verify that the user input is a valid int field
-	 *
-	 * @param errorMessage to display if the input is not a valid int field
-	 */
-	protected void verifyIntInput(Event ev, String errorMessage) {
-		String input = getInput(ev);
-		// value the input
-		if (input.length() <= 0) {
-			setValid(false);
-			setErrorMessage(errorMessage);
-			return;
-		}
-		// ensure the characters in the string are numbers between 0 - 9
-		char[] chars = new char[input.length()];
-		input.getChars(0, chars.length, chars, 0);
-		for (int i = 0; i < chars.length; i++) {
-			if (!(('0' <= chars[i]) &amp;&amp; (chars[i] <= '9'))) {
-				setValid(false);
-				setErrorMessage(errorMessage);
-				return;
-			}
-		}
-		// everything is OK!
-		setValid(true);
-		setErrorMessage(null);
-	}
-
-	/**
-	 * This method is used to react to the enablement button ('Enable Tracing') state changing.
-	 *
-	 * @param updateModel
-	 *            Should the model be modified for this call? or should only the enablement state of the UI widgets be
-	 *            modified?
-	 */
-	protected void enableTracingButtonSelected(boolean updateModel) {
-		boolean enableTracing = enableTracingButton.getSelection();
-		if (updateModel) {
-			// populate the table
-			if (enableTracing) {
-				// rebuild the model
-				buildDisplayableComponents();
-				// set the viewers input
-				Collection<TracingComponent> components = displayableTracingComponents.values();
-				TracingComponent[] componentsArray = components.toArray(new TracingComponent[components.size()]);
-				getViewer().setInput(componentsArray);
-			} else {
-				// destroy the model
-				purgeModel();
-				// set the viewers input to null
-				getViewer().setInput(null);
-			}
-		}
-		tracingTreeTitleLabel.setEnabled(enableTracing);
-		filterTree.setEnabled(enableTracing);
-		// only enable the tracing options if tracing is enabled
-		tracingOptionsGroup.setEnabled(enableTracing);
-		tracingFileText.setEnabled(enableTracing);
-		maximumFileSizeSpinner.setEnabled(enableTracing);
-		maximumFileCountSpinner.setEnabled(enableTracing);
-		tracingFileBrowseButton.setEnabled(enableTracing);
-		tracingOutputFileButton.setEnabled(enableTracing);
-		tracingFileMaxCountLabel.setEnabled(enableTracing);
-		tracingFileMaxSizeLabel.setEnabled(enableTracing);
-		standardOutputStreamButton.setEnabled(enableTracing);
-	}
-
-	/**
-	 * This method will build the list of tracing components that will be used as input to the tree viewer.
-	 */
-	private void buildDisplayableComponents() {
-		// ensure the model is destroyed (start from scratch)
-		if (displayableTracingComponents != null) {
-			purgeModel();
-		}
-		displayableTracingComponents = new HashMap<String, TracingComponent>();
-		// look for extension points
-		IExtensionRegistry registry = Platform.getExtensionRegistry();
-		IConfigurationElement[] cf = registry.getConfigurationElementsFor(TracingConstants.BUNDLE_ID, TracingConstants.TRACING_EXTENSION_POINT_NAME);
-		TracingComponent[] components = new TracingComponent[cf.length];
-		// populate the full list of tracing components
-		for (int i = 0; i < cf.length; i++) {
-			components[i] = TracingCollections.getInstance().getTracingComponent(cf[i]);
-			// if this component already exists or consumed then do not add it to the displayable list
-			if (!displayableTracingComponents.containsKey(components[i].getId()) &amp;&amp; !components[i].isConsumed()) {
-				displayableTracingComponents.put(components[i].getId(), components[i]);
-			}
-		}
-		// now that the components are created - populate the debug options for each component
-		Iterator<TracingComponent> componentIterator = displayableTracingComponents.values().iterator();
-		while (componentIterator.hasNext()) {
-			componentIterator.next().initialize();
-		}
-		// update any TracingComponentDebugOption entries if their value differs from the preference value
-		mergePrefsWithDebugOptions();
-	}
-
-	/**
-	 * This method will merge the value of the options stored in the preferences with the value in the debug options.
-	 */
-	private void mergePrefsWithDebugOptions() {
-		Map<String, String> prefDebugOptions = PreferenceHandler.getPreferenceProperties();
-		// get all debug options (this ensures that the disabled debug options are used when populating)
-		Map<String, String> debugOptions = DebugOptionsHandler.getDebugOptions().getOptions();
-		Iterator<Map.Entry<String, String>> prefDebugOptionsIterator = prefDebugOptions.entrySet().iterator();
-		while (prefDebugOptionsIterator.hasNext()) {
-			Map.Entry<String, String> prefDebugOption = prefDebugOptionsIterator.next();
-			String debugOptionsValue = debugOptions.get(prefDebugOption.getValue());
-			boolean updateDebugOption = true;
-			if (debugOptionsValue != null) {
-				if (TracingUtils.isValueBoolean(debugOptionsValue) &amp;&amp; TracingUtils.isValueBoolean(prefDebugOption.getValue())) {
-					// pick the one that is 'true'
-					boolean optionValue = Boolean.parseBoolean(debugOptionsValue);
-					boolean prefValue = Boolean.parseBoolean(prefDebugOption.getValue());
-					if (prefValue != optionValue) {
-						// if the preference value is 'true' then use it... otherwise do nothing since the value
-						// in the debug options will be used.
-						updateDebugOption = prefValue;
-					}
-				} else {
-					// non-boolean values: pick the one in the preferences if they do not equal
-					if (!debugOptionsValue.equals(prefDebugOption.getValue())) {
-						updateDebugOption = true;
-					}
-				}
-			}
-			if (updateDebugOption) {
-				// find identical debug options and update them (this will include 'this' debug option that
-				// was modified)
-				TracingComponentDebugOption[] identicalOptions = TracingCollections.getInstance().getTracingDebugOptions(prefDebugOption.getKey());
-				for (TracingComponentDebugOption identicalOption : identicalOptions) {
-					identicalOption.setOptionPathValue(prefDebugOption.getValue());
-				}
-			}
-		}
-	}
-
-	@Override
-	protected void performDefaults() {
-		super.performDefaults();
-		// set the options to be an empty set
-		DebugOptionsHandler.getDebugOptions().setOptions(new HashMap<String, String>());
-		// destroy the model so that it can be re-built.
-		purgeModel();
-		// set the viewers input to null
-		getViewer().setInput(null);
-		// set the UI back to the default (tracing off, etc).
-		PreferenceHandler.setDefaultPreferences();
-		TracingCollections.getInstance().getModifiedDebugOptions().clear();
-		setUIValuesFromPreferences();
-	}
-
-	@Override
-	public boolean performOk() {
-		boolean result = super.performOk();
-		// get the enablement state
-		boolean enableTracing = enableTracingButton.getSelection();
-
-		if (DebugOptionsHandler.isLaunchInDebugMode()) {
-			if (enableTracing) {
-				// User wants to override current settings
-				DebugOptionsHandler.setLaunchInDebugMode(false);
-			} else {
-				// Don't change tracing options
-				return result;
-			}
-		}
-
-		// save the preferences
-		savePreferences(enableTracing);
-		DebugOptionsHandler.setDebugEnabled(enableTracing);
-		DebugOptionsHandler.getDebugOptions().setFile(standardOutputStreamButton.getSelection() ? null : new File(tracingFileText.getText()));
-		if (enableTracing) {
-			Map<String, String> newOptions = new HashMap<String, String>();
-			// get the set of options available
-			Map<String, String> currentOptions = DebugOptionsHandler.getDebugOptions().getOptions();
-			newOptions.putAll(currentOptions);
-			// iterate over the list of added debug options and add them
-			TracingComponentDebugOption[] optionsToAdd = TracingCollections.getInstance().getModifiedDebugOptions().getDebugOptionsToAdd();
-			for (TracingComponentDebugOption element : optionsToAdd) {
-				newOptions.put(element.getOptionPath(), element.getOptionPathValue());
-			}
-			// iterate over the list of removed debug options and remove them
-			TracingComponentDebugOption[] optionsToRemove = TracingCollections.getInstance().getModifiedDebugOptions().getDebugOptionsToRemove();
-			for (TracingComponentDebugOption element : optionsToRemove) {
-				newOptions.remove(element.getOptionPath());
-			}
-			// update the debug options
-			DebugOptionsHandler.getDebugOptions().setOptions(newOptions);
-			TracingCollections.getInstance().getModifiedDebugOptions().clear();
-			// save the tracing file options
-			if (DebugOptionsHandler.getDebugOptions().getFile() != null) {
-				String defaultFile = DebugOptionsHandler.getDebugOptions().getFile().getAbsolutePath();
-				String newFile = tracingFileText.getText();
-				if (!defaultFile.equals(newFile)) {
-					DebugOptionsHandler.getDebugOptions().setFile(new File(newFile));
-				}
-			}
-			// maximum file size
-			int newMaxSize = maximumFileSizeSpinner.getSelection();
-			// property defined in org.eclipse.osgi.framework.debug.EclipseDebugTrace#PROP_TRACE_SIZE_MAX
-			System.setProperty(TracingConstants.PROP_TRACE_SIZE_MAX, String.valueOf(newMaxSize));
-			// maximum file count
-			int newMaxCount = maximumFileCountSpinner.getSelection();
-			// property defined in org.eclipse.osgi.framework.debug.EclipseDebugTrace#PROP_TRACE_FILE_MAX
-			System.setProperty(TracingConstants.PROP_TRACE_FILE_MAX, String.valueOf(newMaxCount));
-		}
-		return result;
-	}
-
-	/**
-	 * Save the property page preferences.
-	 */
-	protected void savePreferences(boolean tracingEnabled) {
-		Map<String, String> prefValues = new HashMap<String, String>(5);
-		prefValues.put(TracingConstants.PREFERENCE_ENABLEMENT_IDENTIFIER, Boolean.toString(tracingEnabled));
-		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_COUNT_IDENTIFIER, Integer.toString(maximumFileCountSpinner.getSelection()));
-		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_SIZE_IDENTIFIER, Integer.toString(maximumFileSizeSpinner.getSelection()));
-		prefValues.put(TracingConstants.PREFERENCE_FILE_PATH, tracingFileText.getText());
-		prefValues.put(TracingConstants.PREFERENCE_OUTPUT_STANDARD_STREAM, Boolean.toString(standardOutputStreamButton.getSelection()));
-		// iterate over the displayable components and store their debug options (all trace strings should be saved)
-		StringBuilder optionsAsString = new StringBuilder();
-		if (displayableTracingComponents != null) {
-			Iterator<Map.Entry<String, TracingComponent>> componentIterator = displayableTracingComponents.entrySet().iterator();
-			while (componentIterator.hasNext()) {
-				TracingComponent component = componentIterator.next().getValue();
-				if (component.hasChildren()) {
-					StringBuilder result = getAllUniqueDebugOptions(component);
-					if (result != null) {
-						optionsAsString.append(result);
-					}
-				}
-			}
-		} else {
-			optionsAsString.append(TracingConstants.EMPTY_STRING);
-		}
-		prefValues.put(TracingConstants.PREFERENCE_ENTRIES_IDENTIFIER, optionsAsString.toString());
-		PreferenceHandler.savePreferences(prefValues);
-	}
-
-	private StringBuilder getAllUniqueDebugOptions(TracingNode node) {
-		StringBuilder buffer = null;
-		if (node.hasChildren()) {
-			buffer = new StringBuilder();
-			TracingNode[] children = node.getChildren();
-			for (TracingNode element : children) {
-				// add this child node (all child nodes will be of type TracingComponentDebugOption)
-				String debugOptionAsString = TracingUtils.convertToString((TracingComponentDebugOption) element);
-				buffer.append(debugOptionAsString);
-				// add all of this childs nodes
-				StringBuilder result = getAllUniqueDebugOptions(element);
-				if (result != null) {
-					buffer.append(result);
-				}
-			}
-		}
-		return buffer;
-	}
-
-	/**
-	 * The {@link TreeViewer} for the tracing page
-	 *
-	 * @return The {@link TreeViewer} for the tracing page
-	 */
-	private TreeViewer getViewer() {
-		return filterTree.getViewer();
-	}
-
-	/**
-	 * Accessor for the {@link Tree} of the {@link CheckboxTreeViewer}
-	 *
-	 * @return The {@link Tree} of the {@link CheckboxTreeViewer}
-	 */
-	private Tree getViewerTree() {
-		return filterTree.getViewer().getTree();
-	}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *     SAP - ongoing enhancements
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal;
+
+import static org.eclipse.jface.viewers.ColumnViewerEditor.KEYBOARD_ACTIVATION;
+import static org.eclipse.jface.viewers.ColumnViewerEditor.TABBING_HORIZONTAL;
+import static org.eclipse.jface.viewers.ColumnViewerEditor.TABBING_MOVE_TO_ROW_NEIGHBOR;
+import static org.eclipse.jface.viewers.ColumnViewerEditor.TABBING_VERTICAL;
+import static org.eclipse.jface.viewers.ColumnViewerEditorActivationEvent.KEY_PRESSED;
+import static org.eclipse.jface.viewers.ColumnViewerEditorActivationEvent.MOUSE_CLICK_SELECTION;
+import static org.eclipse.jface.viewers.ColumnViewerEditorActivationEvent.PROGRAMMATIC;
+import static org.eclipse.jface.viewers.ColumnViewerEditorActivationEvent.TRAVERSAL;
+
+import java.io.File;
+import java.util.*;
+import org.eclipse.core.runtime.*;
+import org.eclipse.core.runtime.preferences.IEclipsePreferences;
+import org.eclipse.jface.layout.*;
+import org.eclipse.jface.preference.PreferencePage;
+import org.eclipse.jface.resource.JFaceResources;
+import org.eclipse.jface.util.Util;
+import org.eclipse.jface.viewers.*;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.events.SelectionAdapter;
+import org.eclipse.swt.events.SelectionEvent;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
+import org.eclipse.swt.widgets.*;
+import org.eclipse.ui.*;
+import org.eclipse.ui.dialogs.FilteredTree;
+import org.eclipse.ui.trace.internal.datamodel.*;
+import org.eclipse.ui.trace.internal.providers.*;
+import org.eclipse.ui.trace.internal.utils.*;
+
+/**
+ * The 'Tracing' workspace preference page.
+ */
+public class TracingPreferencePage extends PreferencePage implements IWorkbenchPreferencePage {
+
+	/**
+	 * The key to activate the value cell editor.
+	 * Cannot use the usual enter (CR) key to activate it since this would close the page.  Fix is to use
+	 * the space key as replacement.
+	 * On Linux, however, space is used as default key on ComboBoxes, leading to the editor being deactivated.
+	 * We use F2 instead.
+	 */
+	private static final int VALUE_EDITOR_ACTIVATION_KEY = Util.isLinux() ? SWT.F2 : SWT.SPACE;
+
+	/** A list of {@link TracingComponent} objects to display in the UI */
+	private Map<String, TracingComponent> displayableTracingComponents = null;
+
+	// widgets
+	/** Enabling Tracing button */
+	protected Button enableTracingButton = null;
+
+	/** Tracing tree title*/
+	protected Label tracingTreeTitleLabel = null;
+
+	/** A tree that can be filtered based on user input */
+	protected FilteredTree filterTree = null;
+
+	/** A {@link Group} containing all of the tracing file options */
+	protected Group tracingOptionsGroup = null;
+
+	/** A {@link Text} field for specify the tracing file */
+	protected Text tracingFileText = null;
+
+	/** A {@link Text} field for specify the maximum size of the tracing files */
+	protected Spinner maximumFileSizeSpinner = null;
+
+	/** A {@link Text} field for specify the maximum number of tracing files */
+	protected Spinner maximumFileCountSpinner = null;
+
+	/** A {@link Button} for browsing the file-system for the tracing file */
+	protected Button tracingFileBrowseButton = null;
+
+	/** A {@link Button} for 'Output file:' */
+	protected Button tracingOutputFileButton = null;
+
+	/** A {@link Label} for 'Number of historical files:' */
+	protected Label tracingFileMaxCountLabel = null;
+
+	/** A {@link Label} for 'Maximum file size (KB):' */
+	protected Label tracingFileMaxSizeLabel = null;
+
+	/** A {@link Button} for 'Standard output stream:' */
+	protected Button standardOutputStreamButton;
+
+	/**
+	 * Constructor for {@link TracingPreferencePage}
+	 */
+	public TracingPreferencePage() {
+
+		setDescription(Messages.preferencePageDescription);
+	}
+
+	public void init(IWorkbench workbench) {
+
+		// empty implementation
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.jface.dialogs.DialogPage#dispose()
+	 */
+	@Override
+	public void dispose() {
+		super.dispose();
+		disposeWidget(enableTracingButton);
+		disposeWidget(tracingTreeTitleLabel);
+		disposeWidget(filterTree);
+		disposeWidget(tracingOptionsGroup);
+		disposeWidget(tracingOutputFileButton);
+		disposeWidget(tracingFileText);
+		disposeWidget(tracingFileBrowseButton);
+		disposeWidget(tracingFileMaxCountLabel);
+		disposeWidget(maximumFileCountSpinner);
+		disposeWidget(tracingFileMaxSizeLabel);
+		disposeWidget(maximumFileSizeSpinner);
+		disposeWidget(standardOutputStreamButton);
+		purgeModel();
+	}
+
+	/**
+	 * A utility method to purge all caches used by the preference page
+	 */
+	private void purgeModel() {
+
+		if (displayableTracingComponents != null) {
+			// clear the displayable tracing component cache
+			displayableTracingComponents.clear();
+			displayableTracingComponents = null;
+		}
+
+		// clear the component caches
+		TracingCollections.getInstance().clear();
+	}
+
+	/**
+	 * A utility method to dispose a widget.
+	 *
+	 * @param widget
+	 *            The widget to dispose
+	 */
+	private void disposeWidget(Widget widget) {
+
+		if (widget != null) {
+			if (!widget.isDisposed()) {
+				widget.dispose();
+			}
+		}
+	}
+
+	@Override
+	protected Control createContents(Composite parent) {
+		Composite pageComposite = new Composite(parent, SWT.NONE);
+		GridLayoutFactory.fillDefaults().applyTo(pageComposite);
+		GridDataFactory.fillDefaults().grab(true, true).applyTo(pageComposite);
+		// add the widgets
+		addEnableTracingSection(pageComposite);
+		addBundleViewerSection(pageComposite);
+		addTracingOptionsSection(pageComposite);
+		// set the initial values in the widgets
+		setUIValuesFromPreferences();
+		enableTracingButtonSelected(true);
+
+		// disable after enableTracingButton.
+		if (Boolean.parseBoolean(PreferenceHandler.getOutputToStandardStream())) {
+			setEnableTracingOutputFile(false);
+		}
+		// apply the font to this page
+		applyDialogFont(pageComposite);
+
+		PlatformUI.getWorkbench().getHelpSystem().setHelp(pageComposite, IHelpContextIds.TRACING_PREF_PAGE);
+
+		return pageComposite;
+	}
+
+	/**
+	 * Add a section for a check button to be displayed like 
+	 *
+	 * @param parent
+	 *            The parent composite
+	 */
+	protected void addEnableTracingSection(Composite parent) {
+		// If the preferences are being overridden by debug mode at launch time, warn the user
+		if (DebugOptionsHandler.isLaunchInDebugMode()) {
+			Composite warningComp = new Composite(parent, SWT.NONE);
+			GridData gd = new GridData(GridData.FILL, GridData.BEGINNING, true, false);
+			warningComp.setLayoutData(gd);
+			GridLayout gl = new GridLayout(2, false);
+			gl.marginWidth = gl.marginHeight = 0;
+			warningComp.setLayout(gl);
+
+			Label warningImage = new Label(warningComp, SWT.NONE);
+			warningImage.setImage(JFaceResources.getImage(org.eclipse.jface.dialogs.Dialog.DLG_IMG_MESSAGE_WARNING));
+			gd = new GridData(GridData.BEGINNING, GridData.BEGINNING, false, false);
+			warningImage.setLayoutData(gd);
+
+			Label warningText = new Label(warningComp, SWT.WRAP);
+			warningText.setText(Messages.TracingPreferencePage_applicationLaunchedInDebugModeWarning);
+			gd = new GridData(GridData.FILL, GridData.BEGINNING, true, false);
+			gd.widthHint = 200;
+			warningText.setLayoutData(gd);
+		}
+
+		enableTracingButton = new Button(parent, SWT.CHECK);
+		enableTracingButton.setText(Messages.enableTracingButtonLabel);
+		GridDataFactory.fillDefaults().align(SWT.BEGINNING, SWT.BEGINNING).grab(true, false).applyTo(enableTracingButton);
+		enableTracingButton.addSelectionListener(new SelectionAdapter() {
+
+			@Override
+			public void widgetSelected(SelectionEvent e) {
+				enableTracingButtonSelected(true);
+			}
+		});
+	}
+
+	/**
+	 * Create a viewer for the list of debug options that are traceable in the product.
+	 *
+	 * @param parent
+	 *            The parent composite
+	 */
+	protected void addBundleViewerSection(Composite parent) {
+
+		tracingTreeTitleLabel = new Label(parent, SWT.NONE);
+		tracingTreeTitleLabel.setText(Messages.tracingTreeTile);
+		filterTree = new TracingComponentTreeViewer(parent);
+		GridDataFactory.fillDefaults().grab(true, true).applyTo(getViewerTree());
+		getViewer().setUseHashlookup(true);
+		getViewerTree().setHeaderVisible(false);
+		getViewer().setLabelProvider(new TracingComponentLabelProvider());
+		getViewer().setContentProvider(new TracingComponentContentProvider());
+		getViewer().setComparator(new TracingComponentComparator());
+		getViewerTree().setLinesVisible(true);
+		getViewer().addDoubleClickListener(new TracingDoubleClickListener());
+		// change the layout of the tree's composite to TreeColumnLayout so we can setup the columns
+		Composite treeViewerComposite = getViewerTree().getParent();
+		TreeColumnLayout treeViewerCompositeLayout = new TreeColumnLayout();
+		treeViewerComposite.setLayout(treeViewerCompositeLayout);
+		GridDataFactory.fillDefaults().grab(true, true).applyTo(treeViewerComposite);
+		// there will be 2 columns. (1) trace string (2) value (which will only be populated when it is a non-boolean
+		// value)
+		// [1] Add the label column (75% column width)
+		TreeViewerColumn labelColumn = new TreeViewerColumn(getViewer(), SWT.NONE);
+		labelColumn.getColumn().setResizable(true);
+		labelColumn.getColumn().setText(Messages.columnHeaderTracingString);
+		labelColumn.setLabelProvider(new TracingComponentColumnLabelProvider(TracingConstants.LABEL_COLUMN_INDEX));
+		treeViewerCompositeLayout.setColumnData(getViewerTree().getColumn(0), new ColumnWeightData(75));
+		// [2] Add the value column (25% column width)
+		TreeViewerColumn valueColumn = new TreeViewerColumn(getViewer(), SWT.NONE);
+		valueColumn.getColumn().setResizable(true);
+		valueColumn.getColumn().setText(Messages.columnHeaderTracingValue);
+		valueColumn.setLabelProvider(new TracingComponentColumnLabelProvider(TracingConstants.VALUE_COLUMN_INDEX));
+		valueColumn.setEditingSupport(new TracingComponentColumnEditingSupport(getViewer(), TracingConstants.VALUE_COLUMN_INDEX));
+		treeViewerCompositeLayout.setColumnData(getViewerTree().getColumn(1), new ColumnWeightData(25));
+
+		// install focus cell and cell editor activation for keyboard access (Bug 385100)
+		TreeViewerFocusCellManager focusCellManager = new TreeViewerFocusCellManager(getViewer(), new FocusCellOwnerDrawHighlighter(getViewer()));
+		ColumnViewerEditorActivationStrategy actSupport = new ColumnViewerEditorActivationStrategy(getViewer()) {
+			@Override
+			protected boolean isEditorActivationEvent(ColumnViewerEditorActivationEvent event) {
+				return (event.eventType == KEY_PRESSED &amp;&amp; event.keyCode == VALUE_EDITOR_ACTIVATION_KEY) //
+						|| event.eventType == TRAVERSAL //
+						|| event.eventType == MOUSE_CLICK_SELECTION //
+						|| event.eventType == PROGRAMMATIC;
+			}
+		};
+		TreeViewerEditor.create(getViewer(), focusCellManager, actSupport, //
+				TABBING_HORIZONTAL | TABBING_MOVE_TO_ROW_NEIGHBOR | TABBING_VERTICAL | KEYBOARD_ACTIVATION);
+	}
+
+	/**
+	 * Create a section for displaying the tracing file options (i.e. maximum size of each file, number of historical
+	 * files, etc).
+	 *
+	 * @param parent
+	 *            The parent composite
+	 */
+	protected void addTracingOptionsSection(Composite parent) {
+		tracingOptionsGroup = new Group(parent, SWT.NONE);
+		tracingOptionsGroup.setText(Messages.tracingOptionsGroup);
+		GridDataFactory.fillDefaults().grab(true, false).applyTo(tracingOptionsGroup);
+		GridLayoutFactory.fillDefaults().margins(5, 5).applyTo(tracingOptionsGroup);
+
+
+		Composite outputComp = new Composite(tracingOptionsGroup, SWT.NONE);
+		GridDataFactory.fillDefaults().grab(true, false).applyTo(outputComp);
+		GridLayoutFactory.fillDefaults().numColumns(3).equalWidth(false).margins(0, 0).applyTo(outputComp);
+
+		// add the 'tracing file' group
+		tracingOutputFileButton = new Button(outputComp, SWT.RADIO);
+		tracingOutputFileButton.setText(Messages.tracingFileLabel);
+		tracingOutputFileButton.setSelection(true); // during creation - select this option
+		tracingOutputFileButton.addSelectionListener(new SelectionAdapter() {
+
+			@Override
+			public void widgetSelected(SelectionEvent e) {
+				setEnableTracingOutputFile(true);
+				standardOutputStreamButton.setSelection(false);
+			}
+		});
+		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).applyTo(tracingOutputFileButton);
+		// add the 'tracing file' input field
+		tracingFileText = new Text(outputComp, SWT.SINGLE | SWT.BORDER);
+		tracingFileText.addListener(SWT.Verify, e -> {
+
+			String newInput = TracingPreferencePage.this.getInput(e);
+			if ((newInput == null) || newInput.equals(TracingConstants.EMPTY_STRING)) {
+				TracingPreferencePage.this.setValid(false);
+				TracingPreferencePage.this.setErrorMessage(Messages.tracingFileInvalid);
+			} else {
+				TracingPreferencePage.this.setValid(true);
+				TracingPreferencePage.this.setErrorMessage(null);
+			}
+		});
+		GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).grab(true, false).applyTo(tracingFileText);
+		// add the 'tracing file' browse button
+		tracingFileBrowseButton = new Button(outputComp, SWT.PUSH);
+		tracingFileBrowseButton.setText(Messages.tracingFileBrowseButton);
+		tracingFileBrowseButton.addSelectionListener(new SelectionAdapter() {
+
+			@Override
+			public void widgetSelected(SelectionEvent e) {
+				FileDialog dialog = new FileDialog(tracingOptionsGroup.getShell(), SWT.SAVE);
+				dialog.setFileName(tracingFileText.getText());
+				String result = dialog.open();
+				if (result != null) {
+					tracingFileText.setText(result);
+				}
+			}
+		});
+		setButtonLayoutData(tracingFileBrowseButton);
+
+		Composite detailsComp = new Composite(tracingOptionsGroup, SWT.NONE);
+		GridLayoutFactory.fillDefaults().numColumns(5).equalWidth(false).margins(0, 0).applyTo(detailsComp);
+		GridDataFactory.fillDefaults().grab(true, false).applyTo(detailsComp);
+
+		// add the 'max count' label
+		tracingFileMaxCountLabel = new Label(detailsComp, SWT.NONE);
+		tracingFileMaxCountLabel.setText(Messages.tracingFileMaxCountLabel);
+
+		// put horizontal indentation
+		GridData gridData = new GridData();
+		gridData.horizontalIndent = 20;
+		tracingFileMaxCountLabel.setLayoutData(gridData);
+
+		// add the 'max count' input field
+		maximumFileCountSpinner = new Spinner(detailsComp, SWT.SINGLE | SWT.BORDER);
+		maximumFileCountSpinner.setValues(10, 10, 100, 0, 5, 10);
+		maximumFileCountSpinner.addListener(SWT.Verify,
+				e -> TracingPreferencePage.this.verifyIntInput(e, Messages.tracingFileInvalidMaxCount));
+		GridDataFactory.fillDefaults().applyTo(maximumFileCountSpinner);
+
+		Label spacer = new Label(detailsComp, SWT.NONE);
+		GridDataFactory.fillDefaults().hint(10, 10).applyTo(spacer);
+
+		// add the 'max size' label
+		tracingFileMaxSizeLabel = new Label(detailsComp, SWT.NONE);
+		tracingFileMaxSizeLabel.setText(Messages.tracingFileMaxSizeLabel);
+
+		// add the 'max size' input field
+		maximumFileSizeSpinner = new Spinner(detailsComp, SWT.SINGLE | SWT.BORDER);
+		maximumFileSizeSpinner.setValues(100, 100, 10000, 0, 100, 1000);
+		maximumFileSizeSpinner.addListener(SWT.Verify,
+				e -> TracingPreferencePage.this.verifyIntInput(e, Messages.tracingFileInvalidMaxSize));
+		GridDataFactory.fillDefaults().applyTo(maximumFileSizeSpinner);
+
+
+		standardOutputStreamButton = new Button(tracingOptionsGroup, SWT.RADIO);
+		standardOutputStreamButton.setText(Messages.TracingPreferencePageStandardOutput);
+		standardOutputStreamButton.addSelectionListener(new SelectionAdapter() {
+
+			@Override
+			public void widgetSelected(SelectionEvent e) {
+
+				setEnableTracingOutputFile(false);
+				standardOutputStreamButton.setSelection(true);
+			}
+		});
+
+	}
+
+
+	/**
+	 *	 select the outputFileButton and enable rest of the widgets if enable true
+	 *   deselect the outputFileButton and disable rest of the widgets if enable false
+	 */
+	private void setEnableTracingOutputFile(boolean enable) {
+		tracingOutputFileButton.setSelection(enable);
+		tracingFileText.setEnabled(enable);
+		maximumFileSizeSpinner.setEnabled(enable);
+		maximumFileCountSpinner.setEnabled(enable);
+		tracingFileBrowseButton.setEnabled(enable);
+		tracingFileMaxCountLabel.setEnabled(enable);
+		tracingFileMaxSizeLabel.setEnabled(enable);
+	}
+	/**
+	 * Set the default state and value of all the UI elements based on the value in the preferences. This can only be
+	 * called after all the UI elements have been constructed.
+	 */
+	protected void setUIValuesFromPreferences() {
+		// If in debug mode, tracing defaults to disabled
+		if (!DebugOptionsHandler.isLaunchInDebugMode()) {
+			// acquire the preferences service
+			boolean tracingEnabled = PreferenceHandler.isTracingEnabled();
+			// HACK: because there is no way for me to enable tracing during preference import (??) - I am doing it here.
+			if (tracingEnabled &amp;&amp; !DebugOptionsHandler.getDebugOptions().isDebugEnabled()) {
+				// the preferences say that tracing should be enabled
+				DebugOptionsHandler.getDebugOptions().setDebugEnabled(true);
+			}
+			// set enablement button
+			enableTracingButton.setSelection(tracingEnabled);
+		} else {
+			enableTracingButton.setSelection(false);
+		}
+
+		tracingOutputFileButton.setSelection(!Boolean.parseBoolean(PreferenceHandler.getOutputToStandardStream()));
+		// set the tracing file name.
+		tracingFileText.setText(PreferenceHandler.getFilePath());
+
+		// default location needs to be put in preference store once ( fringe scenario)
+		final IEclipsePreferences preferences = PreferenceHandler.getPreferences();
+		preferences.put(TracingConstants.PREFERENCE_FILE_PATH, PreferenceHandler.getFilePath());
+
+		// set the max counter field
+		maximumFileCountSpinner.setSelection(PreferenceHandler.getMaxFileCount());
+		// set the max file size field
+		maximumFileSizeSpinner.setSelection(PreferenceHandler.getMaxFileSize());
+		// update the enablement state of all the UI elements
+		enableTracingButtonSelected(false);
+		standardOutputStreamButton.setSelection(Boolean.parseBoolean(PreferenceHandler.getOutputToStandardStream()));
+	}
+
+	/**
+	 * Retrieve the input
+	 */
+	protected String getInput(Event ev) {
+		String input = null;
+		if ((ev.keyCode == SWT.DEL) || (ev.keyCode == SWT.BS)) {
+			String currentValue = ((Text) ev.widget).getText();
+			String begin = currentValue.substring(0, ev.start);
+			String end = currentValue.substring(ev.start + 1, currentValue.length());
+			input = begin + end;
+		} else {
+			input = ev.text;
+		}
+		return input;
+	}
+
+	/**
+	 * Verify that the user input is a valid int field
+	 *
+	 * @param errorMessage to display if the input is not a valid int field
+	 */
+	protected void verifyIntInput(Event ev, String errorMessage) {
+		String input = getInput(ev);
+		// value the input
+		if (input.length() <= 0) {
+			setValid(false);
+			setErrorMessage(errorMessage);
+			return;
+		}
+		// ensure the characters in the string are numbers between 0 - 9
+		char[] chars = new char[input.length()];
+		input.getChars(0, chars.length, chars, 0);
+		for (int i = 0; i < chars.length; i++) {
+			if (!(('0' <= chars[i]) &amp;&amp; (chars[i] <= '9'))) {
+				setValid(false);
+				setErrorMessage(errorMessage);
+				return;
+			}
+		}
+		// everything is OK!
+		setValid(true);
+		setErrorMessage(null);
+	}
+
+	/**
+	 * This method is used to react to the enablement button ('Enable Tracing') state changing.
+	 *
+	 * @param updateModel
+	 *            Should the model be modified for this call? or should only the enablement state of the UI widgets be
+	 *            modified?
+	 */
+	protected void enableTracingButtonSelected(boolean updateModel) {
+		boolean enableTracing = enableTracingButton.getSelection();
+		if (updateModel) {
+			// populate the table
+			if (enableTracing) {
+				// rebuild the model
+				buildDisplayableComponents();
+				// set the viewers input
+				Collection<TracingComponent> components = displayableTracingComponents.values();
+				TracingComponent[] componentsArray = components.toArray(new TracingComponent[components.size()]);
+				getViewer().setInput(componentsArray);
+			} else {
+				// destroy the model
+				purgeModel();
+				// set the viewers input to null
+				getViewer().setInput(null);
+			}
+		}
+		tracingTreeTitleLabel.setEnabled(enableTracing);
+		filterTree.setEnabled(enableTracing);
+		// only enable the tracing options if tracing is enabled
+		tracingOptionsGroup.setEnabled(enableTracing);
+		tracingFileText.setEnabled(enableTracing);
+		maximumFileSizeSpinner.setEnabled(enableTracing);
+		maximumFileCountSpinner.setEnabled(enableTracing);
+		tracingFileBrowseButton.setEnabled(enableTracing);
+		tracingOutputFileButton.setEnabled(enableTracing);
+		tracingFileMaxCountLabel.setEnabled(enableTracing);
+		tracingFileMaxSizeLabel.setEnabled(enableTracing);
+		standardOutputStreamButton.setEnabled(enableTracing);
+	}
+
+	/**
+	 * This method will build the list of tracing components that will be used as input to the tree viewer.
+	 */
+	private void buildDisplayableComponents() {
+		// ensure the model is destroyed (start from scratch)
+		if (displayableTracingComponents != null) {
+			purgeModel();
+		}
+		displayableTracingComponents = new HashMap<String, TracingComponent>();
+		// look for extension points
+		IExtensionRegistry registry = Platform.getExtensionRegistry();
+		IConfigurationElement[] cf = registry.getConfigurationElementsFor(TracingConstants.BUNDLE_ID, TracingConstants.TRACING_EXTENSION_POINT_NAME);
+		TracingComponent[] components = new TracingComponent[cf.length];
+		// populate the full list of tracing components
+		for (int i = 0; i < cf.length; i++) {
+			components[i] = TracingCollections.getInstance().getTracingComponent(cf[i]);
+			// if this component already exists or consumed then do not add it to the displayable list
+			if (!displayableTracingComponents.containsKey(components[i].getId()) &amp;&amp; !components[i].isConsumed()) {
+				displayableTracingComponents.put(components[i].getId(), components[i]);
+			}
+		}
+		// now that the components are created - populate the debug options for each component
+		Iterator<TracingComponent> componentIterator = displayableTracingComponents.values().iterator();
+		while (componentIterator.hasNext()) {
+			componentIterator.next().initialize();
+		}
+		// update any TracingComponentDebugOption entries if their value differs from the preference value
+		mergePrefsWithDebugOptions();
+	}
+
+	/**
+	 * This method will merge the value of the options stored in the preferences with the value in the debug options.
+	 */
+	private void mergePrefsWithDebugOptions() {
+		Map<String, String> prefDebugOptions = PreferenceHandler.getPreferenceProperties();
+		// get all debug options (this ensures that the disabled debug options are used when populating)
+		Map<String, String> debugOptions = DebugOptionsHandler.getDebugOptions().getOptions();
+		Iterator<Map.Entry<String, String>> prefDebugOptionsIterator = prefDebugOptions.entrySet().iterator();
+		while (prefDebugOptionsIterator.hasNext()) {
+			Map.Entry<String, String> prefDebugOption = prefDebugOptionsIterator.next();
+			String debugOptionsValue = debugOptions.get(prefDebugOption.getValue());
+			boolean updateDebugOption = true;
+			if (debugOptionsValue != null) {
+				if (TracingUtils.isValueBoolean(debugOptionsValue) &amp;&amp; TracingUtils.isValueBoolean(prefDebugOption.getValue())) {
+					// pick the one that is 'true'
+					boolean optionValue = Boolean.parseBoolean(debugOptionsValue);
+					boolean prefValue = Boolean.parseBoolean(prefDebugOption.getValue());
+					if (prefValue != optionValue) {
+						// if the preference value is 'true' then use it... otherwise do nothing since the value
+						// in the debug options will be used.
+						updateDebugOption = prefValue;
+					}
+				} else {
+					// non-boolean values: pick the one in the preferences if they do not equal
+					if (!debugOptionsValue.equals(prefDebugOption.getValue())) {
+						updateDebugOption = true;
+					}
+				}
+			}
+			if (updateDebugOption) {
+				// find identical debug options and update them (this will include 'this' debug option that
+				// was modified)
+				TracingComponentDebugOption[] identicalOptions = TracingCollections.getInstance().getTracingDebugOptions(prefDebugOption.getKey());
+				for (TracingComponentDebugOption identicalOption : identicalOptions) {
+					identicalOption.setOptionPathValue(prefDebugOption.getValue());
+				}
+			}
+		}
+	}
+
+	@Override
+	protected void performDefaults() {
+		super.performDefaults();
+		// set the options to be an empty set
+		DebugOptionsHandler.getDebugOptions().setOptions(new HashMap<String, String>());
+		// destroy the model so that it can be re-built.
+		purgeModel();
+		// set the viewers input to null
+		getViewer().setInput(null);
+		// set the UI back to the default (tracing off, etc).
+		PreferenceHandler.setDefaultPreferences();
+		TracingCollections.getInstance().getModifiedDebugOptions().clear();
+		setUIValuesFromPreferences();
+	}
+
+	@Override
+	public boolean performOk() {
+		boolean result = super.performOk();
+		// get the enablement state
+		boolean enableTracing = enableTracingButton.getSelection();
+
+		if (DebugOptionsHandler.isLaunchInDebugMode()) {
+			if (enableTracing) {
+				// User wants to override current settings
+				DebugOptionsHandler.setLaunchInDebugMode(false);
+			} else {
+				// Don't change tracing options
+				return result;
+			}
+		}
+
+		// save the preferences
+		savePreferences(enableTracing);
+		DebugOptionsHandler.setDebugEnabled(enableTracing);
+		DebugOptionsHandler.getDebugOptions().setFile(standardOutputStreamButton.getSelection() ? null : new File(tracingFileText.getText()));
+		if (enableTracing) {
+			Map<String, String> newOptions = new HashMap<String, String>();
+			// get the set of options available
+			Map<String, String> currentOptions = DebugOptionsHandler.getDebugOptions().getOptions();
+			newOptions.putAll(currentOptions);
+			// iterate over the list of added debug options and add them
+			TracingComponentDebugOption[] optionsToAdd = TracingCollections.getInstance().getModifiedDebugOptions().getDebugOptionsToAdd();
+			for (TracingComponentDebugOption element : optionsToAdd) {
+				newOptions.put(element.getOptionPath(), element.getOptionPathValue());
+			}
+			// iterate over the list of removed debug options and remove them
+			TracingComponentDebugOption[] optionsToRemove = TracingCollections.getInstance().getModifiedDebugOptions().getDebugOptionsToRemove();
+			for (TracingComponentDebugOption element : optionsToRemove) {
+				newOptions.remove(element.getOptionPath());
+			}
+			// update the debug options
+			DebugOptionsHandler.getDebugOptions().setOptions(newOptions);
+			TracingCollections.getInstance().getModifiedDebugOptions().clear();
+			// save the tracing file options
+			if (DebugOptionsHandler.getDebugOptions().getFile() != null) {
+				String defaultFile = DebugOptionsHandler.getDebugOptions().getFile().getAbsolutePath();
+				String newFile = tracingFileText.getText();
+				if (!defaultFile.equals(newFile)) {
+					DebugOptionsHandler.getDebugOptions().setFile(new File(newFile));
+				}
+			}
+			// maximum file size
+			int newMaxSize = maximumFileSizeSpinner.getSelection();
+			// property defined in org.eclipse.osgi.framework.debug.EclipseDebugTrace#PROP_TRACE_SIZE_MAX
+			System.setProperty(TracingConstants.PROP_TRACE_SIZE_MAX, String.valueOf(newMaxSize));
+			// maximum file count
+			int newMaxCount = maximumFileCountSpinner.getSelection();
+			// property defined in org.eclipse.osgi.framework.debug.EclipseDebugTrace#PROP_TRACE_FILE_MAX
+			System.setProperty(TracingConstants.PROP_TRACE_FILE_MAX, String.valueOf(newMaxCount));
+		}
+		return result;
+	}
+
+	/**
+	 * Save the property page preferences.
+	 */
+	protected void savePreferences(boolean tracingEnabled) {
+		Map<String, String> prefValues = new HashMap<String, String>(5);
+		prefValues.put(TracingConstants.PREFERENCE_ENABLEMENT_IDENTIFIER, Boolean.toString(tracingEnabled));
+		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_COUNT_IDENTIFIER, Integer.toString(maximumFileCountSpinner.getSelection()));
+		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_SIZE_IDENTIFIER, Integer.toString(maximumFileSizeSpinner.getSelection()));
+		prefValues.put(TracingConstants.PREFERENCE_FILE_PATH, tracingFileText.getText());
+		prefValues.put(TracingConstants.PREFERENCE_OUTPUT_STANDARD_STREAM, Boolean.toString(standardOutputStreamButton.getSelection()));
+		// iterate over the displayable components and store their debug options (all trace strings should be saved)
+		StringBuilder optionsAsString = new StringBuilder();
+		if (displayableTracingComponents != null) {
+			Iterator<Map.Entry<String, TracingComponent>> componentIterator = displayableTracingComponents.entrySet().iterator();
+			while (componentIterator.hasNext()) {
+				TracingComponent component = componentIterator.next().getValue();
+				if (component.hasChildren()) {
+					StringBuilder result = getAllUniqueDebugOptions(component);
+					if (result != null) {
+						optionsAsString.append(result);
+					}
+				}
+			}
+		} else {
+			optionsAsString.append(TracingConstants.EMPTY_STRING);
+		}
+		prefValues.put(TracingConstants.PREFERENCE_ENTRIES_IDENTIFIER, optionsAsString.toString());
+		PreferenceHandler.savePreferences(prefValues);
+	}
+
+	private StringBuilder getAllUniqueDebugOptions(TracingNode node) {
+		StringBuilder buffer = null;
+		if (node.hasChildren()) {
+			buffer = new StringBuilder();
+			TracingNode[] children = node.getChildren();
+			for (TracingNode element : children) {
+				// add this child node (all child nodes will be of type TracingComponentDebugOption)
+				String debugOptionAsString = TracingUtils.convertToString((TracingComponentDebugOption) element);
+				buffer.append(debugOptionAsString);
+				// add all of this childs nodes
+				StringBuilder result = getAllUniqueDebugOptions(element);
+				if (result != null) {
+					buffer.append(result);
+				}
+			}
+		}
+		return buffer;
+	}
+
+	/**
+	 * The {@link TreeViewer} for the tracing page
+	 *
+	 * @return The {@link TreeViewer} for the tracing page
+	 */
+	private TreeViewer getViewer() {
+		return filterTree.getViewer();
+	}
+
+	/**
+	 * Accessor for the {@link Tree} of the {@link CheckboxTreeViewer}
+	 *
+	 * @return The {@link Tree} of the {@link CheckboxTreeViewer}
+	 */
+	private Tree getViewerTree() {
+		return filterTree.getViewer().getTree();
+	}
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingUIActivator.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingUIActivator.java
位置:  -1,118 +1,118  
-/*******************************************************************************
- * Copyright (c) 2011, 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal;
-
-import java.io.File;
-import java.util.*;
-import org.eclipse.core.runtime.*;
-import org.eclipse.osgi.service.datalocation.Location;
-import org.eclipse.osgi.service.runnable.StartupMonitor;
-import org.eclipse.ui.trace.internal.utils.*;
-import org.osgi.framework.BundleContext;
-import org.osgi.framework.ServiceRegistration;
-
-/**
- * The activator class controls the plug-in life cycle
- */
-//XXX: Does not extend AbstractUIPlugin to avoid activating the UI layer at load time (bug 431223).
-public class TracingUIActivator extends Plugin {
-
-	/**
-	 * The constructor
-	 */
-	public TracingUIActivator() {
-
-		// empty constructor
-	}
-
-	/**
-	 * Returns the shared instance
-	 *
-	 * @return the shared instance
-	 */
-	public static TracingUIActivator getDefault() {
-
-		return TracingUIActivator.plugin;
-	}
-
-	@Override
-	public void start(final BundleContext context) throws Exception {
-
-		super.start(context);
-		TracingUIActivator.plugin = this;
-
-		if (DebugOptionsHandler.isTracingEnabled()) {
-			// Tracing options have been enabled using options file and debug mode
-			// Set option so we know debug mode is set, not preferences
-			DebugOptionsHandler.setLaunchInDebugMode(true);
-
-		} else {
-			// bug 395632: see if the instance location is defined.  if not then defer accessing
-			// the preferences until it is defined by being notified via the org.eclipse.osgi.service.runnable.StartupMonitor
-			// service
-			Location instanceLocation = Platform.getInstanceLocation();
-			if (instanceLocation == null || !instanceLocation.isSet()) {
-				// register a startup monitor to notify us when the application is running
-				final TracingStartupMonitor startupMonitor = new TracingStartupMonitor();
-				final Dictionary<String, ?> properties = new Hashtable<String, Object>(1);
-				ServiceRegistration<StartupMonitor> registration = context.registerService(StartupMonitor.class, startupMonitor, properties);
-				startupMonitor.setRegistration(registration);
-			} else {
-				this.initPreferences();
-			}
-		}
-	}
-
-	@Override
-	public void stop(final BundleContext context) throws Exception {
-
-		TracingUIActivator.plugin = null;
-		super.stop(context);
-	}
-
-	/**
-	 * Log the specified {@link Exception} to the workspace logging file.
-	 *
-	 * @param ex
-	 *            The {@link Exception} to log
-	 */
-	public final void logException(final Exception ex) {
-
-		if (ex != null) {
-			final IStatus errorStatus = new Status(IStatus.ERROR, TracingConstants.BUNDLE_ID, ex.getMessage(), ex);
-			this.getLog().log(errorStatus);
-		}
-	}
-
-	/**
-	 * Initialize the tracing preferences if tracing is enabled.
-	 */
-	protected final void initPreferences() {
-
-		if (PreferenceHandler.isTracingEnabled()) {
-			// User has previously enabled tracing options
-			DebugOptionsHandler.setDebugEnabled(true);
-			DebugOptionsHandler.getDebugOptions().setFile(new File(PreferenceHandler.getFilePath()));
-			System.setProperty(TracingConstants.PROP_TRACE_SIZE_MAX, String.valueOf(PreferenceHandler.getMaxFileSize()));
-			System.setProperty(TracingConstants.PROP_TRACE_FILE_MAX, String.valueOf(PreferenceHandler.getMaxFileCount()));
-
-			Map<String, String> prefs = PreferenceHandler.getPreferenceProperties();
-			DebugOptionsHandler.getDebugOptions().setOptions(prefs);
-		}
-	}
-
-	/** The shared instance */
-	private static TracingUIActivator plugin = null;
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal;
+
+import java.io.File;
+import java.util.*;
+import org.eclipse.core.runtime.*;
+import org.eclipse.osgi.service.datalocation.Location;
+import org.eclipse.osgi.service.runnable.StartupMonitor;
+import org.eclipse.ui.trace.internal.utils.*;
+import org.osgi.framework.BundleContext;
+import org.osgi.framework.ServiceRegistration;
+
+/**
+ * The activator class controls the plug-in life cycle
+ */
+//XXX: Does not extend AbstractUIPlugin to avoid activating the UI layer at load time (bug 431223).
+public class TracingUIActivator extends Plugin {
+
+	/**
+	 * The constructor
+	 */
+	public TracingUIActivator() {
+
+		// empty constructor
+	}
+
+	/**
+	 * Returns the shared instance
+	 *
+	 * @return the shared instance
+	 */
+	public static TracingUIActivator getDefault() {
+
+		return TracingUIActivator.plugin;
+	}
+
+	@Override
+	public void start(final BundleContext context) throws Exception {
+
+		super.start(context);
+		TracingUIActivator.plugin = this;
+
+		if (DebugOptionsHandler.isTracingEnabled()) {
+			// Tracing options have been enabled using options file and debug mode
+			// Set option so we know debug mode is set, not preferences
+			DebugOptionsHandler.setLaunchInDebugMode(true);
+
+		} else {
+			// bug 395632: see if the instance location is defined.  if not then defer accessing
+			// the preferences until it is defined by being notified via the org.eclipse.osgi.service.runnable.StartupMonitor
+			// service
+			Location instanceLocation = Platform.getInstanceLocation();
+			if (instanceLocation == null || !instanceLocation.isSet()) {
+				// register a startup monitor to notify us when the application is running
+				final TracingStartupMonitor startupMonitor = new TracingStartupMonitor();
+				final Dictionary<String, ?> properties = new Hashtable<String, Object>(1);
+				ServiceRegistration<StartupMonitor> registration = context.registerService(StartupMonitor.class, startupMonitor, properties);
+				startupMonitor.setRegistration(registration);
+			} else {
+				this.initPreferences();
+			}
+		}
+	}
+
+	@Override
+	public void stop(final BundleContext context) throws Exception {
+
+		TracingUIActivator.plugin = null;
+		super.stop(context);
+	}
+
+	/**
+	 * Log the specified {@link Exception} to the workspace logging file.
+	 *
+	 * @param ex
+	 *            The {@link Exception} to log
+	 */
+	public final void logException(final Exception ex) {
+
+		if (ex != null) {
+			final IStatus errorStatus = new Status(IStatus.ERROR, TracingConstants.BUNDLE_ID, ex.getMessage(), ex);
+			this.getLog().log(errorStatus);
+		}
+	}
+
+	/**
+	 * Initialize the tracing preferences if tracing is enabled.
+	 */
+	protected final void initPreferences() {
+
+		if (PreferenceHandler.isTracingEnabled()) {
+			// User has previously enabled tracing options
+			DebugOptionsHandler.setDebugEnabled(true);
+			DebugOptionsHandler.getDebugOptions().setFile(new File(PreferenceHandler.getFilePath()));
+			System.setProperty(TracingConstants.PROP_TRACE_SIZE_MAX, String.valueOf(PreferenceHandler.getMaxFileSize()));
+			System.setProperty(TracingConstants.PROP_TRACE_FILE_MAX, String.valueOf(PreferenceHandler.getMaxFileCount()));
+
+			Map<String, String> prefs = PreferenceHandler.getPreferenceProperties();
+			DebugOptionsHandler.getDebugOptions().setOptions(prefs);
+		}
+	}
+
+	/** The shared instance */
+	private static TracingUIActivator plugin = null;
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/AbstractTracingNode.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/AbstractTracingNode.java
位置:  -1,113 +1,113  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.datamodel;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * A abstract base class implementation of the {@link TracingNode} interface.
- */
-public abstract class AbstractTracingNode implements TracingNode {
-
-	/**
-	 * Constructor to create the empty list of children
-	 */
-	public AbstractTracingNode() {
-		children = new ArrayList<TracingNode>();
-	}
-
-	protected abstract void populateChildren();
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#getLabel()
-	 */
-	public String getLabel() {
-		return label;
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#getParent()
-	 */
-	public TracingNode getParent() {
-		return parent;
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#getChildren()
-	 */
-	public TracingNode[] getChildren() {
-		initialize();
-		return children.toArray(new TracingNode[children.size()]);
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#hasChildren()
-	 */
-	public boolean hasChildren() {
-		initialize();
-		return children != null &amp;&amp; children.size() > 0;
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#addChild(org.eclipse.ui.trace.internal.datamodel.TracingNode)
-	 */
-	public void addChild(final TracingNode childNode) {
-		if (!children.contains(childNode)) {
-			children.add(childNode);
-		}
-	}
-
-	/**
-	 * Populate the list of children for this node if it has not been initialized yet.
-	 */
-	public void initialize() {
-		if (!childrenInitialized) {
-			populateChildren();
-			childrenInitialized = true;
-		}
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#setLabel(java.lang.String)
-	 */
-	public void setLabel(final String label) {
-		this.label = label;
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#setParent(org.eclipse.ui.trace.internal.datamodel.TracingNode)
-	 */
-	public void setParent(final TracingNode parent) {
-		if (this.parent == null) {
-			this.parent = parent;
-			if (this.parent != null) {
-				// since a parent is being set then it should also be added as a child
-				this.parent.addChild(this);
-			}
-		}
-	}
-
-	/** This nodes parent node */
-	protected TracingNode parent = null;
-
-	/** The label for this node */
-	protected String label = null;
-
-	/** The list of child nodes for this node */
-	protected List<TracingNode> children = null;
-
-	/** A flag to determine if the children have been initialized for this node */
-	private boolean childrenInitialized = false;
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.datamodel;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * A abstract base class implementation of the {@link TracingNode} interface.
+ */
+public abstract class AbstractTracingNode implements TracingNode {
+
+	/**
+	 * Constructor to create the empty list of children
+	 */
+	public AbstractTracingNode() {
+		children = new ArrayList<TracingNode>();
+	}
+
+	protected abstract void populateChildren();
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#getLabel()
+	 */
+	public String getLabel() {
+		return label;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#getParent()
+	 */
+	public TracingNode getParent() {
+		return parent;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#getChildren()
+	 */
+	public TracingNode[] getChildren() {
+		initialize();
+		return children.toArray(new TracingNode[children.size()]);
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#hasChildren()
+	 */
+	public boolean hasChildren() {
+		initialize();
+		return children != null &amp;&amp; children.size() > 0;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#addChild(org.eclipse.ui.trace.internal.datamodel.TracingNode)
+	 */
+	public void addChild(final TracingNode childNode) {
+		if (!children.contains(childNode)) {
+			children.add(childNode);
+		}
+	}
+
+	/**
+	 * Populate the list of children for this node if it has not been initialized yet.
+	 */
+	public void initialize() {
+		if (!childrenInitialized) {
+			populateChildren();
+			childrenInitialized = true;
+		}
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#setLabel(java.lang.String)
+	 */
+	public void setLabel(final String label) {
+		this.label = label;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#setParent(org.eclipse.ui.trace.internal.datamodel.TracingNode)
+	 */
+	public void setParent(final TracingNode parent) {
+		if (this.parent == null) {
+			this.parent = parent;
+			if (this.parent != null) {
+				// since a parent is being set then it should also be added as a child
+				this.parent.addChild(this);
+			}
+		}
+	}
+
+	/** This nodes parent node */
+	protected TracingNode parent = null;
+
+	/** The label for this node */
+	protected String label = null;
+
+	/** The list of child nodes for this node */
+	protected List<TracingNode> children = null;
+
+	/** A flag to determine if the children have been initialized for this node */
+	private boolean childrenInitialized = false;
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/ModifiedDebugOptions.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/ModifiedDebugOptions.java
位置:  -1,107 +1,107  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.datamodel;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Utility handler for storing the options that were changed
- */
-public class ModifiedDebugOptions {
-
-	/**
-	 * Construct a new ModifiedDebugOptions object
-	 */
-	public ModifiedDebugOptions() {
-		debugOptionsToAdd = new ArrayList<TracingComponentDebugOption>();
-		debugOptionsToRemove = new ArrayList<TracingComponentDebugOption>();
-	}
-
-	/**
-	 * Accessor for an array of the {@link TracingComponentDebugOption} items that were selected to be added on the
-	 * tracing preference page.
-	 *
-	 * @return An array of the {@link TracingComponentDebugOption} items that were selected to be added on the tracing
-	 *         preference page
-	 */
-	public final TracingComponentDebugOption[] getDebugOptionsToAdd() {
-		return debugOptionsToAdd.toArray(new TracingComponentDebugOption[debugOptionsToAdd.size()]);
-	}
-
-	/**
-	 * Accessor for an array of the {@link TracingComponentDebugOption} items that were selected to be removed on the
-	 * tracing preference page.
-	 *
-	 * @return An array of the {@link TracingComponentDebugOption} items that were selected to be removed on the tracing
-	 *         preference page
-	 */
-	public final TracingComponentDebugOption[] getDebugOptionsToRemove() {
-		return debugOptionsToRemove.toArray(new TracingComponentDebugOption[debugOptionsToRemove.size()]);
-	}
-
-	/**
-	 * Adds a new {@link TracingComponentDebugOption} to the list of debug options to add
-	 *
-	 * @param option
-	 *            The {@link TracingComponentDebugOption} option to add
-	 */
-	public final void addDebugOption(final TracingComponentDebugOption option) {
-		if (option != null) {
-			boolean isBeingRemoved = debugOptionsToRemove.contains(option);
-			if (isBeingRemoved) {
-				// remove it from the list of debug options to remove
-				debugOptionsToRemove.remove(option);
-			}
-			// add it to the list of debug options to add
-			debugOptionsToAdd.add(option);
-		}
-	}
-
-	/**
-	 * Adds a new {@link TracingComponentDebugOption} to the list of debug options to remove
-	 *
-	 * @param option
-	 *            The {@link TracingComponentDebugOption} option to add
-	 */
-	public final void removeDebugOption(final TracingComponentDebugOption option) {
-		if (option != null) {
-			boolean isBeingAdded = debugOptionsToAdd.contains(option);
-			if (isBeingAdded) {
-				// remove it from the list of debug options to add
-				debugOptionsToAdd.remove(option);
-			}
-			// add it to the list of debug options to remove
-			debugOptionsToRemove.add(option);
-		}
-	}
-
-	/**
-	 * Purge the list of bundles to add and remove
-	 */
-	public final void clear() {
-		debugOptionsToAdd.clear();
-		debugOptionsToRemove.clear();
-	}
-
-	/**
-	 * A list of the {@link TracingComponentDebugOption} instances to be added.
-	 */
-	private List<TracingComponentDebugOption> debugOptionsToAdd = null;
-
-	/**
-	 * A list of the {@link TracingComponentDebugOption} instances to be removed.
-	 */
-	private List<TracingComponentDebugOption> debugOptionsToRemove = null;
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.datamodel;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Utility handler for storing the options that were changed
+ */
+public class ModifiedDebugOptions {
+
+	/**
+	 * Construct a new ModifiedDebugOptions object
+	 */
+	public ModifiedDebugOptions() {
+		debugOptionsToAdd = new ArrayList<TracingComponentDebugOption>();
+		debugOptionsToRemove = new ArrayList<TracingComponentDebugOption>();
+	}
+
+	/**
+	 * Accessor for an array of the {@link TracingComponentDebugOption} items that were selected to be added on the
+	 * tracing preference page.
+	 *
+	 * @return An array of the {@link TracingComponentDebugOption} items that were selected to be added on the tracing
+	 *         preference page
+	 */
+	public final TracingComponentDebugOption[] getDebugOptionsToAdd() {
+		return debugOptionsToAdd.toArray(new TracingComponentDebugOption[debugOptionsToAdd.size()]);
+	}
+
+	/**
+	 * Accessor for an array of the {@link TracingComponentDebugOption} items that were selected to be removed on the
+	 * tracing preference page.
+	 *
+	 * @return An array of the {@link TracingComponentDebugOption} items that were selected to be removed on the tracing
+	 *         preference page
+	 */
+	public final TracingComponentDebugOption[] getDebugOptionsToRemove() {
+		return debugOptionsToRemove.toArray(new TracingComponentDebugOption[debugOptionsToRemove.size()]);
+	}
+
+	/**
+	 * Adds a new {@link TracingComponentDebugOption} to the list of debug options to add
+	 *
+	 * @param option
+	 *            The {@link TracingComponentDebugOption} option to add
+	 */
+	public final void addDebugOption(final TracingComponentDebugOption option) {
+		if (option != null) {
+			boolean isBeingRemoved = debugOptionsToRemove.contains(option);
+			if (isBeingRemoved) {
+				// remove it from the list of debug options to remove
+				debugOptionsToRemove.remove(option);
+			}
+			// add it to the list of debug options to add
+			debugOptionsToAdd.add(option);
+		}
+	}
+
+	/**
+	 * Adds a new {@link TracingComponentDebugOption} to the list of debug options to remove
+	 *
+	 * @param option
+	 *            The {@link TracingComponentDebugOption} option to add
+	 */
+	public final void removeDebugOption(final TracingComponentDebugOption option) {
+		if (option != null) {
+			boolean isBeingAdded = debugOptionsToAdd.contains(option);
+			if (isBeingAdded) {
+				// remove it from the list of debug options to add
+				debugOptionsToAdd.remove(option);
+			}
+			// add it to the list of debug options to remove
+			debugOptionsToRemove.add(option);
+		}
+	}
+
+	/**
+	 * Purge the list of bundles to add and remove
+	 */
+	public final void clear() {
+		debugOptionsToAdd.clear();
+		debugOptionsToRemove.clear();
+	}
+
+	/**
+	 * A list of the {@link TracingComponentDebugOption} instances to be added.
+	 */
+	private List<TracingComponentDebugOption> debugOptionsToAdd = null;
+
+	/**
+	 * A list of the {@link TracingComponentDebugOption} instances to be removed.
+	 */
+	private List<TracingComponentDebugOption> debugOptionsToRemove = null;
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingCollections.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingCollections.java
位置:  -1,270 +1,270  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.datamodel;
-
-import java.util.*;
-import org.eclipse.core.runtime.IConfigurationElement;
-import org.eclipse.ui.trace.internal.utils.TracingConstants;
-import org.eclipse.ui.trace.internal.utils.TracingUtils;
-import org.osgi.framework.Bundle;
-
-/**
- * A utility class for handling the various collections of the product tracing UI.
- */
-public class TracingCollections {
-
-	/**
-	 * Constructor for the {@link TracingCollections}
-	 */
-	protected TracingCollections() {
-
-		this.fComponentCollection = new HashMap<String, TracingComponent>();
-		this.fDebugOptionCollection = new HashMap<String, List<TracingComponentDebugOption>>();
-		this.fBundleOptionsCollection = new HashMap<Bundle, Properties>();
-		this.fBundleConsumedCollection = new HashMap<Bundle, Boolean>();
-		this.fBundleComponentCollection = new HashMap<Bundle, List<TracingComponent>>();
-		this.fModifiedDebugOptions = new ModifiedDebugOptions();
-	}
-
-	/**
-	 * Accessor for the singleton instance of the {@link TracingCollections}
-	 *
-	 * @return Return the single instance of the {@link TracingCollections}
-	 */
-	public static TracingCollections getInstance() {
-
-		if (TracingCollections.instance == null) {
-			TracingCollections.instance = new TracingCollections();
-		}
-		return TracingCollections.instance;
-	}
-
-	/**
-	 * Accessor for the modified options model
-	 *
-	 * @return Return the <code>ModifiedDebugOptions</code> model
-	 */
-	public ModifiedDebugOptions getModifiedDebugOptions() {
-		return fModifiedDebugOptions;
-	}
-
-	/**
-	 * Store a {@link TracingComponentDebugOption} element if it has not already been stored.
-	 *
-	 * @param newDebugOption
-	 *            The {@link TracingComponentDebugOption} to add to the collection.
-	 */
-	public void storeTracingDebugOption(final TracingComponentDebugOption newDebugOption) {
-		if (newDebugOption != null) {
-			List<TracingComponentDebugOption> debugOptions = this.fDebugOptionCollection.get(newDebugOption.getOptionPath());
-			if (debugOptions == null) {
-				// create the list of {@link TracingComponentDebugOption} elements
-				debugOptions = new ArrayList<TracingComponentDebugOption>();
-				fDebugOptionCollection.put(newDebugOption.getOptionPath(), debugOptions);
-			}
-			// add the newly created {@link TracingComponentDebugOption}
-			if (!debugOptions.contains(newDebugOption)) {
-				debugOptions.add(newDebugOption);
-			}
-		}
-	}
-
-	/**
-	 * Access the list of debug options that contain the specified option-path value.
-	 *
-	 * @param optionPath
-	 *            The name of the option-path.
-	 * @return An array of stored {@link TracingComponentDebugOption} elements that contain the option-path value.
-	 */
-	public TracingComponentDebugOption[] getTracingDebugOptions(final String optionPath) {
-		List<TracingComponentDebugOption> debugOptions = null;
-		if (optionPath != null) {
-			debugOptions = fDebugOptionCollection.get(optionPath);
-		}
-		if (debugOptions == null) {
-			debugOptions = Collections.emptyList();
-		}
-		return debugOptions.toArray(new TracingComponentDebugOption[debugOptions.size()]);
-	}
-
-	/**
-	 * Access a {@link TracingComponent} from the internal collection. If a {@link TracingComponent} does not exist based on
-	 * the content in the {@link IConfigurationElement} then a new {@link TracingComponent} will be created and stored.
-	 *
-	 * @param element
-	 *            The {@link IConfigurationElement} for a 'tracingComponent' extension.
-	 * @return Returns a {@link TracingComponent} object based on the information in the specified
-	 *         {@link IConfigurationElement}.
-	 */
-	public TracingComponent getTracingComponent(final IConfigurationElement element) {
-		TracingComponent component = null;
-		if (element != null) {
-			String id = element.getAttribute(TracingConstants.TRACING_EXTENSION_ID_ATTRIBUTE);
-			if (id != null) {
-				component = fComponentCollection.get(id);
-				if (component == null) {
-					// create a new tracing component since one doesn't exist with this id
-					component = new TracingComponent(element);
-					fComponentCollection.put(id, component);
-				} else {
-					// A tracing component already exists with this id. Add the bundles provided by
-					// the new component to the existing one.
-					component.addBundles(element);
-					// update the label (if necessary)
-					final String newComponentLabel = element.getAttribute(TracingConstants.TRACING_EXTENSION_LABEL_ATTRIBUTE);
-					if (newComponentLabel != null) {
-						component.setLabel(newComponentLabel);
-					}
-				}
-			}
-		}
-		return component;
-	}
-
-	/**
-	 * Accessor for a {@link Properties} of debug options where the key of the {@link Properties} is the debug option
-	 * path and the value of the {@link Properties} is the debug option value. If the debug options for a specific
-	 * {@link Bundle} have not been accessed then it will attempt to read in all of the entries defined in the .options
-	 * file for this bundle.
-	 *
-	 * @param bundle
-	 *            The {@link Bundle} to access the debug options defined for it.
-	 * @return A {@link Properties} of debug options where the key of the {@link Properties} is the debug option path
-	 *         and the value of the {@link Properties} is the debug option value.
-	 */
-	public Properties getDebugOptions(final Bundle bundle) {
-		Properties results = null;
-		if (bundle != null) {
-			results = fBundleOptionsCollection.get(bundle);
-			if (results == null) {
-				// this bundle has not been processed yet - so do it now.
-				results = TracingUtils.loadOptionsFromBundle(bundle);
-				// and store the results
-				fBundleOptionsCollection.put(bundle, results);
-			}
-		}
-		return results;
-	}
-
-	/**
-	 * Set the consumed state of the specified {@link Bundle}.
-	 *
-	 * @param bundle
-	 *            The {@link Bundle} to set the consumed state on.
-	 * @param consumed
-	 *            Is this bundle consumed by another tracing component?
-	 */
-	public void setBundleIsConsumed(final Bundle bundle, final boolean consumed) {
-		if (bundle != null) {
-			fBundleConsumedCollection.put(bundle, Boolean.valueOf(consumed));
-		}
-	}
-
-	/**
-	 * Accessor to find out if a specific bundle has been consumed by a tracing component.
-	 *
-	 * @param bundle
-	 *            The {@link Bundle} to check.
-	 * @return Returns true if this bundle has been previous consumed by another tracing component. Otherwise, false is
-	 *         returned.
-	 */
-	public boolean isBundleConsumed(final Bundle bundle) {
-		boolean result = false;
-		if (bundle != null) {
-			Boolean isConsumed = fBundleConsumedCollection.get(bundle);
-			if (isConsumed != null) {
-				result = isConsumed.booleanValue();
-			}
-		}
-		return result;
-	}
-
-	/**
-	 * Store that the specified {@link Bundle} has been added to the specified {@link TracingComponent}.
-	 *
-	 * @param component
-	 *            The {@link TracingComponent} that includes the specified {@link Bundle}.
-	 * @param bundle
-	 *            The {@link Bundle} included in the specified {@link TracingComponent}.
-	 */
-	public void storeBundleInComponent(final TracingComponent component, final Bundle bundle) {
-		if ((bundle != null) &amp;&amp; (component != null)) {
-			List<TracingComponent> components = fBundleComponentCollection.get(bundle);
-			if (components == null) {
-				components = new ArrayList<TracingComponent>();
-				fBundleComponentCollection.put(bundle, components);
-			}
-			components.add(component);
-		}
-	}
-
-	/**
-	 * Accessor for an array of {@link TracingComponent} objects that contain the specified {@link Bundle}.
-	 *
-	 * @param bundle
-	 *            The {@link Bundle} used to locate the {@link TracingComponent} that include it.
-	 * @return An array of {@link TracingComponent} objects that contain the specified {@link Bundle}.
-	 */
-	public TracingComponent[] getComponentsContainingBundle(final Bundle bundle) {
-		List<TracingComponent> components = null;
-		if (bundle != null) {
-			components = fBundleComponentCollection.get(bundle);
-		}
-		if (components == null) {
-			components = Collections.emptyList();
-		}
-		return components.toArray(new TracingComponent[components.size()]);
-	}
-
-	/**
-	 * Clear the various collections
-	 */
-	public final void clear() {
-		fComponentCollection.clear();
-		fDebugOptionCollection.clear();
-		fBundleOptionsCollection.clear();
-		fBundleConsumedCollection.clear();
-		fBundleComponentCollection.clear();
-	}
-
-	/** The debug options {@link ModifiedDebugOptions} added or removed */
-	private ModifiedDebugOptions fModifiedDebugOptions = null;
-
-	/** A collection of {@link TracingComponent} entries that are constructed for a specific {@link String} id. */
-	private Map<String, TracingComponent> fComponentCollection = null;
-
-	/**
-	 * A collection of {@link TracingComponentDebugOption} entries that are constructed for a specific {@link String}
-	 * option-path name.
-	 */
-	private Map<String, List<TracingComponentDebugOption>> fDebugOptionCollection = null;
-
-	/** A collection of {@link Properties} entries which contain the various tracing strings for a specific {@link Bundle}. */
-	private Map<Bundle, Properties> fBundleOptionsCollection = null;
-
-	/**
-	 * A collection of {@link Bundle} entries with a {@link Boolean} value to state if it is a consumed by any tracing
-	 * component.
-	 */
-	private Map<Bundle, Boolean> fBundleConsumedCollection = null;
-
-	/**
-	 * A collection of {@link Bundle} entries with a {@link List} of the {@link TracingComponent}'s (i.e. components that
-	 * contain this bundle)
-	 */
-	private Map<Bundle, List<TracingComponent>> fBundleComponentCollection = null;
-
-	/** The singleton instance of this class */
-	private static TracingCollections instance = null;
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.datamodel;
+
+import java.util.*;
+import org.eclipse.core.runtime.IConfigurationElement;
+import org.eclipse.ui.trace.internal.utils.TracingConstants;
+import org.eclipse.ui.trace.internal.utils.TracingUtils;
+import org.osgi.framework.Bundle;
+
+/**
+ * A utility class for handling the various collections of the product tracing UI.
+ */
+public class TracingCollections {
+
+	/**
+	 * Constructor for the {@link TracingCollections}
+	 */
+	protected TracingCollections() {
+
+		this.fComponentCollection = new HashMap<String, TracingComponent>();
+		this.fDebugOptionCollection = new HashMap<String, List<TracingComponentDebugOption>>();
+		this.fBundleOptionsCollection = new HashMap<Bundle, Properties>();
+		this.fBundleConsumedCollection = new HashMap<Bundle, Boolean>();
+		this.fBundleComponentCollection = new HashMap<Bundle, List<TracingComponent>>();
+		this.fModifiedDebugOptions = new ModifiedDebugOptions();
+	}
+
+	/**
+	 * Accessor for the singleton instance of the {@link TracingCollections}
+	 *
+	 * @return Return the single instance of the {@link TracingCollections}
+	 */
+	public static TracingCollections getInstance() {
+
+		if (TracingCollections.instance == null) {
+			TracingCollections.instance = new TracingCollections();
+		}
+		return TracingCollections.instance;
+	}
+
+	/**
+	 * Accessor for the modified options model
+	 *
+	 * @return Return the <code>ModifiedDebugOptions</code> model
+	 */
+	public ModifiedDebugOptions getModifiedDebugOptions() {
+		return fModifiedDebugOptions;
+	}
+
+	/**
+	 * Store a {@link TracingComponentDebugOption} element if it has not already been stored.
+	 *
+	 * @param newDebugOption
+	 *            The {@link TracingComponentDebugOption} to add to the collection.
+	 */
+	public void storeTracingDebugOption(final TracingComponentDebugOption newDebugOption) {
+		if (newDebugOption != null) {
+			List<TracingComponentDebugOption> debugOptions = this.fDebugOptionCollection.get(newDebugOption.getOptionPath());
+			if (debugOptions == null) {
+				// create the list of {@link TracingComponentDebugOption} elements
+				debugOptions = new ArrayList<TracingComponentDebugOption>();
+				fDebugOptionCollection.put(newDebugOption.getOptionPath(), debugOptions);
+			}
+			// add the newly created {@link TracingComponentDebugOption}
+			if (!debugOptions.contains(newDebugOption)) {
+				debugOptions.add(newDebugOption);
+			}
+		}
+	}
+
+	/**
+	 * Access the list of debug options that contain the specified option-path value.
+	 *
+	 * @param optionPath
+	 *            The name of the option-path.
+	 * @return An array of stored {@link TracingComponentDebugOption} elements that contain the option-path value.
+	 */
+	public TracingComponentDebugOption[] getTracingDebugOptions(final String optionPath) {
+		List<TracingComponentDebugOption> debugOptions = null;
+		if (optionPath != null) {
+			debugOptions = fDebugOptionCollection.get(optionPath);
+		}
+		if (debugOptions == null) {
+			debugOptions = Collections.emptyList();
+		}
+		return debugOptions.toArray(new TracingComponentDebugOption[debugOptions.size()]);
+	}
+
+	/**
+	 * Access a {@link TracingComponent} from the internal collection. If a {@link TracingComponent} does not exist based on
+	 * the content in the {@link IConfigurationElement} then a new {@link TracingComponent} will be created and stored.
+	 *
+	 * @param element
+	 *            The {@link IConfigurationElement} for a 'tracingComponent' extension.
+	 * @return Returns a {@link TracingComponent} object based on the information in the specified
+	 *         {@link IConfigurationElement}.
+	 */
+	public TracingComponent getTracingComponent(final IConfigurationElement element) {
+		TracingComponent component = null;
+		if (element != null) {
+			String id = element.getAttribute(TracingConstants.TRACING_EXTENSION_ID_ATTRIBUTE);
+			if (id != null) {
+				component = fComponentCollection.get(id);
+				if (component == null) {
+					// create a new tracing component since one doesn't exist with this id
+					component = new TracingComponent(element);
+					fComponentCollection.put(id, component);
+				} else {
+					// A tracing component already exists with this id. Add the bundles provided by
+					// the new component to the existing one.
+					component.addBundles(element);
+					// update the label (if necessary)
+					final String newComponentLabel = element.getAttribute(TracingConstants.TRACING_EXTENSION_LABEL_ATTRIBUTE);
+					if (newComponentLabel != null) {
+						component.setLabel(newComponentLabel);
+					}
+				}
+			}
+		}
+		return component;
+	}
+
+	/**
+	 * Accessor for a {@link Properties} of debug options where the key of the {@link Properties} is the debug option
+	 * path and the value of the {@link Properties} is the debug option value. If the debug options for a specific
+	 * {@link Bundle} have not been accessed then it will attempt to read in all of the entries defined in the .options
+	 * file for this bundle.
+	 *
+	 * @param bundle
+	 *            The {@link Bundle} to access the debug options defined for it.
+	 * @return A {@link Properties} of debug options where the key of the {@link Properties} is the debug option path
+	 *         and the value of the {@link Properties} is the debug option value.
+	 */
+	public Properties getDebugOptions(final Bundle bundle) {
+		Properties results = null;
+		if (bundle != null) {
+			results = fBundleOptionsCollection.get(bundle);
+			if (results == null) {
+				// this bundle has not been processed yet - so do it now.
+				results = TracingUtils.loadOptionsFromBundle(bundle);
+				// and store the results
+				fBundleOptionsCollection.put(bundle, results);
+			}
+		}
+		return results;
+	}
+
+	/**
+	 * Set the consumed state of the specified {@link Bundle}.
+	 *
+	 * @param bundle
+	 *            The {@link Bundle} to set the consumed state on.
+	 * @param consumed
+	 *            Is this bundle consumed by another tracing component?
+	 */
+	public void setBundleIsConsumed(final Bundle bundle, final boolean consumed) {
+		if (bundle != null) {
+			fBundleConsumedCollection.put(bundle, Boolean.valueOf(consumed));
+		}
+	}
+
+	/**
+	 * Accessor to find out if a specific bundle has been consumed by a tracing component.
+	 *
+	 * @param bundle
+	 *            The {@link Bundle} to check.
+	 * @return Returns true if this bundle has been previous consumed by another tracing component. Otherwise, false is
+	 *         returned.
+	 */
+	public boolean isBundleConsumed(final Bundle bundle) {
+		boolean result = false;
+		if (bundle != null) {
+			Boolean isConsumed = fBundleConsumedCollection.get(bundle);
+			if (isConsumed != null) {
+				result = isConsumed.booleanValue();
+			}
+		}
+		return result;
+	}
+
+	/**
+	 * Store that the specified {@link Bundle} has been added to the specified {@link TracingComponent}.
+	 *
+	 * @param component
+	 *            The {@link TracingComponent} that includes the specified {@link Bundle}.
+	 * @param bundle
+	 *            The {@link Bundle} included in the specified {@link TracingComponent}.
+	 */
+	public void storeBundleInComponent(final TracingComponent component, final Bundle bundle) {
+		if ((bundle != null) &amp;&amp; (component != null)) {
+			List<TracingComponent> components = fBundleComponentCollection.get(bundle);
+			if (components == null) {
+				components = new ArrayList<TracingComponent>();
+				fBundleComponentCollection.put(bundle, components);
+			}
+			components.add(component);
+		}
+	}
+
+	/**
+	 * Accessor for an array of {@link TracingComponent} objects that contain the specified {@link Bundle}.
+	 *
+	 * @param bundle
+	 *            The {@link Bundle} used to locate the {@link TracingComponent} that include it.
+	 * @return An array of {@link TracingComponent} objects that contain the specified {@link Bundle}.
+	 */
+	public TracingComponent[] getComponentsContainingBundle(final Bundle bundle) {
+		List<TracingComponent> components = null;
+		if (bundle != null) {
+			components = fBundleComponentCollection.get(bundle);
+		}
+		if (components == null) {
+			components = Collections.emptyList();
+		}
+		return components.toArray(new TracingComponent[components.size()]);
+	}
+
+	/**
+	 * Clear the various collections
+	 */
+	public final void clear() {
+		fComponentCollection.clear();
+		fDebugOptionCollection.clear();
+		fBundleOptionsCollection.clear();
+		fBundleConsumedCollection.clear();
+		fBundleComponentCollection.clear();
+	}
+
+	/** The debug options {@link ModifiedDebugOptions} added or removed */
+	private ModifiedDebugOptions fModifiedDebugOptions = null;
+
+	/** A collection of {@link TracingComponent} entries that are constructed for a specific {@link String} id. */
+	private Map<String, TracingComponent> fComponentCollection = null;
+
+	/**
+	 * A collection of {@link TracingComponentDebugOption} entries that are constructed for a specific {@link String}
+	 * option-path name.
+	 */
+	private Map<String, List<TracingComponentDebugOption>> fDebugOptionCollection = null;
+
+	/** A collection of {@link Properties} entries which contain the various tracing strings for a specific {@link Bundle}. */
+	private Map<Bundle, Properties> fBundleOptionsCollection = null;
+
+	/**
+	 * A collection of {@link Bundle} entries with a {@link Boolean} value to state if it is a consumed by any tracing
+	 * component.
+	 */
+	private Map<Bundle, Boolean> fBundleConsumedCollection = null;
+
+	/**
+	 * A collection of {@link Bundle} entries with a {@link List} of the {@link TracingComponent}'s (i.e. components that
+	 * contain this bundle)
+	 */
+	private Map<Bundle, List<TracingComponent>> fBundleComponentCollection = null;
+
+	/** The singleton instance of this class */
+	private static TracingCollections instance = null;
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingComponent.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingComponent.java
位置:  -1,299 +1,299  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.datamodel;
-
-import java.util.*;
-import org.eclipse.core.runtime.IConfigurationElement;
-import org.eclipse.ui.trace.internal.Messages;
-import org.eclipse.ui.trace.internal.TracingUIActivator;
-import org.eclipse.ui.trace.internal.utils.DebugOptionsHandler;
-import org.eclipse.ui.trace.internal.utils.TracingConstants;
-import org.osgi.framework.Bundle;
-
-/**
- * A tracing component contains all of the information retrieved via the 'tracingComponent' extension point.
- */
-public class TracingComponent extends AbstractTracingNode {
-
-	/**
-	 * Constructor for a new {@link TracingComponent}
-	 *
-	 * @param element
-	 *            A non-null configuration element
-	 */
-	public TracingComponent(IConfigurationElement element) {
-		super();
-		assert (element != null);
-		// set the id
-		id = element.getAttribute(TracingConstants.TRACING_EXTENSION_ID_ATTRIBUTE);
-		// set the label
-		setLabel(element.getAttribute(TracingConstants.TRACING_EXTENSION_LABEL_ATTRIBUTE));
-		// set the bundles
-		bundles = new ArrayList<Bundle>();
-		addBundles(element);
-	}
-
-	@Override
-	public int hashCode() {
-		final int prime = 31;
-		int result = 1;
-		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
-		return result;
-	}
-
-	@Override
-	public boolean equals(final Object obj) {
-
-		if (this == obj) {
-			return true;
-		}
-		if (obj == null) {
-			return false;
-		}
-		if (!(obj instanceof TracingComponent)) {
-			return false;
-		}
-		TracingComponent other = (TracingComponent) obj;
-		if (getId() == null) {
-			if (other.getId() != null) {
-				return false;
-			}
-		} else if (!getId().equals(other.getId())) {
-			return false;
-		}
-		return true;
-	}
-
-	@Override
-	public String toString() {
-
-		final StringBuilder builder = new StringBuilder();
-		builder.append(
-		builder.append(id);
-		builder.append(
-		builder.append(getLabel());
-		builder.append(
-		builder.append(bundles.size());
-		builder.append(
-		return builder.toString();
-	}
-
-	/*
-	 * (non-Javadoc)
-	 * @see org.eclipse.ui.trace.internal.datamodel.AbstractTracingNode#isEnabled()
-	 */
-	public boolean isEnabled() {
-
-		// a tracing component is enabled if all of its children are enabled
-		boolean isEnabled = true;
-		final TracingComponentDebugOption[] componentChildren = this.getChildren();
-		if (componentChildren.length > 0) {
-			for (int i = 0; i < componentChildren.length; i++) {
-				if (!componentChildren[i].isEnabled()) {
-					isEnabled = false;
-					break;
-				}
-			}
-		} else {
-			isEnabled = false;
-		}
-		return isEnabled;
-	}
-
-	@Override
-	protected void populateChildren() {
-		// Iterate over each bundle and populate the list of {@link TracingComponentDebugOption} objects.
-		if (bundles.size() > 0) {
-			// get all debug options (this ensures that the disabled debug options are used when populating)
-			final Map<?, ?> currentDebugOptions = DebugOptionsHandler.getDebugOptions().getOptions();
-			final Iterator<Bundle> bundleIterator = bundles.iterator();
-			while (bundleIterator.hasNext()) {
-				Bundle bundle = bundleIterator.next();
-				Properties options = TracingCollections.getInstance().getDebugOptions(bundle);
-				if (options.size() > 0) {
-					// this bundle has debug options - loop over each one and build a TracingComponentDebugOption for it
-					Iterator<Map.Entry<Object, Object>> optionsIterator = options.entrySet().iterator();
-					while (optionsIterator.hasNext()) {
-						Map.Entry<Object, Object> option = optionsIterator.next();
-						// check to see if this debug option already exists in the cache
-						String key = (String) option.getKey();
-						String value = (String) option.getValue();
-						final String debugOptionValue = (String) currentDebugOptions.get(key);
-						String finalValue = null;
-						if (debugOptionValue != null) {
-							// This entry is already in the debug options - so use its value.
-							finalValue = debugOptionValue;
-						} else {
-							// create a TracingComponentDebugOption for this entry
-							final TracingComponentDebugOption[] debugOptions = TracingCollections.getInstance().getTracingDebugOptions(key);
-							if (debugOptions.length > 0) {
-								// An existing tracing debug option has already been created but it does not
-								// exist in the debug options (yet). Use the value of this existing debug option
-								// despite what the .option file may say to ensure the initial value of all debug
-								// options are the same.
-								finalValue = debugOptions[0].getOptionPathValue();
-							} else {
-								// An existing tracing debug option does not exist nor does it exist in the
-								// debug options (yet). Use the value read in from the .options file.
-								finalValue = value;
-							}
-						}
-						// create the TracingComponentDebugOption object
-						final TracingComponentDebugOption newDebugOption = new TracingComponentDebugOption(key, finalValue);
-						newDebugOption.setParent(this);
-						// and cache it
-						TracingCollections.getInstance().storeTracingDebugOption(newDebugOption);
-					}
-				}
-			}
-		}
-	}
-
-	@Override
-	public TracingComponentDebugOption[] getChildren() {
-
-		final TracingNode[] componentChildren = super.getChildren();
-		// each element will be a TracingComponentDebugOption
-		final TracingComponentDebugOption[] debugOptions = new TracingComponentDebugOption[componentChildren.length];
-		for (int i = 0; i < componentChildren.length; i++) {
-			debugOptions[i] = (TracingComponentDebugOption) componentChildren[i];
-		}
-		return debugOptions;
-	}
-
-	/**
-	 * Add a set of bundles that match the specified name to the list of bundles.
-	 *
-	 * @param name
-	 *            A name of a bundle to add. It could be a regular expression.
-	 */
-	private void addBundle(final String name, final boolean consumed, final Bundle[] allBundles) {
-		if (name != null) {
-			for (int bundleIndex = 0; bundleIndex < allBundles.length; bundleIndex++) {
-				String symbolicName = allBundles[bundleIndex].getSymbolicName();
-				if ((symbolicName != null) &amp;&amp; symbolicName.matches(name)) {
-					if (!TracingCollections.getInstance().isBundleConsumed(allBundles[bundleIndex])) {
-						// this bundle has not been consumed by any other component yet so include it here.
-						bundles.add(allBundles[bundleIndex]);
-						// cache that this bundle is in this component
-						TracingCollections.getInstance().storeBundleInComponent(this, allBundles[bundleIndex]);
-						// check to see if this bundle is being consumed (meaning that this bundle should not appear in
-						// any other tracing component
-						if (consumed) {
-							// tell the cache that this bundle is consumed
-							TracingCollections.getInstance().setBundleIsConsumed(allBundles[bundleIndex], consumed);
-							// remove this bundle from any other tracing component that is including it (except this
-							// component)
-							TracingComponent[] components = TracingCollections.getInstance().getComponentsContainingBundle(allBundles[bundleIndex]);
-							for (int componentIndex = 0; componentIndex < components.length; componentIndex++) {
-								if (!components[componentIndex].equals(this)) {
-									components[componentIndex].removeBundle(allBundles[bundleIndex]);
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-	}
-
-	/**
-	 * Add the bundles found in the specified {@link IConfigurationElement} instance to this {@link TracingComponent}.
-	 *
-	 * @param element
-	 *            A non-null {@link IConfigurationElement} instance of the 'tracingComponent'
-	 */
-	public void addBundles(final IConfigurationElement element) {
-		assert (element != null);
-		final IConfigurationElement[] componentChildren = element.getChildren();
-		final Bundle[] installedBundles = TracingUIActivator.getDefault().getBundle().getBundleContext().getBundles();
-		for (IConfigurationElement child : componentChildren) {
-			if (child.getName().equals(TracingConstants.TRACING_EXTENSION_BUNDLE_ATTRIBUTE)) {
-				String name = child.getAttribute(TracingConstants.TRACING_EXTENSION_BUNDLE_NAME_ATTRIBUTE);
-				boolean consumed = Boolean.parseBoolean(child.getAttribute(TracingConstants.TRACING_EXTENSION_BUNDLE_CONSUMED_ATTRIBUTE));
-				this.addBundle(name, consumed, installedBundles);
-			}
-		}
-	}
-
-	/**
-	 * Add a set of bundles that match the specified name to the list of bundles.
-	 *
-	 * @param name
-	 *            A name of a bundle to add. It could be a regular expression.
-	 * @param isConsumed
-	 *            Is this bundle consumed by this {@link TracingComponent}
-	 */
-	public void addBundle(final String name, final boolean isConsumed) {
-		if (name != null) {
-			final Bundle[] installedBundles = TracingUIActivator.getDefault().getBundle().getBundleContext().getBundles();
-			addBundle(name, isConsumed, installedBundles);
-		}
-	}
-
-	/**
-	 * Removes a specific bundle from from the list of bundles
-	 *
-	 * @param bundle
-	 *            A {@link Bundle} to remove from the set of bundles belonging to this {@link TracingComponent}
-	 */
-	public void removeBundle(final Bundle bundle) {
-		if (bundle != null) {
-			bundles.remove(bundle);
-		}
-	}
-
-	/**
-	 * A {@link TracingComponent} is consumed if it contributes no bundles.
-	 *
-	 * @return Returns true if this {@link TracingComponent} contains no bundles; Otherwise, false is returned.
-	 */
-	public boolean isConsumed() {
-		return this.bundles.size() <= 0;
-	}
-
-	/**
-	 * Accessor for the id value for this {@link TracingComponent}
-	 *
-	 * @return The id value for this {@link TracingComponent}
-	 */
-	public String getId() {
-		return id;
-	}
-
-	/**
-	 * Accessor for an array of the {@link Bundle} objects for which this {@link TracingComponent} provides tracing
-	 * options.
-	 *
-	 * @return A {@link Bundle} array
-	 */
-	public Bundle[] getBundles() {
-		return bundles.toArray(new Bundle[this.bundles.size()]);
-	}
-
-	@Override
-	public String getLabel() {
-		String componentLabel = label;
-		if (componentLabel == null) {
-			componentLabel = Messages.missingLabelValue;
-		}
-		return componentLabel;
-	}
-
-	/** The 'id' of this {@link TracingComponent} */
-	private String id = null;
-
-	/** A list of bundles included in this {@link TracingComponent} */
-	private List<Bundle> bundles = null;
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.datamodel;
+
+import java.util.*;
+import org.eclipse.core.runtime.IConfigurationElement;
+import org.eclipse.ui.trace.internal.Messages;
+import org.eclipse.ui.trace.internal.TracingUIActivator;
+import org.eclipse.ui.trace.internal.utils.DebugOptionsHandler;
+import org.eclipse.ui.trace.internal.utils.TracingConstants;
+import org.osgi.framework.Bundle;
+
+/**
+ * A tracing component contains all of the information retrieved via the 'tracingComponent' extension point.
+ */
+public class TracingComponent extends AbstractTracingNode {
+
+	/**
+	 * Constructor for a new {@link TracingComponent}
+	 *
+	 * @param element
+	 *            A non-null configuration element
+	 */
+	public TracingComponent(IConfigurationElement element) {
+		super();
+		assert (element != null);
+		// set the id
+		id = element.getAttribute(TracingConstants.TRACING_EXTENSION_ID_ATTRIBUTE);
+		// set the label
+		setLabel(element.getAttribute(TracingConstants.TRACING_EXTENSION_LABEL_ATTRIBUTE));
+		// set the bundles
+		bundles = new ArrayList<Bundle>();
+		addBundles(element);
+	}
+
+	@Override
+	public int hashCode() {
+		final int prime = 31;
+		int result = 1;
+		result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
+		return result;
+	}
+
+	@Override
+	public boolean equals(final Object obj) {
+
+		if (this == obj) {
+			return true;
+		}
+		if (obj == null) {
+			return false;
+		}
+		if (!(obj instanceof TracingComponent)) {
+			return false;
+		}
+		TracingComponent other = (TracingComponent) obj;
+		if (getId() == null) {
+			if (other.getId() != null) {
+				return false;
+			}
+		} else if (!getId().equals(other.getId())) {
+			return false;
+		}
+		return true;
+	}
+
+	@Override
+	public String toString() {
+
+		final StringBuilder builder = new StringBuilder();
+		builder.append(
+		builder.append(id);
+		builder.append(
+		builder.append(getLabel());
+		builder.append(
+		builder.append(bundles.size());
+		builder.append(
+		return builder.toString();
+	}
+
+	/*
+	 * (non-Javadoc)
+	 * @see org.eclipse.ui.trace.internal.datamodel.AbstractTracingNode#isEnabled()
+	 */
+	public boolean isEnabled() {
+
+		// a tracing component is enabled if all of its children are enabled
+		boolean isEnabled = true;
+		final TracingComponentDebugOption[] componentChildren = this.getChildren();
+		if (componentChildren.length > 0) {
+			for (int i = 0; i < componentChildren.length; i++) {
+				if (!componentChildren[i].isEnabled()) {
+					isEnabled = false;
+					break;
+				}
+			}
+		} else {
+			isEnabled = false;
+		}
+		return isEnabled;
+	}
+
+	@Override
+	protected void populateChildren() {
+		// Iterate over each bundle and populate the list of {@link TracingComponentDebugOption} objects.
+		if (bundles.size() > 0) {
+			// get all debug options (this ensures that the disabled debug options are used when populating)
+			final Map<?, ?> currentDebugOptions = DebugOptionsHandler.getDebugOptions().getOptions();
+			final Iterator<Bundle> bundleIterator = bundles.iterator();
+			while (bundleIterator.hasNext()) {
+				Bundle bundle = bundleIterator.next();
+				Properties options = TracingCollections.getInstance().getDebugOptions(bundle);
+				if (options.size() > 0) {
+					// this bundle has debug options - loop over each one and build a TracingComponentDebugOption for it
+					Iterator<Map.Entry<Object, Object>> optionsIterator = options.entrySet().iterator();
+					while (optionsIterator.hasNext()) {
+						Map.Entry<Object, Object> option = optionsIterator.next();
+						// check to see if this debug option already exists in the cache
+						String key = (String) option.getKey();
+						String value = (String) option.getValue();
+						final String debugOptionValue = (String) currentDebugOptions.get(key);
+						String finalValue = null;
+						if (debugOptionValue != null) {
+							// This entry is already in the debug options - so use its value.
+							finalValue = debugOptionValue;
+						} else {
+							// create a TracingComponentDebugOption for this entry
+							final TracingComponentDebugOption[] debugOptions = TracingCollections.getInstance().getTracingDebugOptions(key);
+							if (debugOptions.length > 0) {
+								// An existing tracing debug option has already been created but it does not
+								// exist in the debug options (yet). Use the value of this existing debug option
+								// despite what the .option file may say to ensure the initial value of all debug
+								// options are the same.
+								finalValue = debugOptions[0].getOptionPathValue();
+							} else {
+								// An existing tracing debug option does not exist nor does it exist in the
+								// debug options (yet). Use the value read in from the .options file.
+								finalValue = value;
+							}
+						}
+						// create the TracingComponentDebugOption object
+						final TracingComponentDebugOption newDebugOption = new TracingComponentDebugOption(key, finalValue);
+						newDebugOption.setParent(this);
+						// and cache it
+						TracingCollections.getInstance().storeTracingDebugOption(newDebugOption);
+					}
+				}
+			}
+		}
+	}
+
+	@Override
+	public TracingComponentDebugOption[] getChildren() {
+
+		final TracingNode[] componentChildren = super.getChildren();
+		// each element will be a TracingComponentDebugOption
+		final TracingComponentDebugOption[] debugOptions = new TracingComponentDebugOption[componentChildren.length];
+		for (int i = 0; i < componentChildren.length; i++) {
+			debugOptions[i] = (TracingComponentDebugOption) componentChildren[i];
+		}
+		return debugOptions;
+	}
+
+	/**
+	 * Add a set of bundles that match the specified name to the list of bundles.
+	 *
+	 * @param name
+	 *            A name of a bundle to add. It could be a regular expression.
+	 */
+	private void addBundle(final String name, final boolean consumed, final Bundle[] allBundles) {
+		if (name != null) {
+			for (int bundleIndex = 0; bundleIndex < allBundles.length; bundleIndex++) {
+				String symbolicName = allBundles[bundleIndex].getSymbolicName();
+				if ((symbolicName != null) &amp;&amp; symbolicName.matches(name)) {
+					if (!TracingCollections.getInstance().isBundleConsumed(allBundles[bundleIndex])) {
+						// this bundle has not been consumed by any other component yet so include it here.
+						bundles.add(allBundles[bundleIndex]);
+						// cache that this bundle is in this component
+						TracingCollections.getInstance().storeBundleInComponent(this, allBundles[bundleIndex]);
+						// check to see if this bundle is being consumed (meaning that this bundle should not appear in
+						// any other tracing component
+						if (consumed) {
+							// tell the cache that this bundle is consumed
+							TracingCollections.getInstance().setBundleIsConsumed(allBundles[bundleIndex], consumed);
+							// remove this bundle from any other tracing component that is including it (except this
+							// component)
+							TracingComponent[] components = TracingCollections.getInstance().getComponentsContainingBundle(allBundles[bundleIndex]);
+							for (int componentIndex = 0; componentIndex < components.length; componentIndex++) {
+								if (!components[componentIndex].equals(this)) {
+									components[componentIndex].removeBundle(allBundles[bundleIndex]);
+								}
+							}
+						}
+					}
+				}
+			}
+		}
+	}
+
+	/**
+	 * Add the bundles found in the specified {@link IConfigurationElement} instance to this {@link TracingComponent}.
+	 *
+	 * @param element
+	 *            A non-null {@link IConfigurationElement} instance of the 'tracingComponent'
+	 */
+	public void addBundles(final IConfigurationElement element) {
+		assert (element != null);
+		final IConfigurationElement[] componentChildren = element.getChildren();
+		final Bundle[] installedBundles = TracingUIActivator.getDefault().getBundle().getBundleContext().getBundles();
+		for (IConfigurationElement child : componentChildren) {
+			if (child.getName().equals(TracingConstants.TRACING_EXTENSION_BUNDLE_ATTRIBUTE)) {
+				String name = child.getAttribute(TracingConstants.TRACING_EXTENSION_BUNDLE_NAME_ATTRIBUTE);
+				boolean consumed = Boolean.parseBoolean(child.getAttribute(TracingConstants.TRACING_EXTENSION_BUNDLE_CONSUMED_ATTRIBUTE));
+				this.addBundle(name, consumed, installedBundles);
+			}
+		}
+	}
+
+	/**
+	 * Add a set of bundles that match the specified name to the list of bundles.
+	 *
+	 * @param name
+	 *            A name of a bundle to add. It could be a regular expression.
+	 * @param isConsumed
+	 *            Is this bundle consumed by this {@link TracingComponent}
+	 */
+	public void addBundle(final String name, final boolean isConsumed) {
+		if (name != null) {
+			final Bundle[] installedBundles = TracingUIActivator.getDefault().getBundle().getBundleContext().getBundles();
+			addBundle(name, isConsumed, installedBundles);
+		}
+	}
+
+	/**
+	 * Removes a specific bundle from from the list of bundles
+	 *
+	 * @param bundle
+	 *            A {@link Bundle} to remove from the set of bundles belonging to this {@link TracingComponent}
+	 */
+	public void removeBundle(final Bundle bundle) {
+		if (bundle != null) {
+			bundles.remove(bundle);
+		}
+	}
+
+	/**
+	 * A {@link TracingComponent} is consumed if it contributes no bundles.
+	 *
+	 * @return Returns true if this {@link TracingComponent} contains no bundles; Otherwise, false is returned.
+	 */
+	public boolean isConsumed() {
+		return this.bundles.size() <= 0;
+	}
+
+	/**
+	 * Accessor for the id value for this {@link TracingComponent}
+	 *
+	 * @return The id value for this {@link TracingComponent}
+	 */
+	public String getId() {
+		return id;
+	}
+
+	/**
+	 * Accessor for an array of the {@link Bundle} objects for which this {@link TracingComponent} provides tracing
+	 * options.
+	 *
+	 * @return A {@link Bundle} array
+	 */
+	public Bundle[] getBundles() {
+		return bundles.toArray(new Bundle[this.bundles.size()]);
+	}
+
+	@Override
+	public String getLabel() {
+		String componentLabel = label;
+		if (componentLabel == null) {
+			componentLabel = Messages.missingLabelValue;
+		}
+		return componentLabel;
+	}
+
+	/** The 'id' of this {@link TracingComponent} */
+	private String id = null;
+
+	/** A list of bundles included in this {@link TracingComponent} */
+	private List<Bundle> bundles = null;
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingComponentDebugOption.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingComponentDebugOption.java
位置:  -1,206 +1,206  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.datamodel;
-
-import org.eclipse.ui.trace.internal.utils.DebugOptionsHandler;
-import org.eclipse.ui.trace.internal.utils.TracingUtils;
-
-/**
- * A debug option tracing component is a tree node that contains the option-path and value for a single debug option. A
- * debug option can have a {@link TracingComponent} or another {@link TracingComponentDebugOption} as a parent.
- */
-public class TracingComponentDebugOption extends AbstractTracingNode {
-
-	/**
-	 * Construct a new {@link TracingComponentDebugOption} that does not have a parent node set. A parent node is
-	 * required for all {@link TracingComponentDebugOption} instances but can be set at a later time via
-	 * {@link TracingComponentDebugOption#setParent(TracingNode)}.
-	 *
-	 * @param path
-	 *            A non-null path for this debug option
-	 * @param value
-	 *            A non-null value for this debug option
-	 */
-	public TracingComponentDebugOption(final String path, final String value) {
-		this(null, path, value);
-	}
-
-	/**
-	 * Constructor for a new {@link TracingComponentDebugOption} for a specific parent node.
-	 *
-	 * @param parentNode
-	 *            The parent {@link TracingNode} for this {@link TracingComponentDebugOption}
-	 * @param path
-	 *            A non-null path for this debug option
-	 * @param value
-	 *            A non-null value for this debug option
-	 */
-	public TracingComponentDebugOption(final TracingNode parentNode, final String path, final String value) {
-		super();
-		assert (path != null);
-		assert (value != null);
-		fOptionPath = path;
-		fOptionPathValue = value;
-		setParent(parentNode);
-		setLabel(path);
-	}
-
-	@Override
-	public String toString() {
-		final StringBuilder builder = new StringBuilder();
-		builder.append(
-		builder.append(fOptionPath);
-		builder.append(
-		builder.append(fOptionPathValue);
-		builder.append(
-		if (getParent() != null) {
-			builder.append(this.getParent());
-		} else {
-			builder.append(
-		}
-		builder.append(
-		return builder.toString();
-	}
-
-	/*
-	 * (non-Javadoc)
-	 *
-	 * @see java.lang.Object#hashCode()
-	 */
-	@Override
-	public int hashCode() {
-		final int prime = 31;
-		int result = 1;
-		result = prime * result + ((fOptionPath == null) ? 0 : fOptionPath.hashCode());
-		result = prime * result + ((getParent() == null) ? 0 : getParent().hashCode());
-		return result;
-	}
-
-	/*
-	 * (non-Javadoc)
-	 *
-	 * @see java.lang.Object#equals(java.lang.Object)
-	 */
-	@Override
-	public boolean equals(final Object obj) {
-		if (this == obj) {
-			return true;
-		}
-		if (obj == null) {
-			return false;
-		}
-		if (!(obj instanceof TracingComponentDebugOption)) {
-			return false;
-		}
-		TracingComponentDebugOption other = (TracingComponentDebugOption) obj;
-		if (fOptionPath == null) {
-			if (other.fOptionPath != null) {
-				return false;
-			}
-		} else if (!fOptionPath.equals(other.fOptionPath)) {
-			return false;
-		}
-		if (getParent() == null) {
-			if (other.getParent() != null) {
-				return false;
-			}
-		} else if (!getParent().equals(other.getParent())) {
-			return false;
-		}
-		return true;
-	}
-
-	/* (non-Javadoc)
-	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#isEnabled()
-	 */
-	public boolean isEnabled() {
-		boolean isEnabled = false;
-		if (TracingUtils.isValueBoolean(fOptionPathValue)) {
-			isEnabled = Boolean.parseBoolean(fOptionPathValue);
-		} else {
-			// a non-boolean debug option - enable it only if it exists in the DebugOptions
-			String value = DebugOptionsHandler.getDebugOptions().getOption(this.fOptionPath);
-			isEnabled = (value != null);
-		}
-		return isEnabled;
-	}
-
-	@Override
-	protected void populateChildren() {
-		// empty implementation - all work is done in TracingComponent#populateChildren()
-	}
-
-	/**
-	 * A {@link TracingComponentDebugOption} has no children
-	 */
-	@Override
-	public final TracingComponentDebugOption[] getChildren() {
-		return new TracingComponentDebugOption[0];
-	}
-
-	/**
-	 * Accessor to the debug option path (i.e. bundle/option-path) of this {@link TracingComponentDebugOption}
-	 *
-	 * @return the debug option path (i.e. bundle/option-path) of this {@link TracingComponentDebugOption}
-	 */
-	public String getOptionPath() {
-		return fOptionPath;
-	}
-
-	/**
-	 * Accessor to the debug option value of this {@link TracingComponentDebugOption}
-	 *
-	 * @return the debug option value of this {@link TracingComponentDebugOption}
-	 */
-	public String getOptionPathValue() {
-		return fOptionPathValue;
-	}
-
-	/**
-	 * Set the new option-path value
-	 *
-	 * @param newValue
-	 *            A non-null new {@link String} value of the option-path
-	 */
-	public void setOptionPathValue(final String newValue) {
-		assert (newValue != null);
-		fOptionPathValue = newValue;
-	}
-
-	/**
-	 * Set the new option-path value to the specified boolean value
-	 *
-	 * @param newValue
-	 *            A new boolean value of the option-path
-	 */
-	public void setOptionPathValue(final boolean newValue) {
-		fOptionPathValue = Boolean.toString(newValue);
-	}
-
-	@Override
-	public TracingComponentDebugOption clone() {
-		return new TracingComponentDebugOption(getParent(), fOptionPath, fOptionPathValue);
-	}
-
-	/**
-	 * The option-path - this value cannot change
-	 */
-	private final String fOptionPath;
-
-	/**
-	 * The value of the option-path - this value can change
-	 */
-	private String fOptionPathValue;
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.datamodel;
+
+import org.eclipse.ui.trace.internal.utils.DebugOptionsHandler;
+import org.eclipse.ui.trace.internal.utils.TracingUtils;
+
+/**
+ * A debug option tracing component is a tree node that contains the option-path and value for a single debug option. A
+ * debug option can have a {@link TracingComponent} or another {@link TracingComponentDebugOption} as a parent.
+ */
+public class TracingComponentDebugOption extends AbstractTracingNode {
+
+	/**
+	 * Construct a new {@link TracingComponentDebugOption} that does not have a parent node set. A parent node is
+	 * required for all {@link TracingComponentDebugOption} instances but can be set at a later time via
+	 * {@link TracingComponentDebugOption#setParent(TracingNode)}.
+	 *
+	 * @param path
+	 *            A non-null path for this debug option
+	 * @param value
+	 *            A non-null value for this debug option
+	 */
+	public TracingComponentDebugOption(final String path, final String value) {
+		this(null, path, value);
+	}
+
+	/**
+	 * Constructor for a new {@link TracingComponentDebugOption} for a specific parent node.
+	 *
+	 * @param parentNode
+	 *            The parent {@link TracingNode} for this {@link TracingComponentDebugOption}
+	 * @param path
+	 *            A non-null path for this debug option
+	 * @param value
+	 *            A non-null value for this debug option
+	 */
+	public TracingComponentDebugOption(final TracingNode parentNode, final String path, final String value) {
+		super();
+		assert (path != null);
+		assert (value != null);
+		fOptionPath = path;
+		fOptionPathValue = value;
+		setParent(parentNode);
+		setLabel(path);
+	}
+
+	@Override
+	public String toString() {
+		final StringBuilder builder = new StringBuilder();
+		builder.append(
+		builder.append(fOptionPath);
+		builder.append(
+		builder.append(fOptionPathValue);
+		builder.append(
+		if (getParent() != null) {
+			builder.append(this.getParent());
+		} else {
+			builder.append(
+		}
+		builder.append(
+		return builder.toString();
+	}
+
+	/*
+	 * (non-Javadoc)
+	 *
+	 * @see java.lang.Object#hashCode()
+	 */
+	@Override
+	public int hashCode() {
+		final int prime = 31;
+		int result = 1;
+		result = prime * result + ((fOptionPath == null) ? 0 : fOptionPath.hashCode());
+		result = prime * result + ((getParent() == null) ? 0 : getParent().hashCode());
+		return result;
+	}
+
+	/*
+	 * (non-Javadoc)
+	 *
+	 * @see java.lang.Object#equals(java.lang.Object)
+	 */
+	@Override
+	public boolean equals(final Object obj) {
+		if (this == obj) {
+			return true;
+		}
+		if (obj == null) {
+			return false;
+		}
+		if (!(obj instanceof TracingComponentDebugOption)) {
+			return false;
+		}
+		TracingComponentDebugOption other = (TracingComponentDebugOption) obj;
+		if (fOptionPath == null) {
+			if (other.fOptionPath != null) {
+				return false;
+			}
+		} else if (!fOptionPath.equals(other.fOptionPath)) {
+			return false;
+		}
+		if (getParent() == null) {
+			if (other.getParent() != null) {
+				return false;
+			}
+		} else if (!getParent().equals(other.getParent())) {
+			return false;
+		}
+		return true;
+	}
+
+	/* (non-Javadoc)
+	 * @see org.eclipse.ui.trace.internal.datamodel.TracingNode#isEnabled()
+	 */
+	public boolean isEnabled() {
+		boolean isEnabled = false;
+		if (TracingUtils.isValueBoolean(fOptionPathValue)) {
+			isEnabled = Boolean.parseBoolean(fOptionPathValue);
+		} else {
+			// a non-boolean debug option - enable it only if it exists in the DebugOptions
+			String value = DebugOptionsHandler.getDebugOptions().getOption(this.fOptionPath);
+			isEnabled = (value != null);
+		}
+		return isEnabled;
+	}
+
+	@Override
+	protected void populateChildren() {
+		// empty implementation - all work is done in TracingComponent#populateChildren()
+	}
+
+	/**
+	 * A {@link TracingComponentDebugOption} has no children
+	 */
+	@Override
+	public final TracingComponentDebugOption[] getChildren() {
+		return new TracingComponentDebugOption[0];
+	}
+
+	/**
+	 * Accessor to the debug option path (i.e. bundle/option-path) of this {@link TracingComponentDebugOption}
+	 *
+	 * @return the debug option path (i.e. bundle/option-path) of this {@link TracingComponentDebugOption}
+	 */
+	public String getOptionPath() {
+		return fOptionPath;
+	}
+
+	/**
+	 * Accessor to the debug option value of this {@link TracingComponentDebugOption}
+	 *
+	 * @return the debug option value of this {@link TracingComponentDebugOption}
+	 */
+	public String getOptionPathValue() {
+		return fOptionPathValue;
+	}
+
+	/**
+	 * Set the new option-path value
+	 *
+	 * @param newValue
+	 *            A non-null new {@link String} value of the option-path
+	 */
+	public void setOptionPathValue(final String newValue) {
+		assert (newValue != null);
+		fOptionPathValue = newValue;
+	}
+
+	/**
+	 * Set the new option-path value to the specified boolean value
+	 *
+	 * @param newValue
+	 *            A new boolean value of the option-path
+	 */
+	public void setOptionPathValue(final boolean newValue) {
+		fOptionPathValue = Boolean.toString(newValue);
+	}
+
+	@Override
+	public TracingComponentDebugOption clone() {
+		return new TracingComponentDebugOption(getParent(), fOptionPath, fOptionPathValue);
+	}
+
+	/**
+	 * The option-path - this value cannot change
+	 */
+	private final String fOptionPath;
+
+	/**
+	 * The value of the option-path - this value can change
+	 */
+	private String fOptionPathValue;
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingNode.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/datamodel/TracingNode.java
位置:  -1,83 +1,83  
-/*******************************************************************************
- * Copyright (c) 2011 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.datamodel;
-
-import org.eclipse.osgi.service.debug.DebugOptions;
-
-/**
- * The 'Product Tracing' page will display the tracing components as a tree. Each element in the tree will be
- * represented by a tracing node.
- */
-public interface TracingNode {
-
-	/**
-	 * Accessor to the label for this tree node
-	 *
-	 * @return Returns the label for this tree node.
-	 */
-	public String getLabel();
-
-	/**
-	 * Accessor for an array of {@link TracingNode} child nodes for this tree node.
-	 *
-	 * @return Returns an array of {@link TracingNode} child nodes for this tree node.
-	 */
-	public TracingNode[] getChildren();
-
-	/**
-	 * Accessor for the parent object of this tree node.
-	 *
-	 * @return Returns the parent {@link TracingNode} for this tree node or <code>null</code> if this tree node is the
-	 *         root of the tree.
-	 */
-	public TracingNode getParent();
-
-	/**
-	 * Setter for the label for this tree node
-	 *
-	 * @param newLabel
-	 *            The new text for this tree node to display
-	 */
-	public void setLabel(String newLabel);
-
-	/**
-	 * Setter for the parent node of this tree node
-	 *
-	 * @param newParent
-	 *            The new parent {@link TracingNode} for this tree node.
-	 */
-	public void setParent(TracingNode newParent);
-
-	/**
-	 * Add a new {@link TracingNode} child node to this tree node.
-	 *
-	 * @param newNode
-	 *            The new {@link TracingNode} node to add as a child to this tree node.
-	 */
-	public void addChild(TracingNode newNode);
-
-	/**
-	 * Does this tree node have any child nodes?
-	 *
-	 * @return Returns <code>true</code> if this tree node has child nodes; Otherwise, <code>false</code> is returned.
-	 */
-	public boolean hasChildren();
-
-	/**
-	 * Is the tracing value for this node enabled in the {@link DebugOptions}
-	 *
-	 * @return Returns true if this tracing value is set in the {@link DebugOptions}; Otherwise, false is returned.
-	 */
-	public boolean isEnabled();
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.datamodel;
+
+import org.eclipse.osgi.service.debug.DebugOptions;
+
+/**
+ * The 'Product Tracing' page will display the tracing components as a tree. Each element in the tree will be
+ * represented by a tracing node.
+ */
+public interface TracingNode {
+
+	/**
+	 * Accessor to the label for this tree node
+	 *
+	 * @return Returns the label for this tree node.
+	 */
+	public String getLabel();
+
+	/**
+	 * Accessor for an array of {@link TracingNode} child nodes for this tree node.
+	 *
+	 * @return Returns an array of {@link TracingNode} child nodes for this tree node.
+	 */
+	public TracingNode[] getChildren();
+
+	/**
+	 * Accessor for the parent object of this tree node.
+	 *
+	 * @return Returns the parent {@link TracingNode} for this tree node or <code>null</code> if this tree node is the
+	 *         root of the tree.
+	 */
+	public TracingNode getParent();
+
+	/**
+	 * Setter for the label for this tree node
+	 *
+	 * @param newLabel
+	 *            The new text for this tree node to display
+	 */
+	public void setLabel(String newLabel);
+
+	/**
+	 * Setter for the parent node of this tree node
+	 *
+	 * @param newParent
+	 *            The new parent {@link TracingNode} for this tree node.
+	 */
+	public void setParent(TracingNode newParent);
+
+	/**
+	 * Add a new {@link TracingNode} child node to this tree node.
+	 *
+	 * @param newNode
+	 *            The new {@link TracingNode} node to add as a child to this tree node.
+	 */
+	public void addChild(TracingNode newNode);
+
+	/**
+	 * Does this tree node have any child nodes?
+	 *
+	 * @return Returns <code>true</code> if this tree node has child nodes; Otherwise, <code>false</code> is returned.
+	 */
+	public boolean hasChildren();
+
+	/**
+	 * Is the tracing value for this node enabled in the {@link DebugOptions}
+	 *
+	 * @return Returns true if this tracing value is set in the {@link DebugOptions}; Otherwise, false is returned.
+	 */
+	public boolean isEnabled();
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/messages.properties 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/messages.properties
位置:  -1,32 +1,32  
-###############################################################################
-# Copyright (c) 2011, 2012 IBM Corporation and others.
-#
-# This program and the accompanying materials
-# are made available under the terms of the Eclipse Public License 2.0
-# which accompanies this distribution, and is available at
-# https://www.eclipse.org/legal/epl-2.0/
-#
-# SPDX-License-Identifier: EPL-2.0
-#
-# Contributors:
-#     IBM Corporation - initial API and implementation
-###############################################################################
-missingLabelValue=<Missing Label>
-tracingTreeTile=&amp;Tracing Options:
-preferencePageDescription=Modify the tracing options that a plug-in offers.
-enableTracingButtonLabel=&amp;Enable tracing
-columnHeaderTracingString=Tracing Option
-columnHeaderTracingValue=Value
-filterSearchText=Search for a trace string
-tracingOptionsGroup=Tracing output
-tracingFileLabel=&amp;Output to file:
-tracingFileBrowseButton=B&amp;rowse...
-tracingFileMaxCountLabel=&amp;Number of trace files stored:
-tracingFileMaxSizeLabel=Trace &amp;file size (KB):
-tracingFileInvalid=An empty tracing file is not valid
-tracingFileInvalidMaxSize=Invalid integer value for the maximum file size 
-tracingFileInvalidMaxCount=Invalid integer value for the maximum number of backup trace files
-TracingComponentColumnEditingSupport_false=false
-TracingComponentColumnEditingSupport_true=true
-TracingPreferencePageStandardOutput=O&amp;utput to standard output stream
-TracingPreferencePage_applicationLaunchedInDebugModeWarning=This application was launched in debug mode with a tracing options file. You can override the current settings by enabling tracing below.
+###############################################################################
+# Copyright (c) 2011, 2012 IBM Corporation and others.
+#
+# This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License 2.0
+# which accompanies this distribution, and is available at
+# https://www.eclipse.org/legal/epl-2.0/
+#
+# SPDX-License-Identifier: EPL-2.0
+#
+# Contributors:
+#     IBM Corporation - initial API and implementation
+###############################################################################
+missingLabelValue=<Missing Label>
+tracingTreeTile=&amp;Tracing Options:
+preferencePageDescription=Modify the tracing options that a plug-in offers.
+enableTracingButtonLabel=&amp;Enable tracing
+columnHeaderTracingString=Tracing Option
+columnHeaderTracingValue=Value
+filterSearchText=Search for a trace string
+tracingOptionsGroup=Tracing output
+tracingFileLabel=&amp;Output to file:
+tracingFileBrowseButton=B&amp;rowse...
+tracingFileMaxCountLabel=&amp;Number of trace files stored:
+tracingFileMaxSizeLabel=Trace &amp;file size (KB):
+tracingFileInvalid=An empty tracing file is not valid
+tracingFileInvalidMaxSize=Invalid integer value for the maximum file size 
+tracingFileInvalidMaxCount=Invalid integer value for the maximum number of backup trace files
+TracingComponentColumnEditingSupport_false=false
+TracingComponentColumnEditingSupport_true=true
+TracingPreferencePageStandardOutput=O&amp;utput to standard output stream
+TracingPreferencePage_applicationLaunchedInDebugModeWarning=This application was launched in debug mode with a tracing options file. You can override the current settings by enabling tracing below.

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/providers/TracingComponentColumnLabelProvider.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/providers/TracingComponentColumnLabelProvider.java
位置:  -1,48 +1,48  
-/*******************************************************************************
- * Copyright (c) 2011 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.providers;
-
-import org.eclipse.jface.viewers.ColumnLabelProvider;
-import org.eclipse.ui.trace.internal.utils.TracingConstants;
-
-/**
- * A label provide object for the tracing UI viewers columns.
- */
-public class TracingComponentColumnLabelProvider extends ColumnLabelProvider {
-
-	/**
-	 * Construct a new {@link TracingComponentColumnLabelProvider} for the specified index.
-	 *
-	 * @param index
-	 *            The column index. One of either {@link TracingConstants#LABEL_COLUMN_INDEX} for the label column or
-	 *            {@link TracingConstants#VALUE_COLUMN_INDEX} for the value column.
-	 */
-	public TracingComponentColumnLabelProvider(final int index) {
-
-		super();
-		this.columnIndex = index;
-	}
-
-	@Override
-	public String getText(final Object element) {
-
-		return TracingComponentLabelProvider.getLabel(this.columnIndex, element);
-	}
-
-	/**
-	 * The column index. One of {@link TracingConstants#LABEL_COLUMN_INDEX} or
-	 * {@link TracingConstants#VALUE_COLUMN_INDEX}
-	 */
-	private int columnIndex;
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.providers;
+
+import org.eclipse.jface.viewers.ColumnLabelProvider;
+import org.eclipse.ui.trace.internal.utils.TracingConstants;
+
+/**
+ * A label provide object for the tracing UI viewers columns.
+ */
+public class TracingComponentColumnLabelProvider extends ColumnLabelProvider {
+
+	/**
+	 * Construct a new {@link TracingComponentColumnLabelProvider} for the specified index.
+	 *
+	 * @param index
+	 *            The column index. One of either {@link TracingConstants#LABEL_COLUMN_INDEX} for the label column or
+	 *            {@link TracingConstants#VALUE_COLUMN_INDEX} for the value column.
+	 */
+	public TracingComponentColumnLabelProvider(final int index) {
+
+		super();
+		this.columnIndex = index;
+	}
+
+	@Override
+	public String getText(final Object element) {
+
+		return TracingComponentLabelProvider.getLabel(this.columnIndex, element);
+	}
+
+	/**
+	 * The column index. One of {@link TracingConstants#LABEL_COLUMN_INDEX} or
+	 * {@link TracingConstants#VALUE_COLUMN_INDEX}
+	 */
+	private int columnIndex;
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/providers/TracingComponentContentProvider.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/providers/TracingComponentContentProvider.java
位置:  -1,67 +1,67  
-/*******************************************************************************
- * Copyright (c) 2011 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.providers;
-
-import java.util.Collection;
-import org.eclipse.jface.viewers.ITreeContentProvider;
-import org.eclipse.ui.trace.internal.datamodel.TracingNode;
-
-/**
- * An {@link ITreeContentProvider} implementation for providing the content to display in the tracing viewer
- */
-public class TracingComponentContentProvider implements ITreeContentProvider {
-
-	public TracingNode[] getChildren(final Object parentElement) {
-
-		TracingNode[] children = null;
-		if (parentElement instanceof TracingNode) {
-			final TracingNode node = (TracingNode) parentElement;
-			children = node.getChildren();
-		}
-		return children;
-	}
-
-	public boolean hasChildren(final Object element) {
-
-		boolean hasChildren = false;
-		if ((element != null) &amp;&amp; (element instanceof TracingNode)) {
-			hasChildren = ((TracingNode) element).hasChildren();
-		}
-		return hasChildren;
-	}
-
-	public Object[] getElements(final Object inputElement) {
-
-		TracingNode results[] = null;
-		if (inputElement instanceof TracingNode) {
-			results = new TracingNode[] {(TracingNode) inputElement};
-		} else if (inputElement instanceof TracingNode[]) {
-			results = (TracingNode[]) inputElement;
-		} else if (inputElement instanceof Collection<?>) {
-			Collection<?> collectionElement = (Collection<?>) inputElement;
-			results = collectionElement.toArray(new TracingNode[collectionElement.size()]);
-		}
-		return results;
-	}
-
-	public Object getParent(final Object element) {
-
-		TracingNode node = null;
-		if ((element != null) &amp;&amp; (element instanceof TracingNode)) {
-			node = ((TracingNode) element).getParent();
-		}
-		return node;
-	}
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.providers;
+
+import java.util.Collection;
+import org.eclipse.jface.viewers.ITreeContentProvider;
+import org.eclipse.ui.trace.internal.datamodel.TracingNode;
+
+/**
+ * An {@link ITreeContentProvider} implementation for providing the content to display in the tracing viewer
+ */
+public class TracingComponentContentProvider implements ITreeContentProvider {
+
+	public TracingNode[] getChildren(final Object parentElement) {
+
+		TracingNode[] children = null;
+		if (parentElement instanceof TracingNode) {
+			final TracingNode node = (TracingNode) parentElement;
+			children = node.getChildren();
+		}
+		return children;
+	}
+
+	public boolean hasChildren(final Object element) {
+
+		boolean hasChildren = false;
+		if ((element != null) &amp;&amp; (element instanceof TracingNode)) {
+			hasChildren = ((TracingNode) element).hasChildren();
+		}
+		return hasChildren;
+	}
+
+	public Object[] getElements(final Object inputElement) {
+
+		TracingNode results[] = null;
+		if (inputElement instanceof TracingNode) {
+			results = new TracingNode[] {(TracingNode) inputElement};
+		} else if (inputElement instanceof TracingNode[]) {
+			results = (TracingNode[]) inputElement;
+		} else if (inputElement instanceof Collection<?>) {
+			Collection<?> collectionElement = (Collection<?>) inputElement;
+			results = collectionElement.toArray(new TracingNode[collectionElement.size()]);
+		}
+		return results;
+	}
+
+	public Object getParent(final Object element) {
+
+		TracingNode node = null;
+		if ((element != null) &amp;&amp; (element instanceof TracingNode)) {
+			node = ((TracingNode) element).getParent();
+		}
+		return node;
+	}
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/providers/TracingComponentLabelProvider.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/providers/TracingComponentLabelProvider.java
位置:  -1,87 +1,87  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.providers;
-
-import org.eclipse.jface.viewers.LabelProvider;
-import org.eclipse.ui.trace.internal.Messages;
-import org.eclipse.ui.trace.internal.datamodel.*;
-import org.eclipse.ui.trace.internal.utils.TracingConstants;
-import org.eclipse.ui.trace.internal.utils.TracingUtils;
-
-/**
- * A label provider created specifically for the view filter. This label provider is not used to populate the labels on
- * the trace view. See the class {@link TracingComponentColumnLabelProvider} for the logic for populating the labels of
- * the trace viewer.
- */
-public class TracingComponentLabelProvider extends LabelProvider {
-
-	@Override
-	public String getText(final Object element) {
-
-		return TracingComponentLabelProvider.getLabel(TracingConstants.LABEL_COLUMN_INDEX, element);
-	}
-
-	/**
-	 * Access the label text for the specified element at the specified column index in the tree viewer
-	 *
-	 * @param columnIndex
-	 *            The column index. One of either {@link TracingConstants#LABEL_COLUMN_INDEX} or
-	 *            {@link TracingConstants#VALUE_COLUMN_INDEX}
-	 * @param element
-	 *            The element in the tree viewer.
-	 * @return If the element is of type {@link TracingComponent} and the index is
-	 *         {@link TracingConstants#LABEL_COLUMN_INDEX} then label of the {@link TracingComponent} will be returned.<br/>
-	 *         If the element is of type {@link TracingComponent} and the index is
-	 *         {@link TracingConstants#VALUE_COLUMN_INDEX} then null is returned.<br/>
-	 *         If the element is of type {@link TracingComponentDebugOption} and the index is
-	 *         {@link TracingConstants#LABEL_COLUMN_INDEX} then the option-path of the
-	 *         {@link TracingComponentDebugOption} will be returned.<br/>
-	 *         If the element is of type {@link TracingComponentDebugOption} and the index is
-	 *         {@link TracingConstants#VALUE_COLUMN_INDEX} then the option-path value of the
-	 *         {@link TracingComponentDebugOption} will be returned.<br/>
-	 */
-	public final static String getLabel(final int columnIndex, final Object element) {
-
-		String result = null;
-		switch (columnIndex) {
-			case TracingConstants.LABEL_COLUMN_INDEX :
-				if (element instanceof TracingNode) {
-					result = ((TracingNode) element).getLabel();
-				} else if (element instanceof String) {
-					result = (String) element;
-				}
-				break;
-			case TracingConstants.VALUE_COLUMN_INDEX :
-				// if the element does not have a boolean value then it is modifiable - the value is the option-path
-				// value.
-				if (element instanceof TracingComponentDebugOption) {
-					result = ((TracingComponentDebugOption) element).getOptionPathValue();
-					// For boolean values we support NL'd strings
-					if (TracingUtils.isValueBoolean(result)) {
-						if (Boolean.TRUE.toString().equals(result)) {
-							result = Messages.TracingComponentColumnEditingSupport_true;
-						} else {
-							result = Messages.TracingComponentColumnEditingSupport_false;
-						}
-					}
-				} else if (element instanceof String) {
-					result = (String) element;
-				}
-				break;
-			default : // do nothing
-				break;
-		}
-		return result;
-	}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.providers;
+
+import org.eclipse.jface.viewers.LabelProvider;
+import org.eclipse.ui.trace.internal.Messages;
+import org.eclipse.ui.trace.internal.datamodel.*;
+import org.eclipse.ui.trace.internal.utils.TracingConstants;
+import org.eclipse.ui.trace.internal.utils.TracingUtils;
+
+/**
+ * A label provider created specifically for the view filter. This label provider is not used to populate the labels on
+ * the trace view. See the class {@link TracingComponentColumnLabelProvider} for the logic for populating the labels of
+ * the trace viewer.
+ */
+public class TracingComponentLabelProvider extends LabelProvider {
+
+	@Override
+	public String getText(final Object element) {
+
+		return TracingComponentLabelProvider.getLabel(TracingConstants.LABEL_COLUMN_INDEX, element);
+	}
+
+	/**
+	 * Access the label text for the specified element at the specified column index in the tree viewer
+	 *
+	 * @param columnIndex
+	 *            The column index. One of either {@link TracingConstants#LABEL_COLUMN_INDEX} or
+	 *            {@link TracingConstants#VALUE_COLUMN_INDEX}
+	 * @param element
+	 *            The element in the tree viewer.
+	 * @return If the element is of type {@link TracingComponent} and the index is
+	 *         {@link TracingConstants#LABEL_COLUMN_INDEX} then label of the {@link TracingComponent} will be returned.<br/>
+	 *         If the element is of type {@link TracingComponent} and the index is
+	 *         {@link TracingConstants#VALUE_COLUMN_INDEX} then null is returned.<br/>
+	 *         If the element is of type {@link TracingComponentDebugOption} and the index is
+	 *         {@link TracingConstants#LABEL_COLUMN_INDEX} then the option-path of the
+	 *         {@link TracingComponentDebugOption} will be returned.<br/>
+	 *         If the element is of type {@link TracingComponentDebugOption} and the index is
+	 *         {@link TracingConstants#VALUE_COLUMN_INDEX} then the option-path value of the
+	 *         {@link TracingComponentDebugOption} will be returned.<br/>
+	 */
+	public final static String getLabel(final int columnIndex, final Object element) {
+
+		String result = null;
+		switch (columnIndex) {
+			case TracingConstants.LABEL_COLUMN_INDEX :
+				if (element instanceof TracingNode) {
+					result = ((TracingNode) element).getLabel();
+				} else if (element instanceof String) {
+					result = (String) element;
+				}
+				break;
+			case TracingConstants.VALUE_COLUMN_INDEX :
+				// if the element does not have a boolean value then it is modifiable - the value is the option-path
+				// value.
+				if (element instanceof TracingComponentDebugOption) {
+					result = ((TracingComponentDebugOption) element).getOptionPathValue();
+					// For boolean values we support NL'd strings
+					if (TracingUtils.isValueBoolean(result)) {
+						if (Boolean.TRUE.toString().equals(result)) {
+							result = Messages.TracingComponentColumnEditingSupport_true;
+						} else {
+							result = Messages.TracingComponentColumnEditingSupport_false;
+						}
+					}
+				} else if (element instanceof String) {
+					result = (String) element;
+				}
+				break;
+			default : // do nothing
+				break;
+		}
+		return result;
+	}
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/DebugOptionsHandler.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/DebugOptionsHandler.java
位置:  -1,83 +1,83  
-/*******************************************************************************
- * Copyright (c) 2011, 2017 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2017 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.utils;
-
-import org.eclipse.osgi.service.debug.DebugOptions;
-import org.eclipse.ui.trace.internal.TracingUIActivator;
-import org.osgi.util.tracker.ServiceTracker;
-
-/**
- * Utility API for handling {@link DebugOptions} operations
- */
-public class DebugOptionsHandler {
-
-	/**
-	 * Accessor for the product's DebugOptions
-	 *
-	 * @return The DebugOptions object for the product
-	 */
-	public static DebugOptions getDebugOptions() {
-		if (DebugOptionsHandler.debugTracker == null) {
-			DebugOptionsHandler.debugTracker = new ServiceTracker<>(
-					TracingUIActivator.getDefault().getBundle().getBundleContext(), DebugOptions.class, null);
-			DebugOptionsHandler.debugTracker.open();
-		}
-		return DebugOptionsHandler.debugTracker.getService();
-	}
-
-	/**
-	 * Accessor for determining if tracing for the product is enabled
-	 *
-	 * @return Returns true of tracing is enabled for this product; Otherwise false.
-	 */
-	public static boolean isTracingEnabled() {
-		return DebugOptionsHandler.getDebugOptions().isDebugEnabled();
-	}
-
-	/**
-	 * Enable or Disable platform debugging
-	 *
-	 * @param value
-	 *            The value to enable or disable platform debugging. If it is set to true then platform debugging is
-	 *            enabled.
-	 */
-	public static void setDebugEnabled(boolean value) {
-		DebugOptionsHandler.getDebugOptions().setDebugEnabled(value);
-	}
-
-	/**
-	 * @return whether the current debug options were set from trace files rather than preferences
-	 */
-	public static boolean isLaunchInDebugMode() {
-		return launchInDebugMode;
-	}
-
-	/**
-	 * Sets the flag indicated the current debug options were set from trace files rather than preferences.
-	 * This method should be called when the trace plug-in is activated.
-	 *
-	 * @param mode whether current options were set from trace files
-	 */
-	public static void setLaunchInDebugMode(boolean mode) {
-		launchInDebugMode = mode;
-	}
-
-	/** The debug service for this product */
-	private static ServiceTracker<?, DebugOptions> debugTracker = null;
-
-	/**
-	 * Flag is set in activator if debug options were set using debug mode and trace files rather than preferences
-	 */
-	private static boolean launchInDebugMode;
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.utils;
+
+import org.eclipse.osgi.service.debug.DebugOptions;
+import org.eclipse.ui.trace.internal.TracingUIActivator;
+import org.osgi.util.tracker.ServiceTracker;
+
+/**
+ * Utility API for handling {@link DebugOptions} operations
+ */
+public class DebugOptionsHandler {
+
+	/**
+	 * Accessor for the product's DebugOptions
+	 *
+	 * @return The DebugOptions object for the product
+	 */
+	public static DebugOptions getDebugOptions() {
+		if (DebugOptionsHandler.debugTracker == null) {
+			DebugOptionsHandler.debugTracker = new ServiceTracker<>(
+					TracingUIActivator.getDefault().getBundle().getBundleContext(), DebugOptions.class, null);
+			DebugOptionsHandler.debugTracker.open();
+		}
+		return DebugOptionsHandler.debugTracker.getService();
+	}
+
+	/**
+	 * Accessor for determining if tracing for the product is enabled
+	 *
+	 * @return Returns true of tracing is enabled for this product; Otherwise false.
+	 */
+	public static boolean isTracingEnabled() {
+		return DebugOptionsHandler.getDebugOptions().isDebugEnabled();
+	}
+
+	/**
+	 * Enable or Disable platform debugging
+	 *
+	 * @param value
+	 *            The value to enable or disable platform debugging. If it is set to true then platform debugging is
+	 *            enabled.
+	 */
+	public static void setDebugEnabled(boolean value) {
+		DebugOptionsHandler.getDebugOptions().setDebugEnabled(value);
+	}
+
+	/**
+	 * @return whether the current debug options were set from trace files rather than preferences
+	 */
+	public static boolean isLaunchInDebugMode() {
+		return launchInDebugMode;
+	}
+
+	/**
+	 * Sets the flag indicated the current debug options were set from trace files rather than preferences.
+	 * This method should be called when the trace plug-in is activated.
+	 *
+	 * @param mode whether current options were set from trace files
+	 */
+	public static void setLaunchInDebugMode(boolean mode) {
+		launchInDebugMode = mode;
+	}
+
+	/** The debug service for this product */
+	private static ServiceTracker<?, DebugOptions> debugTracker = null;
+
+	/**
+	 * Flag is set in activator if debug options were set using debug mode and trace files rather than preferences
+	 */
+	private static boolean launchInDebugMode;
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/PreferenceHandler.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/PreferenceHandler.java
位置:  -1,162 +1,162  
-/*******************************************************************************
- * Copyright (c) 2011, 2014 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2014 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.utils;
-
-import java.util.*;
-import org.eclipse.core.runtime.Platform;
-import org.eclipse.core.runtime.preferences.*;
-import org.eclipse.ui.trace.internal.TracingUIActivator;
-import org.osgi.service.prefs.BackingStoreException;
-
-/**
- * Tracing preference handler.
- */
-public class PreferenceHandler extends AbstractPreferenceInitializer {
-
-	@Override
-	public void initializeDefaultPreferences() {
-		setDefaultPreferences();
-	}
-
-	/**
-	 * Accessor for the preference store for this bundle
-	 *
-	 * @return The {@link IEclipsePreferences} preference node at the instance scope for this bundle or null if it does
-	 *         not exist.
-	 */
-	public static IEclipsePreferences getPreferences() {
-		return InstanceScope.INSTANCE.getNode(TracingConstants.BUNDLE_ID);
-	}
-
-	/**
-	 * Access the current persisted {@link TracingConstants#PREFERENCE_ENTRIES_IDENTIFIER} entry in the preferences as
-	 * {@link Map}.
-	 *
-	 * @return A {@link Map} containing the currently persisted {@link TracingConstants#PREFERENCE_ENTRIES_IDENTIFIER}
-	 *         preferences.
-	 */
-	public static Map<String, String> getPreferenceProperties() {
-		IEclipsePreferences tracingPrefs = InstanceScope.INSTANCE.getNode(TracingConstants.BUNDLE_ID);
-		final String componentsAsString = tracingPrefs.get(TracingConstants.PREFERENCE_ENTRIES_IDENTIFIER, TracingConstants.EMPTY_STRING);
-		Map<String, String> options = null;
-		if (!componentsAsString.equals(TracingConstants.EMPTY_STRING)) {
-			options = TracingUtils.convertToMap(componentsAsString);
-		} else {
-			options = Collections.emptyMap();
-		}
-		return options;
-	}
-
-	/**
-	 * Set the default preferences
-	 */
-	public static void setDefaultPreferences() {
-		final Map<String, String> prefValues = new HashMap<String, String>(5);
-		// tracing is off by default
-		prefValues.put(TracingConstants.PREFERENCE_ENABLEMENT_IDENTIFIER, Boolean.toString(false));
-		// see org.eclipse.osgi.framework.debug.EclipseDebugTrace#DEFAULT_TRACE_FILES
-		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_COUNT_IDENTIFIER, Integer.toString(10));
-		// see org.eclipse.osgi.framework.debug.EclipseDebugTrace#DEFAULT_TRACE_FILE_SIZE
-		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_SIZE_IDENTIFIER, Integer.toString(1000));
-		prefValues.put(TracingConstants.PREFERENCE_OUTPUT_STANDARD_STREAM, Boolean.toString(false));
-		// no trace entries
-		prefValues.put(TracingConstants.PREFERENCE_ENTRIES_IDENTIFIER, TracingConstants.EMPTY_STRING);
-		savePreferences(prefValues);
-	}
-
-	/**
-	 * Flush the preference store to disk.
-	 *
-	 * @param entries
-	 *            A {@link Map} of entries to persist to the preferences. The key of the {@link Map} is the key of the
-	 *            preference and the value of the {@link Map} is the value for this key in the preferences.
-	 */
-	public static void savePreferences(final Map<String, String> entries) {
-		final IEclipsePreferences preferences = PreferenceHandler.getPreferences();
-		if (entries != null) {
-			// persist each entry
-			final Iterator<Map.Entry<String, String>> entriesIterator = entries.entrySet().iterator();
-			while (entriesIterator.hasNext()) {
-				Map.Entry<String, String> entry = entriesIterator.next();
-				preferences.put(entry.getKey(), entry.getValue());
-			}
-		}
-		try {
-			preferences.flush();
-		} catch (BackingStoreException backingStoreEx) {
-			TracingUIActivator.getDefault().logException(backingStoreEx);
-		}
-	}
-
-	/**
-	 * Is tracing enabled in the preferences store
-	 *
-	 * @return <code>true</code> if tracing is enabled in the preferences; Otherwise, <code>false</code> is returned.
-	 */
-	public static boolean isTracingEnabled() {
-		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
-		IPreferencesService prefService = Platform.getPreferencesService();
-		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
-		return prefService.getBoolean(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_ENABLEMENT_IDENTIFIER, false, lookupOrder);
-	}
-
-	/**
-	 * Accessor for the maximum file count in the preference store
-	 *
-	 * @return The maximum file count in the preference store or the value 10 if it's not defined.
-	 */
-	public static int getMaxFileCount() {
-		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
-		IPreferencesService prefService = Platform.getPreferencesService();
-		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
-		return prefService.getInt(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_MAX_FILE_COUNT_IDENTIFIER, 10, lookupOrder);
-	}
-
-	/**
-	 * Accessor for the maximum file size in the preference store
-	 *
-	 * @return The maximum file size in the preference store or the value 1000 if it's not defined.
-	 */
-	public static int getMaxFileSize() {
-		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
-		IPreferencesService prefService = Platform.getPreferencesService();
-		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
-		return prefService.getInt(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_MAX_FILE_SIZE_IDENTIFIER, 1000, lookupOrder);
-	}
-
-	/**
-	 * Accessor for the file path in the preference store
-	 *
-	 * @return The file path in the preference store or the default value if it's not defined.
-	 */
-	public static String getFilePath() {
-		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
-		IPreferencesService prefService = Platform.getPreferencesService();
-		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
-		return prefService.getString(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_FILE_PATH, DebugOptionsHandler.getDebugOptions().getFile() == null ? null : DebugOptionsHandler.getDebugOptions().getFile().getAbsolutePath(), lookupOrder);
-	}
-
-	/**
-	 * Accessor for the output to standard output stream selection in the preference store
-	 *
-	 * @return The output to standard output stream selection in the preference store or the default value if it's not defined.
-	 */
-	public static String getOutputToStandardStream() {
-		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
-		IPreferencesService prefService = Platform.getPreferencesService();
-		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
-		return prefService.getString(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_OUTPUT_STANDARD_STREAM, 
-	}
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.utils;
+
+import java.util.*;
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.core.runtime.preferences.*;
+import org.eclipse.ui.trace.internal.TracingUIActivator;
+import org.osgi.service.prefs.BackingStoreException;
+
+/**
+ * Tracing preference handler.
+ */
+public class PreferenceHandler extends AbstractPreferenceInitializer {
+
+	@Override
+	public void initializeDefaultPreferences() {
+		setDefaultPreferences();
+	}
+
+	/**
+	 * Accessor for the preference store for this bundle
+	 *
+	 * @return The {@link IEclipsePreferences} preference node at the instance scope for this bundle or null if it does
+	 *         not exist.
+	 */
+	public static IEclipsePreferences getPreferences() {
+		return InstanceScope.INSTANCE.getNode(TracingConstants.BUNDLE_ID);
+	}
+
+	/**
+	 * Access the current persisted {@link TracingConstants#PREFERENCE_ENTRIES_IDENTIFIER} entry in the preferences as
+	 * {@link Map}.
+	 *
+	 * @return A {@link Map} containing the currently persisted {@link TracingConstants#PREFERENCE_ENTRIES_IDENTIFIER}
+	 *         preferences.
+	 */
+	public static Map<String, String> getPreferenceProperties() {
+		IEclipsePreferences tracingPrefs = InstanceScope.INSTANCE.getNode(TracingConstants.BUNDLE_ID);
+		final String componentsAsString = tracingPrefs.get(TracingConstants.PREFERENCE_ENTRIES_IDENTIFIER, TracingConstants.EMPTY_STRING);
+		Map<String, String> options = null;
+		if (!componentsAsString.equals(TracingConstants.EMPTY_STRING)) {
+			options = TracingUtils.convertToMap(componentsAsString);
+		} else {
+			options = Collections.emptyMap();
+		}
+		return options;
+	}
+
+	/**
+	 * Set the default preferences
+	 */
+	public static void setDefaultPreferences() {
+		final Map<String, String> prefValues = new HashMap<String, String>(5);
+		// tracing is off by default
+		prefValues.put(TracingConstants.PREFERENCE_ENABLEMENT_IDENTIFIER, Boolean.toString(false));
+		// see org.eclipse.osgi.framework.debug.EclipseDebugTrace#DEFAULT_TRACE_FILES
+		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_COUNT_IDENTIFIER, Integer.toString(10));
+		// see org.eclipse.osgi.framework.debug.EclipseDebugTrace#DEFAULT_TRACE_FILE_SIZE
+		prefValues.put(TracingConstants.PREFERENCE_MAX_FILE_SIZE_IDENTIFIER, Integer.toString(1000));
+		prefValues.put(TracingConstants.PREFERENCE_OUTPUT_STANDARD_STREAM, Boolean.toString(false));
+		// no trace entries
+		prefValues.put(TracingConstants.PREFERENCE_ENTRIES_IDENTIFIER, TracingConstants.EMPTY_STRING);
+		savePreferences(prefValues);
+	}
+
+	/**
+	 * Flush the preference store to disk.
+	 *
+	 * @param entries
+	 *            A {@link Map} of entries to persist to the preferences. The key of the {@link Map} is the key of the
+	 *            preference and the value of the {@link Map} is the value for this key in the preferences.
+	 */
+	public static void savePreferences(final Map<String, String> entries) {
+		final IEclipsePreferences preferences = PreferenceHandler.getPreferences();
+		if (entries != null) {
+			// persist each entry
+			final Iterator<Map.Entry<String, String>> entriesIterator = entries.entrySet().iterator();
+			while (entriesIterator.hasNext()) {
+				Map.Entry<String, String> entry = entriesIterator.next();
+				preferences.put(entry.getKey(), entry.getValue());
+			}
+		}
+		try {
+			preferences.flush();
+		} catch (BackingStoreException backingStoreEx) {
+			TracingUIActivator.getDefault().logException(backingStoreEx);
+		}
+	}
+
+	/**
+	 * Is tracing enabled in the preferences store
+	 *
+	 * @return <code>true</code> if tracing is enabled in the preferences; Otherwise, <code>false</code> is returned.
+	 */
+	public static boolean isTracingEnabled() {
+		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
+		IPreferencesService prefService = Platform.getPreferencesService();
+		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
+		return prefService.getBoolean(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_ENABLEMENT_IDENTIFIER, false, lookupOrder);
+	}
+
+	/**
+	 * Accessor for the maximum file count in the preference store
+	 *
+	 * @return The maximum file count in the preference store or the value 10 if it's not defined.
+	 */
+	public static int getMaxFileCount() {
+		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
+		IPreferencesService prefService = Platform.getPreferencesService();
+		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
+		return prefService.getInt(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_MAX_FILE_COUNT_IDENTIFIER, 10, lookupOrder);
+	}
+
+	/**
+	 * Accessor for the maximum file size in the preference store
+	 *
+	 * @return The maximum file size in the preference store or the value 1000 if it's not defined.
+	 */
+	public static int getMaxFileSize() {
+		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
+		IPreferencesService prefService = Platform.getPreferencesService();
+		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
+		return prefService.getInt(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_MAX_FILE_SIZE_IDENTIFIER, 1000, lookupOrder);
+	}
+
+	/**
+	 * Accessor for the file path in the preference store
+	 *
+	 * @return The file path in the preference store or the default value if it's not defined.
+	 */
+	public static String getFilePath() {
+		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
+		IPreferencesService prefService = Platform.getPreferencesService();
+		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
+		return prefService.getString(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_FILE_PATH, DebugOptionsHandler.getDebugOptions().getFile() == null ? null : DebugOptionsHandler.getDebugOptions().getFile().getAbsolutePath(), lookupOrder);
+	}
+
+	/**
+	 * Accessor for the output to standard output stream selection in the preference store
+	 *
+	 * @return The output to standard output stream selection in the preference store or the default value if it's not defined.
+	 */
+	public static String getOutputToStandardStream() {
+		final IScopeContext[] lookupOrder = new IScopeContext[] { InstanceScope.INSTANCE };
+		IPreferencesService prefService = Platform.getPreferencesService();
+		prefService.setDefaultLookupOrder(TracingConstants.BUNDLE_ID, null, new String[] {InstanceScope.SCOPE});
+		return prefService.getString(TracingConstants.BUNDLE_ID, TracingConstants.PREFERENCE_OUTPUT_STANDARD_STREAM, 
+	}
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/TracingConstants.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/TracingConstants.java
位置:  -1,93 +1,93  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.utils;
-
-/**
- * A collection of constant values used by the tracing UI
- */
-public class TracingConstants {
-
-	/** The name of the bundle */
-	public final static String BUNDLE_ID = 
-
-	/** The separator for option paths in key=value pairs */
-	public final static String DEBUG_OPTION_PATH_SEPARATOR = 
-
-	/** The value for a debug option that is disabled */
-	public final static String DEBUG_OPTION_VALUE_FALSE = 
-
-	/** The value for a debug option that is enabled **/
-	public final static String DEBUG_OPTION_VALUE_TRUE = 
-
-	/** Tracing Component extension point name */
-	public final static String TRACING_EXTENSION_POINT_NAME = 
-
-	/** The name of the 'id' attribute for a Tracing Component */
-	public final static String TRACING_EXTENSION_ID_ATTRIBUTE = 
-
-	/** The name of the 'label' attribute for a Tracing Component */
-	public final static String TRACING_EXTENSION_LABEL_ATTRIBUTE = 
-
-	/** The name of the 'bundle' attribute for a Tracing Component */
-	public final static String TRACING_EXTENSION_BUNDLE_ATTRIBUTE = 
-
-	/** The name of the 'name' attribute for a bundle in a Tracing Component */
-	public final static String TRACING_EXTENSION_BUNDLE_NAME_ATTRIBUTE = 
-
-	/** The name of the 'consumed' attribute for a bundle in a Tracing Component */
-	public final static String TRACING_EXTENSION_BUNDLE_CONSUMED_ATTRIBUTE = 
-
-	/** An empty {@link String} array **/
-	public final static String[] EMPTY_STRING_ARRAY = new String[0];
-
-	/** An empty {@link String} **/
-	public final static String EMPTY_STRING = 
-
-	/** The index of the label column in the tree */
-	public final static int LABEL_COLUMN_INDEX = 0;
-
-	/** The index of the value column in the tree */
-	public final static int VALUE_COLUMN_INDEX = 1;
-
-	/** The name of the .options file used to store the debug options for a bundle */
-	public final static String OPTIONS_FILENAME = 
-
-	/** The system property used to specify size a trace file can grow before it is rotated */
-	public static final String PROP_TRACE_SIZE_MAX = 
-
-	/** The system property used to specify the maximum number of backup trace files to use */
-	public static final String PROP_TRACE_FILE_MAX = 
-
-	/** The separator character for a debug option represented as a string, i.e. key1=value1;key2=value2;key3=value3; */
-	public final static String DEBUG_OPTION_PREFERENCE_SEPARATOR = 
-
-	/** The preference identifier for the tracing enablement state */
-	public final static String PREFERENCE_ENABLEMENT_IDENTIFIER = 
-
-	/** The preference identifier for the list of tracing entries */
-	public final static String PREFERENCE_ENTRIES_IDENTIFIER = 
-
-	/** The preference identifier for the maximum size of the tracing files */
-	public final static String PREFERENCE_MAX_FILE_SIZE_IDENTIFIER = 
-
-	/** The preference identifier for the maximum number of tracing files */
-	public final static String PREFERENCE_MAX_FILE_COUNT_IDENTIFIER = 
-
-	/** The preference identifier for the location of tracing files */
-	public final static String PREFERENCE_FILE_PATH = 
-
-	/** The preference identifier for standard output stream selection */
-	public final static String PREFERENCE_OUTPUT_STANDARD_STREAM = 
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.utils;
+
+/**
+ * A collection of constant values used by the tracing UI
+ */
+public class TracingConstants {
+
+	/** The name of the bundle */
+	public final static String BUNDLE_ID = 
+
+	/** The separator for option paths in key=value pairs */
+	public final static String DEBUG_OPTION_PATH_SEPARATOR = 
+
+	/** The value for a debug option that is disabled */
+	public final static String DEBUG_OPTION_VALUE_FALSE = 
+
+	/** The value for a debug option that is enabled **/
+	public final static String DEBUG_OPTION_VALUE_TRUE = 
+
+	/** Tracing Component extension point name */
+	public final static String TRACING_EXTENSION_POINT_NAME = 
+
+	/** The name of the 'id' attribute for a Tracing Component */
+	public final static String TRACING_EXTENSION_ID_ATTRIBUTE = 
+
+	/** The name of the 'label' attribute for a Tracing Component */
+	public final static String TRACING_EXTENSION_LABEL_ATTRIBUTE = 
+
+	/** The name of the 'bundle' attribute for a Tracing Component */
+	public final static String TRACING_EXTENSION_BUNDLE_ATTRIBUTE = 
+
+	/** The name of the 'name' attribute for a bundle in a Tracing Component */
+	public final static String TRACING_EXTENSION_BUNDLE_NAME_ATTRIBUTE = 
+
+	/** The name of the 'consumed' attribute for a bundle in a Tracing Component */
+	public final static String TRACING_EXTENSION_BUNDLE_CONSUMED_ATTRIBUTE = 
+
+	/** An empty {@link String} array **/
+	public final static String[] EMPTY_STRING_ARRAY = new String[0];
+
+	/** An empty {@link String} **/
+	public final static String EMPTY_STRING = 
+
+	/** The index of the label column in the tree */
+	public final static int LABEL_COLUMN_INDEX = 0;
+
+	/** The index of the value column in the tree */
+	public final static int VALUE_COLUMN_INDEX = 1;
+
+	/** The name of the .options file used to store the debug options for a bundle */
+	public final static String OPTIONS_FILENAME = 
+
+	/** The system property used to specify size a trace file can grow before it is rotated */
+	public static final String PROP_TRACE_SIZE_MAX = 
+
+	/** The system property used to specify the maximum number of backup trace files to use */
+	public static final String PROP_TRACE_FILE_MAX = 
+
+	/** The separator character for a debug option represented as a string, i.e. key1=value1;key2=value2;key3=value3; */
+	public final static String DEBUG_OPTION_PREFERENCE_SEPARATOR = 
+
+	/** The preference identifier for the tracing enablement state */
+	public final static String PREFERENCE_ENABLEMENT_IDENTIFIER = 
+
+	/** The preference identifier for the list of tracing entries */
+	public final static String PREFERENCE_ENTRIES_IDENTIFIER = 
+
+	/** The preference identifier for the maximum size of the tracing files */
+	public final static String PREFERENCE_MAX_FILE_SIZE_IDENTIFIER = 
+
+	/** The preference identifier for the maximum number of tracing files */
+	public final static String PREFERENCE_MAX_FILE_COUNT_IDENTIFIER = 
+
+	/** The preference identifier for the location of tracing files */
+	public final static String PREFERENCE_FILE_PATH = 
+
+	/** The preference identifier for standard output stream selection */
+	public final static String PREFERENCE_OUTPUT_STANDARD_STREAM = 
+
 }
\ No newline at end of file

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/TracingInitializer.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/TracingInitializer.java
位置:  -1,26 +1,26  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.utils;
-
-import org.eclipse.osgi.service.debug.DebugOptions;
-
-/**
- * Reads the preferences and initialises the {@link DebugOptions} options
- */
-public class TracingInitializer {
-
-	// Empty service component to trigger the bundle loading
-	// TracingUIActivator.startup sets options from the preferences
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.utils;
+
+import org.eclipse.osgi.service.debug.DebugOptions;
+
+/**
+ * Reads the preferences and initialises the {@link DebugOptions} options
+ */
+public class TracingInitializer {
+
+	// Empty service component to trigger the bundle loading
+	// TracingUIActivator.startup sets options from the preferences
+
+}

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/TracingUtils.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/utils/TracingUtils.java
位置:  -1,127 +1,127  
-/*******************************************************************************
- * Copyright (c) 2011, 2017 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2017 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal.utils;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.net.URL;
-import java.util.*;
-import org.eclipse.ui.trace.internal.TracingUIActivator;
-import org.eclipse.ui.trace.internal.datamodel.TracingComponentDebugOption;
-import org.osgi.framework.Bundle;
-
-/**
- * Utility APIs for the Product Tracing UI.
- */
-public class TracingUtils {
-
-	/**
-	 * Returns true if the specified {@link String} is a boolean value of 'true' or 'false'.
-	 *
-	 * @param value
-	 *            A {@link String} to check if it is the value 'true' or 'false'.
-	 * @return Returns true if the specified {@link String} is the value 'true' or 'false'; Otherwise false is returned.
-	 */
-	public static boolean isValueBoolean(final String value) {
-		return (value != null) &amp;&amp; (value.toLowerCase().equals(TracingConstants.DEBUG_OPTION_VALUE_FALSE) || value.toLowerCase().equals(TracingConstants.DEBUG_OPTION_VALUE_TRUE));
-	}
-
-	/**
-	 * Convert a {@link TracingComponentDebugOption} to a {@link String} for persistence.
-	 *
-	 * @param debugOption
-	 *            The {@link TracingComponentDebugOption} to convert to a string representation.
-	 * @return A {@link String} representing the {@link TracingComponentDebugOption}.
-	 */
-	public static String convertToString(final TracingComponentDebugOption debugOption) {
-		final StringBuilder buffer = new StringBuilder();
-		if (debugOption != null) {
-			// return an option as 
-			buffer.append(debugOption.getOptionPath());
-			buffer.append(TracingConstants.DEBUG_OPTION_PATH_SEPARATOR);
-			buffer.append(debugOption.getOptionPathValue());
-			buffer.append(TracingConstants.DEBUG_OPTION_PREFERENCE_SEPARATOR);
-		}
-		return buffer.toString();
-	}
-
-	/**
-	 * Convert a {@link String} representing the persisted preference into a {@link TracingComponentDebugOption}.
-	 *
-	 * @param debugOptionAsString
-	 *            The {@link String} representation of the persisted {@link TracingComponentDebugOption}.
-	 * @return A {@link TracingComponentDebugOption} with no parent set or <code>null</code> if debugOptionAsString is
-	 *         null.
-	 */
-	public static TracingComponentDebugOption convertToDebugOption(final String debugOptionAsString) {
-		TracingComponentDebugOption debugOption = null;
-		if (debugOptionAsString != null) {
-			int separatorIndex = debugOptionAsString.indexOf(TracingConstants.DEBUG_OPTION_PATH_SEPARATOR);
-			if (separatorIndex != -1) {
-				String key = debugOptionAsString.substring(0, separatorIndex);
-				String value = debugOptionAsString.substring(separatorIndex + 1, debugOptionAsString.length());
-				// the debug option does not need a parent at this point
-				debugOption = new TracingComponentDebugOption(key, value);
-			}
-		}
-		return debugOption;
-	}
-
-	/**
-	 * Convert a {@link String} representing the persisted preference into a {@link Map} object.
-	 *
-	 * @param debugOptions
-	 *            The input {@link String} containing many encoded key=value pairs.
-	 * @return A {@link Map} object containing the key=value pairs in the encoded debug options {@link String}
-	 */
-	public static Map<String, String> convertToMap(final String debugOptions) {
-		final Map<String, String> result = new HashMap<String, String>();
-		if (debugOptions != null) {
-			StringTokenizer optionTokens = new StringTokenizer(debugOptions, TracingConstants.DEBUG_OPTION_PREFERENCE_SEPARATOR);
-			while (optionTokens.hasMoreTokens()) {
-				TracingComponentDebugOption newOption = TracingUtils.convertToDebugOption(optionTokens.nextToken());
-				if (newOption != null) {
-					result.put(newOption.getOptionPath(), newOption.getOptionPathValue());
-				}
-			}
-		}
-		return result;
-	}
-
-	/**
-	 * Locates the .options file in the specified bundle and loads in the entries via {@link Properties} object.
-	 *
-	 * @param bundle
-	 *            The {@link Bundle} to access the debug options defined for it.
-	 * @return Returns a {@link Properties} object containing the various options from the specified bundles .options
-	 *         file. If the bundle does not have a .options file then an empty {@link Properties} object is returned.
-	 */
-	public static Properties loadOptionsFromBundle(final Bundle bundle) {
-		final Properties optionsProperties = new Properties();
-		if (bundle != null) {
-			URL optionsFile = bundle.getEntry(TracingConstants.OPTIONS_FILENAME);
-			if (optionsFile != null) {
-				// read the file
-				try (InputStream optionsFileInStream = optionsFile.openStream()) {
-					optionsProperties.load(optionsFileInStream);
-				} catch (IOException ioEx) {
-					// couldn't read the .options file - can't do anything other than to log the exception
-					TracingUIActivator.getDefault().logException(ioEx);
-				}
-			}
-		}
-		return optionsProperties;
-	}
-
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal.utils;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+import java.util.*;
+import org.eclipse.ui.trace.internal.TracingUIActivator;
+import org.eclipse.ui.trace.internal.datamodel.TracingComponentDebugOption;
+import org.osgi.framework.Bundle;
+
+/**
+ * Utility APIs for the Product Tracing UI.
+ */
+public class TracingUtils {
+
+	/**
+	 * Returns true if the specified {@link String} is a boolean value of 'true' or 'false'.
+	 *
+	 * @param value
+	 *            A {@link String} to check if it is the value 'true' or 'false'.
+	 * @return Returns true if the specified {@link String} is the value 'true' or 'false'; Otherwise false is returned.
+	 */
+	public static boolean isValueBoolean(final String value) {
+		return (value != null) &amp;&amp; (value.toLowerCase().equals(TracingConstants.DEBUG_OPTION_VALUE_FALSE) || value.toLowerCase().equals(TracingConstants.DEBUG_OPTION_VALUE_TRUE));
+	}
+
+	/**
+	 * Convert a {@link TracingComponentDebugOption} to a {@link String} for persistence.
+	 *
+	 * @param debugOption
+	 *            The {@link TracingComponentDebugOption} to convert to a string representation.
+	 * @return A {@link String} representing the {@link TracingComponentDebugOption}.
+	 */
+	public static String convertToString(final TracingComponentDebugOption debugOption) {
+		final StringBuilder buffer = new StringBuilder();
+		if (debugOption != null) {
+			// return an option as 
+			buffer.append(debugOption.getOptionPath());
+			buffer.append(TracingConstants.DEBUG_OPTION_PATH_SEPARATOR);
+			buffer.append(debugOption.getOptionPathValue());
+			buffer.append(TracingConstants.DEBUG_OPTION_PREFERENCE_SEPARATOR);
+		}
+		return buffer.toString();
+	}
+
+	/**
+	 * Convert a {@link String} representing the persisted preference into a {@link TracingComponentDebugOption}.
+	 *
+	 * @param debugOptionAsString
+	 *            The {@link String} representation of the persisted {@link TracingComponentDebugOption}.
+	 * @return A {@link TracingComponentDebugOption} with no parent set or <code>null</code> if debugOptionAsString is
+	 *         null.
+	 */
+	public static TracingComponentDebugOption convertToDebugOption(final String debugOptionAsString) {
+		TracingComponentDebugOption debugOption = null;
+		if (debugOptionAsString != null) {
+			int separatorIndex = debugOptionAsString.indexOf(TracingConstants.DEBUG_OPTION_PATH_SEPARATOR);
+			if (separatorIndex != -1) {
+				String key = debugOptionAsString.substring(0, separatorIndex);
+				String value = debugOptionAsString.substring(separatorIndex + 1, debugOptionAsString.length());
+				// the debug option does not need a parent at this point
+				debugOption = new TracingComponentDebugOption(key, value);
+			}
+		}
+		return debugOption;
+	}
+
+	/**
+	 * Convert a {@link String} representing the persisted preference into a {@link Map} object.
+	 *
+	 * @param debugOptions
+	 *            The input {@link String} containing many encoded key=value pairs.
+	 * @return A {@link Map} object containing the key=value pairs in the encoded debug options {@link String}
+	 */
+	public static Map<String, String> convertToMap(final String debugOptions) {
+		final Map<String, String> result = new HashMap<String, String>();
+		if (debugOptions != null) {
+			StringTokenizer optionTokens = new StringTokenizer(debugOptions, TracingConstants.DEBUG_OPTION_PREFERENCE_SEPARATOR);
+			while (optionTokens.hasMoreTokens()) {
+				TracingComponentDebugOption newOption = TracingUtils.convertToDebugOption(optionTokens.nextToken());
+				if (newOption != null) {
+					result.put(newOption.getOptionPath(), newOption.getOptionPathValue());
+				}
+			}
+		}
+		return result;
+	}
+
+	/**
+	 * Locates the .options file in the specified bundle and loads in the entries via {@link Properties} object.
+	 *
+	 * @param bundle
+	 *            The {@link Bundle} to access the debug options defined for it.
+	 * @return Returns a {@link Properties} object containing the various options from the specified bundles .options
+	 *         file. If the bundle does not have a .options file then an empty {@link Properties} object is returned.
+	 */
+	public static Properties loadOptionsFromBundle(final Bundle bundle) {
+		final Properties optionsProperties = new Properties();
+		if (bundle != null) {
+			URL optionsFile = bundle.getEntry(TracingConstants.OPTIONS_FILENAME);
+			if (optionsFile != null) {
+				// read the file
+				try (InputStream optionsFileInStream = optionsFile.openStream()) {
+					optionsProperties.load(optionsFileInStream);
+				} catch (IOException ioEx) {
+					// couldn't read the .options file - can't do anything other than to log the exception
+					TracingUIActivator.getDefault().logException(ioEx);
+				}
+			}
+		}
+		return optionsProperties;
+	}
+
 }
\ No newline at end of file

---------------------------62---------------------------
需求名称: Bug 354388 - NPE in FeatureInputContext#synchronizeModel
创建时间: 2019-09-28	04:19:37
修改时间: 2019-09-28	09:19:22

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureInputContext.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureInputContext.java
位置:  -135,21 +135,17   public class FeatureInputContext extends XMLInputContext {
 
 	@Override
 	protected boolean synchronizeModel(IDocument doc) {
+		if (doc == null) {
+			return false;
+		}
 		IFeatureModel model = (IFeatureModel) getModel();
-
-		boolean cleanModel = true;
 		String text = doc.get();
-		InputStream stream = new ByteArrayInputStream(text.getBytes(StandardCharsets.UTF_8));
-		try {
+		try (InputStream stream = new ByteArrayInputStream(text.getBytes(StandardCharsets.UTF_8))) {
 			model.reload(stream, false);
-		} catch (CoreException e) {
-			cleanModel = false;
-		}
-		try {
-			stream.close();
-		} catch (IOException e) {
+		} catch (CoreException | IOException e) {
+			return false;
 		}
-		return cleanModel;
+		return true;
 	}
 
 	@Override

---------------------------63---------------------------
需求名称: Bug 472112 - "Hello RCP" template missing
创建时间: 2019-09-28	03:55:03
修改时间: 2019-09-28	08:32:55

原文件: ui/org.eclipse.pde.ui.templates/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui.templates/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %bundleName
 Bundle-SymbolicName: org.eclipse.pde.ui.templates;singleton:=true
-Bundle-Version: 3.6.700.qualifier
+Bundle-Version: 3.6.800.qualifier
 Bundle-Vendor: %bundleVendor
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Export-Package: org.eclipse.pde.internal.ui.templates;x-internal:=true,

原文件: ui/org.eclipse.pde.ui.templates/pom.xml 
新文件: ui/org.eclipse.pde.ui.templates/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ui.templates</artifactId>
-  <version>3.6.700-SNAPSHOT</version>
+  <version>3.6.800-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.pde/cheatsheets/rcpapp/rcpapp-create.xml 
新文件: ui/org.eclipse.pde/cheatsheets/rcpapp/rcpapp-create.xml
位置:  -64,7 +64,7  
                skip=
       <subitem label=
                skip=
-      <subitem label=
+      <subitem label=
                skip=
    </item>
 

---------------------------64---------------------------
需求名称: Bug 533801 - Stop including o.e.equinox.util in products
创建时间: 2019-09-27	15:01:15
修改时间: 2019-09-27	15:01:15

原文件: ui/org.eclipse.pde.ui.templates/src/org/eclipse/pde/internal/ui/templates/PDETemplateSection.java 
新文件: ui/org.eclipse.pde.ui.templates/src/org/eclipse/pde/internal/ui/templates/PDETemplateSection.java
位置:  -114,12 +114,11   public abstract class PDETemplateSection extends OptionTemplateSection {
 	}
 
 	protected IPluginReference[] getRCP3xDependencies() {
-		IPluginReference[] dep = new IPluginReference[5];
+		IPluginReference[] dep = new IPluginReference[4];
 		dep[0] = new PluginReference(
 		dep[1] = new PluginReference(
 		dep[2] = new PluginReference(
-		dep[3] = new PluginReference(
-		dep[4] = new PluginReference(
+		dep[3] = new PluginReference(
 		return dep;
 	}
 

---------------------------65---------------------------
需求名称: Bug 551453 - API versioning error on binary projects
创建时间: 2019-09-25	07:14:36
修改时间: 2019-09-25	07:14:36

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation.java
位置:  -484,6 +484,14   public class PluginImportOperation extends WorkspaceJob {
 
 		setProjectNatures(project, model);
 
+		if(importType == IMPORT_WITH_SOURCE) {
+			// if the project has .api_description, then API nature must be
+			// added
+			if (project.findMember(
+				CoreUtility.addNatureToProject(project, 
+			}
+		}
+
 		// Set the classpath
 		if (project.hasNature(JavaCore.NATURE_ID) &amp;&amp; project.findMember(
 			fProjectClasspaths.put(project, ClasspathComputer.getClasspath(project, model, sourceMap, true, false));
位置:  -1274,10 +1282,6   public class PluginImportOperation extends WorkspaceJob {
 		if (!desc.hasNature(JavaCore.NATURE_ID) &amp;&amp; needsJavaNature(project, model)) {
 			CoreUtility.addNatureToProject(project, JavaCore.NATURE_ID, null);
 		}
-		// if the project has .api_description, then API nature must be added
-		if (project.findMember(
-			CoreUtility.addNatureToProject(project, 
-		}
 
 	}
 

---------------------------66---------------------------
需求名称: Bug 551449 - Wrong entries in product editor (launching / set arguments
创建时间: 2019-09-25	05:42:09
修改时间: 2019-09-25	06:43:16

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/ArgumentsSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/ArgumentsSection.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- *  Copyright (c) 2005, 2018 IBM Corporation and others.
+ *  Copyright (c) 2005, 2019 IBM Corporation and others.
  *
  *  This program and the accompanying materials
  *  are made available under the terms of the Eclipse Public License 2.0
位置:  -16,6 +16,8   package org.eclipse.pde.internal.ui.editor.product;
 
 import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
 
+import java.util.Arrays;
+import java.util.Objects;
 import org.eclipse.core.runtime.Platform;
 import org.eclipse.pde.core.IModelChangedEvent;
 import org.eclipse.pde.internal.core.iproduct.*;
位置:  -104,7 +106,7   public class ArgumentsSection extends PDESection {
 		fArchCombo = new ComboViewerPart();
 		fArchCombo.createControl(archParent, toolkit, SWT.SINGLE | SWT.BORDER | SWT.READ_ONLY);
 		fArchCombo.getControl().setLayoutData(new GridData(SWT.LEFT, SWT.TOP, false, false));
-		fArchCombo.setItems(TAB_ARCHLABELS);
+		fArchCombo.setItems(Arrays.stream(TAB_ARCHLABELS).filter(Objects::nonNull).toArray(String[]::new));
 		Control archComboControl = fArchCombo.getControl();
 		if (archComboControl instanceof Combo)
 			((Combo) archComboControl).select(fLastArch[fLastTab]);

---------------------------67---------------------------
需求名称: Bug 550682 - Launching RCP via the existing launch config doesn't pick
创建时间: 2019-09-03	04:42:54
修改时间: 2019-09-24	05:10:02

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/EclipseLaunchShortcut.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/EclipseLaunchShortcut.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2006, 2015 IBM Corporation and others.
+ * Copyright (c) 2006, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -240,7 +240,7   public class EclipseLaunchShortcut extends AbstractLaunchShortcut {
 				wc.setAttribute(IPDELauncherConstants.USE_PRODUCT, true);
 				wc.setAttribute(IPDELauncherConstants.PRODUCT, product);
 			}
-			wc.setAttribute(IPDELauncherConstants.AUTOMATIC_ADD, false);
+			wc.setAttribute(IPDELauncherConstants.AUTOMATIC_ADD, true);
 		} else {
 			String defaultProduct = TargetPlatform.getDefaultProduct();
 			if (defaultProduct != null) {

---------------------------68---------------------------
需求名称: Fix build.properties to not include non existing entries.
创建时间: 2019-09-20	15:14:24
修改时间: 2019-09-20	15:31:32

原文件: apitools/org.eclipse.pde.api.tools.ee.feature/build.properties 
新文件: apitools/org.eclipse.pde.api.tools.ee.feature/build.properties
位置:  -12,5 +12,4  
 #     IBM Corporation - initial API and implementation
 ###############################################################################
 bin.includes = feature.xml,\
-               p2.inf,\
                feature.properties

原文件: apitools/org.eclipse.pde.api.tools.ee.feature/feature.xml 
新文件: apitools/org.eclipse.pde.api.tools.ee.feature/feature.xml
位置:  -2,7 +2,7  
 <feature
       id=
       label=
-      version=
+      version=
       provider-name=
       license-feature=
       license-feature-version=

原文件: ui/org.eclipse.pde.ui.tests.smartimport/build.properties 
新文件: ui/org.eclipse.pde.ui.tests.smartimport/build.properties
位置:  -8,10 +8,7  
 # Contributors:
 #     IBM Corporation - initial API and implementation
 ###############################################################################
-bin.includes = icons/,\
-               plugin.properties,\
-               plugin.xml,\
-               about.html,\
+bin.includes = about.html,\
                .,\
                test.xml,\
                META-INF/

---------------------------69---------------------------
需求名称: Merge remote-tracking branch 'origin/BETA_JAVA13'
创建时间: 2019-09-19	00:23:11
修改时间: 2019-09-19	00:28:16

原文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-13-systempackages.profile 
新文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-13-systempackages.profile
位置:  -0,0 +1,171  
+###############################################################################
+# Copyright (c) 2019 IBM Corporation and others.
+# All rights reserved. This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License v1.0
+# which accompanies this distribution,\and is available at
+# http://www.eclipse.org/legal/epl-v10.html
+# 
+# Contributors:
+#     IBM Corporation - initial API and implementation
+###############################################################################
+# NOTE: This profile only has JavaSE-13's VM packages
+org.osgi.framework.system.packages = \
+ com.sun.jarsigner,\
+ com.sun.java.accessibility.util,\
+ com.sun.jdi,\
+ com.sun.jdi.connect,\
+ com.sun.jdi.connect.spi,\
+ com.sun.jdi.event,\
+ com.sun.jdi.request,\
+ com.sun.management,\
+ com.sun.net.httpserver,\
+ com.sun.net.httpserver.spi,\
+ com.sun.nio.file,\
+ com.sun.nio.sctp,\
+ com.sun.security.auth,\
+ com.sun.security.auth.callback,\
+ com.sun.security.auth.login,\
+ com.sun.security.auth.module,\
+ com.sun.security.jgss,\
+ com.sun.source.doctree,\
+ com.sun.source.tree,\
+ com.sun.source.util,\
+ com.sun.tools.attach,\
+ com.sun.tools.attach.spi,\
+ com.sun.tools.javac,\
+ com.sun.tools.jconsole,\
+ javax.accessibility,\
+ javax.annotation.processing,\
+ javax.crypto,\
+ javax.crypto.interfaces,\
+ javax.crypto.spec,\
+ javax.imageio,\
+ javax.imageio.event,\
+ javax.imageio.metadata,\
+ javax.imageio.plugins.bmp,\
+ javax.imageio.plugins.jpeg,\
+ javax.imageio.plugins.tiff,\
+ javax.imageio.spi,\
+ javax.imageio.stream,\
+ javax.lang.model,\
+ javax.lang.model.element,\
+ javax.lang.model.type,\
+ javax.lang.model.util,\
+ javax.management,\
+ javax.management.loading,\
+ javax.management.modelmbean,\
+ javax.management.monitor,\
+ javax.management.openmbean,\
+ javax.management.relation,\
+ javax.management.remote,\
+ javax.management.remote.rmi,\
+ javax.management.timer,\
+ javax.naming,\
+ javax.naming.directory,\
+ javax.naming.event,\
+ javax.naming.ldap,\
+ javax.naming.ldap.spi,\
+ javax.naming.spi,\
+ javax.net,\
+ javax.net.ssl,\
+ javax.print,\
+ javax.print.attribute,\
+ javax.print.attribute.standard,\
+ javax.print.event,\
+ javax.rmi.ssl,\
+ javax.script,\
+ javax.security.auth,\
+ javax.security.auth.callback,\
+ javax.security.auth.kerberos,\
+ javax.security.auth.login,\
+ javax.security.auth.spi,\
+ javax.security.auth.x500,\
+ javax.security.cert,\
+ javax.security.sasl,\
+ javax.smartcardio,\
+ javax.sound.midi,\
+ javax.sound.midi.spi,\
+ javax.sound.sampled,\
+ javax.sound.sampled.spi,\
+ javax.sql,\
+ javax.sql.rowset,\
+ javax.sql.rowset.serial,\
+ javax.sql.rowset.spi,\
+ javax.swing,\
+ javax.swing.border,\
+ javax.swing.colorchooser,\
+ javax.swing.event,\
+ javax.swing.filechooser,\
+ javax.swing.plaf,\
+ javax.swing.plaf.basic,\
+ javax.swing.plaf.metal,\
+ javax.swing.plaf.multi,\
+ javax.swing.plaf.nimbus,\
+ javax.swing.plaf.synth,\
+ javax.swing.table,\
+ javax.swing.text,\
+ javax.swing.text.html,\
+ javax.swing.text.html.parser,\
+ javax.swing.text.rtf,\
+ javax.swing.tree,\
+ javax.swing.undo,\
+ javax.tools,\
+ javax.transaction.xa,\
+ javax.xml,\
+ javax.xml.catalog,\
+ javax.xml.crypto,\
+ javax.xml.crypto.dom,\
+ javax.xml.crypto.dsig,\
+ javax.xml.crypto.dsig.dom,\
+ javax.xml.crypto.dsig.keyinfo,\
+ javax.xml.crypto.dsig.spec,\
+ javax.xml.datatype,\
+ javax.xml.namespace,\
+ javax.xml.parsers,\
+ javax.xml.stream,\
+ javax.xml.stream.events,\
+ javax.xml.stream.util,\
+ javax.xml.transform,\
+ javax.xml.transform.dom,\
+ javax.xml.transform.sax,\
+ javax.xml.transform.stax,\
+ javax.xml.transform.stream,\
+ javax.xml.validation,\
+ javax.xml.xpath,\
+ jdk.dynalink,\
+ jdk.dynalink.beans,\
+ jdk.dynalink.linker,\
+ jdk.dynalink.linker.support,\
+ jdk.dynalink.support,\
+ jdk.javadoc.doclet,\
+ jdk.jfr,\
+ jdk.jfr.consumer,\
+ jdk.jshell,\
+ jdk.jshell.execution,\
+ jdk.jshell.spi,\
+ jdk.jshell.tool,\
+ jdk.management.jfr,\
+ jdk.nashorn.api.scripting,\
+ jdk.nashorn.api.tree,\
+ jdk.net,\
+ jdk.nio,\
+ jdk.security.jarsigner,\
+ jdk.swing.interop,\
+ netscape.javascript,\
+ org.ietf.jgss,\
+ org.w3c.dom,\
+ org.w3c.dom.bootstrap,\
+ org.w3c.dom.css,\
+ org.w3c.dom.events,\
+ org.w3c.dom.html,\
+ org.w3c.dom.ls,\
+ org.w3c.dom.ranges,\
+ org.w3c.dom.stylesheets,\
+ org.w3c.dom.traversal,\
+ org.w3c.dom.views,\
+ org.w3c.dom.xpath,\
+ org.xml.sax,\
+ org.xml.sax.ext,\
+ org.xml.sax.helpers,\
+ sun.misc,\
+ sun.reflect
\ No newline at end of file

---------------------------70---------------------------
需求名称: Bug 550245 - ApiBaselinePreferencePage shoud use fast hash lookup
创建时间: 2019-08-20	04:13:12
修改时间: 2019-09-17	06:21:43

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinePreferencePage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinePreferencePage.java
位置:  -119,6 +119,7   public class ApiBaselinePreferencePage extends PreferencePage implements IWorkbe
 			}
 		}));
 		tableviewer = new CheckboxTableViewer(table);
+		tableviewer.setUseHashlookup(true);
 		tableviewer.setLabelProvider(new BaselineLabelProvider());
 		tableviewer.setContentProvider(ArrayContentProvider.getInstance());
 		tableviewer.addDoubleClickListener(event -> {

---------------------------71---------------------------
需求名称: Bug 550241 - New Plug-in wizard should use hash lookup
创建时间: 2019-08-20	02:48:04
修改时间: 2019-09-16	19:12:16

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/WizardListSelectionPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/WizardListSelectionPage.java
位置:  -83,6 +83,7   public abstract class WizardListSelectionPage extends BaseWizardSelectionPage im
 		sashForm.setLayoutData(gd);
 
 		wizardSelectionViewer = new TableViewer(sashForm, SWT.BORDER);
+		wizardSelectionViewer.setUseHashlookup(true);
 		wizardSelectionViewer.setContentProvider(new ListContentProvider());
 		wizardSelectionViewer.setLabelProvider(ListUtil.TABLE_LABEL_PROVIDER);
 		wizardSelectionViewer.setComparator(ListUtil.NAME_COMPARATOR);

---------------------------72---------------------------
需求名称: Bug 465914: Adapt icons derived from new filter icon
创建时间: 2019-09-16	07:43:14
修改时间: 2019-09-16	07:43:14

原文件: ui/org.eclipse.pde.ui/icons/elcl16/filter_related.png 
新文件: ui/org.eclipse.pde.ui/icons/elcl16/filter_related.png

原文件: ui/org.eclipse.pde.ui/icons/elcl16/filter_related@2x.png 
新文件: ui/org.eclipse.pde.ui/icons/elcl16/filter_related@2x.png

---------------------------73---------------------------
需求名称: Revert "Bug 550236 - 53 test failures in pde.api.tools.tests for
创建时间: 2019-09-16	00:03:37
修改时间: 2019-09-16	00:05:43

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java
位置:  -269,10 +269,6   public class TypeStructureBuilder extends ClassVisitor {
 			// thrown from ASM 5.0 for bad bytecodes
 			return logAndReturn(file, iae);
 		}
-		catch (Exception e) {
-			ApiPlugin.log(e);
-			return null;
-		}
 		return visitor.fType;
 	}
 
位置:  -297,9 +293,6   public class TypeStructureBuilder extends ClassVisitor {
 				// bytes could not be retrieved for abstractApiTypeRoot
 				ApiPlugin.log(e);
 			}
-			catch (Exception e) {
-				ApiPlugin.log(e);
-			}
 			if (visitor.found) {
 				currentAnonymousLocalType.setEnclosingMethodInfo(visitor.name, visitor.signature);
 			}

---------------------------74---------------------------
需求名称: Bug 550236 - 53 test failures in pde.api.tools.tests for Y20190819-0900
创建时间: 2019-09-14	02:52:28
修改时间: 2019-09-14	02:52:28

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java
位置:  -269,7 +269,7   public class TypeStructureBuilder extends ClassVisitor {
 			// thrown from ASM 5.0 for bad bytecodes
 			return logAndReturn(file, iae);
 		}
-		catch (UnsupportedOperationException e) {
+		catch (Exception e) {
 			ApiPlugin.log(e);
 			return null;
 		}
位置:  -297,7 +297,7   public class TypeStructureBuilder extends ClassVisitor {
 				// bytes could not be retrieved for abstractApiTypeRoot
 				ApiPlugin.log(e);
 			}
-			catch (UnsupportedOperationException e) {
+			catch (Exception e) {
 				ApiPlugin.log(e);
 			}
 			if (visitor.found) {

---------------------------75---------------------------
需求名称: Bug 550236 - 53 test failures in pde.api.tools.tests for Y20190819-0900
创建时间: 2019-09-13	07:07:14
修改时间: 2019-09-13	07:07:14

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java
位置:  -269,6 +269,10   public class TypeStructureBuilder extends ClassVisitor {
 			// thrown from ASM 5.0 for bad bytecodes
 			return logAndReturn(file, iae);
 		}
+		catch (UnsupportedOperationException e) {
+			ApiPlugin.log(e);
+			return null;
+		}
 		return visitor.fType;
 	}
 
位置:  -293,6 +297,9   public class TypeStructureBuilder extends ClassVisitor {
 				// bytes could not be retrieved for abstractApiTypeRoot
 				ApiPlugin.log(e);
 			}
+			catch (UnsupportedOperationException e) {
+				ApiPlugin.log(e);
+			}
 			if (visitor.found) {
 				currentAnonymousLocalType.setEnclosingMethodInfo(visitor.name, visitor.signature);
 			}

---------------------------76---------------------------
需求名称: Bug 465914 - [Graphics] New filter icon
创建时间: 2019-09-12	10:04:41
修改时间: 2019-09-12	10:27:47

原文件: apitools/org.eclipse.pde.api.tools.ui/icons/full/elcl16/filter_ps.png 
新文件: apitools/org.eclipse.pde.api.tools.ui/icons/full/elcl16/filter_ps.png

原文件: apitools/org.eclipse.pde.api.tools.ui/icons/full/elcl16/filter_ps@2x.png 
新文件: apitools/org.eclipse.pde.api.tools.ui/icons/full/elcl16/filter_ps@2x.png

原文件: ui/org.eclipse.pde.ui/icons/dlcl16/filter_ps.png 
新文件: ui/org.eclipse.pde.ui/icons/dlcl16/filter_ps.png

原文件: ui/org.eclipse.pde.ui/icons/dlcl16/filter_ps@2x.png 
新文件: ui/org.eclipse.pde.ui/icons/dlcl16/filter_ps@2x.png

原文件: ui/org.eclipse.pde.ui/icons/elcl16/filter_ps.png 
新文件: ui/org.eclipse.pde.ui/icons/elcl16/filter_ps.png

原文件: ui/org.eclipse.pde.ui/icons/elcl16/filter_ps@2x.png 
新文件: ui/org.eclipse.pde.ui/icons/elcl16/filter_ps@2x.png

---------------------------77---------------------------
需求名称: Bug 550868 - Mismatched API baseline error doesnt go away after removing
创建时间: 2019-09-08	07:22:19
修改时间: 2019-09-12	04:21:40

原文件: apitools/org.eclipse.pde.api.tools.ui/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ui/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.api.tools.ui; singleton:=true
-Bundle-Version: 1.1.800.qualifier
+Bundle-Version: 1.1.900.qualifier
 Bundle-Localization: plugin
 Eclipse-LazyStart: true
 Bundle-ActivationPolicy: lazy

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinesConfigurationBlock.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinesConfigurationBlock.java
位置:  -446,10 +446,26   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 		if (apiProjects == null) {
 			return;
 		}
+		removeBaselineMismatchMarker();
 		for (IProject iProject : apiProjects) {
 			createMissingBaselineMarkerOnProject(iProject, valueWarning);
 		}
 	}
+
+	private void removeBaselineMismatchMarker() {
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
+		try {
+			IMarker[] findMarkers = root.findMarkers(IApiMarkerConstants.DEFAULT_API_BASELINE_PROBLEM_MARKER, false,
+					IResource.DEPTH_ZERO);
+			for (IMarker iMarker : findMarkers) {
+				iMarker.delete();
+			}
+		} catch (CoreException e) {
+			ApiPlugin.log(e);
+		}
+
+	}
+
 	private void createMissingBaselineMarker(int valueWarning) {
 		IProject[] apiProjects = Util.getApiProjects();
 		if (apiProjects == null) {

---------------------------78---------------------------
需求名称: Bug 550869 - Searching in plugin registry view shows result after 5
创建时间: 2019-09-08	07:57:59
修改时间: 2019-09-12	04:17:20

原文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.runtime; singleton:=true
-Bundle-Version: 3.6.600.qualifier
+Bundle-Version: 3.6.700.qualifier
 Bundle-Activator: org.eclipse.pde.internal.runtime.PDERuntimePlugin
 Bundle-Vendor: %provider-name
 Bundle-Localization: plugin

原文件: ui/org.eclipse.pde.runtime/pom.xml 
新文件: ui/org.eclipse.pde.runtime/pom.xml
位置:  -20,7 +20,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.runtime</artifactId>
-  <version>3.6.600-SNAPSHOT</version>
+  <version>3.6.700-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
   <properties>

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/RegistryBrowserModelChangeListener.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/registry/RegistryBrowserModelChangeListener.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2015 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -13,7 +13,9  
  *******************************************************************************/
 package org.eclipse.pde.internal.runtime.registry;
 
+import org.eclipse.core.runtime.*;
 import org.eclipse.pde.internal.runtime.registry.model.*;
+import org.eclipse.ui.progress.UIJob;
 
 public class RegistryBrowserModelChangeListener implements ModelChangeListener {
 
位置:  -25,7 +27,13   public class RegistryBrowserModelChangeListener implements ModelChangeListener {
 
 	@Override
 	public void modelChanged(final ModelChangeDelta[] delta) {
-		fRegistryBrowser.getSite().getWorkbenchWindow().getWorkbench().getDisplay().asyncExec(() -> update(delta));
+		new UIJob(
+			@Override
+			public IStatus runInUIThread(IProgressMonitor monitor) {
+				update(delta);
+				return Status.OK_STATUS;
+			}
+		}.schedule();
 	}
 
 	private boolean topLevelElement(Object object) {

---------------------------79---------------------------
需求名称: Bug 550962 - Align PDE feature version with Platform SDK
创建时间: 2019-09-11	08:41:46
修改时间: 2019-09-11	11:50:15

原文件: features/org.eclipse.pde-feature/feature.xml 
新文件: features/org.eclipse.pde-feature/feature.xml
位置:  -2,7 +2,7  
 <feature
       id=
       label=
-      version=
+      version=
       provider-name=
       license-feature=
       license-feature-version=

原文件: features/org.eclipse.pde-feature/pom.xml 
新文件: features/org.eclipse.pde-feature/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde.feature</groupId>
   <artifactId>org.eclipse.pde</artifactId>
-  <version>3.14.200-SNAPSHOT</version>
+  <version>4.14.0-SNAPSHOT</version>
   <packaging>eclipse-feature</packaging>
 
   <build>

---------------------------80---------------------------
需求名称: Bug 550316 - Include target platform features in Features View
创建时间: 2019-08-24	15:58:12
修改时间: 2019-09-11	07:10:06

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java
位置:  -28,8 +28,7   import org.eclipse.pde.internal.ui.editor.plugin.ManifestEditor;
 import org.eclipse.pde.internal.ui.views.dependencies.OpenPluginDependenciesAction;
 import org.eclipse.pde.internal.ui.views.features.action.*;
 import org.eclipse.pde.internal.ui.views.features.support.*;
-import org.eclipse.pde.internal.ui.views.features.viewer.FeatureElementComparer;
-import org.eclipse.pde.internal.ui.views.features.viewer.RootElementsFilteredTree;
+import org.eclipse.pde.internal.ui.views.features.viewer.*;
 import org.eclipse.swt.SWT;
 import org.eclipse.swt.dnd.Clipboard;
 import org.eclipse.swt.widgets.Composite;
位置:  -121,6 +120,7   public class FeaturesView extends ViewPart {
 
 	private void initialiseViewer(FeatureInput input) {
 		resetViewerFilters();
+		fViewer.setComparator(new FeatureViewerComparator());
 		fViewer.setInput(input);
 	}
 
位置:  -141,9 +141,8   public class FeaturesView extends ViewPart {
 		return fViewerFilters.contains(filter);
 	}
 
-	private void setContentProvider(ViewerComparator viewerComparator, IContentProvider contentProvider,
-			boolean supportsFilters, boolean supportsPlugins) {
-		fViewer.setComparator(viewerComparator);
+	private void setContentProvider(IContentProvider contentProvider, boolean supportsFilters,
+			boolean supportsPlugins) {
 		fViewer.setContentProvider(contentProvider);
 
 		setViewerFilterActionsEnabled(supportsFilters);
位置:  -189,6 +188,7   public class FeaturesView extends ViewPart {
 		toolBarManager.add(new Separator());
 
 		ViewerFilterAction filterFeatureChildAction = new FilterFeatureChildAction(this, fFeatureIndex);
+		filterFeatureChildAction.setChecked(true);
 		toolBarManager.add(filterFeatureChildAction);
 
 		fShowPluginsAction = new ShowPluginsAction(this);
位置:  -231,8 +231,7   public class FeaturesView extends ViewPart {
 
 	public void setContentProvider(ContentProviderAction contentProviderAction) {
 		if (contentProviderAction.isChecked()) {
-			setContentProvider(contentProviderAction.createViewerComparator(),
-					contentProviderAction.createContentProvider(), contentProviderAction.isSupportsFilters(),
+			setContentProvider(contentProviderAction.createContentProvider(), contentProviderAction.isSupportsFilters(),
 					contentProviderAction.isSupportsPlugins());
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java
位置:  -15,7 +15,6   package org.eclipse.pde.internal.ui.views.features.action;
 
 import org.eclipse.jface.action.Action;
 import org.eclipse.jface.viewers.IContentProvider;
-import org.eclipse.jface.viewers.ViewerComparator;
 import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.ui.views.features.FeaturesView;
 
位置:  -31,8 +30,6   public abstract class ContentProviderAction extends Action {
 		fFeatureModelManager = featureModelManager;
 	}
 
-	public abstract ViewerComparator createViewerComparator();
-
 	public abstract IContentProvider createContentProvider();
 
 	@Override

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java
位置:  -14,13 +14,11  
 package org.eclipse.pde.internal.ui.views.features.action;
 
 import org.eclipse.jface.viewers.IContentProvider;
-import org.eclipse.jface.viewers.ViewerComparator;
 import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.views.features.FeaturesView;
 import org.eclipse.pde.internal.ui.views.features.viewer.FeatureTreeCalleesContentProvider;
-import org.eclipse.pde.internal.ui.views.features.viewer.FeatureViewerComparator;
 
 public class ShowCalleesContentProviderAction extends ContentProviderAction {
 
位置:  -34,11 +32,6   public class ShowCalleesContentProviderAction extends ContentProviderAction {
 	}
 
 	@Override
-	public ViewerComparator createViewerComparator() {
-		return new FeatureViewerComparator();
-	}
-
-	@Override
 	public IContentProvider createContentProvider() {
 		return new FeatureTreeCalleesContentProvider(fFeatureModelManager);
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java
位置:  -14,7 +14,6  
 package org.eclipse.pde.internal.ui.views.features.action;
 
 import org.eclipse.jface.viewers.IContentProvider;
-import org.eclipse.jface.viewers.ViewerComparator;
 import org.eclipse.pde.internal.core.FeatureModelManager;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
位置:  -37,11 +36,6   public class ShowCallersContentProviderAction extends ContentProviderAction {
 	}
 
 	@Override
-	public ViewerComparator createViewerComparator() {
-		return new ViewerComparator();
-	}
-
-	@Override
 	public IContentProvider createContentProvider() {
 		return new FeatureTreeCallersContentProvider(fFeatureModelManager, fFeatureIndex);
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java
位置:  -40,7 +40,7   public class FeatureIndex implements IFeatureModelListener {
 
 	private void reIndex() {
 		fIncludingFeatures.clear();
-		for (IFeatureModel parentModel : fFeatureModelManager.getWorkspaceModels()) {
+		for (IFeatureModel parentModel : fFeatureModelManager.getModels()) {
 			for (IFeatureChild child : parentModel.getFeature().getIncludedFeatures()) {
 				IFeatureModel childModel = fFeatureModelManager.findFeatureModel(child.getId());
 				if (childModel != null) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java
位置:  -56,7 +56,7   public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeConten
 		if (inputElement instanceof FeatureInput) {
 			FeatureInput input = (FeatureInput) inputElement;
 			FeatureModelManager featureModelManager = input.getFeatureModelManager();
-			return featureModelManager.getWorkspaceModels();
+			return featureModelManager.getModels();
 		}
 
 		return new Object[0];

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java
位置:  -44,7 +44,7   public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeConten
 		if (inputElement instanceof FeatureInput) {
 			FeatureInput input = (FeatureInput) inputElement;
 			FeatureModelManager featureModelManager = input.getFeatureModelManager();
-			return featureModelManager.getWorkspaceModels();
+			return featureModelManager.getModels();
 		}
 
 		return new Object[0];

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureViewerComparator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureViewerComparator.java
位置:  -24,29 +24,18   public class FeatureViewerComparator extends ViewerComparator {
 		if (element instanceof IFeatureChild) {
 			element = FeatureSupport.toFeatureModel(element);
 			if (element == null) {
-				return 4;
+				return 2;
 			}
 		}
 
 		if (element instanceof IFeatureModel) {
 			IFeatureModel featureModel = (IFeatureModel) element;
-			boolean editable = featureModel.isEditable();
-			boolean hasChildren = featureModel.getFeature().getIncludedFeatures().length > 0;
-
-			if (hasChildren &amp;&amp; editable) {
-				return 0;
-			} else if (hasChildren) {
-				return 1;
-			} else if (editable) {
-				return 2;
-			} else {
-				return 3;
-			}
+			return (featureModel.isEditable() ? 0 : 1);
 		} else if (element instanceof IFeaturePlugin) {
-			return 5;
+			return 3;
 		}
 
-		return 6;
+		return 4;
 	}
 
 }

---------------------------81---------------------------
需求名称: Bug 550685 - Import plugins as source from target doesn't import api
创建时间: 2019-09-03	05:14:50
修改时间: 2019-09-11	06:58:34

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation.java
位置:  -1274,6 +1274,11   public class PluginImportOperation extends WorkspaceJob {
 		if (!desc.hasNature(JavaCore.NATURE_ID) &amp;&amp; needsJavaNature(project, model)) {
 			CoreUtility.addNatureToProject(project, JavaCore.NATURE_ID, null);
 		}
+		// if the project has .api_description, then API nature must be added
+		if (project.findMember(
+			CoreUtility.addNatureToProject(project, 
+		}
+
 	}
 
 	/**

---------------------------82---------------------------
需求名称: Bug 550591 - Please build the localbuild.xml as part of an incremental
创建时间: 2019-08-30	08:32:27
修改时间: 2019-09-11	05:04:21

原文件: ui/org.eclipse.pde.core/.externalToolBuilders/org.eclipse.pde.core 
localbuild.xml
位置:  -1,6 +1,7  
 <?xml version=
 <launchConfiguration type=
 <stringAttribute key=
+<stringAttribute key=
 <stringAttribute key=
 <booleanAttribute key=
 <booleanAttribute key=
位置:  -11,6 +12,6  
 <stringAttribute key=
 <stringAttribute key=
 <stringAttribute key=
-<stringAttribute key=
+<stringAttribute key=
 <booleanAttribute key=
 </launchConfiguration>

原文件: ui/org.eclipse.pde.core/.project 
新文件: ui/org.eclipse.pde.core/.project
位置:  -22,7 +22,7  
 		</buildCommand>
 		<buildCommand>
 			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
-			<triggers>full,incremental,</triggers>
+			<triggers>auto,full,incremental,</triggers>
 			<arguments>
 				<dictionary>
 					<key>LaunchConfigHandle</key>

原文件: ui/org.eclipse.pde.core/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.core/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.core; singleton:=true
-Bundle-Version: 3.13.100.qualifier
+Bundle-Version: 3.13.200.qualifier
 Bundle-Activator: org.eclipse.pde.internal.core.PDECore
 Bundle-Vendor: %provider-name
 Bundle-Localization: plugin

原文件: ui/org.eclipse.pde.core/pom.xml 
新文件: ui/org.eclipse.pde.core/pom.xml
位置:  -20,7 +20,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.core</artifactId>
-  <version>3.13.100-SNAPSHOT</version>
+  <version>3.13.200-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <defaultSigning-excludeInnerJars>true</defaultSigning-excludeInnerJars>

---------------------------83---------------------------
需求名称: Bug 288012 - removed empty NLS string
创建时间: 2019-09-11	03:48:05
修改时间: 2019-09-11	03:48:05

原文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.ui; singleton:=true
-Bundle-Version: 3.11.100.qualifier
+Bundle-Version: 3.11.200.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ui.PDEPlugin
 Bundle-Vendor: %provider-name
 Bundle-Localization: plugin

原文件: ui/org.eclipse.pde.ui/pom.xml 
新文件: ui/org.eclipse.pde.ui/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ui</artifactId>
-  <version>3.11.100-SNAPSHOT</version>
+  <version>3.11.200-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java
位置:  -1386,7 +1386,6   public class PDEUIMessages extends NLS {
 	public static String BaseFeatureSpecPage_patchGroup_title;
 	public static String BaseFeatureSpecPage_featurePropertiesGroup_title;
 	public static String BaseFeatureSpecPage_browse;
-	public static String BaseExtensionPoint_sections_copyright;
 	public static String BaseExportWizard_confirmReplace_title;
 	public static String BaseExtensionPoint_generating;
 	public static String GeneralInfoSection_IdWarning;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties
位置:  -1024,7 +1024,6   BaseImportWizardSecondPage_0=Some plug-ins are not available from a repository
 BaseImportWizardSecondPage_autobuild=Build projects after the import operation completes
 BaseFeatureSpecPage_featurePropertiesGroup_title = Feature properties
 BaseFeatureSpecPage_browse=Bro&amp;wse...
-BaseExtensionPoint_sections_copyright=
 BaseExportWizard_confirmReplace_title=Confirm Replace
 BaseExtensionPoint_generating = Generating schema file...
 GeneralInfoSection_IdWarning=The product ID should not match the defining plug-in's ID. This product will not export correctly.

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/BaseExtensionPointMainPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/BaseExtensionPointMainPage.java
位置:  -206,7 +206,6   public abstract class BaseExtensionPointMainPage extends WizardPage {
 		section.setDescription(PDEUIMessages.BaseExtensionPoint_sections_supplied);
 		schema.addDocumentSection(section);
 		section = new DocumentSection(schema, IDocumentSection.COPYRIGHT, 
-		section.setDescription(PDEUIMessages.BaseExtensionPoint_sections_copyright);
 		schema.addDocumentSection(section);
 		StringWriter swriter = new StringWriter();
 		try (PrintWriter writer = new PrintWriter(swriter, true)) {

---------------------------84---------------------------
需求名称: Bug 550777 - Version bumps for 4.14 stream
创建时间: 2019-09-10	11:11:45
修改时间: 2019-09-10	11:11:45

原文件: ui/org.eclipse.pde/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde/META-INF/MANIFEST.MF
位置:  -2,6 +2,6   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde;singleton:=true
-Bundle-Version: 3.13.700.qualifier
+Bundle-Version: 3.13.800.qualifier
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin

原文件: ui/org.eclipse.pde/pom.xml 
新文件: ui/org.eclipse.pde/pom.xml
位置:  -1,6 +1,6  
 <?xml version=
 <!--
-  Copyright (c) 2012, 2017 Eclipse Foundation and others.
+  Copyright (c) 2012, 2019 Eclipse Foundation and others.
   All rights reserved. This program and the accompanying materials
   are made available under the terms of the Eclipse Distribution License v1.0
   which accompanies this distribution, and is available at
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde</artifactId>
-  <version>3.13.700-SNAPSHOT</version>
+  <version>3.13.800-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
   <build>

---------------------------85---------------------------
需求名称: Bug 550777 - Bump PDE features for 4.14 stream
创建时间: 2019-09-10	04:27:49
修改时间: 2019-09-10	06:48:22

原文件: features/org.eclipse.pde-feature/feature.xml 
新文件: features/org.eclipse.pde-feature/feature.xml
位置:  -2,7 +2,7  
 <feature
       id=
       label=
-      version=
+      version=
       provider-name=
       license-feature=
       license-feature-version=

原文件: features/org.eclipse.pde-feature/pom.xml 
新文件: features/org.eclipse.pde-feature/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde.feature</groupId>
   <artifactId>org.eclipse.pde</artifactId>
-  <version>3.14.100-SNAPSHOT</version>
+  <version>3.14.200-SNAPSHOT</version>
   <packaging>eclipse-feature</packaging>
 
   <build>

---------------------------86---------------------------
需求名称: Fix typo - radable -&gt; readable.
创建时间: 2019-09-10	06:01:56
修改时间: 2019-09-10	06:09:03

原文件: apitools/org.eclipse.pde.api.tools/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.api.tools;singleton:=true
-Bundle-Version: 1.1.900.qualifier
+Bundle-Version: 1.1.1000.qualifier
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.osgi;bundle-version=

原文件: apitools/org.eclipse.pde.api.tools/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools/pom.xml
位置:  -18,7 +18,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools</artifactId>
-  <version>1.1.900-SNAPSHOT</version>
+  <version>1.1.1000-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
   <properties>
     <defaultSigning-excludeInnerJars>true</defaultSigning-excludeInnerJars>

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java
位置:  -180,7 +180,8   public class ApiAnalysisApplication implements IApplication {
 	private void setTargetPlatform(File dependencyList) throws IOException, CoreException, InterruptedException {
 		if (dependencyList != null) {
 			if (!(dependencyList.isFile() &amp;&amp; dependencyList.canRead())) {
-				throw new IllegalArgumentException(
+				throw new IllegalArgumentException(
+						
 			}
 			// File is typically the output of `mvn dependnecy:list
 			// -DoutputAbsoluteArtifactFilename=true -DoutputScope=false -DoutputFile=...`

---------------------------87---------------------------
需求名称: Bug 550767 - POM and product version change for 4.14 release
创建时间: 2019-09-06	10:25:28
修改时间: 2019-09-06	10:25:28

原文件: apitools/org.eclipse.pde.api.tools.annotations/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools.annotations/pom.xml
位置:  -11,7 +11,7  
   <parent>
     <artifactId>eclipse.pde.ui.apitools</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools.annotations</artifactId>

原文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: apitools/org.eclipse.pde.api.tools/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui.apitools</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools</artifactId>

原文件: apitools/pom.xml 
新文件: apitools/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
   </parent>
   <artifactId>eclipse.pde.ui.apitools</artifactId>
   <packaging>pom</packaging>

原文件: ds/org.eclipse.pde.ds.annotations.tests/pom.xml 
新文件: ds/org.eclipse.pde.ds.annotations.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.annotations/pom.xml 
新文件: ds/org.eclipse.pde.ds.annotations/pom.xml
位置:  -16,7 +16,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.core/pom.xml 
新文件: ds/org.eclipse.pde.ds.core/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.lib/pom.xml 
新文件: ds/org.eclipse.pde.ds.li新文件: pom.xml
位置:  -16,7 +16,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.tests/pom.xml 
新文件: ds/org.eclipse.pde.ds.tests/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds.ui/pom.xml 
新文件: ds/org.eclipse.pde.ds.ui/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ds/org.eclipse.pde.ds1_2.lib/pom.xml 
新文件: ds/org.eclipse.pde.ds1_2.li新文件: pom.xml
位置:  -17,7 +17,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: features/org.eclipse.pde-feature/pom.xml 
新文件: features/org.eclipse.pde-feature/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde.feature</groupId>

原文件: pom.xml 
新文件: pom.xml
位置:  -17,13 +17,13  
   <parent>
     <groupId>org.eclipse</groupId>
     <artifactId>eclipse-platform-parent</artifactId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../eclipse-platform-parent</relativePath>
   </parent>
 
   <groupId>eclipse.pde.ui</groupId>
   <artifactId>eclipse.pde.ui</artifactId>
-  <version>4.13.0-SNAPSHOT</version>
+  <version>4.14.0-SNAPSHOT</version>
   <packaging>pom</packaging>
 
   <properties>

原文件: tests-pom/pom.xml 
新文件: tests-pom/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
   </parent>
   <artifactId>tests-pom</artifactId>
   <packaging>pom</packaging>

原文件: u
原文件: org.eclipse.pde.ua.core/pom.xml 
新文件: ua/org.eclipse.pde.ua.core/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: u
原文件: org.eclipse.pde.ua.tests/pom.xml 
新文件: ua/org.eclipse.pde.ua.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: u
原文件: org.eclipse.pde.ua.ui/pom.xml 
新文件: ua/org.eclipse.pde.ua.ui/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.core/pom.xml 
新文件: ui/org.eclipse.pde.core/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.genericeditor.extension.tests/pom.xml 
新文件: ui/org.eclipse.pde.genericeditor.extension.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.genericeditor.extension/pom.xml 
新文件: ui/org.eclipse.pde.genericeditor.extension/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde.ui</groupId>

原文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml
位置:  -20,7 +20,7  
 	<parent>
 		<artifactId>tests-pom</artifactId>
 		<groupId>eclipse.pde.ui</groupId>
-		<version>4.13.0-SNAPSHOT</version>
+		<version>4.14.0-SNAPSHOT</version>
 		<relativePath>../../tests-pom/</relativePath>
 	</parent>
 	<groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.junit.runtime/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.launching/pom.xml 
新文件: ui/org.eclipse.pde.launching/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.runtime/pom.xml 
新文件: ui/org.eclipse.pde.runtime/pom.xml
位置:  -15,7 +15,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui.templates.tests/pom.xml 
新文件: ui/org.eclipse.pde.ui.templates.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui.templates/pom.xml 
新文件: ui/org.eclipse.pde.ui.templates/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui.tests.smartimport/pom.xml 
新文件: ui/org.eclipse.pde.ui.tests.smartimport/pom.xml
位置:  -11,7 +11,7  
 	<parent>
 		<artifactId>tests-pom</artifactId>
 		<groupId>eclipse.pde.ui</groupId>
-		<version>4.13.0-SNAPSHOT</version>
+		<version>4.14.0-SNAPSHOT</version>
 		<relativePath>../../tests-pom/</relativePath>
 	</parent>
 	<groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui.tests/pom.xml 
新文件: ui/org.eclipse.pde.ui.tests/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>tests-pom</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../tests-pom/</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde.ui/pom.xml 
新文件: ui/org.eclipse.pde.ui/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.pde/pom.xml 
新文件: ui/org.eclipse.pde/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.tools.layout.spy/pom.xml 
新文件: ui/org.eclipse.tools.layout.spy/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.pde</groupId>

原文件: ui/org.eclipse.ui.trace/pom.xml 
新文件: ui/org.eclipse.ui.trace/pom.xml
位置:  -14,7 +14,7  
   <parent>
     <artifactId>eclipse.pde.ui</artifactId>
     <groupId>eclipse.pde.ui</groupId>
-    <version>4.13.0-SNAPSHOT</version>
+    <version>4.14.0-SNAPSHOT</version>
     <relativePath>../../</relativePath>
   </parent>
   <groupId>org.eclipse.ui</groupId>

---------------------------88---------------------------
需求名称: Merge remote-tracking branch 'origin/master' into BETA_JAVA13
创建时间: 2019-09-03	01:12:05
修改时间: 2019-09-03	01:12:05

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/ApiUIPlugin.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/ApiUIPlugin.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.api.tools.ui.internal;
 
位置:  -31,6 +32,7   import org.eclipse.pde.api.tools.internal.provisional.ISession;
 import org.eclipse.pde.api.tools.internal.provisional.ISessionListener;
 import org.eclipse.pde.api.tools.ui.internal.views.APIToolingView;
 import org.eclipse.swt.graphics.Image;
+import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.IViewPart;
 import org.eclipse.ui.IWorkbenchPage;
位置:  -240,7 +242,7   public class ApiUIPlugin extends AbstractUIPlugin {
 	private ISessionListener sessionListener = new ISessionListener() {
 		@Override
 		public void sessionAdded(ISession addedSession) {
-			getWorkbench().getDisplay().asyncExec(() -> showAPIToolingView());
+			Display.getDefault().asyncExec(() -> showAPIToolingView());
 		}
 
 		@Override
位置:  -324,7 +326,7   public class ApiUIPlugin extends AbstractUIPlugin {
 	}
 
 	private void showView(String id) {
-		IWorkbenchWindow window = getWorkbench().getActiveWorkbenchWindow();
+		IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 		if (window == null) {
 			return;
 		}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java
位置:  -14,8 +14,11  
 package org.eclipse.pde.api.tools.ui.internal.markers;
 
 import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
+import org.eclipse.pde.api.tools.ui.internal.ApiUIPlugin;
+import org.osgi.framework.Version;
 
 public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
 
位置:  -26,7 +29,6   public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
 
 	}
 
-
 	@Override
 	public String getLabel() {
 		return NLS.bind(MarkerMessages.SinceTagResolution_add_since_tag_after_version_update, markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null));
位置:  -35,6 +37,15   public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
 	public void run(final IMarker marker) {
 		if (markerVersion != null) {
 			new VersionNumberingResolution(markerVersion).run(markerVersion);
+			String componentVersionString = markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null);
+			StringBuilder buffer = new StringBuilder();
+			Version componentVersion = new Version(componentVersionString);
+			buffer.append(componentVersion.getMajor()).append('.').append(componentVersion.getMinor());
+			try {
+				markerVersion.setAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, buffer.toString());
+			} catch (CoreException e) {
+				ApiUIPlugin.log(e);
+			}
 			this.newVersionValue = markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null);
 		}
 		super.run(marker);

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiUseScanPreferencePage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiUseScanPreferencePage.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2010, 2018 IBM Corporation and others.
+ * Copyright (c) 2010, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -20,6 +20,8   import java.util.HashSet;
 import java.util.Iterator;
 
 import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.preferences.IEclipsePreferences;
 import org.eclipse.core.runtime.preferences.InstanceScope;
 import org.eclipse.jface.dialogs.Dialog;
位置:  -34,6 +36,7   import org.eclipse.jface.viewers.StructuredSelection;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.api.tools.internal.IApiCoreConstants;
 import org.eclipse.pde.api.tools.internal.provisional.ApiPlugin;
+import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
 import org.eclipse.pde.api.tools.internal.search.UseScanManager;
 import org.eclipse.pde.api.tools.internal.util.Util;
 import org.eclipse.pde.api.tools.ui.internal.ApiUIPlugin;
位置:  -358,7 +361,9   public class ApiUseScanPreferencePage extends PreferencePage implements IWorkben
 			locations.append(UseScanManager.LOCATION_DELIM);
 		}
 
-		if (hasLocationsChanges(locations.toString())) {
+		Object[] newCheckedLocations = fTableViewer.getCheckedElements();
+		boolean hasLocationChanges = hasLocationsChanges(locations.toString());
+		if (hasLocationChanges &amp;&amp; newCheckedLocations.length != 0) {
 			IProject[] projects = Util.getApiProjects();
 			// If there are API projects in the workspace, ask the user if they
 			// should be cleaned and built to run the new tooling
位置:  -368,6 +373,9   public class ApiUseScanPreferencePage extends PreferencePage implements IWorkben
 				}
 			}
 		}
+		if (hasLocationChanges &amp;&amp; newCheckedLocations.length == 0) {
+			findAndDeleteAPIUseScanMarkers();
+		}
 
 		setStoredValue(IApiCoreConstants.API_USE_SCAN_LOCATION, locations.toString());
 
位置:  -378,6 +386,22   public class ApiUseScanPreferencePage extends PreferencePage implements IWorkben
 		}
 	}
 
+	private void findAndDeleteAPIUseScanMarkers() {
+		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return;
+		}
+		for (IProject iProject : apiProjects) {
+			try {
+				iProject.deleteMarkers(IApiMarkerConstants.API_USESCAN_PROBLEM_MARKER, false,
+						IResource.DEPTH_INFINITE);
+			} catch (CoreException e) {
+			}
+
+		}
+		return;
+	}
+
 	/**
 	 * Detects changes to the use scan locations
 	 *

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java
位置:  -18,9 +18,11   import java.io.IOException;
 import java.nio.file.Files;
 import java.util.Arrays;
 import java.util.HashMap;
+import java.util.List;
 import java.util.Map;
 import java.util.Objects;
 import java.util.function.Predicate;
+import java.util.stream.Collectors;
 
 import org.eclipse.core.resources.ICommand;
 import org.eclipse.core.resources.IMarker;
位置:  -102,79 +104,90   public class ApiAnalysisApplication implements IApplication {
 
 	@Override
 	public Object start(IApplicationContext context) throws Exception {
-		IWorkspaceDescription desc = ResourcesPlugin.getWorkspace().getDescription();
-		desc.setAutoBuilding(false);
-		ResourcesPlugin.getWorkspace().setDescription(desc);
-		PDECore.getDefault().getPreferencesManager().setValue(ICoreConstants.DISABLE_API_ANALYSIS_BUILDER, false);
+		try {
+			IWorkspaceDescription desc = ResourcesPlugin.getWorkspace().getDescription();
+			desc.setAutoBuilding(false);
+			ResourcesPlugin.getWorkspace().setDescription(desc);
+			PDECore.getDefault().getPreferencesManager().setValue(ICoreConstants.DISABLE_API_ANALYSIS_BUILDER, false);
 
-		Request args = Request
-				.readFromArgs((String[]) context.getArguments().get(IApplicationContext.APPLICATION_ARGS));
-		IProject project = importProject(args.project);
-		if (project == null) {
-			System.err.println(
-			return IStatus.ERROR;
-		}
-		IApiBaseline baseline = setBaseline(args.baselinePath);
-		if (baseline == null) {
-			System.err.println(
-			return IStatus.ERROR;
-		}
-		setTargetPlatform(args.tpFile);
-		configureSeverity(project);
+			Request args = Request
+					.readFromArgs((String[]) context.getArguments().get(IApplicationContext.APPLICATION_ARGS));
+			IProject project = importProject(args.project);
+			if (project == null) {
+				System.err.println(
+				return IStatus.ERROR;
+			}
+			IApiBaseline baseline = setBaseline(args.baselinePath);
+			if (baseline == null) {
+				System.err.println(
+				return IStatus.ERROR;
+			}
+			setTargetPlatform(args.tpFile);
+			configureSeverity(project);
 
-		project.build(IncrementalProjectBuilder.FULL_BUILD, new NullProgressMonitor());
-		IMarker[] allProblemMarkers = project.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
-		Predicate<IMarker> isAPIMarker = marker -> {
-			try {
-				return marker.getType().startsWith(ApiPlugin.PLUGIN_ID);
-			} catch (CoreException e) {
-				ApiPlugin.log(e);
-				return false;
+			project.build(IncrementalProjectBuilder.FULL_BUILD, new NullProgressMonitor());
+			IMarker[] allProblemMarkers = project.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
+			Predicate<IMarker> isAPIMarker = marker -> {
+				try {
+					return marker.getType().startsWith(ApiPlugin.PLUGIN_ID);
+				} catch (CoreException e) {
+					ApiPlugin.log(e);
+					return false;
+				}
+			};
+			IMarker[] allAPIProbleMarkers = Arrays.stream(allProblemMarkers) //
+					.filter(isAPIMarker) //
+					.toArray(IMarker[]::new);
+			IMarker[] allNonAPIErrors = Arrays.stream(allProblemMarkers) //
+					.filter(isAPIMarker.negate()) //
+					.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR) //
+					.toArray(IMarker[]::new);
+			if (allNonAPIErrors.length > 0) {
+				System.err.println(
+				for (IMarker marker : allNonAPIErrors) {
+					System.err.println(
+				}
+				System.err.println(
+				return 10;
 			}
-		};
-		IMarker[] allAPIProbleMarkers = Arrays.stream(allProblemMarkers).filter(isAPIMarker).toArray(IMarker[]::new);
-		IMarker[] allNonAPIErrors = Arrays.stream(allProblemMarkers).filter(isAPIMarker.negate())
-				.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR)
-				.toArray(IMarker[]::new);
-		if (allNonAPIErrors.length > 0) {
-			System.err.println(
-			for (IMarker marker : allNonAPIErrors) {
+			// errors
+			IMarker[] errorMarkers = Arrays.stream(allAPIProbleMarkers)
+					.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR)
+					.toArray(IMarker[]::new);
+			System.err.println(errorMarkers.length + 
+			for (IMarker marker : errorMarkers) {
 				System.err.println(
 			}
-			System.err.println(
-			return 10;
-		}
-		// errors
-		IMarker[] errorMarkers = Arrays.stream(allAPIProbleMarkers)
-				.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR)
-				.toArray(IMarker[]::new);
-		System.err.println(errorMarkers.length + 
-		for (IMarker marker : errorMarkers) {
-			System.err.println(
-		}
-		// warnings
-		IMarker[] warningMarkers = Arrays.stream(allAPIProbleMarkers)
-				.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_WARNING)
-				.toArray(IMarker[]::new);
-		System.out.println(warningMarkers.length + 
-		for (IMarker marker : warningMarkers) {
-			System.out.println(
-		}
-		// fail
-		if (args.failOnError &amp;&amp; errorMarkers.length > 0) {
+			// warnings
+			IMarker[] warningMarkers = Arrays.stream(allAPIProbleMarkers)
+					.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_WARNING)
+					.toArray(IMarker[]::new);
+			System.out.println(warningMarkers.length + 
+			for (IMarker marker : warningMarkers) {
+				System.out.println(
+			}
+			// fail
+			if (args.failOnError &amp;&amp; errorMarkers.length > 0) {
+				return IStatus.ERROR;
+			}
+			return IStatus.OK;
+		} catch (Exception e) {
+			e.printStackTrace();
 			return IStatus.ERROR;
 		}
-		return IStatus.OK;
 	}
 
 	private void setTargetPlatform(File dependencyList) throws IOException, CoreException, InterruptedException {
 		if (dependencyList != null) {
+			if (!(dependencyList.isFile() &amp;&amp; dependencyList.canRead())) {
+				throw new IllegalArgumentException(
+			}
 			// File is typically the output of `mvn dependnecy:list
 			// -DoutputAbsoluteArtifactFilename=true -DoutputScope=false -DoutputFile=...`
 			// like
 			// ```
 			// The following files have been resolved:
-			// p2.eclipse-plugin:org.eclipse.equinox.event:jar:1.5.0.v20181008-1938:/home/mistria/.m2/repository/p2/osgi/bundle/org.eclipse.equinox.event/1.5.0.v20181008-1938/org.eclipse.equinox.event-1.5.0.v20181008-1938.jar
+			// p2.eclipse-plugin:org.eclipse.equinoxz.event:jar:1.5.0.v20181008-1938:/home/mistria/.m2/repository/p2/osgi/bundle/org.eclipse.equinox.event/1.5.0.v20181008-1938/org.eclipse.equinox.event-1.5.0.v20181008-1938.jar
 			// p2.eclipse-plugin:org.eclipse.equinox.p2.core:jar:2.6.0.v20190215-2242:/home/mistria/.m2/repository/p2/osgi/bundle/org.eclipse.equinox.p2.core/2.6.0.v20190215-2242/org.eclipse.equinox.p2.core-2.6.0.v20190215-2242.jar
 			// p2.eclipse-plugin:org.eclipse.osgi.compatibility.state:jar:1.1.400.v20190208-1533:/home/mistria/.m2/repository/p2/osgi/bundle/org.eclipse.osgi.compatibility.state/1.1.400.v20190208-1533/org.eclipse.osgi.compatibility.state-1.1.400.v20190208-1533.jar
 			// ```
位置:  -234,7 +247,16   public class ApiAnalysisApplication implements IApplication {
 		} else if (baselinePath.isFile() &amp;&amp; baselinePath.getName().endsWith(
 			ITargetPlatformService service = TargetPlatformService.getDefault();
 			ITargetDefinition definition = service.getTarget(baselinePath.toURI()).getTargetDefinition();
-			definition.resolve(new NullProgressMonitor());
+			IStatus resolutionStatus = definition.resolve(new NullProgressMonitor());
+			switch (resolutionStatus.getSeverity())
+				{
+				case IStatus.WARNING:
+					System.out.println(
+					break;
+				case IStatus.ERROR:
+					throw new CoreException(resolutionStatus);
+				default: // Nothing
+				}
 			ApiBaseline baseline = new ApiBaseline(baselinePath.getAbsolutePath());
 			for (TargetBundle bundle : definition.getAllBundles()) {
 				BundleInfo bundleInfo = bundle.getBundleInfo();
位置:  -288,9 +310,23   public class ApiAnalysisApplication implements IApplication {
 			projectDescription.setBuildSpec(builders);
 			res.setDescription(projectDescription, 0, new NullProgressMonitor());
 		}
+		ICommand[] buildSpec = projectDescription.getBuildSpec();
+		List<ICommand> newBuilders = removeManifestAndSchemaBuilders(buildSpec);
+		projectDescription.setBuildSpec(
+				newBuilders.toArray(new ICommand[newBuilders.size()]));
+		res.setDescription(projectDescription, new NullProgressMonitor());
 		return res;
 	}
 
+	private static List<ICommand> removeManifestAndSchemaBuilders(ICommand[] buildSpec) {
+		// remove manifest and schema builders
+		return Arrays.stream(buildSpec)
+				.filter(x -> !(
+				|| 
+
+				).collect(Collectors.toList());
+	}
+
 	@Override
 	public void stop() {
 		// Nothing to do

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/ApiAnalysisBuilder.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/ApiAnalysisBuilder.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -180,6 +180,12   public class ApiAnalysisBuilder extends IncrementalProjectBuilder {
 	private BuildState buildstate = null;
 
 	/**
+	 * Bug 549838:  In case auto-building on a API tools settings change  is not desired,
+	 * specify VM property: {@code -Dorg.eclipse.disableAutoBuildOnSettingsChange=true}
+	 */
+	private static final boolean DISABLE_AUTO_BUILDING_ON_SETTINGS_CHANGE = Boolean.getBoolean(
+
+	/**
 	 * Cleans up markers associated with API Tools on the given resource.
 	 *
 	 * @param resource
位置:  -535,6 +541,12   public class ApiAnalysisBuilder extends IncrementalProjectBuilder {
 					IFile file = (IFile) subdelta.getResource();
 					return file.getProject().equals(currentproject) &amp;&amp; compareBuildProperties(buildstate);
 				}
+				subdelta = delta.findMember(SETTINGS_PATH);
+				if (subdelta != null) {
+					if (!DISABLE_AUTO_BUILDING_ON_SETTINGS_CHANGE) {
+						return true;
+					}
+				}
 				break;
 			}
 			default: {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java
位置:  -73,6 +73,7   import org.eclipse.osgi.service.resolver.VersionRange;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.api.tools.internal.ApiBaselineManager;
 import org.eclipse.pde.api.tools.internal.ApiFilterStore;
+import org.eclipse.pde.api.tools.internal.IApiCoreConstants;
 import org.eclipse.pde.api.tools.internal.comparator.Delta;
 import org.eclipse.pde.api.tools.internal.model.ProjectComponent;
 import org.eclipse.pde.api.tools.internal.model.StubApiComponent;
位置:  -407,6 +408,10   public class BaseApiAnalyzer implements IApiAnalyzer {
 				System.out.println(
 			}
 		}
+		boolean checkState = hasCheckedAPIScanLocation();
+		if (checkState == false) {
+			return;
+		}
 		SubMonitor localmonitor = SubMonitor.convert(monitor, BuilderMessages.checking_external_dependencies, 10);
 		IReferenceDescriptor[] externalDependencies = UseScanManager.getInstance().getExternalDependenciesFor(apiComponent, apiUseTypes, localmonitor.split(10));
 		try {
位置:  -464,6 +469,25   public class BaseApiAnalyzer implements IApiAnalyzer {
 		}
 	}
 
+	private boolean hasCheckedAPIScanLocation() {
+		IEclipsePreferences node = InstanceScope.INSTANCE.getNode(ApiPlugin.PLUGIN_ID);
+		String location = node.get(IApiCoreConstants.API_USE_SCAN_LOCATION, null);
+		if (location == null || location.length() == 0) {
+			return false;
+		}
+		ArrayList<String> checkedLocations = new ArrayList<>();
+		if (location != null &amp;&amp; location.length() > 0) {
+			String[] locations = location.split(UseScanManager.ESCAPE_REGEX + UseScanManager.LOCATION_DELIM);
+			for (String locationString : locations) {
+				String values[] = locationString.split(UseScanManager.ESCAPE_REGEX + UseScanManager.STATE_DELIM);
+				if (Boolean.parseBoolean(values[1])) {
+					checkedLocations.add(values[0]);
+				}
+			}
+		}
+		return checkedLocations.size() > 0;
+	}
+
 	public boolean isSeverityEnabled(Properties properties) {
 		IEclipsePreferences node = InstanceScope.INSTANCE.getNode(ApiPlugin.PLUGIN_ID);
 		if (properties == null) {

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/Activator.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/Activator.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2015 Code 9 Corporation and others.
+ * Copyright (c) 2008, 2019 Code 9 Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -11,6 +11,7  
  * Contributors:
  *     Code 9 Corporation - initial API and implementation
  *     Rafael Oliveira Nobrega <rafael.oliveira@gmail.com> - bug 242028
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 549441, Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ds.ui;
 
位置:  -21,11 +22,12   import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.Status;
 import org.eclipse.jface.dialogs.ErrorDialog;
-import org.eclipse.jface.resource.ImageDescriptor;
 import org.eclipse.jface.resource.ImageRegistry;
+import org.eclipse.jface.resource.ResourceLocator;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
 import org.osgi.framework.BundleContext;
 
位置:  -70,42 +72,26   public class Activator extends AbstractUIPlugin {
 
 	@Override
 	protected void initializeImageRegistry(ImageRegistry registry) {
-		registry.put(SharedImages.DESC_IMPLEMENTATION,
-				createImageDescriptor(SharedImages.DESC_IMPLEMENTATION));
-		registry.put(SharedImages.DESC_PROPERTIES,
-				createImageDescriptor(SharedImages.DESC_PROPERTIES));
-		registry.put(SharedImages.DESC_PROPERTY,
-				createImageDescriptor(SharedImages.DESC_PROPERTY));
-		registry.put(SharedImages.DESC_PROVIDE,
-				createImageDescriptor(SharedImages.DESC_PROVIDE));
-		registry.put(SharedImages.DESC_REFERENCE,
-				createImageDescriptor(SharedImages.DESC_REFERENCE));
-		registry.put(SharedImages.DESC_REFERENCE_ZERO_N,
-				createImageDescriptor(SharedImages.DESC_REFERENCE_ZERO_N));
-		registry.put(SharedImages.DESC_REFERENCE_ZERO_ONE,
-				createImageDescriptor(SharedImages.DESC_REFERENCE_ZERO_ONE));
-		registry.put(SharedImages.DESC_REFERENCE_ONE_N,
-				createImageDescriptor(SharedImages.DESC_REFERENCE_ONE_N));
-		registry.put(SharedImages.DESC_ROOT,
-				createImageDescriptor(SharedImages.DESC_ROOT));
-		registry.put(SharedImages.DESC_SERVICE,
-				createImageDescriptor(SharedImages.DESC_SERVICE));
-		registry.put(SharedImages.DESC_SERVICES,
-				createImageDescriptor(SharedImages.DESC_SERVICES));
-		registry.put(SharedImages.DESC_DS,
-				createImageDescriptor(SharedImages.DESC_DS));
-		registry.put(SharedImages.DESC_ATTR,
-				createImageDescriptor(SharedImages.DESC_ATTR));
-		registry.put(SharedImages.OVR_DYNAMIC,
-				createImageDescriptor(SharedImages.OVR_DYNAMIC));
-		registry.put(SharedImages.DESC_DETAILS,
-				createImageDescriptor(SharedImages.DESC_DETAILS));
-		registry.put(SharedImages.DESC_DS_WIZ,
-				createImageDescriptor(SharedImages.DESC_DS_WIZ));
+		registerImageDescriptor(registry, SharedImages.DESC_IMPLEMENTATION);
+		registerImageDescriptor(registry, SharedImages.DESC_PROPERTIES);
+		registerImageDescriptor(registry, SharedImages.DESC_PROPERTY);
+		registerImageDescriptor(registry, SharedImages.DESC_PROVIDE);
+		registerImageDescriptor(registry, SharedImages.DESC_REFERENCE);
+		registerImageDescriptor(registry, SharedImages.DESC_REFERENCE_ZERO_N);
+		registerImageDescriptor(registry, SharedImages.DESC_REFERENCE_ZERO_ONE);
+		registerImageDescriptor(registry, SharedImages.DESC_REFERENCE_ONE_N);
+		registerImageDescriptor(registry, SharedImages.DESC_ROOT);
+		registerImageDescriptor(registry, SharedImages.DESC_SERVICE);
+		registerImageDescriptor(registry, SharedImages.DESC_SERVICES);
+		registerImageDescriptor(registry, SharedImages.DESC_DS);
+		registerImageDescriptor(registry, SharedImages.DESC_ATTR);
+		registerImageDescriptor(registry, SharedImages.OVR_DYNAMIC);
+		registerImageDescriptor(registry, SharedImages.DESC_DETAILS);
+		registerImageDescriptor(registry, SharedImages.DESC_DS_WIZ);
 	}
 
-	private ImageDescriptor createImageDescriptor(String id) {
-		return imageDescriptorFromPlugin(PLUGIN_ID, id);
+	private void registerImageDescriptor(ImageRegistry registry, String id) {
+		ResourceLocator.imageDescriptorFromBundle(PLUGIN_ID, id).ifPresent(d -> registry.put(id, d));
 	}
 
 	public static Shell getActiveWorkbenchShell() {
位置:  -117,7 +103,7   public class Activator extends AbstractUIPlugin {
 	}
 
 	public static IWorkbenchWindow getActiveWorkbenchWindow() {
-		return getDefault().getWorkbench().getActiveWorkbenchWindow();
+		return PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 	}
 
 	public static void logException(Throwable e, final String title,

原文件: u
原文件: org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/u
原文件: ui/PDEUserAssistanceUIPlugin.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/PDEUserAssistanceUIPlugin.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2017  IBM Corporation and others.
+ * Copyright (c) 2008, 2019  IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  * Contributors:
  *     Chris Aniszczyk <zx@code9.com> - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ua.ui;
 
位置:  -24,6 +25,7   import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.IWorkbenchPage;
 import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
 import org.osgi.framework.BundleContext;
 
位置:  -76,7 +78,7   public class PDEUserAssistanceUIPlugin extends AbstractUIPlugin {
 	}
 
 	public static IWorkbenchWindow getActiveWorkbenchWindow() {
-		return getDefault().getWorkbench().getActiveWorkbenchWindow();
+		return PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 	}
 
 	public static void logException(Throwable e, final String title,

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetDefinition.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetDefinition.java
位置:  -1,340 +1,340  
-/*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2008, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *     Lucas Bullen (Red Hat Inc.) - [Bug 531602] formatting munged by editor
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import org.eclipse.core.runtime.IPath;
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.MultiStatus;
-import org.eclipse.jdt.launching.JavaRuntime;
-import org.eclipse.osgi.service.environment.Constants;
-import org.w3c.dom.Document;
-
-/**
- * Defines a target platform. A target platform is a collection of bundles and
- * features configured for a specific environment.
- *
- * @see ITargetPlatformService Use the target platform service to work with target definitions
- *
- * @since 3.8
- * @noimplement This interface is not intended to be implemented by clients.
- * @noextend This interface is not intended to be extended by clients.
- */
-public interface ITargetDefinition {
-
-	/**
-	 * Resolves all contents of this target definition by resolving each
-	 * {@link ITargetLocation} in this target definition.
-	 * <p>
-	 * Returns a {@link MultiStatus} containing any non-OK statuses produced
-	 * when resolving each {@link ITargetLocation}.  An OK status will be
-	 * returned if no non-OK statuses are returned from the locations. A
-	 * CANCEL status will be returned if the monitor is cancelled.
-	 * </p><p>
-	 * For more information on how a target resolves, see
-	 * {@link ITargetLocation#resolve(ITargetDefinition, IProgressMonitor)}
-	 * </p>
-	 *
-	 * @param monitor progress monitor or <code>null</code>
-	 * @return resolution multi-status
-	 */
-	IStatus resolve(IProgressMonitor monitor);
-
-	/**
-	 * Returns whether all {@link ITargetLocation}s in this target currently in
-	 * a resolved state.
-	 *
-	 * @return <code>true</code> if all locations are currently resolved
-	 */
-	boolean isResolved();
-
-	/**
-	 * Sets the XML document that stores the state of this target. The document is
-	 * updated with each setter that has an affect on the target file source.
-	 *
-	 * @param document
-	 *                     xml document or <code>null</code>
-	 * @since 3.12
-	 */
-	void setDocument(Document document);
-
-	/**
-	 * Returns the Document that represents this target, or <code>null</code> if
-	 * none
-	 *
-	 * @return document or <code>null</code>
-	 * @since 3.12
-	 */
-	Document getDocument();
-
-	/**
-	 * Returns all bundles included in this target definition or <code>null</code>
-	 * if this container is not resolved. Takes all the bundles available from the
-	 * set target locations (returned by {@link #getAllBundles()} and applies
-	 * the filters (returned by {@link #getIncluded()})
-	 * to determine the final list of bundles in this target.
-	 * <p>
-	 * Some of the returned bundles may have non-OK statuses. These bundles may be
-	 * missing some information (location, version, source target). To get a bundle's
-	 * status call {@link TargetBundle#getStatus()}. Calling {@link #getStatus()}
-	 * will return all problems in this target definition.
-	 * </p>
-	 * @return resolved bundles or <code>null</code>
-	 */
-	TargetBundle[] getBundles();
-
-	/**
-	 * Returns a list of all resolved bundles in this target definition or <code>null</code>.
-	 * Does not filter based on any filters ({@link #getIncluded()}.
-	 * Returns <code>null</code> if this target has not been resolved.
-	 * Use {@link #getBundles()} to get the filtered list of bundles.
-	 * <p>
-	 * Some of the returned bundles may have non-OK statuses. These bundles may be
-	 * missing some information (location, version, source target). To get a bundle's
-	 * status call {@link TargetBundle#getStatus()}. Calling {@link #getStatus()}
-	 * will return all problems in this target definition.
-	 * </p>
-	 *
-	 * @return collection of resolved bundles or <code>null</code>
-	 */
-	TargetBundle[] getAllBundles();
-
-	/**
-	 * Returns the list of feature models available in this target or <code>null</code> if
-	 * this target has not been resolved.
-	 *
-	 * @return collection of feature models or <code>null</code>
-	 */
-	TargetFeature[] getAllFeatures();
-
-	/**
-	 * Returns a {@link MultiStatus} containing all problems with this target.
-	 * Returns an OK status if there are no problems. Returns <code>null</code>
-	 * if this target has not been resolved.
-	 * <p>
-	 * The returned status will include all non-OK statuses returned by
-	 * {@link #resolve(IProgressMonitor)} as well as any non-OK statuses found
-	 * in {@link TargetBundle}s returned by {@link #getBundles()}. For more
-	 * information on the statuses that can be returned see
-	 * {@link ITargetLocation#getStatus()} and {@link TargetBundle#getStatus()}.
-	 * </p>
-	 *
-	 * @return {@link MultiStatus} containing all problems with this target or
-	 *         <code>null</code>
-	 */
-	IStatus getStatus();
-
-	/**
-	 * Returns a handle to this target definition.
-	 *
-	 * @return target handle
-	 */
-	ITargetHandle getHandle();
-
-	/**
-	 * Returns the name of this target, or <code>null</code> if none
-	 *
-	 * @return name or <code>null</code>
-	 */
-	String getName();
-
-	/**
-	 * Sets the name of this target.
-	 *
-	 * @param name target name or <code>null</code>
-	 */
-	void setName(String name);
-
-	/**
-	 * Returns the locations defined by this target, possible <code>null</code>.
-	 *
-	 * @return target locations or <code>null</code>
-	 */
-	ITargetLocation[] getTargetLocations();
-
-	/**
-	 * Sets the locations in this target definition or <code>null</code> if none.
-	 *
-	 * @param containers target locations or <code>null</code>
-	 */
-	void setTargetLocations(ITargetLocation[] containers);
-
-	/**
-	 * Returns a list of descriptors that filter the resolved plug-ins in this target.  The list may include
-	 * both plug-ins and features.  The returned descriptors will have an id, may have a version and will have
-	 * either {@link NameVersionDescriptor#TYPE_FEATURE} or {@link NameVersionDescriptor#TYPE_PLUGIN} as their
-	 * type.  If the target is set to include all units (no filtering is being done), this method will return
-	 * <code>null</code>.
-	 *
-	 * @see #getBundles()
-	 * @see #setIncluded(NameVersionDescriptor[])
-	 * @return list of name version descriptors or <code>null</code>
-	 */
-	NameVersionDescriptor[] getIncluded();
-
-	/**
-	 * Sets a list of descriptors to filter the resolved plug-ins in this target.  The list may include both
-	 * plug-ins and features.  To include all plug-ins in the target, pass <code>null</code> as the argument.
-	 * <p>
-	 * The descriptions passed to this method must have an ID set.  The version may be <code>null</code>
-	 * to include any version of the matches the ID.  Only descriptors with a type of {@link NameVersionDescriptor#TYPE_FEATURE}
-	 * or {@link NameVersionDescriptor#TYPE_PLUGIN} will be considered.
-	 * </p>
-	 * @see #getBundles()
-	 * @see #getIncluded()
-	 * @param included list of descriptors to include in the target or <code>null</code> to include all plug-ins
-	 */
-	void setIncluded(NameVersionDescriptor[] included);
-
-	/**
-	 * Returns JRE container path that this target definition should be built against,
-	 * or <code>null</code> if the workspace default JRE should be used. JavaRuntime can be used
-	 * to resolve JRE's and execution environments from a container path.
-	 *
-	 * @return JRE container path or <code>null</code>
-	 * @see JavaRuntime
-	 */
-	IPath getJREContainer();
-
-	/**
-	 * Sets the JRE that this target definition should be built against, or <code>null</code>
-	 * to use the workspace default JRE. JavaRuntime should be used to generate and parse
-	 * JRE container paths.
-	 *
-	 * @param containerPath JRE container path
-	 * @see JavaRuntime
-	 */
-	void setJREContainer(IPath containerPath);
-
-	/**
-	 * Returns the identifier of the operating system this target is configured for,
-	 * possibly <code>null</code>.
-	 *
-	 * @return operating system identifier or <code>null</code> to default to the
-	 * 	running operating system
-	 */
-	String getOS();
-
-	/**
-	 * Sets the operating system this target is configured for or <code>null</code> to
-	 * default to the running operating system.
-	 *
-	 * @param os operating system identifier - one of the operating system constants
-	 * 	defined by {@link Constants} or <code>null</code> to default to the running
-	 * 	operating system
-	 */
-	void setOS(String os);
-
-	/**
-	 * Returns the identifier of the window system this target is configured for,
-	 * possibly <code>null</code>.
-	 *
-	 * @return window system identifier - one of the window system constants
-	 * 	defined by {@link Constants}, or <code>null</code> to default to the
-	 * 	running window system
-	 */
-	String getWS();
-
-	/**
-	 * Sets the window system this target is configured for or <code>null</code> to
-	 * default to the running window system.
-	 *
-	 * @param ws window system identifier or <code>null</code> to default to the
-	 * 	running window system
-	 */
-	void setWS(String ws);
-
-	/**
-	 * Returns the identifier of the architecture this target is configured for,
-	 * or <code>null</code> to default to the running architecture.
-	 *
-	 * @return architecture identifier - one of the architecture constants
-	 * 	defined by {@link Constants} or <code>null</code> to default to the running
-	 * 	architecture
-	 */
-	String getArch();
-
-	/**
-	 * Sets the architecture this target is configured for, or <code>null</code> to default
-	 * to the running architecture.
-	 *
-	 * @param arch architecture identifier or <code>null</code> to default to the
-	 * 	running architecture.
-	 */
-	void setArch(String arch);
-
-	/**
-	 * Returns the identifier of the locale this target is configured for, or <code>null</code>
-	 * for default.
-	 *
-	 * @return locale identifier or <code>null</code> for default
-	 */
-	String getNL();
-
-	/**
-	 * Sets the locale this target is configured for or <code>null</code> for default.
-	 *
-	 * @param nl locale identifier or <code>null</code> for default
-	 */
-	void setNL(String nl);
-
-	/**
-	 * Returns any program arguments that should be used when launching this target
-	 * or <code>null</code> if none.
-	 *
-	 * @return program arguments or <code>null</code> if none
-	 */
-	String getProgramArguments();
-
-	/**
-	 * Sets any program arguments that should be used when launching this target
-	 * or <code>null</code> if none.
-	 *
-	 * @param args program arguments or <code>null</code>
-	 */
-	void setProgramArguments(String args);
-
-	/**
-	 * Returns any VM arguments that should be used when launching this target
-	 * or <code>null</code> if none.
-	 *
-	 * @return VM arguments or <code>null</code> if none
-	 */
-	String getVMArguments();
-
-	/**
-	 * Sets any VM arguments that should be used when launching this target
-	 * or <code>null</code> if none.
-	 *
-	 * @param args VM arguments or <code>null</code>
-	 */
-	void setVMArguments(String args);
-
-	/**
-	 * Sets implicit dependencies for this target. Bundles in this collection are always
-	 * considered by PDE when computing plug-in dependencies. Only symbolic names need to
-	 * be specified in the given descriptors.
-	 *
-	 * @param bundles implicit dependencies or <code>null</code> if none
-	 */
-	void setImplicitDependencies(NameVersionDescriptor[] bundles);
-
-	/**
-	 * Returns the implicit dependencies set on this target or <code>null</code> if none.
-	 *
-	 * @return implicit dependencies or <code>null</code>
-	 */
-	NameVersionDescriptor[] getImplicitDependencies();
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *     Lucas Bullen (Red Hat Inc.) - [Bug 531602] formatting munged by editor
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.MultiStatus;
+import org.eclipse.jdt.launching.JavaRuntime;
+import org.eclipse.osgi.service.environment.Constants;
+import org.w3c.dom.Document;
+
+/**
+ * Defines a target platform. A target platform is a collection of bundles and
+ * features configured for a specific environment.
+ *
+ * @see ITargetPlatformService Use the target platform service to work with target definitions
+ *
+ * @since 3.8
+ * @noimplement This interface is not intended to be implemented by clients.
+ * @noextend This interface is not intended to be extended by clients.
+ */
+public interface ITargetDefinition {
+
+	/**
+	 * Resolves all contents of this target definition by resolving each
+	 * {@link ITargetLocation} in this target definition.
+	 * <p>
+	 * Returns a {@link MultiStatus} containing any non-OK statuses produced
+	 * when resolving each {@link ITargetLocation}.  An OK status will be
+	 * returned if no non-OK statuses are returned from the locations. A
+	 * CANCEL status will be returned if the monitor is cancelled.
+	 * </p><p>
+	 * For more information on how a target resolves, see
+	 * {@link ITargetLocation#resolve(ITargetDefinition, IProgressMonitor)}
+	 * </p>
+	 *
+	 * @param monitor progress monitor or <code>null</code>
+	 * @return resolution multi-status
+	 */
+	IStatus resolve(IProgressMonitor monitor);
+
+	/**
+	 * Returns whether all {@link ITargetLocation}s in this target currently in
+	 * a resolved state.
+	 *
+	 * @return <code>true</code> if all locations are currently resolved
+	 */
+	boolean isResolved();
+
+	/**
+	 * Sets the XML document that stores the state of this target. The document is
+	 * updated with each setter that has an affect on the target file source.
+	 *
+	 * @param document
+	 *                     xml document or <code>null</code>
+	 * @since 3.12
+	 */
+	void setDocument(Document document);
+
+	/**
+	 * Returns the Document that represents this target, or <code>null</code> if
+	 * none
+	 *
+	 * @return document or <code>null</code>
+	 * @since 3.12
+	 */
+	Document getDocument();
+
+	/**
+	 * Returns all bundles included in this target definition or <code>null</code>
+	 * if this container is not resolved. Takes all the bundles available from the
+	 * set target locations (returned by {@link #getAllBundles()} and applies
+	 * the filters (returned by {@link #getIncluded()})
+	 * to determine the final list of bundles in this target.
+	 * <p>
+	 * Some of the returned bundles may have non-OK statuses. These bundles may be
+	 * missing some information (location, version, source target). To get a bundle's
+	 * status call {@link TargetBundle#getStatus()}. Calling {@link #getStatus()}
+	 * will return all problems in this target definition.
+	 * </p>
+	 * @return resolved bundles or <code>null</code>
+	 */
+	TargetBundle[] getBundles();
+
+	/**
+	 * Returns a list of all resolved bundles in this target definition or <code>null</code>.
+	 * Does not filter based on any filters ({@link #getIncluded()}.
+	 * Returns <code>null</code> if this target has not been resolved.
+	 * Use {@link #getBundles()} to get the filtered list of bundles.
+	 * <p>
+	 * Some of the returned bundles may have non-OK statuses. These bundles may be
+	 * missing some information (location, version, source target). To get a bundle's
+	 * status call {@link TargetBundle#getStatus()}. Calling {@link #getStatus()}
+	 * will return all problems in this target definition.
+	 * </p>
+	 *
+	 * @return collection of resolved bundles or <code>null</code>
+	 */
+	TargetBundle[] getAllBundles();
+
+	/**
+	 * Returns the list of feature models available in this target or <code>null</code> if
+	 * this target has not been resolved.
+	 *
+	 * @return collection of feature models or <code>null</code>
+	 */
+	TargetFeature[] getAllFeatures();
+
+	/**
+	 * Returns a {@link MultiStatus} containing all problems with this target.
+	 * Returns an OK status if there are no problems. Returns <code>null</code>
+	 * if this target has not been resolved.
+	 * <p>
+	 * The returned status will include all non-OK statuses returned by
+	 * {@link #resolve(IProgressMonitor)} as well as any non-OK statuses found
+	 * in {@link TargetBundle}s returned by {@link #getBundles()}. For more
+	 * information on the statuses that can be returned see
+	 * {@link ITargetLocation#getStatus()} and {@link TargetBundle#getStatus()}.
+	 * </p>
+	 *
+	 * @return {@link MultiStatus} containing all problems with this target or
+	 *         <code>null</code>
+	 */
+	IStatus getStatus();
+
+	/**
+	 * Returns a handle to this target definition.
+	 *
+	 * @return target handle
+	 */
+	ITargetHandle getHandle();
+
+	/**
+	 * Returns the name of this target, or <code>null</code> if none
+	 *
+	 * @return name or <code>null</code>
+	 */
+	String getName();
+
+	/**
+	 * Sets the name of this target.
+	 *
+	 * @param name target name or <code>null</code>
+	 */
+	void setName(String name);
+
+	/**
+	 * Returns the locations defined by this target, possible <code>null</code>.
+	 *
+	 * @return target locations or <code>null</code>
+	 */
+	ITargetLocation[] getTargetLocations();
+
+	/**
+	 * Sets the locations in this target definition or <code>null</code> if none.
+	 *
+	 * @param containers target locations or <code>null</code>
+	 */
+	void setTargetLocations(ITargetLocation[] containers);
+
+	/**
+	 * Returns a list of descriptors that filter the resolved plug-ins in this target.  The list may include
+	 * both plug-ins and features.  The returned descriptors will have an id, may have a version and will have
+	 * either {@link NameVersionDescriptor#TYPE_FEATURE} or {@link NameVersionDescriptor#TYPE_PLUGIN} as their
+	 * type.  If the target is set to include all units (no filtering is being done), this method will return
+	 * <code>null</code>.
+	 *
+	 * @see #getBundles()
+	 * @see #setIncluded(NameVersionDescriptor[])
+	 * @return list of name version descriptors or <code>null</code>
+	 */
+	NameVersionDescriptor[] getIncluded();
+
+	/**
+	 * Sets a list of descriptors to filter the resolved plug-ins in this target.  The list may include both
+	 * plug-ins and features.  To include all plug-ins in the target, pass <code>null</code> as the argument.
+	 * <p>
+	 * The descriptions passed to this method must have an ID set.  The version may be <code>null</code>
+	 * to include any version of the matches the ID.  Only descriptors with a type of {@link NameVersionDescriptor#TYPE_FEATURE}
+	 * or {@link NameVersionDescriptor#TYPE_PLUGIN} will be considered.
+	 * </p>
+	 * @see #getBundles()
+	 * @see #getIncluded()
+	 * @param included list of descriptors to include in the target or <code>null</code> to include all plug-ins
+	 */
+	void setIncluded(NameVersionDescriptor[] included);
+
+	/**
+	 * Returns JRE container path that this target definition should be built against,
+	 * or <code>null</code> if the workspace default JRE should be used. JavaRuntime can be used
+	 * to resolve JRE's and execution environments from a container path.
+	 *
+	 * @return JRE container path or <code>null</code>
+	 * @see JavaRuntime
+	 */
+	IPath getJREContainer();
+
+	/**
+	 * Sets the JRE that this target definition should be built against, or <code>null</code>
+	 * to use the workspace default JRE. JavaRuntime should be used to generate and parse
+	 * JRE container paths.
+	 *
+	 * @param containerPath JRE container path
+	 * @see JavaRuntime
+	 */
+	void setJREContainer(IPath containerPath);
+
+	/**
+	 * Returns the identifier of the operating system this target is configured for,
+	 * possibly <code>null</code>.
+	 *
+	 * @return operating system identifier or <code>null</code> to default to the
+	 * 	running operating system
+	 */
+	String getOS();
+
+	/**
+	 * Sets the operating system this target is configured for or <code>null</code> to
+	 * default to the running operating system.
+	 *
+	 * @param os operating system identifier - one of the operating system constants
+	 * 	defined by {@link Constants} or <code>null</code> to default to the running
+	 * 	operating system
+	 */
+	void setOS(String os);
+
+	/**
+	 * Returns the identifier of the window system this target is configured for,
+	 * possibly <code>null</code>.
+	 *
+	 * @return window system identifier - one of the window system constants
+	 * 	defined by {@link Constants}, or <code>null</code> to default to the
+	 * 	running window system
+	 */
+	String getWS();
+
+	/**
+	 * Sets the window system this target is configured for or <code>null</code> to
+	 * default to the running window system.
+	 *
+	 * @param ws window system identifier or <code>null</code> to default to the
+	 * 	running window system
+	 */
+	void setWS(String ws);
+
+	/**
+	 * Returns the identifier of the architecture this target is configured for,
+	 * or <code>null</code> to default to the running architecture.
+	 *
+	 * @return architecture identifier - one of the architecture constants
+	 * 	defined by {@link Constants} or <code>null</code> to default to the running
+	 * 	architecture
+	 */
+	String getArch();
+
+	/**
+	 * Sets the architecture this target is configured for, or <code>null</code> to default
+	 * to the running architecture.
+	 *
+	 * @param arch architecture identifier or <code>null</code> to default to the
+	 * 	running architecture.
+	 */
+	void setArch(String arch);
+
+	/**
+	 * Returns the identifier of the locale this target is configured for, or <code>null</code>
+	 * for default.
+	 *
+	 * @return locale identifier or <code>null</code> for default
+	 */
+	String getNL();
+
+	/**
+	 * Sets the locale this target is configured for or <code>null</code> for default.
+	 *
+	 * @param nl locale identifier or <code>null</code> for default
+	 */
+	void setNL(String nl);
+
+	/**
+	 * Returns any program arguments that should be used when launching this target
+	 * or <code>null</code> if none.
+	 *
+	 * @return program arguments or <code>null</code> if none
+	 */
+	String getProgramArguments();
+
+	/**
+	 * Sets any program arguments that should be used when launching this target
+	 * or <code>null</code> if none.
+	 *
+	 * @param args program arguments or <code>null</code>
+	 */
+	void setProgramArguments(String args);
+
+	/**
+	 * Returns any VM arguments that should be used when launching this target
+	 * or <code>null</code> if none.
+	 *
+	 * @return VM arguments or <code>null</code> if none
+	 */
+	String getVMArguments();
+
+	/**
+	 * Sets any VM arguments that should be used when launching this target
+	 * or <code>null</code> if none.
+	 *
+	 * @param args VM arguments or <code>null</code>
+	 */
+	void setVMArguments(String args);
+
+	/**
+	 * Sets implicit dependencies for this target. Bundles in this collection are always
+	 * considered by PDE when computing plug-in dependencies. Only symbolic names need to
+	 * be specified in the given descriptors.
+	 *
+	 * @param bundles implicit dependencies or <code>null</code> if none
+	 */
+	void setImplicitDependencies(NameVersionDescriptor[] bundles);
+
+	/**
+	 * Returns the implicit dependencies set on this target or <code>null</code> if none.
+	 *
+	 * @return implicit dependencies or <code>null</code>
+	 */
+	NameVersionDescriptor[] getImplicitDependencies();
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/TargetBundle.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/TargetBundle.java
位置:  -1,279 +1,280  
-/*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2017 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import java.io.BufferedInputStream;
-import java.io.ByteArrayInputStream;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.util.Map;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IConfigurationElement;
-import org.eclipse.core.runtime.IExtension;
-import org.eclipse.core.runtime.IExtensionRegistry;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.RegistryFactory;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.core.runtime.spi.RegistryContributor;
-import org.eclipse.equinox.frameworkadmin.BundleInfo;
-import org.eclipse.osgi.util.ManifestElement;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.internal.core.ICoreConstants;
-import org.eclipse.pde.internal.core.PDECore;
-import org.eclipse.pde.internal.core.target.Messages;
-import org.eclipse.pde.internal.core.util.ManifestUtils;
-import org.osgi.framework.BundleException;
-import org.osgi.framework.Constants;
-
-/**
- * Describes a single bundle in a target definition. Also used to represent
- * content in the target that is missing or invalid.
- *
- * @since 3.8
- */
-public class TargetBundle {
-
-	/**
-	 * Status code indicating that this target bundle represents a required plug-in that is missing from a target definition
-	 */
-	public static final int STATUS_PLUGIN_DOES_NOT_EXIST = 100;
-
-	/**
-	 * Status code indicating that this target bundle represents a required feature that is missing from a target definition
-	 */
-	public static final int STATUS_FEATURE_DOES_NOT_EXIST = 110;
-
-	/**
-	 * Status code indicating that a required bundle version does not exist (a bundle
-	 * with the correct symbolic name is present, but the specified version was not
-	 * found).
-	 */
-	public static final int STATUS_VERSION_DOES_NOT_EXIST = 101;
-
-	/**
-	 * Status code indicating that a bundle's manifest could not be read, or did not exist.
-	 */
-	public static final int STATUS_INVALID_MANIFEST = 102;
-
-	protected BundleInfo fInfo;
-	protected boolean fIsFragment = false;
-	protected BundleInfo fSourceTarget;
-	protected String fSourcePath = null;
-
-	/**
-	 * Constructs a target bundle for a local bundle.  The bundle may be a directory or
-	 * an archive file. The manifest of the bundle will be read to collect the additional
-	 * information.
-	 *
-	 * @param bundleLocation the location of the bundle (directory or archive) to open
-	 * @throws CoreException if there is a problem opening the bundle or its manifest
-	 */
-	public TargetBundle(File bundleLocation) throws CoreException {
-		initialize(bundleLocation);
-	}
-
-	/**
-	 * Constructs an empty target bundle with no information.
-	 */
-	protected TargetBundle() {
-		fInfo = new BundleInfo();
-	}
-
-	/**
-	 * Returns a {@link BundleInfo} object containing additional information about the bundle
-	 * this target bundle represents. It is not guaranteed that the bundle info will have any
-	 * fields set.  The base implementation of {@link TargetBundle} will fill in the location,
-	 * symbolic name and version if that information was available in the bundle's manifest.
-	 *
-	 * @return a bundle info object with information on the bundle this target bundle represents
-	 */
-	public BundleInfo getBundleInfo() {
-		return fInfo;
-	}
-
-	/**
-	 * Returns a status object describing any problems with this target bundle. The base
-	 * implementation of {@link TargetBundle} will always return an OK status.
-	 *
-	 * @return status of this bundle
-	 */
-	public IStatus getStatus() {
-		// The status will always be ok as the constructor would throw an exception for any issues.
-		return Status.OK_STATUS;
-	}
-
-	/**
-	 * Returns <code>true</code> if this bundle is a source bundle and
-	 * <code>false</code> if this bundle is an executable bundle.
-	 *
-	 * @return whether the resolved bundle is a source bundle
-	 */
-	public boolean isSourceBundle() {
-		return fSourceTarget != null;
-	}
-
-	/**
-	 * If this bundle is a source bundle this method returns a bundle info
-	 * representing the executable bundle that this bundle provides source for.
-	 * The returned bundle info may not have a symbolic name and version set if
-	 * this source bundle is an old style source plug-in.
-	 *
-	 * @return bundle info representing bundle this bundle provides source for or <code>null</code>
-	 */
-	public BundleInfo getSourceTarget() {
-		return fSourceTarget;
-	}
-
-	/**
-	 * Returns whether this bundle is a fragment.
-	 *
-	 * @return whether this bundle is a fragment
-	 */
-	public boolean isFragment() {
-		return fIsFragment;
-	}
-
-	/**
-	 * Returns bundle relative path to old-style source folders, or <code>null</code>
-	 * if not applicable.
-	 *
-	 * @return bundle relative path to old-style source folders, or <code>null</code>
-	 */
-	public String getSourcePath() {
-		return fSourcePath;
-	}
-
-	/**
-	 * Initializes the contents of this target bundle from the provided local bundle
-	 *
-	 * @param file the bundle to initialize from
-	 */
-	private void initialize(File file) throws CoreException {
-		if (file == null || !file.exists()) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetFeature_FileDoesNotExist, file)));
-		}
-		Map<String, String> manifest = ManifestUtils.loadManifest(file);
-		try {
-			fInfo = new BundleInfo(file.toURI());
-			// Attempt to retrieve additional bundle information from the manifest
-			String header = manifest.get(Constants.BUNDLE_SYMBOLICNAME);
-			if (header != null) {
-				ManifestElement[] elements = ManifestElement.parseHeader(Constants.BUNDLE_SYMBOLICNAME, header);
-				if (elements != null) {
-					String name = elements[0].getValue();
-					if (name != null) {
-						fInfo.setSymbolicName(name);
-						header = manifest.get(Constants.BUNDLE_VERSION);
-						if (header != null) {
-							elements = ManifestElement.parseHeader(Constants.BUNDLE_VERSION, header);
-							if (elements != null) {
-								fInfo.setVersion(elements[0].getValue());
-							}
-						}
-					}
-					fSourceTarget = getProvidedSource(file, name, manifest);
-				}
-			}
-			fIsFragment = manifest.containsKey(Constants.FRAGMENT_HOST);
-		} catch (BundleException e) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, STATUS_INVALID_MANIFEST, NLS.bind(Messages.TargetBundle_ErrorReadingManifest, file.getAbsolutePath()), e));
-		}
-	}
-
-	/**
-	 * If the given bundle is a source bundle, the bundle that this bundle provides source for will be returned.
-	 * If the given bundle is not a source bundle or there was a problem getting the source target, <code>null</code>
-	 * will be returned.
-	 *
-	 * @param bundle location of the bundle in the file system, can be <code>null</code> to skip searching plugin.xml
-	 * @param symbolicName symbolic name of the bundle, can be <code>null</code> to skip searching of plugin.xml
-	 * @param manifest the bundle's manifest, can be <code>null</code> to skip searching of manifest entries
-	 * @return bundle for provided source or <code>null</code> if not a source bundle
-	 */
-	private BundleInfo getProvidedSource(File bundle, String symbolicName, Map<String, String> manifest) {
-		fSourcePath = null;
-		if (manifest != null) {
-			if (manifest.containsKey(ICoreConstants.ECLIPSE_SOURCE_BUNDLE)) {
-				try {
-					ManifestElement[] manifestElements = ManifestElement.parseHeader(ICoreConstants.ECLIPSE_SOURCE_BUNDLE, manifest.get(ICoreConstants.ECLIPSE_SOURCE_BUNDLE));
-					if (manifestElements != null) {
-						for (ManifestElement element : manifestElements) {
-							String binaryPluginName = element.getValue();
-							String versionEntry = element.getAttribute(Constants.VERSION_ATTRIBUTE);
-							// Currently the version attribute is required
-							if (binaryPluginName != null &amp;&amp; binaryPluginName.length() > 0 &amp;&amp; versionEntry != null &amp;&amp; versionEntry.length() > 0) {
-								return new BundleInfo(binaryPluginName, versionEntry, null, BundleInfo.NO_LEVEL, false);
-							}
-						}
-					}
-				} catch (BundleException e) {
-					PDECore.log(e);
-					return null;
-				}
-			}
-			// source bundles never have a class path
-			if (manifest.containsKey(Constants.BUNDLE_CLASSPATH)) {
-				return null;
-			}
-		}
-
-		if (bundle != null &amp;&amp; symbolicName != null) {
-			// old source bundles were never jar'd
-			if (bundle.isFile()) {
-				return null;
-			}
-
-			// check for an 
-			File pxml = new File(bundle, ICoreConstants.PLUGIN_FILENAME_DESCRIPTOR);
-			if (!pxml.exists()) {
-				pxml = new File(bundle, ICoreConstants.FRAGMENT_FILENAME_DESCRIPTOR);
-			}
-			if (pxml.exists()) {
-				IExtensionRegistry registry = RegistryFactory.createRegistry(null, this, this);
-				// Contribute PDE source extension point
-				String bogusDef = 
-				RegistryContributor pointContributor = new RegistryContributor(PDECore.PLUGIN_ID, PDECore.PLUGIN_ID, null, null);
-				registry.addContribution(new ByteArrayInputStream(bogusDef.getBytes()), pointContributor, false, null, null, this);
-				// Search for extensions to the extension point
-				RegistryContributor contributor = new RegistryContributor(symbolicName, symbolicName, null, null);
-				try {
-					registry.addContribution(new BufferedInputStream(new FileInputStream(pxml)), contributor, false, null, null, this);
-					IExtension[] extensions = registry.getExtensions(contributor);
-					for (IExtension extension : extensions) {
-						if (ICoreConstants.EXTENSION_POINT_SOURCE.equals(extension.getExtensionPointUniqueIdentifier())) {
-							IConfigurationElement[] elements = extension.getConfigurationElements();
-							if (elements.length == 1) {
-								fSourcePath = elements[0].getAttribute(
-							}
-							return new BundleInfo(null, null, bundle.toURI(), BundleInfo.NO_LEVEL, false);
-						}
-					}
-				} catch (FileNotFoundException e) {
-				}
-			}
-		}
-		return null;
-	}
-
-	@Override
-	public String toString() {
-		StringBuilder result = new StringBuilder(getBundleInfo().toString());
-		IStatus status = getStatus();
-		if (status != null &amp;&amp; !status.isOK()) {
-			result.append(' ').append(status.toString());
-		}
-		return result.toString();
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import java.io.BufferedInputStream;
+import java.io.ByteArrayInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.util.Map;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IConfigurationElement;
+import org.eclipse.core.runtime.IExtension;
+import org.eclipse.core.runtime.IExtensionRegistry;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.RegistryFactory;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.spi.RegistryContributor;
+import org.eclipse.equinox.frameworkadmin.BundleInfo;
+import org.eclipse.osgi.util.ManifestElement;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.internal.core.ICoreConstants;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.target.Messages;
+import org.eclipse.pde.internal.core.util.ManifestUtils;
+import org.osgi.framework.BundleException;
+import org.osgi.framework.Constants;
+
+/**
+ * Describes a single bundle in a target definition. Also used to represent
+ * content in the target that is missing or invalid.
+ *
+ * @since 3.8
+ */
+public class TargetBundle {
+
+	/**
+	 * Status code indicating that this target bundle represents a required plug-in that is missing from a target definition
+	 */
+	public static final int STATUS_PLUGIN_DOES_NOT_EXIST = 100;
+
+	/**
+	 * Status code indicating that this target bundle represents a required feature that is missing from a target definition
+	 */
+	public static final int STATUS_FEATURE_DOES_NOT_EXIST = 110;
+
+	/**
+	 * Status code indicating that a required bundle version does not exist (a bundle
+	 * with the correct symbolic name is present, but the specified version was not
+	 * found).
+	 */
+	public static final int STATUS_VERSION_DOES_NOT_EXIST = 101;
+
+	/**
+	 * Status code indicating that a bundle's manifest could not be read, or did not exist.
+	 */
+	public static final int STATUS_INVALID_MANIFEST = 102;
+
+	protected BundleInfo fInfo;
+	protected boolean fIsFragment = false;
+	protected BundleInfo fSourceTarget;
+	protected String fSourcePath = null;
+
+	/**
+	 * Constructs a target bundle for a local bundle.  The bundle may be a directory or
+	 * an archive file. The manifest of the bundle will be read to collect the additional
+	 * information.
+	 *
+	 * @param bundleLocation the location of the bundle (directory or archive) to open
+	 * @throws CoreException if there is a problem opening the bundle or its manifest
+	 */
+	public TargetBundle(File bundleLocation) throws CoreException {
+		initialize(bundleLocation);
+	}
+
+	/**
+	 * Constructs an empty target bundle with no information.
+	 */
+	protected TargetBundle() {
+		fInfo = new BundleInfo();
+	}
+
+	/**
+	 * Returns a {@link BundleInfo} object containing additional information about the bundle
+	 * this target bundle represents. It is not guaranteed that the bundle info will have any
+	 * fields set.  The base implementation of {@link TargetBundle} will fill in the location,
+	 * symbolic name and version if that information was available in the bundle's manifest.
+	 *
+	 * @return a bundle info object with information on the bundle this target bundle represents
+	 */
+	public BundleInfo getBundleInfo() {
+		return fInfo;
+	}
+
+	/**
+	 * Returns a status object describing any problems with this target bundle. The base
+	 * implementation of {@link TargetBundle} will always return an OK status.
+	 *
+	 * @return status of this bundle
+	 */
+	public IStatus getStatus() {
+		// The status will always be ok as the constructor would throw an exception for any issues.
+		return Status.OK_STATUS;
+	}
+
+	/**
+	 * Returns <code>true</code> if this bundle is a source bundle and
+	 * <code>false</code> if this bundle is an executable bundle.
+	 *
+	 * @return whether the resolved bundle is a source bundle
+	 */
+	public boolean isSourceBundle() {
+		return fSourceTarget != null;
+	}
+
+	/**
+	 * If this bundle is a source bundle this method returns a bundle info
+	 * representing the executable bundle that this bundle provides source for.
+	 * The returned bundle info may not have a symbolic name and version set if
+	 * this source bundle is an old style source plug-in.
+	 *
+	 * @return bundle info representing bundle this bundle provides source for or <code>null</code>
+	 */
+	public BundleInfo getSourceTarget() {
+		return fSourceTarget;
+	}
+
+	/**
+	 * Returns whether this bundle is a fragment.
+	 *
+	 * @return whether this bundle is a fragment
+	 */
+	public boolean isFragment() {
+		return fIsFragment;
+	}
+
+	/**
+	 * Returns bundle relative path to old-style source folders, or <code>null</code>
+	 * if not applicable.
+	 *
+	 * @return bundle relative path to old-style source folders, or <code>null</code>
+	 */
+	public String getSourcePath() {
+		return fSourcePath;
+	}
+
+	/**
+	 * Initializes the contents of this target bundle from the provided local bundle
+	 *
+	 * @param file the bundle to initialize from
+	 */
+	private void initialize(File file) throws CoreException {
+		if (file == null || !file.exists()) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetFeature_FileDoesNotExist, file)));
+		}
+		Map<String, String> manifest = ManifestUtils.loadManifest(file);
+		try {
+			fInfo = new BundleInfo(file.toURI());
+			// Attempt to retrieve additional bundle information from the manifest
+			String header = manifest.get(Constants.BUNDLE_SYMBOLICNAME);
+			if (header != null) {
+				ManifestElement[] elements = ManifestElement.parseHeader(Constants.BUNDLE_SYMBOLICNAME, header);
+				if (elements != null) {
+					String name = elements[0].getValue();
+					if (name != null) {
+						fInfo.setSymbolicName(name);
+						header = manifest.get(Constants.BUNDLE_VERSION);
+						if (header != null) {
+							elements = ManifestElement.parseHeader(Constants.BUNDLE_VERSION, header);
+							if (elements != null) {
+								fInfo.setVersion(elements[0].getValue());
+							}
+						}
+					}
+					fSourceTarget = getProvidedSource(file, name, manifest);
+				}
+			}
+			fIsFragment = manifest.containsKey(Constants.FRAGMENT_HOST);
+		} catch (BundleException e) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, STATUS_INVALID_MANIFEST, NLS.bind(Messages.TargetBundle_ErrorReadingManifest, file.getAbsolutePath()), e));
+		}
+	}
+
+	/**
+	 * If the given bundle is a source bundle, the bundle that this bundle provides source for will be returned.
+	 * If the given bundle is not a source bundle or there was a problem getting the source target, <code>null</code>
+	 * will be returned.
+	 *
+	 * @param bundle location of the bundle in the file system, can be <code>null</code> to skip searching plugin.xml
+	 * @param symbolicName symbolic name of the bundle, can be <code>null</code> to skip searching of plugin.xml
+	 * @param manifest the bundle's manifest, can be <code>null</code> to skip searching of manifest entries
+	 * @return bundle for provided source or <code>null</code> if not a source bundle
+	 */
+	private BundleInfo getProvidedSource(File bundle, String symbolicName, Map<String, String> manifest) {
+		fSourcePath = null;
+		if (manifest != null) {
+			if (manifest.containsKey(ICoreConstants.ECLIPSE_SOURCE_BUNDLE)) {
+				try {
+					ManifestElement[] manifestElements = ManifestElement.parseHeader(ICoreConstants.ECLIPSE_SOURCE_BUNDLE, manifest.get(ICoreConstants.ECLIPSE_SOURCE_BUNDLE));
+					if (manifestElements != null) {
+						for (ManifestElement element : manifestElements) {
+							String binaryPluginName = element.getValue();
+							String versionEntry = element.getAttribute(Constants.VERSION_ATTRIBUTE);
+							// Currently the version attribute is required
+							if (binaryPluginName != null &amp;&amp; binaryPluginName.length() > 0 &amp;&amp; versionEntry != null &amp;&amp; versionEntry.length() > 0) {
+								return new BundleInfo(binaryPluginName, versionEntry, null, BundleInfo.NO_LEVEL, false);
+							}
+						}
+					}
+				} catch (BundleException e) {
+					PDECore.log(e);
+					return null;
+				}
+			}
+			// source bundles never have a class path
+			if (manifest.containsKey(Constants.BUNDLE_CLASSPATH)) {
+				return null;
+			}
+		}
+
+		if (bundle != null &amp;&amp; symbolicName != null) {
+			// old source bundles were never jar'd
+			if (bundle.isFile()) {
+				return null;
+			}
+
+			// check for an 
+			File pxml = new File(bundle, ICoreConstants.PLUGIN_FILENAME_DESCRIPTOR);
+			if (!pxml.exists()) {
+				pxml = new File(bundle, ICoreConstants.FRAGMENT_FILENAME_DESCRIPTOR);
+			}
+			if (pxml.exists()) {
+				IExtensionRegistry registry = RegistryFactory.createRegistry(null, this, this);
+				// Contribute PDE source extension point
+				String bogusDef = 
+				RegistryContributor pointContributor = new RegistryContributor(PDECore.PLUGIN_ID, PDECore.PLUGIN_ID, null, null);
+				registry.addContribution(new ByteArrayInputStream(bogusDef.getBytes()), pointContributor, false, null, null, this);
+				// Search for extensions to the extension point
+				RegistryContributor contributor = new RegistryContributor(symbolicName, symbolicName, null, null);
+				try {
+					registry.addContribution(new BufferedInputStream(new FileInputStream(pxml)), contributor, false, null, null, this);
+					IExtension[] extensions = registry.getExtensions(contributor);
+					for (IExtension extension : extensions) {
+						if (ICoreConstants.EXTENSION_POINT_SOURCE.equals(extension.getExtensionPointUniqueIdentifier())) {
+							IConfigurationElement[] elements = extension.getConfigurationElements();
+							if (elements.length == 1) {
+								fSourcePath = elements[0].getAttribute(
+							}
+							return new BundleInfo(null, null, bundle.toURI(), BundleInfo.NO_LEVEL, false);
+						}
+					}
+				} catch (FileNotFoundException e) {
+				}
+			}
+		}
+		return null;
+	}
+
+
+	@Override
+	public String toString() {
+		StringBuilder result = new StringBuilder(getBundleInfo().toString());
+		IStatus status = getStatus();
+		if (status != null &amp;&amp; !status.isOK()) {
+			result.append(' ').append(status.toString());
+		}
+		return result.toString();
+	}
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/RequiredPluginsClasspathContainer.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/RequiredPluginsClasspathContainer.java
位置:  -16,6 +16,7   package org.eclipse.pde.internal.core;
 import static java.util.Collections.singletonMap;
 
 import java.io.File;
+import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
位置:  -24,7 +25,6   import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.Stack;
 import java.util.TreeMap;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
位置:  -529,7 +529,7   public class RequiredPluginsClasspathContainer extends PDEClasspathContainer imp
 
 	protected final void findExportedPackages(BundleDescription desc, BundleDescription projectDesc, Map<BundleDescription, ArrayList<Rule>> map) {
 		if (desc != null) {
-			Stack<BaseDescription> stack = new Stack<>();
+			ArrayDeque<BaseDescription> stack = new ArrayDeque<>();
 			stack.add(desc);
 			while (!stack.isEmpty()) {
 				BundleDescription bdesc = (BundleDescription) stack.pop();

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/TargetPlatformHelper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/TargetPlatformHelper.java
位置:  -650,8 +650,6   public class TargetPlatformHelper {
 	 */
 	public static String getIniVMArgs() {
 		File installDirectory = new File(Platform.getInstallLocation().getURL().getFile());
-//		if (Platform.getOS().equals(Platform.OS_MACOSX))
-//			installDirectory = new File(installDirectory, 
 		File eclipseIniFile = new File(installDirectory, 
 		StringBuilder result = new StringBuilder();
 		if (eclipseIniFile.exists()) {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker.java
位置:  -31,6 +31,7   import org.eclipse.core.resources.IncrementalProjectBuilder;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.Path;
 import org.eclipse.core.runtime.SubMonitor;
 import org.eclipse.core.runtime.jobs.ISchedulingRule;
 import org.eclipse.core.runtime.jobs.MultiRule;
位置:  -48,11 +49,19   public class ManifestConsistencyChecker extends IncrementalProjectBuilder {
 	private final int EXTENSIONS = 0x2;
 	private final int BUILD = 0x4;
 	private final int STRUCTURE = 0x8;
+	static final IPath SETTINGS_PATH = new Path(
 
 	private static IProject[] EMPTY_LIST = new IProject[0];
 
 	private final SelfVisitor fSelfVisitor = new SelfVisitor();
 
+	/*
+	 * Bug 549839:In case auto-building on PDE compiler setting change is not
+	 * desired, specify VM property: {@code
+	 * -Dorg.eclipse.disableAutoBuildOnSettingsChange=true}
+	 */
+	private static final boolean DISABLE_AUTO_BUILDING_ON_SETTINGS_CHANGE = Boolean.getBoolean(
+
 	private final ClassChangeVisitor fClassFileVisitor = new ClassChangeVisitor();
 
 	class ClassChangeVisitor implements IResourceDeltaVisitor {
位置:  -97,6 +106,11   public class ManifestConsistencyChecker extends IncrementalProjectBuilder {
 
 		@Override
 		public boolean visit(IResourceDelta delta) throws CoreException {
+			if (delta != null &amp;&amp; delta.findMember(SETTINGS_PATH) != null) {
+				if (!DISABLE_AUTO_BUILDING_ON_SETTINGS_CHANGE) {
+					type |= MANIFEST | EXTENSIONS | BUILD | STRUCTURE;
+				}
+			}
 			if (delta != null &amp;&amp; type != (MANIFEST | EXTENSIONS | BUILD | STRUCTURE)) {
 				int kind = delta.getKind();
 				if (kind == IResourceDelta.ADDED || kind == IResourceDelta.REMOVED) {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java
位置:  -16,9 +16,9   package org.eclipse.pde.internal.core.builders;
 
 import java.net.MalformedURLException;
 import java.net.URL;
+import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.List;
-import java.util.Stack;
 import java.util.StringTokenizer;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.runtime.IProgressMonitor;
位置:  -166,7 +166,7   public class SchemaErrorReporter extends XMLErrorReporter {
 				StringTokenizer text = new StringTokenizer(textNode.getData(), 
 
 				int lineNumber = getLine(element);
-				Stack<StackEntry> stack = new Stack<>();
+				ArrayDeque<StackEntry> stack = new ArrayDeque<>();
 				boolean errorReported = false;
 				while (text.hasMoreTokens()) {
 					if (errorReported) {

原文件: ui/org.eclipse.pde.core/src_ant/org/eclipse/pde/internal/core/ant/TargetPlatformProvisionTask.java 
新文件: ui/org.eclipse.pde.core/src_ant/org/eclipse/pde/internal/core/ant/TargetPlatformProvisionTask.java
位置:  -1,139 +1,140  
-/**
- * Copyright (c) 2011, 2012 Gunnar Wagenknecht and others.
- * All rights reserved.
- *
- * This program and the accompanying materials are made available under the terms of the
- * Eclipse Public License 2.0 which accompanies this distribution, and is available at
+/**
+ * Copyright (c) 2011, 2012 Gunnar Wagenknecht and others.
+ * All rights reserved.
+ *
+ * This program and the accompanying materials are made available under the terms of the
+ * Eclipse Public License 2.0 which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     Gunnar Wagenknecht - initial API and implementation
- */
-package org.eclipse.pde.internal.core.ant;
-
-import java.io.File;
-import org.apache.tools.ant.BuildException;
-import org.apache.tools.ant.Project;
-import org.apache.tools.ant.Task;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.core.runtime.jobs.Job;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.internal.build.BundleHelper;
-import org.eclipse.pde.internal.build.tasks.TaskHelper;
-import org.eclipse.pde.internal.core.PDECore;
-import org.eclipse.pde.internal.core.PDECoreMessages;
-import org.eclipse.pde.internal.core.target.ExportTargetJob;
-import org.eclipse.pde.internal.core.target.TargetPlatformService;
-
-/**
- * Exports the bundles and plug-ins of a target definition to a directory
- */
-public class TargetPlatformProvisionTask extends Task {
-
-	private File targetFile;
-	private File destinationDirectory;
-	private boolean clearDestination;
-
-	@Override
-	public void execute() throws BuildException {
-
-		try {
-			BundleHelper.getDefault().setLog(this);
-			run();
-		} catch (CoreException e) {
-			throw new BuildException(TaskHelper.statusToString(e.getStatus(), null).toString());
-		} finally {
-			BundleHelper.getDefault().setLog(null);
-		}
-
-	}
-
-	private void export(final ITargetDefinition targetDefinition) throws CoreException {
-		// export using Job to allow progress reporting when run inside IDE
-		ExportTargetJob exportTargetJob = new ExportTargetJob(targetDefinition, destinationDirectory.toURI(), clearDestination);
-		exportTargetJob.schedule();
-		try {
-			exportTargetJob.join();
-		} catch (InterruptedException e) {
-			Thread.currentThread().interrupt();
-			throw new CoreException(Status.CANCEL_STATUS);
-		}
-	}
-
-	private IStatus resolve(final ITargetDefinition targetDefinition) throws CoreException {
-		// resolve using Job to allow progress reporting when run inside IDE
-		final IStatus[] status = new IStatus[1];
-		Job resolveJob = new Job(NLS.bind(PDECoreMessages.TargetPlatformProvisionTask_Resolving_X_Job, null != targetDefinition.getName() &amp;&amp; targetDefinition.getName().length() > 0 ? targetDefinition.getName() : targetFile.getName())) {
-			@Override
-			protected IStatus run(IProgressMonitor monitor) {
-				status[0] = targetDefinition.resolve(monitor);
-				return Status.OK_STATUS;
-			}
-		};
-		resolveJob.setPriority(Job.LONG);
-		resolveJob.schedule();
-		try {
-			resolveJob.join();
-		} catch (InterruptedException e) {
-			Thread.currentThread().interrupt();
-			throw new CoreException(Status.CANCEL_STATUS);
-		}
-		return status[0];
-	}
-
-	private void run() throws CoreException {
-		if (null == targetFile) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.TargetPlatformProvisionTask_ErrorDefinitionNotSet));
-		}
-		if (!targetFile.isFile() || !targetFile.canRead()) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(PDECoreMessages.TargetPlatformProvisionTask_ErrorDefinitionNotFoundAtSpecifiedLocation, targetFile)));
-		}
-		if (null == destinationDirectory) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.TargetPlatformProvisionTask_ErrorDestinationNotSet));
-		}
-
-		final ITargetDefinition targetDefinition = TargetPlatformService.getDefault().getTarget(targetFile.toURI()).getTargetDefinition();
-
-		log(PDECoreMessages.TargetPlatformProvisionTask_Resolving_target_status);
-		IStatus status = resolve(targetDefinition);
-		if (status.matches(IStatus.ERROR | IStatus.CANCEL)) {
-			throw new CoreException(status);
-		} else if (!status.isOK()) {
-			log(TaskHelper.statusToString(status, null).toString(), Project.MSG_WARN);
-		}
-
-		log(PDECoreMessages.TargetPlatformProvisionTask_Exporting_target_status);
-		export(targetDefinition);
-	}
-
-	/**
-	 * Set whether the destination should be cleared prior to provisioning.
-	 * @param clearDestination
-	 */
-	public void setClearDestination(boolean clearDestination) {
-		this.clearDestination = clearDestination;
-	}
-
-	/**
-	 * Set the folder in which the target will be provisioned.
-	 * @param destinationDirectory
-	 */
-	public void setDestinationDirectory(File destinationDirectory) {
-		this.destinationDirectory = destinationDirectory;
-	}
-
-	/**
-	 * Set the target file to provision
-	 * @param targetFile
-	 */
-	public void setTargetFile(File targetFile) {
-		this.targetFile = targetFile;
-	}
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Gunnar Wagenknecht - initial API and implementation
+ */
+package org.eclipse.pde.internal.core.ant;
+
+import java.io.File;
+import org.apache.tools.ant.BuildException;
+import org.apache.tools.ant.Project;
+import org.apache.tools.ant.Task;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.internal.build.BundleHelper;
+import org.eclipse.pde.internal.build.tasks.TaskHelper;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.PDECoreMessages;
+import org.eclipse.pde.internal.core.target.ExportTargetJob;
+import org.eclipse.pde.internal.core.target.TargetPlatformService;
+
+/**
+ * Exports the bundles and plug-ins of a target definition to a directory
+ */
+public class TargetPlatformProvisionTask extends Task {
+
+	private File targetFile;
+	private File destinationDirectory;
+	private boolean clearDestination;
+
+
+	@Override
+	public void execute() throws BuildException {
+
+		try {
+			BundleHelper.getDefault().setLog(this);
+			run();
+		} catch (CoreException e) {
+			throw new BuildException(TaskHelper.statusToString(e.getStatus(), null).toString());
+		} finally {
+			BundleHelper.getDefault().setLog(null);
+		}
+
+	}
+
+	private void export(final ITargetDefinition targetDefinition) throws CoreException {
+		// export using Job to allow progress reporting when run inside IDE
+		ExportTargetJob exportTargetJob = new ExportTargetJob(targetDefinition, destinationDirectory.toURI(), clearDestination);
+		exportTargetJob.schedule();
+		try {
+			exportTargetJob.join();
+		} catch (InterruptedException e) {
+			Thread.currentThread().interrupt();
+			throw new CoreException(Status.CANCEL_STATUS);
+		}
+	}
+
+	private IStatus resolve(final ITargetDefinition targetDefinition) throws CoreException {
+		// resolve using Job to allow progress reporting when run inside IDE
+		final IStatus[] status = new IStatus[1];
+		Job resolveJob = new Job(NLS.bind(PDECoreMessages.TargetPlatformProvisionTask_Resolving_X_Job, null != targetDefinition.getName() &amp;&amp; targetDefinition.getName().length() > 0 ? targetDefinition.getName() : targetFile.getName())) {
+			@Override
+			protected IStatus run(IProgressMonitor monitor) {
+				status[0] = targetDefinition.resolve(monitor);
+				return Status.OK_STATUS;
+			}
+		};
+		resolveJob.setPriority(Job.LONG);
+		resolveJob.schedule();
+		try {
+			resolveJob.join();
+		} catch (InterruptedException e) {
+			Thread.currentThread().interrupt();
+			throw new CoreException(Status.CANCEL_STATUS);
+		}
+		return status[0];
+	}
+
+	private void run() throws CoreException {
+		if (null == targetFile) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.TargetPlatformProvisionTask_ErrorDefinitionNotSet));
+		}
+		if (!targetFile.isFile() || !targetFile.canRead()) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(PDECoreMessages.TargetPlatformProvisionTask_ErrorDefinitionNotFoundAtSpecifiedLocation, targetFile)));
+		}
+		if (null == destinationDirectory) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.TargetPlatformProvisionTask_ErrorDestinationNotSet));
+		}
+
+		final ITargetDefinition targetDefinition = TargetPlatformService.getDefault().getTarget(targetFile.toURI()).getTargetDefinition();
+
+		log(PDECoreMessages.TargetPlatformProvisionTask_Resolving_target_status);
+		IStatus status = resolve(targetDefinition);
+		if (status.matches(IStatus.ERROR | IStatus.CANCEL)) {
+			throw new CoreException(status);
+		} else if (!status.isOK()) {
+			log(TaskHelper.statusToString(status, null).toString(), Project.MSG_WARN);
+		}
+
+		log(PDECoreMessages.TargetPlatformProvisionTask_Exporting_target_status);
+		export(targetDefinition);
+	}
+
+	/**
+	 * Set whether the destination should be cleared prior to provisioning.
+	 * @param clearDestination
+	 */
+	public void setClearDestination(boolean clearDestination) {
+		this.clearDestination = clearDestination;
+	}
+
+	/**
+	 * Set the folder in which the target will be provisioned.
+	 * @param destinationDirectory
+	 */
+	public void setDestinationDirectory(File destinationDirectory) {
+		this.destinationDirectory = destinationDirectory;
+	}
+
+	/**
+	 * Set the target file to provision
+	 * @param targetFile
+	 */
+	public void setTargetFile(File targetFile) {
+		this.targetFile = targetFile;
+	}
+
+}

原文件: ui/org.eclipse.pde.genericeditor.extension.tests/src/org/eclipse/pde/genericeditor/extension/tests/StringAsserts.java 
新文件: ui/org.eclipse.pde.genericeditor.extension.tests/src/org/eclipse/pde/genericeditor/extension/tests/StringAsserts.java
位置:  -1,203 +1,203  
-package org.eclipse.pde.genericeditor.extension.tests;
-
-/*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+package org.eclipse.pde.genericeditor.extension.tests;
+
+/*******************************************************************************
+ * Copyright (c) 2000, 2013 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.StringReader;
-import java.util.ArrayList;
-import java.util.Arrays;
-
-import org.junit.Assert;
-
-/*
- * Copied from org.eclipse.jdt.ui.tests/test plugin/org/eclipse/jdt/testplugin/StringAsserts.javas
- */
-
-public class StringAsserts {
-	/**
-	 *
-	 */
-	public StringAsserts() {
-		super();
-	}
-
-	private static int getDiffPos(String str1, String str2) {
-		int len1 = Math.min(str1.length(), str2.length());
-
-		int diffPos = -1;
-		for (int i = 0; i < len1; i++) {
-			if (str1.charAt(i) != str2.charAt(i)) {
-				diffPos = i;
-				break;
-			}
-		}
-		if (diffPos == -1 &amp;&amp; str1.length() != str2.length()) {
-			diffPos = len1;
-		}
-		return diffPos;
-	}
-
-	private static final int printRange = 6;
-
-	public static void assertEqualString(String actual, String expected) {
-		if (actual == null || expected == null) {
-			if (actual == expected) {
-				return;
-			}
-			if (actual == null) {
-				Assert.assertTrue(
-			} else {
-				Assert.assertTrue(
-			}
-		}
-
-		int diffPos = getDiffPos(actual, expected);
-		if (diffPos != -1) {
-			int diffAhead = Math.max(0, diffPos - printRange);
-			int diffAfter = Math.min(actual.length(), diffPos + printRange);
-
-			String diffStr = actual.substring(diffAhead, diffPos) + '^' + actual.substring(diffPos, diffAfter);
-
-			// use detailed message
-			String message = 
-					+ 
-
-			Assert.assertEquals(message, expected, actual);
-		}
-	}
-
-	public static void assertEqualStringIgnoreDelim(String actual, String expected) throws IOException {
-		if (actual == null || expected == null) {
-			if (actual == expected) {
-				return;
-			}
-			if (actual == null) {
-				Assert.assertTrue(
-			} else {
-				Assert.assertTrue(
-			}
-		}
-
-		BufferedReader read1 = new BufferedReader(new StringReader(actual));
-		BufferedReader read2 = new BufferedReader(new StringReader(expected));
-
-		int line = 1;
-		do {
-			String s1 = read1.readLine();
-			String s2 = read2.readLine();
-
-			if (s1 == null || !s1.equals(s2)) {
-				if (s1 == null &amp;&amp; s2 == null) {
-					return;
-				}
-				String diffStr = (s1 == null) ? s2 : s1;
-
-				String message = 
-						+ diffStr + 
-				Assert.assertEquals(message, expected, actual);
-			}
-			line++;
-		} while (true);
-	}
-
-	public static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds) {
-		ArrayList<String> list1 = new ArrayList<>(Arrays.asList(actuals));
-		ArrayList<String> list2 = new ArrayList<>(Arrays.asList(expecteds));
-
-		for (int i = list1.size() - 1; i >= 0; i--) {
-			if (list2.remove(list1.get(i))) {
-				list1.remove(i);
-			}
-		}
-
-		int n1 = list1.size();
-		int n2 = list2.size();
-
-		if (n1 + n2 > 0) {
-			if (n1 == 1 &amp;&amp; n2 == 1) {
-				assertEqualString(list1.get(0), list2.get(0));
-			}
-
-			StringBuilder buf = new StringBuilder();
-			for (int i = 0; i < n1; i++) {
-				String s1 = list1.get(i);
-				if (s1 != null) {
-					buf.append(s1);
-					buf.append(
-				}
-			}
-			String actual = buf.toString();
-
-			buf = new StringBuilder();
-			for (int i = 0; i < n2; i++) {
-				String s2 = list2.get(i);
-				if (s2 != null) {
-					buf.append(s2);
-					buf.append(
-				}
-			}
-			String expected = buf.toString();
-
-			String message = 
-			Assert.assertEquals(message, expected, actual);
-		}
-	}
-
-	public static void assertExpectedExistInProposals(String[] actuals, String[] expecteds) {
-		ArrayList<String> list1 = new ArrayList<>(Arrays.asList(actuals));
-		ArrayList<String> list2 = new ArrayList<>(Arrays.asList(expecteds));
-
-		for (int i = list1.size() - 1; i >= 0; i--) {
-			if (list2.remove(list1.get(i))) {
-				list1.remove(i);
-			}
-		}
-
-		int n1 = list1.size();
-		int n2 = list2.size();
-
-		if (n2 > 0) {
-			if (n1 == 1 &amp;&amp; n2 == 1) {
-				assertEqualString(list1.get(0), list2.get(0));
-			}
-
-			StringBuilder buf = new StringBuilder();
-			for (int i = 0; i < n1; i++) {
-				String s1 = list1.get(i);
-				if (s1 != null) {
-					buf.append(s1);
-					buf.append(
-				}
-			}
-			String actual = buf.toString();
-
-			buf = new StringBuilder();
-			for (int i = 0; i < n2; i++) {
-				String s2 = list2.get(i);
-				if (s2 != null) {
-					buf.append(s2);
-					buf.append(
-				}
-			}
-			String expected = buf.toString();
-
-			String message = 
-			Assert.assertEquals(message, expected, actual);
-		}
-	}
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.StringReader;
+import java.util.ArrayList;
+import java.util.Arrays;
+
+import org.junit.Assert;
+
+/*
+ * Copied from org.eclipse.jdt.ui.tests/test plugin/org/eclipse/jdt/testplugin/StringAsserts.javas
+ */
+
+public class StringAsserts {
+	/**
+	 *
+	 */
+	public StringAsserts() {
+		super();
+	}
+
+	private static int getDiffPos(String str1, String str2) {
+		int len1 = Math.min(str1.length(), str2.length());
+
+		int diffPos = -1;
+		for (int i = 0; i < len1; i++) {
+			if (str1.charAt(i) != str2.charAt(i)) {
+				diffPos = i;
+				break;
+			}
+		}
+		if (diffPos == -1 &amp;&amp; str1.length() != str2.length()) {
+			diffPos = len1;
+		}
+		return diffPos;
+	}
+
+	private static final int printRange = 6;
+
+	public static void assertEqualString(String actual, String expected) {
+		if (actual == null || expected == null) {
+			if (actual == expected) {
+				return;
+			}
+			if (actual == null) {
+				Assert.assertTrue(
+			} else {
+				Assert.assertTrue(
+			}
+		}
+
+		int diffPos = getDiffPos(actual, expected);
+		if (diffPos != -1) {
+			int diffAhead = Math.max(0, diffPos - printRange);
+			int diffAfter = Math.min(actual.length(), diffPos + printRange);
+
+			String diffStr = actual.substring(diffAhead, diffPos) + '^' + actual.substring(diffPos, diffAfter);
+
+			// use detailed message
+			String message = 
+					+ 
+
+			Assert.assertEquals(message, expected, actual);
+		}
+	}
+
+	public static void assertEqualStringIgnoreDelim(String actual, String expected) throws IOException {
+		if (actual == null || expected == null) {
+			if (actual == expected) {
+				return;
+			}
+			if (actual == null) {
+				Assert.assertTrue(
+			} else {
+				Assert.assertTrue(
+			}
+		}
+
+		BufferedReader read1 = new BufferedReader(new StringReader(actual));
+		BufferedReader read2 = new BufferedReader(new StringReader(expected));
+
+		int line = 1;
+		do {
+			String s1 = read1.readLine();
+			String s2 = read2.readLine();
+
+			if (s1 == null || !s1.equals(s2)) {
+				if (s1 == null &amp;&amp; s2 == null) {
+					return;
+				}
+				String diffStr = (s1 == null) ? s2 : s1;
+
+				String message = 
+						+ diffStr + 
+				Assert.assertEquals(message, expected, actual);
+			}
+			line++;
+		} while (true);
+	}
+
+	public static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds) {
+		ArrayList<String> list1 = new ArrayList<>(Arrays.asList(actuals));
+		ArrayList<String> list2 = new ArrayList<>(Arrays.asList(expecteds));
+
+		for (int i = list1.size() - 1; i >= 0; i--) {
+			if (list2.remove(list1.get(i))) {
+				list1.remove(i);
+			}
+		}
+
+		int n1 = list1.size();
+		int n2 = list2.size();
+
+		if (n1 + n2 > 0) {
+			if (n1 == 1 &amp;&amp; n2 == 1) {
+				assertEqualString(list1.get(0), list2.get(0));
+			}
+
+			StringBuilder buf = new StringBuilder();
+			for (int i = 0; i < n1; i++) {
+				String s1 = list1.get(i);
+				if (s1 != null) {
+					buf.append(s1);
+					buf.append(
+				}
+			}
+			String actual = buf.toString();
+
+			buf = new StringBuilder();
+			for (int i = 0; i < n2; i++) {
+				String s2 = list2.get(i);
+				if (s2 != null) {
+					buf.append(s2);
+					buf.append(
+				}
+			}
+			String expected = buf.toString();
+
+			String message = 
+			Assert.assertEquals(message, expected, actual);
+		}
+	}
+
+	public static void assertExpectedExistInProposals(String[] actuals, String[] expecteds) {
+		ArrayList<String> list1 = new ArrayList<>(Arrays.asList(actuals));
+		ArrayList<String> list2 = new ArrayList<>(Arrays.asList(expecteds));
+
+		for (int i = list1.size() - 1; i >= 0; i--) {
+			if (list2.remove(list1.get(i))) {
+				list1.remove(i);
+			}
+		}
+
+		int n1 = list1.size();
+		int n2 = list2.size();
+
+		if (n2 > 0) {
+			if (n1 == 1 &amp;&amp; n2 == 1) {
+				assertEqualString(list1.get(0), list2.get(0));
+			}
+
+			StringBuilder buf = new StringBuilder();
+			for (int i = 0; i < n1; i++) {
+				String s1 = list1.get(i);
+				if (s1 != null) {
+					buf.append(s1);
+					buf.append(
+				}
+			}
+			String actual = buf.toString();
+
+			buf = new StringBuilder();
+			for (int i = 0; i < n2; i++) {
+				String s2 = list2.get(i);
+				if (s2 != null) {
+					buf.append(s2);
+					buf.append(
+				}
+			}
+			String expected = buf.toString();
+
+			String message = 
+			Assert.assertEquals(message, expected, actual);
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/about.html 
新文件: ui/org.eclipse.pde.junit.runtime.tests/about.html
位置:  -0,0 +1,36  
+<!DOCTYPE html PUBLIC 
+    
+<html xmlns=
+<head>
+<meta http-equiv=
+<title>About</title>
+</head>
+<body lang=
+	<h2>About This Content</h2>
+
+	<p>November 30, 2017</p>
+	<h3>License</h3>
+
+	<p>
+		The Eclipse Foundation makes available all content in this plug-in
+		(&amp;quot;Content&amp;quot;). Unless otherwise indicated below, the Content
+		is provided to you under the terms and conditions of the Eclipse
+		Public License Version 2.0 (&amp;quot;EPL&amp;quot;). A copy of the EPL is
+		available at <a href=
+		For purposes of the EPL, &amp;quot;Program&amp;quot; will mean the Content.
+	</p>
+
+	<p>
+		If you did not receive this Content directly from the Eclipse
+		Foundation, the Content is being redistributed by another party
+		(&amp;quot;Redistributor&amp;quot;) and different terms and conditions may
+		apply to your use of any object code in the Content. Check the
+		Redistributor's license that was provided with the Content. If no such
+		license exists, contact the Redistributor. Unless otherwise indicated
+		below, the terms and conditions of the EPL still apply to any source
+		code in the Content and such source code may be obtained at <a
+			href=
+	</p>
+
+</body>
+</html>
\ No newline at end of file

原文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties
位置:  -2,4 +2,6   source.. = src/
 output.. = bin/
 bin.includes = META-INF/,\
                .,\
-               test-bundles/
+               test-bundles/,\
+               about.html,\
+               test.xml

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitRuntimeTests.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitRuntimeTests.java
位置:  -0,0 +1,24  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.junit.runtime.tests;
+
+import org.junit.runner.RunWith;
+import org.junit.runners.Suite;
+import org.junit.runners.Suite.SuiteClasses;
+
+@RunWith(Suite.class)
+@SuiteClasses({ JUnitExecutionTest.class })
+public class JUnitRuntimeTests {
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java
位置:  -45,7 +45,7   public class TargetPlatformUtil {
 	}
 
 	private static ITargetDefinition createTarget(ITargetPlatformService tps) throws CoreException {
-		ITargetDefinition targetDefinition = tps.newDefaultTarget();
+		ITargetDefinition targetDefinition = tps.newTarget();
 		targetDefinition.setName(TARGET_NAME);
 
 		Bundle[] installedBundles = FrameworkUtil.getBundle(TargetPlatformUtil.class).getBundleContext().getBundles();
位置:  -56,6 +56,11   public class TargetPlatformUtil {
 		}).map(f -> f.getBaseFile().getParentFile()).distinct()
 				.map(dir -> tps.newDirectoryLocation(dir.getAbsolutePath())).toArray(ITargetLocation[]::new);
 
+		NameVersionDescriptor[] included = Arrays.stream(installedBundles)
+				.map(b -> new NameVersionDescriptor(b.getSymbolicName(), b.getVersion().toString()))
+				.toArray(NameVersionDescriptor[]::new);
+		targetDefinition.setIncluded(included);
+
 		targetDefinition.setTargetLocations(bundleContainers);
 		targetDefinition.setArch(Platform.getOSArch());
 		targetDefinition.setOS(Platform.getOS());

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java
位置:  -19,6 +19,10   import static org.hamcrest.Matchers.empty;
 import static org.hamcrest.core.Is.is;
 import static org.junit.Assert.fail;
 
+import java.io.File;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.text.MessageFormat;
 import java.util.Arrays;
 import java.util.List;
 import java.util.concurrent.BlockingQueue;
位置:  -30,19 +34,24   import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.resources.IncrementalProjectBuilder;
 import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.debug.core.DebugException;
 import org.eclipse.debug.core.DebugPlugin;
 import org.eclipse.debug.core.ILaunch;
 import org.eclipse.debug.core.ILaunchConfiguration;
 import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
 import org.eclipse.debug.core.ILaunchManager;
 import org.eclipse.debug.core.ILaunchesListener2;
+import org.eclipse.debug.core.model.IProcess;
 import org.eclipse.debug.ui.DebugUITools;
 import org.eclipse.jdt.core.IJavaElement;
 import org.eclipse.jdt.junit.JUnitCore;
 import org.eclipse.jdt.junit.TestRunListener;
 import org.eclipse.jdt.junit.model.ITestRunSession;
 import org.eclipse.pde.internal.launching.IPDEConstants;
+import org.eclipse.pde.internal.launching.launcher.LaunchListener;
 import org.eclipse.pde.launching.IPDELauncherConstants;
 import org.eclipse.pde.ui.launcher.JUnitWorkbenchLaunchShortcut;
 
位置:  -59,6 +68,7   class TestExecutionUtil {
 		TestLaunchShortcut launchShortcut = new TestLaunchShortcut();
 		ILaunchConfigurationWorkingCopy launchConfiguration = launchShortcut.createLaunchConfiguration(element);
 		launchConfiguration.setAttribute(IPDELauncherConstants.APPLICATION, IPDEConstants.CORE_TEST_APPLICATION);
+		setupDirectories(launchConfiguration, element);
 
 		BlockingQueue<ITestRunSession> testResult = new LinkedBlockingDeque<>();
 		TestRunListener testRunListener = new TestRunListener() {
位置:  -81,6 +91,16   class TestExecutionUtil {
 		}
 	}
 
+	private static void setupDirectories(ILaunchConfigurationWorkingCopy launchConfiguration, IJavaElement element) {
+		String dir = element.getJavaProject().getElementName() + 
+		IPath testLocation = Platform.getLocation().append(dir);
+
+		launchConfiguration.setAttribute(IPDELauncherConstants.LOCATION, testLocation.append(
+		launchConfiguration.setAttribute(IPDELauncherConstants.CONFIG_LOCATION,
+				testLocation.append(
+		launchConfiguration.setAttribute(IPDELauncherConstants.CONFIG_USE_DEFAULT_AREA, false);
+	}
+
 	private static void launchAndWaitForTermination(ILaunchConfiguration launchConfiguration) throws CoreException {
 		BlockingQueue<ILaunch> terminatedLaunches = new LinkedBlockingDeque<>();
 		ILaunchManager launchManager = DebugPlugin.getDefault().getLaunchManager();
位置:  -108,6 +128,13   class TestExecutionUtil {
 		ILaunch launch = DebugUITools.buildAndLaunch(launchConfiguration, ILaunchManager.RUN_MODE,
 				new NullProgressMonitor());
 
+		launch.getProcesses()[0].getStreamsProxy().getOutputStreamMonitor().addListener((text, m) -> {
+			System.out.println(
+		});
+		launch.getProcesses()[0].getStreamsProxy().getErrorStreamMonitor().addListener((text, m) -> {
+			System.err.println(
+		});
+
 		try {
 			while (true) {
 				ILaunch terminatedLaunch = terminatedLaunches.poll(5, TimeUnit.MINUTES);
位置:  -116,6 +143,7   class TestExecutionUtil {
 				}
 
 				if (launch.equals(terminatedLaunch)) {
+					checkExitValueAndDumpLog(launch);
 					break;
 				}
 			}
位置:  -130,6 +158,31   class TestExecutionUtil {
 		}
 	}
 
+	private static void checkExitValueAndDumpLog(ILaunch launch) throws DebugException, CoreException {
+		IProcess process = launch.getProcesses()[0];
+		int exitValue = process.getExitValue();
+		String logFile = readLogFile(launch.getLaunchConfiguration());
+		if (exitValue == 13) {
+			fail(
+		} else {
+			System.out.println(MessageFormat.format(
+					
+					process.getAttribute(IProcess.ATTR_CMDLINE), logFile));
+		}
+	}
+
+	private static String readLogFile(ILaunchConfiguration launchConfiguration) throws CoreException {
+		File logFile = LaunchListener.getMostRecentLogFile(launchConfiguration);
+		if (logFile == null) {
+			return 
+		}
+		try {
+			return String.join(
+		} catch (IOException e) {
+			return 
+		}
+	}
+
 	private static class TestLaunchShortcut extends JUnitWorkbenchLaunchShortcut {
 		public ILaunchConfigurationWorkingCopy createLaunchConfiguration(IJavaElement element) throws CoreException {
 			return super.createLaunchConfiguration(element);

原文件: ui/org.eclipse.pde.junit.runtime.tests/test.xml 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test.xml
位置:  -0,0 +1,48  
+<?xml version=
+
+<project name=
+  <!-- The property ${eclipse-home} should be passed into this script -->
+
+  <!-- sets the properties eclipse-home, and library-file -->
+  <property name=
+  <property name=
+  <property name=
+
+  <!-- This target holds all initialization code that needs to be done for -->
+  <!-- all tests that are to be run. Initialization for individual tests -->
+  <!-- should be done within the body of the suite target. -->
+  <target name=
+    <tstamp/>
+    <delete>
+      <fileset dir=
+    </delete>
+  </target>
+
+  <!-- This target defines the tests that need to be run. -->
+  <target name=
+
+    <property name=
+    <delete dir=
+    <ant target=
+      <property name=
+      <property name=
+      <property name=
+    </ant>
+
+  </target>
+
+  <!-- This target holds code to cleanup the testing environment after the tests -->
+  <!-- have been run. You can use this to delete temporary files that are created. -->
+  <target name=
+  </target>
+
+  <!-- This target runs the test suite. Any actions that need to happen after all -->
+  <!-- the tests have been run should go here. -->
+  <target name=
+    <ant target=
+      <property name=
+      <property name=
+    </ant>
+  </target>
+
+</project>

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/PDELaunchingPlugin.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/PDELaunchingPlugin.java
位置:  -15,8 +15,6  
 package org.eclipse.pde.internal.launching;
 
 import java.lang.reflect.InvocationTargetException;
-import java.net.URL;
-import org.eclipse.core.resources.IWorkspace;
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.*;
 import org.eclipse.debug.core.DebugPlugin;
位置:  -61,9 +59,6   public class PDELaunchingPlugin extends Plugin implements IPDEConstants {
 		return fPreferenceManager;
 	}
 
-	public URL getInstallURL() {
-		return getDefault().getBundle().getEntry(
-	}
 
 	public static PDELaunchingPlugin getDefault() {
 		return fInstance;
位置:  -73,10 +68,6   public class PDELaunchingPlugin extends Plugin implements IPDEConstants {
 		return getDefault().getBundle().getSymbolicName();
 	}
 
-	public static IWorkspace getWorkspace() {
-		return ResourcesPlugin.getWorkspace();
-	}
-
 	public static void log(IStatus status) {
 		ResourcesPlugin.getPlugin().getLog().log(status);
 	}
位置:  -133,10 +124,6   public class PDELaunchingPlugin extends Plugin implements IPDEConstants {
 		}
 	}
 
-	public BundleContext getBundleContext() {
-		return fBundleContext;
-	}
-
 	@Override
 	public void stop(BundleContext context) throws Exception {
 		if (fLaunchListener != null)

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java
位置:  -65,7 +65,7   public class LauncherUtils {
 	public static boolean clearWorkspace(ILaunchConfiguration configuration, String workspace, IProgressMonitor monitor) throws CoreException {
 
 		// If the workspace is not defined, there is no workspace to clear
-		// Unless the user has added the -data program arugment themselves,
+		// Unless the user has added the -data program argument themselves,
 		// the workspace chooser dialog will be brought up.
 		if (workspace == null || workspace.length() == 0) {
 			if (monitor != null) {
位置:  -224,7 +224,7   public class LauncherUtils {
 					if (path == null)
 						continue;
 					file = path.toFile();
-					Stack<File> files = new Stack<>();
+					ArrayDeque<File> files = new ArrayDeque<>();
 					files.push(file);
 					while (!files.isEmpty()) {
 						file = files.pop();
位置:  -341,7 +341,7   public class LauncherUtils {
 		try {
 			String projectID = configuration.getAttribute(IJavaLaunchConfigurationConstants.ATTR_PROJECT_NAME, 
 			if (projectID.length() > 0) {
-				IResource project = PDELaunchingPlugin.getWorkspace().getRoot().findMember(projectID);
+				IResource project = ResourcesPlugin.getWorkspace().getRoot().findMember(projectID);
 				if (project instanceof IProject) {
 					IPluginModelBase model = PluginRegistry.findModel((IProject) project);
 					if (model != null) {

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/sourcelookup/PDESourceLookupDirector.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/sourcelookup/PDESourceLookupDirector.java
位置:  -29,7 +29,6   import org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupPartici
 import org.eclipse.pde.core.IBundleClasspathResolver;
 import org.eclipse.pde.core.plugin.*;
 import org.eclipse.pde.internal.core.*;
-import org.eclipse.pde.internal.launching.PDELaunchingPlugin;
 import org.eclipse.pde.internal.launching.launcher.VMHelper;
 
 public class PDESourceLookupDirector extends AbstractSourceLookupDirector {
位置:  -175,7 +174,7   public class PDESourceLookupDirector extends AbstractSourceLookupDirector {
 	}
 
 	private ISourceContainer getArchiveSourceContainer(String location) throws JavaModelException {
-		IWorkspaceRoot root = PDELaunchingPlugin.getWorkspace().getRoot();
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
 		IFile[] containers = root.findFilesForLocationURI(URIUtil.toURI(location));
 		for (IFile container : containers) {
 			IJavaElement element = JavaCore.create(container);

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/PDESourcePathProvider.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/PDESourcePathProvider.java
位置:  -13,18 +13,14  
  *******************************************************************************/
 package org.eclipse.pde.launching;
 
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import org.eclipse.core.resources.IProject;
-import org.eclipse.core.resources.IResource;
+import java.util.*;
+import org.eclipse.core.resources.*;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.debug.core.ILaunchConfiguration;
 import org.eclipse.jdt.core.*;
 import org.eclipse.jdt.launching.*;
 import org.eclipse.pde.internal.core.util.PDEJavaHelper;
-import org.eclipse.pde.internal.launching.PDELaunchingPlugin;
 import org.eclipse.pde.internal.launching.launcher.LaunchPluginValidator;
 import org.eclipse.pde.internal.launching.launcher.VMHelper;
 
位置:  -71,7 +67,7   public class PDESourcePathProvider extends StandardSourcePathProvider {
 	 */
 	private IProject[] getJavaProjects(ILaunchConfiguration configuration) throws CoreException {
 		IProject[] projects = LaunchPluginValidator.getAffectedProjects(configuration, false);
-		return PDELaunchingPlugin.getWorkspace().computeProjectOrder(projects).projects;
+		return ResourcesPlugin.getWorkspace().computeProjectOrder(projects).projects;
 	}
 
 	@Override

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/PDERuntimePlugin.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/PDERuntimePlugin.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- *  Copyright (c) 2000, 2017 IBM Corporation and others.
+ *  Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  *  This program and the accompanying materials
  *  are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  *  Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.runtime;
 
位置:  -18,8 +19,7   import org.eclipse.core.runtime.*;
 import org.eclipse.osgi.service.resolver.PlatformAdmin;
 import org.eclipse.osgi.service.resolver.State;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.IWorkbenchPage;
-import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.*;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.BundleContext;
位置:  -60,15 +60,23   public class PDERuntimePlugin extends AbstractUIPlugin {
 	}
 
 	public static IWorkbenchPage getActivePage() {
-		return getDefault().internalGetActivePage();
+		IWorkbenchWindow activeWindow = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
+		if (activeWindow != null) {
+			return activeWindow.getActivePage();
+		}
+		return null;
 	}
 
 	public static Shell getActiveWorkbenchShell() {
-		return getActiveWorkbenchWindow().getShell();
+		IWorkbenchWindow activeWindow = getActiveWorkbenchWindow();
+		if (activeWindow != null) {
+			return activeWindow.getShell();
+		}
+		return null;
 	}
 
 	public static IWorkbenchWindow getActiveWorkbenchWindow() {
-		return getDefault().getWorkbench().getActiveWorkbenchWindow();
+		return PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 	}
 
 	public PackageAdmin getPackageAdmin() {
位置:  -93,10 +101,6   public class PDERuntimePlugin extends AbstractUIPlugin {
 		return getDefault().getBundle().getSymbolicName();
 	}
 
-	private IWorkbenchPage internalGetActivePage() {
-		return getWorkbench().getActiveWorkbenchWindow().getActivePage();
-	}
-
 	@Override
 	public void start(BundleContext context) throws Exception {
 		super.start(context);

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/ee/EnvironmentAnalyzerDelegate.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/ee/EnvironmentAnalyzerDelegate.java
位置:  -40,9 +40,9   public class EnvironmentAnalyzerDelegate implements IExecutionEnvironmentAnalyze
 		if (javaVersion != null) {
 			IExecutionEnvironment env = JavaRuntime.getExecutionEnvironmentsManager().getEnvironment(EE_NO_SOUND);
 			List<String> allVersions = JavaCore.getAllVersions();
-			List<String> compatibleList = allVersions.subList(3, allVersions.size());
-			Collections.reverse(compatibleList);
-			for (String element : compatibleList) {
+			int length = allVersions.size();
+			for (int i = length - 1; i >= 3; i--) {
+				String element = allVersions.get(i);
 				if (javaVersion.startsWith(element)) {
 					result.add(new CompatibleEnvironment(env, false));
 				}

原文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF
位置:  -49,6 +49,10   Export-Package:
  org.eclipse.pde.internal.ui.views.imagebrowser;x-internal:=true,
  org.eclipse.pde.internal.ui.views.imagebrowser.filter;x-internal:=true,
  org.eclipse.pde.internal.ui.views.imagebrowser.repositories;x-internal:=true,
+ org.eclipse.pde.internal.ui.views.features;x-internal:=true,
+ org.eclipse.pde.internal.ui.views.features.action;x-internal:=true,
+ org.eclipse.pde.internal.ui.views.features.support;x-internal:=true,
+ org.eclipse.pde.internal.ui.views.features.viewer;x-internal:=true,
  org.eclipse.pde.internal.ui.views.plugins;x-internal:=true,
  org.eclipse.pde.internal.ui.views.target;x-internal:=true,
  org.eclipse.pde.internal.ui.wizards;x-friends:=

原文件: ui/org.eclipse.pde.ui/plugin.properties 
新文件: ui/org.eclipse.pde.ui/plugin.properties
位置:  -106,6 +106,7   editors.categoryManifest.name=Category Manifest Editor
 
 views.category.name = Plug-in Development
 views.plugins.name = Plug-ins
+views.features.name = Features
 views.dependencies.name = Plug-in Dependencies
 views.tpstate.name = Target Platform State
 ViewCommand.pluginsView.name = Plug-ins

原文件: ui/org.eclipse.pde.ui/plugin.xml 
新文件: ui/org.eclipse.pde.ui/plugin.xml
位置:  -444,6 +444,13  
             id=
       </view>
       <view
+            name=
+            icon=
+            category=
+            class=
+            id=
+      </view>
+      <view
             name=
             icon=
             category=

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEPlugin.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEPlugin.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2000, 2015 IBM Corporation and others.
+ * Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ui;
 
位置:  -28,8 +29,7   import org.eclipse.pde.internal.ui.shared.target.TargetStatus;
 import org.eclipse.pde.internal.ui.util.SWTUtil;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.IWorkbenchPage;
-import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.*;
 import org.eclipse.ui.editors.text.TextFileDocumentProvider;
 import org.eclipse.ui.forms.FormColors;
 import org.eclipse.ui.internal.views.log.ILogFileProvider;
位置:  -99,7 +99,7   public class PDEPlugin extends AbstractUIPlugin implements IPDEUIConstants {
 	 *         no active workbench window or if called from a non-UI thread
 	 */
 	public static IWorkbenchWindow getActiveWorkbenchWindow() {
-		return getDefault().getWorkbench().getActiveWorkbenchWindow();
+		return PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 	}
 
 	public static PDEPlugin getDefault() {
位置:  -124,7 +124,7   public class PDEPlugin extends AbstractUIPlugin implements IPDEUIConstants {
 	 * @return The active workbench page or <code>null</code> if the workbench is shutting down
 	 */
 	private IWorkbenchPage internalGetActivePage() {
-		IWorkbenchWindow workbenchWin = getWorkbench().getActiveWorkbenchWindow();
+		IWorkbenchWindow workbenchWin = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 		return workbenchWin != null ? workbenchWin.getActivePage() : null;
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java
位置:  -1712,6 +1712,20   public class PDEUIMessages extends NLS {
 	public static String DependencyAnalysisSection_plugin_editable;
 	public static String DependencyAnalysisSection_plugin_notEditable;
 
+	public static String FeaturesView_CollapseAllAction_description;
+	public static String FeaturesView_CollapseAllAction_tooltip;
+	public static String FeaturesView_FeatureAndPluginCopyAction_label;
+	public static String FeaturesView_FilterFeatureChildAction_description;
+	public static String FeaturesView_FilterFeatureChildAction_tooltip;
+	public static String FeaturesView_ShowCalleesContentProviderAction_description;
+	public static String FeaturesView_ShowCalleesContentProviderAction_tooltip;
+	public static String FeaturesView_ShowCallersContentProviderAction_description;
+	public static String FeaturesView_ShowCallersContentProviderAction_tooltip;
+	public static String FeaturesView_ShowPluginsAction_description;
+	public static String FeaturesView_ShowPluginsAction_tooltip;
+	public static String FeaturesView_OpenAction_label;
+	public static String FeaturesView_searchPlaceholder;
+
 	public static String HistoryAction_description;
 	public static String HistoryAction_tooltip;
 	public static String HistoryDropDownAction_tooltip;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/contentassist/XMLCompletionProposal.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/contentassist/XMLCompletionProposal.java
位置:  -15,8 +15,8  
 
 package org.eclipse.pde.internal.ui.editor.contentassist;
 
+import java.util.ArrayDeque;
 import java.util.HashSet;
-import java.util.Stack;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.jface.internal.text.html.BrowserInformationControl;
位置:  -281,7 +281,7   public class XMLCompletionProposal implements ICompletionProposal, ICompletionPr
 						break;
 				}
 			} else if (fRange instanceof IDocumentElementNode &amp;&amp; base instanceof IDocumentElementNode) {
-				Stack<IDocumentElementNode> s = new Stack<>();
+				ArrayDeque<IDocumentElementNode> s = new ArrayDeque<>();
 				IDocumentElementNode node = (IDocumentElementNode) fRange;
 				IDocumentElementNode newSearch = (IDocumentElementNode) base;
 				// traverse up old model, pushing all nodes onto the stack along the way

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExtensionsSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExtensionsSection.java
位置:  -174,7 +174,7   public class ExtensionsSection extends TreeSection implements IPropertyChangeLis
 			String tagName = (parent == extension ? 
 			elementInfo = schema.findElement(tagName);
 		} else {
-			Stack<String> stack = new Stack<>();
+			ArrayDeque<String> stack = new ArrayDeque<>();
 			IPluginParent parentParent = parent;
 			while (parentParent != extension &amp;&amp; parentParent != null) {
 				stack.push(parentParent.getName());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/InformationSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/InformationSection.java
位置:  -77,8 +77,12   public class InformationSection extends SectionPart {
 		fNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
 		fNameText.addModifyListener(e -> {
 			String value = fNameText.getText().trim();
-			getTarget().setName(value.length() > 0 ? value : null);
-			markDirty();
+			String name = getTarget().getName();
+			if (!value.equals(name)) {
+				getTarget().setName(value.length() > 0 ? value : null);
+				markDirty();
+			}
+
 		});
 
 		fNameTextValidator = new TextValidator(fPage.getManagedForm(), fNameText, null, true) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/XMLUtil.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/XMLUtil.java
位置:  -91,7 +91,7   public abstract class XMLUtil {
 
 		// if element is not 
 		// Then search for the element in the same schema in which the parent element if found.
-		Stack<String> stack = new Stack<>();
+		ArrayDeque<String> stack = new ArrayDeque<>();
 		while (node != null) {
 			String tagName = node.getXMLTagName();
 			if (

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java
位置:  -13,6 +13,7  
  *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
  *     EclipseSource - initial API and implementation, ongoing enhancements
  *     IBM Corporation - ongoing enhancements
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.launcher;
 
位置:  -31,14 +32,13   import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.internal.launching.PDELaunchingPlugin;
 import org.eclipse.pde.internal.launching.PDEMessages;
 import org.eclipse.pde.internal.launching.launcher.LauncherUtils;
-import org.eclipse.pde.internal.ui.PDEPlugin;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.wizards.tools.OrganizeManifestsProcessor;
 import org.eclipse.pde.launching.IPDELauncherConstants;
 import org.eclipse.pde.ui.launcher.MainTab;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.*;
 
 public class LauncherUtilsStatusHandler implements IStatusHandler {
 
位置:  -137,13 +137,16   public class LauncherUtilsStatusHandler implements IStatusHandler {
 	}
 
 	public final static Shell getActiveShell() {
-		IWorkbenchWindow window = PDEPlugin.getDefault().getWorkbench().getActiveWorkbenchWindow();
+		IWorkbench workbench = PlatformUI.getWorkbench();
+		IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
 		if (window == null) {
-			IWorkbenchWindow[] windows = PDEPlugin.getDefault().getWorkbench().getWorkbenchWindows();
-			if (windows.length > 0)
+			IWorkbenchWindow[] windows = workbench.getWorkbenchWindows();
+			if (windows.length > 0) {
 				return windows[0].getShell();
-		} else
+			}
+		} else {
 			return window.getShell();
+		}
 		return getDisplay().getActiveShell();
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties
位置:  -1448,6 +1448,20   DependencyAnalysisSection_plugin_notEditable = <form>\
 <p><img href=
 </form>
 
+FeaturesView_CollapseAllAction_description=Collapse All
+FeaturesView_CollapseAllAction_tooltip=Collapse All
+FeaturesView_FeatureAndPluginCopyAction_label=Copy
+FeaturesView_FilterFeatureChildAction_description=Show Included Features at Top Level
+FeaturesView_FilterFeatureChildAction_tooltip=Show Included Features at Top Level
+FeaturesView_ShowCalleesContentProviderAction_description=Show Features Included by Each Feature
+FeaturesView_ShowCalleesContentProviderAction_tooltip=Show Features Included by Each Feature
+FeaturesView_ShowCallersContentProviderAction_description=Show Features Including Each Feature
+FeaturesView_ShowCallersContentProviderAction_tooltip=Show Features Including Each Feature
+FeaturesView_ShowPluginsAction_description=Show Included Plugins and Fragments
+FeaturesView_ShowPluginsAction_tooltip=Show Included Plugins and Fragments
+FeaturesView_OpenAction_label=Open
+FeaturesView_searchPlaceholder=type filter text
+
 HistoryAction_description=Open ''{0}'' in Hierarchy
 HistoryAction_tooltip=Open ''{0}'' in Hierarchy
 HistoryDropDownAction_tooltip = Previous Plug-ins
位置:  -1913,7 +1927,7   SampleStandbyContent_content=<form>\
 </form>
 SampleStandbyContent_desc=<form>{0}</form>
 SaveToWorkspace_ConfirmOverwrite=Comfirm Overwrite
-SaveToWorkspace_ConfirmOverwriteText=File {0} already exists. Are you sure you want to overwrite it?
+SaveToWorkspace_ConfirmOverwriteText=File {0} already exists. Do you want to overwrite it?
 SaveToWorkspace_SaveImageToWorkspace=Save image to the workspace
 ReviewPage_title=Review
 ReviewPage_desc=Review the selected sample.
位置:  -1983,7 +1997,7   TargetPlatformPreferencePage2_17=Target Definition Out Of Synch
 TargetPlatformPreferencePage2_18=The active target platform is out of synch with the file system.  Pressing 'Apply and Close' on the preference page will update the target platform.
 TargetPlatformPreferencePage2_19=Remove Target Definition
 TargetPlatformPreferencePage2_2=&amp;Target definitions:
-TargetPlatformPreferencePage2_20=Are you sure you want to remove the selected target definition?  Removing it will delete a file in your workspace.
+TargetPlatformPreferencePage2_20=Remove the selected target definition?  Removing it will delete a file in your workspace.
 TargetPlatformPreferencePage2_21=&amp;Do not ask me again
 TargetPlatformPreferencePage2_22=No target definition is currently set active.
 TargetPlatformPreferencePage2_23=Target definition file could not be located.

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesOperation.java
位置:  -181,7 +181,7   public class AddNewDependenciesOperation extends WorkspaceModifyOperation {
 			int index = (value != null) ? value.indexOf(';') : -1;
 			String projectBundleId = (index > 0) ? value.substring(0, index) : value;
 			List<ExportPackageDescription> result = new LinkedList<>();
-			Stack<BaseDescription> stack = new Stack<>();
+			ArrayDeque<BaseDescription> stack = new ArrayDeque<>();
 			stack.add(desc);
 			while (!stack.isEmpty()) {
 				BundleDescription bdesc = (BundleDescription) stack.pop();
位置:  -453,7 +453,7   public class AddNewDependenciesOperation extends WorkspaceModifyOperation {
 	}
 
 	protected final void minimizeBundles(Collection<String> pluginIds) {
-		Stack<String> stack = new Stack<>();
+		ArrayDeque<String> stack = new ArrayDeque<>();
 		Iterator<String> it = pluginIds.iterator();
 		while (it.hasNext())
 			stack.push(it.next().toString());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/GatherUnusedDependenciesOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/GatherUnusedDependenciesOperation.java
位置:  -252,7 +252,7   public class GatherUnusedDependenciesOperation implements IRunnableWithProgress
 		}
 
 		Iterator<String> it = usedPlugins.keySet().iterator();
-		Stack<String> plugins = new Stack<>();
+		ArrayDeque<String> plugins = new ArrayDeque<>();
 		while (it.hasNext())
 			plugins.push(it.next().toString());
 		SubMonitor subMonitor = SubMonitor.convert(monitor);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/PackageFinder.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/PackageFinder.java
位置:  -211,7 +211,7   public class PackageFinder {
 	private static void addClassFilesFromResource(IResource res, List<IClassFile> classFiles) {
 		if (res == null)
 			return;
-		Stack<IResource> stack = new Stack<>();
+		ArrayDeque<IResource> stack = new ArrayDeque<>();
 		if (res instanceof IContainer) {
 			stack.push(res);
 			while (!stack.isEmpty()) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/SharedLabelProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/SharedLabelProvider.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- *  Copyright (c) 2000, 2018 IBM Corporation and others.
+ *  Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  *  This program and the accompanying materials
  *  are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  *  Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 549441
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.util;
 
位置:  -18,6 +19,7   import java.util.*;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 import org.eclipse.jface.resource.ImageDescriptor;
+import org.eclipse.jface.resource.ResourceLocator;
 import org.eclipse.jface.viewers.ITableLabelProvider;
 import org.eclipse.jface.viewers.LabelProvider;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
位置:  -25,7 +27,6   import org.eclipse.pde.core.plugin.PluginRegistry;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.swt.graphics.Image;
 import org.eclipse.swt.graphics.ImageData;
-import org.eclipse.ui.plugin.AbstractUIPlugin;
 
 public class SharedLabelProvider extends LabelProvider implements ITableLabelProvider {
 	public static final int F_ERROR = 1;
位置:  -183,8 +184,7   public class SharedLabelProvider extends LabelProvider implements ITableLabelPro
 	}
 
 	public Image getImageFromPlugin(String bundleID, String path) {
-		ImageDescriptor desc = AbstractUIPlugin.imageDescriptorFromPlugin(bundleID, path);
-		return (desc != null) ? get(desc) : getBlankImage();
+		return ResourceLocator.imageDescriptorFromBundle(bundleID, path).map(d-> get(d)).orElse(getBlankImage());
 	}
 
 	public Image getImageFromPlugin(IPluginModelBase model, String relativePath) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/dependencies/OpenPluginDependenciesAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/dependencies/OpenPluginDependenciesAction.java
位置:  -15,8 +15,7   package org.eclipse.pde.internal.ui.views.dependencies;
 
 import org.eclipse.jface.action.Action;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
-import org.eclipse.pde.internal.ui.IPDEUIConstants;
-import org.eclipse.pde.internal.ui.PDEPlugin;
+import org.eclipse.pde.internal.ui.*;
 import org.eclipse.ui.IViewPart;
 import org.eclipse.ui.PartInitException;
 
位置:  -25,6 +24,9   public class OpenPluginDependenciesAction extends Action {
 	private IPluginModelBase fModel = null;
 
 	public OpenPluginDependenciesAction(IPluginModelBase base) {
+		setText(PDEUIMessages.PluginsView_openDependencies);
+		setImageDescriptor(PDEPluginImages.DESC_CALLEES);
+
 		fModel = base;
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java
位置:  -0,0 +1,264  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.function.Consumer;
+import org.eclipse.jface.action.*;
+import org.eclipse.jface.viewers.*;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.PDELabelProvider;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.editor.feature.FeatureEditor;
+import org.eclipse.pde.internal.ui.editor.plugin.ManifestEditor;
+import org.eclipse.pde.internal.ui.views.dependencies.OpenPluginDependenciesAction;
+import org.eclipse.pde.internal.ui.views.features.action.*;
+import org.eclipse.pde.internal.ui.views.features.support.*;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureElementComparer;
+import org.eclipse.pde.internal.ui.views.features.viewer.RootElementsFilteredTree;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.dnd.Clipboard;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Menu;
+import org.eclipse.ui.IActionBars;
+import org.eclipse.ui.actions.ActionFactory;
+import org.eclipse.ui.dialogs.FilteredTree;
+import org.eclipse.ui.dialogs.PatternFilter;
+import org.eclipse.ui.part.ViewPart;
+
+public class FeaturesView extends ViewPart {
+
+	private final Action fOpenAction = new Action(PDEUIMessages.FeaturesView_OpenAction_label) {
+		@Override
+		public void run() {
+			handleOpen();
+		}
+	};
+
+	private final Collection<ViewerFilterAction> fViewerFilterActions = new ArrayList<>();
+
+	private final Collection<ViewerFilter> fViewerFilters = new ArrayList<>();
+
+	private PatternFilter fPatternFilter;
+
+	private Action fShowPluginsAction;
+
+	private TreeViewer fViewer;
+
+	private Clipboard fClipboard;
+
+	private Action fCopyAction;
+
+	private FeatureIndex fFeatureIndex;
+
+	@Override
+	public void createPartControl(Composite parent) {
+		FeatureModelManager featureModelManager = FeatureSupport.getManager();
+		FeatureInput input = new FeatureInput(featureModelManager);
+		fFeatureIndex = new FeatureIndex(featureModelManager);
+
+		FilteredTree filteredTree = createFilteredTree(parent);
+		fViewer = filteredTree.getViewer();
+		fPatternFilter = filteredTree.getPatternFilter();
+		fViewerFilters.add(fPatternFilter);
+
+		fClipboard = new Clipboard(parent.getDisplay());
+		fCopyAction = new FeatureAndPluginCopyAction(fViewer, fClipboard);
+
+		registerGlobalActions();
+		contributeToActionBar(featureModelManager);
+		hookContextMenu();
+
+		initialiseViewer(input);
+	}
+
+	@Override
+	public void setFocus() {
+		fViewer.getControl().setFocus();
+	}
+
+	@Override
+	public void dispose() {
+		super.dispose();
+		fFeatureIndex.dispose();
+		fClipboard.dispose();
+	}
+
+	private FilteredTree createFilteredTree(Composite parent) {
+		FilteredTree filteredTree = new RootElementsFilteredTree(parent, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL);
+		filteredTree.setInitialText(PDEUIMessages.FeaturesView_searchPlaceholder);
+
+		PatternFilter patternFilter = filteredTree.getPatternFilter();
+		patternFilter.setIncludeLeadingWildcard(true);
+
+		TreeViewer viewer = filteredTree.getViewer();
+		viewer.setComparer(new FeatureElementComparer());
+		viewer.setLabelProvider(new PDELabelProvider());
+
+		viewer.addDoubleClickListener(event -> handleOpen());
+		viewer.addSelectionChangedListener(event -> {
+			Collection<?> selection = getViewerSelection();
+			fOpenAction.setEnabled(!selection.isEmpty());
+			fCopyAction.setEnabled(!selection.isEmpty());
+		});
+
+		return filteredTree;
+	}
+
+	private void initialiseViewer(FeatureInput input) {
+		resetViewerFilters();
+		fViewer.setInput(input);
+	}
+
+	private void resetViewerFilters() {
+		fViewer.setFilters(fViewerFilters.toArray(new ViewerFilter[fViewerFilters.size()]));
+	}
+
+	public void toggle(ViewerFilter filter) {
+		if (fViewerFilters.contains(filter)) {
+			fViewerFilters.remove(filter);
+		} else {
+			fViewerFilters.add(filter);
+		}
+		resetViewerFilters();
+	}
+
+	public boolean isActive(ViewerFilter filter) {
+		return fViewerFilters.contains(filter);
+	}
+
+	private void setContentProvider(ViewerComparator viewerComparator, IContentProvider contentProvider,
+			boolean supportsFilters, boolean supportsPlugins) {
+		fViewer.setComparator(viewerComparator);
+		fViewer.setContentProvider(contentProvider);
+
+		setViewerFilterActionsEnabled(supportsFilters);
+		fShowPluginsAction.setEnabled(supportsPlugins);
+
+		if (supportsFilters) {
+			resetViewerFilters();
+		} else {
+			fViewer.setFilters(new ViewerFilter[] { fPatternFilter });
+		}
+	}
+
+	private void setViewerFilterActionsEnabled(boolean supportsFilters) {
+		for (ViewerFilterAction viewerFilterAction : fViewerFilterActions) {
+			viewerFilterAction.setEnabled(supportsFilters);
+		}
+	}
+
+	public void configureContent(Consumer<FeatureInput> configurator) {
+		configurator.accept((FeatureInput) fViewer.getInput());
+		fViewer.refresh();
+	}
+
+	private void registerGlobalActions() {
+		IActionBars actionBars = getViewSite().getActionBars();
+		actionBars.setGlobalActionHandler(ActionFactory.COPY.getId(), fCopyAction);
+	}
+
+	private void contributeToActionBar(FeatureModelManager featureModelManager) {
+		IActionBars actionBars = getViewSite().getActionBars();
+		IToolBarManager toolBarManager = actionBars.getToolBarManager();
+
+		toolBarManager.add(new CollapseAllAction(fViewer));
+		toolBarManager.add(new Separator());
+
+		ContentProviderAction calleesAction = new ShowCalleesContentProviderAction(this, featureModelManager);
+		calleesAction.setChecked(true);
+		toolBarManager.add(calleesAction);
+
+		ContentProviderAction callersAction = new ShowCallersContentProviderAction(this, featureModelManager,
+				fFeatureIndex);
+		toolBarManager.add(callersAction);
+		toolBarManager.add(new Separator());
+
+		ViewerFilterAction filterFeatureChildAction = new FilterFeatureChildAction(this, fFeatureIndex);
+		toolBarManager.add(filterFeatureChildAction);
+
+		fShowPluginsAction = new ShowPluginsAction(this);
+		toolBarManager.add(fShowPluginsAction);
+
+		setContentProvider(calleesAction);
+		setContentProvider(callersAction);
+		registerFilterAction(filterFeatureChildAction);
+
+		actionBars.updateActionBars();
+	}
+
+	private void hookContextMenu() {
+		MenuManager menuManager = new MenuManager();
+		menuManager.setRemoveAllWhenShown(true);
+		menuManager.addMenuListener(this::fillContextMenu);
+		Menu menu = menuManager.createContextMenu(fViewer.getControl());
+		fViewer.getControl().setMenu(menu);
+	}
+
+	private void fillContextMenu(IMenuManager manager) {
+		manager.add(fOpenAction);
+
+		IPluginModelBase selectedPluginModel = getSelectedPluginModel();
+		if (selectedPluginModel != null) {
+			Action dependenciesAction = new OpenPluginDependenciesAction(selectedPluginModel);
+			manager.add(dependenciesAction);
+		}
+
+		manager.add(new Separator());
+		manager.add(fCopyAction);
+	}
+
+	private void registerFilterAction(ViewerFilterAction filterAction) {
+		fViewerFilterActions.add(filterAction);
+		if (!filterAction.isChecked()) {
+			fViewerFilters.add(filterAction.getViewerFilter());
+		}
+	}
+
+	public void setContentProvider(ContentProviderAction contentProviderAction) {
+		if (contentProviderAction.isChecked()) {
+			setContentProvider(contentProviderAction.createViewerComparator(),
+					contentProviderAction.createContentProvider(), contentProviderAction.isSupportsFilters(),
+					contentProviderAction.isSupportsPlugins());
+		}
+	}
+
+	private void handleOpen() {
+		for (Object selection : getViewerSelection()) {
+			IFeatureModel featureModel = FeatureSupport.toFeatureModel(selection);
+			if (featureModel != null) {
+				FeatureEditor.openFeatureEditor(featureModel);
+				continue;
+			}
+
+			IPluginModelBase pluginModel = PluginSupport.toPluginModel(selection);
+			if (pluginModel != null) {
+				ManifestEditor.openPluginEditor(pluginModel);
+				continue;
+			}
+		}
+	}
+
+	private Collection<?> getViewerSelection() {
+		return fViewer.getStructuredSelection().toList();
+	}
+
+	private IPluginModelBase getSelectedPluginModel() {
+		return PluginSupport.toSinglePluginModel(fViewer.getStructuredSelection());
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/CollapseAllAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/CollapseAllAction.java
位置:  -0,0 +1,38  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.viewers.TreeViewer;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+
+public class CollapseAllAction extends Action {
+
+	private final TreeViewer fViewer;
+
+	public CollapseAllAction(TreeViewer viewer) {
+		fViewer = viewer;
+
+		setDescription(PDEUIMessages.FeaturesView_CollapseAllAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_CollapseAllAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_COLLAPSE_ALL);
+	}
+
+	@Override
+	public void run() {
+		fViewer.collapseAll();
+	}
+
+}
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java
位置:  -0,0 +1,47  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.viewers.IContentProvider;
+import org.eclipse.jface.viewers.ViewerComparator;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+
+public abstract class ContentProviderAction extends Action {
+
+	private final FeaturesView fFeaturesView;
+
+	protected final FeatureModelManager fFeatureModelManager;
+
+	public ContentProviderAction(FeaturesView featuresView, FeatureModelManager featureModelManager) {
+		super(null, AS_RADIO_BUTTON);
+		fFeaturesView = featuresView;
+		fFeatureModelManager = featureModelManager;
+	}
+
+	public abstract ViewerComparator createViewerComparator();
+
+	public abstract IContentProvider createContentProvider();
+
+	@Override
+	public void run() {
+		fFeaturesView.setContentProvider(this);
+	}
+
+	public abstract boolean isSupportsFilters();
+
+	public abstract boolean isSupportsPlugins();
+
+}
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FeatureAndPluginCopyAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FeatureAndPluginCopyAction.java
位置:  -0,0 +1,112  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import java.util.*;
+import java.util.stream.Collectors;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.viewers.StructuredViewer;
+import org.eclipse.pde.core.IModel;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureSupport;
+import org.eclipse.pde.internal.ui.views.features.support.PluginSupport;
+import org.eclipse.swt.dnd.*;
+import org.eclipse.swt.widgets.Event;
+import org.eclipse.ui.ISharedImages;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.actions.ActionFactory;
+import org.eclipse.ui.part.ResourceTransfer;
+
+public class FeatureAndPluginCopyAction extends Action {
+
+	private final StructuredViewer fStructuredViewer;
+
+	private final Clipboard fClipboard;
+
+	public FeatureAndPluginCopyAction(StructuredViewer structuredViewer, Clipboard clipboard) {
+		super(PDEUIMessages.FeaturesView_FeatureAndPluginCopyAction_label,
+				PlatformUI.getWorkbench().getSharedImages().getImageDescriptor(ISharedImages.IMG_TOOL_COPY));
+		fStructuredViewer = structuredViewer;
+		fClipboard = clipboard;
+
+		setActionDefinitionId(ActionFactory.COPY.getCommandId());
+	}
+
+	@Override
+	public void runWithEvent(Event event) {
+		IStructuredSelection selection = fStructuredViewer.getStructuredSelection();
+		List<IModel> models = toModels(selection);
+
+		String textData = toTextData(models);
+		IResource[] projectResources = toProjectResources(models);
+		String[] fileData = toFileData(projectResources);
+
+		Object[] data = { textData, projectResources, fileData };
+		Transfer[] dataTypes = { TextTransfer.getInstance(), ResourceTransfer.getInstance(),
+				FileTransfer.getInstance() };
+		fClipboard.setContents(data, dataTypes);
+	}
+
+	private List<IModel> toModels(IStructuredSelection selection) {
+		List<Object> selectionList = selection.toList();
+		return selectionList.stream()
+				.map(this::toModel)
+				.filter(Objects::nonNull)
+				.collect(Collectors.toList());
+	}
+
+	private IModel toModel(Object element) {
+		IModel model = FeatureSupport.toFeatureModel(element);
+		if (model == null) {
+			model = PluginSupport.toPluginModel(element);
+		}
+
+		return model;
+	}
+
+	private String toTextData(Collection<IModel> models) {
+		return models.stream()
+				.map(this::toModelId)
+				.collect(Collectors.joining(System.lineSeparator()));
+	}
+
+	private String toModelId(IModel model) {
+		if (model instanceof IFeatureModel) {
+			return ((IFeatureModel) model).getFeature().getId();
+		} else if (model instanceof IPluginModelBase) {
+			return ((IPluginModelBase) model).getPluginBase().getId();
+		}
+
+		return null;
+	}
+
+	private IResource[] toProjectResources(Collection<IModel> models) {
+		return models.stream()
+				.map(IModel::getUnderlyingResource)
+				.filter(Objects::nonNull)
+				.map(IResource::getProject)
+				.distinct().toArray(IResource[]::new);
+	}
+
+	private String[] toFileData(IResource[] resources) {
+		return Arrays.stream(resources)
+				.map(resource -> resource.getLocation().toOSString())
+				.toArray(String[]::new);
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FilterFeatureChildAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FilterFeatureChildAction.java
位置:  -0,0 +1,32  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureChildViewerFilter;
+
+public class FilterFeatureChildAction extends ViewerFilterAction {
+
+	public FilterFeatureChildAction(FeaturesView featuresView, FeatureIndex featureIndex) {
+		super(featuresView, new FeatureChildViewerFilter(featureIndex));
+
+		setDescription(PDEUIMessages.FeaturesView_FilterFeatureChildAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_FilterFeatureChildAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_FULL_HIERARCHY);
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java
位置:  -0,0 +1,56  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.viewers.IContentProvider;
+import org.eclipse.jface.viewers.ViewerComparator;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureTreeCalleesContentProvider;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureViewerComparator;
+
+public class ShowCalleesContentProviderAction extends ContentProviderAction {
+
+	public ShowCalleesContentProviderAction(FeaturesView featuresView,
+			FeatureModelManager featureModelManager) {
+		super(featuresView, featureModelManager);
+
+		setDescription(PDEUIMessages.FeaturesView_ShowCalleesContentProviderAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_ShowCalleesContentProviderAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_CALLEES);
+	}
+
+	@Override
+	public ViewerComparator createViewerComparator() {
+		return new FeatureViewerComparator();
+	}
+
+	@Override
+	public IContentProvider createContentProvider() {
+		return new FeatureTreeCalleesContentProvider(fFeatureModelManager);
+	}
+
+	@Override
+	public boolean isSupportsFilters() {
+		return true;
+	}
+
+	@Override
+	public boolean isSupportsPlugins() {
+		return true;
+	}
+
+}
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java
位置:  -0,0 +1,59  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.viewers.IContentProvider;
+import org.eclipse.jface.viewers.ViewerComparator;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureTreeCallersContentProvider;
+
+public class ShowCallersContentProviderAction extends ContentProviderAction {
+
+	private final FeatureIndex fFeatureIndex;
+
+	public ShowCallersContentProviderAction(FeaturesView featuresView,
+			FeatureModelManager featureModelManager, FeatureIndex featureIndex) {
+		super(featuresView, featureModelManager);
+		fFeatureIndex = featureIndex;
+
+		setDescription(PDEUIMessages.FeaturesView_ShowCallersContentProviderAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_ShowCallersContentProviderAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_CALLERS);
+	}
+
+	@Override
+	public ViewerComparator createViewerComparator() {
+		return new ViewerComparator();
+	}
+
+	@Override
+	public IContentProvider createContentProvider() {
+		return new FeatureTreeCallersContentProvider(fFeatureModelManager, fFeatureIndex);
+	}
+
+	@Override
+	public boolean isSupportsFilters() {
+		return false;
+	}
+
+	@Override
+	public boolean isSupportsPlugins() {
+		return false;
+	}
+
+}
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowPluginsAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowPluginsAction.java
位置:  -0,0 +1,39  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+
+public class ShowPluginsAction extends Action {
+
+	private final FeaturesView fFeaturesView;
+
+	public ShowPluginsAction(FeaturesView featuresView) {
+		super(null, AS_CHECK_BOX);
+		fFeaturesView = featuresView;
+
+		setDescription(PDEUIMessages.FeaturesView_ShowPluginsAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_ShowPluginsAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_PLUGINS_FRAGMENTS);
+	}
+
+	@Override
+	public void run() {
+		fFeaturesView.configureContent(featureInput -> featureInput.setIncludePlugins(isChecked()));
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ViewerFilterAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ViewerFilterAction.java
位置:  -0,0 +1,42  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.viewers.ViewerFilter;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+
+public abstract class ViewerFilterAction extends Action {
+
+	private final FeaturesView fFeaturesView;
+
+	private final ViewerFilter fFilter;
+
+	public ViewerFilterAction(FeaturesView featuresView, ViewerFilter filter) {
+		super(null, AS_CHECK_BOX);
+		fFeaturesView = featuresView;
+		fFilter = filter;
+		setChecked(featuresView.isActive(filter));
+	}
+
+	@Override
+	public void run() {
+		fFeaturesView.toggle(fFilter);
+	}
+
+	public ViewerFilter getViewerFilter() {
+		return fFilter;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java
位置:  -0,0 +1,65  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import java.util.*;
+import org.eclipse.pde.internal.core.*;
+import org.eclipse.pde.internal.core.ifeature.IFeatureChild;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+
+public class FeatureIndex implements IFeatureModelListener {
+
+	private final Map<String, Collection<IFeatureModel>> fIncludingFeatures = new HashMap<>();
+
+	private final FeatureModelManager fFeatureModelManager;
+
+	public FeatureIndex(FeatureModelManager featureModelManager) {
+		fFeatureModelManager = featureModelManager;
+		fFeatureModelManager.addFeatureModelListener(this);
+		reIndex();
+	}
+
+	public Collection<IFeatureModel> getIncludingFeatures(String childId) {
+		return fIncludingFeatures.getOrDefault(childId, Collections.emptySet());
+	}
+
+	public void dispose() {
+		fFeatureModelManager.removeFeatureModelListener(this);
+	}
+
+	private void reIndex() {
+		fIncludingFeatures.clear();
+		for (IFeatureModel parentModel : fFeatureModelManager.getWorkspaceModels()) {
+			for (IFeatureChild child : parentModel.getFeature().getIncludedFeatures()) {
+				IFeatureModel childModel = fFeatureModelManager.findFeatureModel(child.getId());
+				if (childModel != null) {
+					index(childModel, parentModel);
+				}
+			}
+		}
+	}
+
+	private void index(IFeatureModel childModel, IFeatureModel parentModel) {
+		String childId = childModel.getFeature().getId();
+
+		Collection<IFeatureModel> parents = fIncludingFeatures.computeIfAbsent(childId, key -> new HashSet<>());
+		parents.add(parentModel);
+	}
+
+	@Override
+	public void modelsChanged(IFeatureModelDelta delta) {
+		reIndex();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java
位置:  -0,0 +1,40  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import org.eclipse.pde.internal.core.FeatureModelManager;
+
+public class FeatureInput {
+
+	private final FeatureModelManager fFeatureModelManager;
+
+	private boolean fIncludePlugins;
+
+	public FeatureInput(FeatureModelManager featureModelManager) {
+		fFeatureModelManager = featureModelManager;
+	}
+
+	public FeatureModelManager getFeatureModelManager() {
+		return fFeatureModelManager;
+	}
+
+	public boolean isIncludePlugins() {
+		return fIncludePlugins;
+	}
+
+	public void setIncludePlugins(boolean includePlugins) {
+		fIncludePlugins = includePlugins;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureSupport.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureSupport.java
位置:  -0,0 +1,44  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.pde.core.IIdentifiable;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+
+public class FeatureSupport {
+
+	private FeatureSupport() {
+	}
+
+	public static IFeatureModel toFeatureModel(Object obj) {
+		if (obj instanceof IFeatureModel) {
+			return (IFeatureModel) obj;
+		} else if (obj instanceof IIdentifiable) {
+			IIdentifiable featureOrChild = (IIdentifiable) obj;
+			return getManager().findFeatureModel(featureOrChild.getId());
+		} else if (obj instanceof IProject) {
+			return getManager().getFeatureModel((IProject) obj);
+		} else {
+			return null;
+		}
+	}
+
+	public static FeatureModelManager getManager() {
+		return PDECore.getDefault().getFeatureModelManager();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/PluginSupport.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/PluginSupport.java
位置:  -0,0 +1,57  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.jdt.core.IJavaProject;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.PluginModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeaturePlugin;
+
+public class PluginSupport {
+
+	private PluginSupport() {
+	}
+
+	public static IPluginModelBase toSinglePluginModel(IStructuredSelection selection) {
+		if (selection.size() != 1) {
+			return null;
+		}
+
+		Object firstElement = selection.getFirstElement();
+		return toPluginModel(firstElement);
+	}
+
+	public static IPluginModelBase toPluginModel(Object obj) {
+		if (obj instanceof IPluginModelBase) {
+			return (IPluginModelBase) obj;
+		} else if (obj instanceof IFeaturePlugin) {
+			IFeaturePlugin featurePlugin = (IFeaturePlugin) obj;
+			return getManager().findModel(featurePlugin.getId());
+		} else if (obj instanceof IProject) {
+			return getManager().findModel((IProject) obj);
+		} else if (obj instanceof IJavaProject) {
+			return getManager().findModel(((IJavaProject) obj).getProject());
+		} else {
+			return null;
+		}
+	}
+
+	public static PluginModelManager getManager() {
+		return PDECore.getDefault().getModelManager();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java
位置:  -0,0 +1,76  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.ITreeContentProvider;
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.pde.internal.core.*;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+
+public abstract class AbstractFeatureTreeContentProvider
+		implements ITreeContentProvider, IFeatureModelListener {
+
+	protected final FeatureModelManager fFeatureModelManager;
+
+	protected FeatureInput fInput;
+
+	private Viewer fViewer;
+
+	public AbstractFeatureTreeContentProvider(FeatureModelManager featureModelManager) {
+		fFeatureModelManager = featureModelManager;
+		fFeatureModelManager.addFeatureModelListener(this);
+	}
+
+	@Override
+	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
+		fViewer = viewer;
+
+		if (newInput instanceof FeatureInput) {
+			fInput = (FeatureInput) newInput;
+		}
+	}
+
+	@Override
+	public Object getParent(Object element) {
+		return null;
+	}
+
+	@Override
+	public boolean hasChildren(Object element) {
+		return getChildren(element).length > 0;
+	}
+
+	@Override
+	public void dispose() {
+		fFeatureModelManager.removeFeatureModelListener(this);
+	}
+
+	@Override
+	public void modelsChanged(IFeatureModelDelta delta) {
+		refreshViewer();
+	}
+
+	private void refreshViewer() {
+		if (fViewer.getControl().isDisposed()) {
+			return;
+		}
+
+		fViewer.getControl().getDisplay().asyncExec(() -> {
+			if (!fViewer.getControl().isDisposed()) {
+				fViewer.refresh();
+			}
+		});
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java
位置:  -0,0 +1,43  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.jface.viewers.ViewerFilter;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+
+public class FeatureChildViewerFilter extends ViewerFilter {
+
+	private final FeatureIndex fFeatureIndex;
+
+	public FeatureChildViewerFilter(FeatureIndex featureIndex) {
+		fFeatureIndex = featureIndex;
+	}
+
+	@Override
+	public boolean select(Viewer viewer, Object parentElement, Object element) {
+		if (parentElement instanceof FeatureInput &amp;&amp; element instanceof IFeatureModel) {
+			IFeatureModel featureModel = (IFeatureModel) element;
+			String featureId = featureModel.getFeature().getId();
+			boolean includedInFeature = !fFeatureIndex.getIncludingFeatures(featureId).isEmpty();
+
+			return !includedInFeature;
+		}
+
+		return true;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureElementComparer.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureElementComparer.java
位置:  -0,0 +1,59  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.IElementComparer;
+import org.eclipse.pde.internal.core.ifeature.*;
+
+public class FeatureElementComparer implements IElementComparer {
+
+	@Override
+	public boolean equals(Object aObj, Object bObj) {
+		if (areInstances(aObj, bObj, IFeatureModel.class)) {
+			IFeature a = ((IFeatureModel) aObj).getFeature();
+			IFeature b = ((IFeatureModel) bObj).getFeature();
+			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion());
+		} else if (areInstances(aObj, bObj, IFeatureChild.class)) {
+			IFeatureChild a = (IFeatureChild) aObj;
+			IFeatureChild b = (IFeatureChild) bObj;
+			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+					&amp;&amp; equals(a.getModel(), b.getModel());
+		} else if (areInstances(aObj, bObj, IFeaturePlugin.class)) {
+			IFeaturePlugin a = (IFeaturePlugin) aObj;
+			IFeaturePlugin b = (IFeaturePlugin) bObj;
+			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+					&amp;&amp; equals(a.getModel(), b.getModel());
+		} else {
+			return aObj.equals(bObj);
+		}
+	}
+
+	@Override
+	public int hashCode(Object element) {
+		if (element instanceof IFeatureModel) {
+			return ((IFeatureModel) element).getFeature().getId().hashCode();
+		} else if (element instanceof IFeatureChild) {
+			return ((IFeatureChild) element).getId().hashCode();
+		} else if (element instanceof IFeaturePlugin) {
+			return ((IFeaturePlugin) element).getId().hashCode();
+		} else {
+			return element.hashCode();
+		}
+	}
+
+	private boolean areInstances(Object aObj, Object bObj, Class<?> target) {
+		return target.isInstance(aObj) &amp;&amp; target.isInstance(bObj);
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java
位置:  -0,0 +1,65  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import java.util.*;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeatureChild;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+
+public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeContentProvider {
+
+	public FeatureTreeCalleesContentProvider(FeatureModelManager featureModelManager) {
+		super(featureModelManager);
+	}
+
+	@Override
+	public Object[] getChildren(Object parentElement) {
+		if (parentElement instanceof IFeatureModel) {
+			IFeatureModel featureModel = (IFeatureModel) parentElement;
+			Object[] features = featureModel.getFeature().getIncludedFeatures();
+
+			if (!fInput.isIncludePlugins()) {
+				return features;
+			}
+
+			Object[] plugins = featureModel.getFeature().getPlugins();
+
+			List<Object> all = new ArrayList<>(features.length + plugins.length);
+			all.addAll(Arrays.asList(features));
+			all.addAll(Arrays.asList(plugins));
+
+			return all.toArray();
+		} else if (parentElement instanceof IFeatureChild) {
+			IFeatureChild featureChild = (IFeatureChild) parentElement;
+			IFeatureModel featureModel = fFeatureModelManager.findFeatureModel(featureChild.getId());
+			return getChildren(featureModel);
+		}
+
+		return new Object[0];
+	}
+
+	@Override
+	public Object[] getElements(Object inputElement) {
+		if (inputElement instanceof FeatureInput) {
+			FeatureInput input = (FeatureInput) inputElement;
+			FeatureModelManager featureModelManager = input.getFeatureModelManager();
+			return featureModelManager.getWorkspaceModels();
+		}
+
+		return new Object[0];
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java
位置:  -0,0 +1,53  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+
+public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeContentProvider {
+
+	private final FeatureIndex fFeatureIndex;
+
+	public FeatureTreeCallersContentProvider(FeatureModelManager featureModelManager,
+			FeatureIndex featureIndex) {
+		super(featureModelManager);
+		fFeatureIndex = featureIndex;
+	}
+
+	@Override
+	public Object[] getChildren(Object parentElement) {
+		if (parentElement instanceof IFeatureModel) {
+			IFeatureModel featureModel = (IFeatureModel) parentElement;
+			String featureId = featureModel.getFeature().getId();
+			return fFeatureIndex.getIncludingFeatures(featureId).toArray();
+		}
+
+		return new Object[0];
+	}
+
+	@Override
+	public Object[] getElements(Object inputElement) {
+		if (inputElement instanceof FeatureInput) {
+			FeatureInput input = (FeatureInput) inputElement;
+			FeatureModelManager featureModelManager = input.getFeatureModelManager();
+			return featureModelManager.getWorkspaceModels();
+		}
+
+		return new Object[0];
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureViewerComparator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureViewerComparator.java
位置:  -0,0 +1,52  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.ViewerComparator;
+import org.eclipse.pde.internal.core.ifeature.*;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureSupport;
+
+public class FeatureViewerComparator extends ViewerComparator {
+
+	@Override
+	public int category(Object element) {
+		if (element instanceof IFeatureChild) {
+			element = FeatureSupport.toFeatureModel(element);
+			if (element == null) {
+				return 4;
+			}
+		}
+
+		if (element instanceof IFeatureModel) {
+			IFeatureModel featureModel = (IFeatureModel) element;
+			boolean editable = featureModel.isEditable();
+			boolean hasChildren = featureModel.getFeature().getIncludedFeatures().length > 0;
+
+			if (hasChildren &amp;&amp; editable) {
+				return 0;
+			} else if (hasChildren) {
+				return 1;
+			} else if (editable) {
+				return 2;
+			} else {
+				return 3;
+			}
+		} else if (element instanceof IFeaturePlugin) {
+			return 5;
+		}
+
+		return 6;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/RootElementsFilteredTree.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/RootElementsFilteredTree.java
位置:  -0,0 +1,68  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.core.runtime.*;
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.ui.dialogs.FilteredTree;
+import org.eclipse.ui.dialogs.PatternFilter;
+import org.eclipse.ui.progress.WorkbenchJob;
+
+public class RootElementsFilteredTree extends FilteredTree {
+
+	public RootElementsFilteredTree(Composite parent, int treeStyle) {
+		super(parent, treeStyle, new RootElementsPatternFilter(), true);
+	}
+
+	/**
+	 * Avoid the expansion stage of the refresh by using a monitor in the
+	 * 
+	 */
+	@Override
+	protected WorkbenchJob doCreateRefreshJob() {
+		final WorkbenchJob realJob = super.doCreateRefreshJob();
+		return new WorkbenchJob(realJob.getName()) {
+			@Override
+			public IStatus runInUIThread(IProgressMonitor monitor) {
+				IProgressMonitor cancelledMonitor = new NullProgressMonitor();
+				cancelledMonitor.setCanceled(true);
+				realJob.runInUIThread(cancelledMonitor);
+				return Status.OK_STATUS;
+			}
+		};
+	}
+
+	private static class RootElementsPatternFilter extends PatternFilter {
+
+		private Object currentParent;
+
+		@Override
+		public boolean isElementVisible(Viewer viewer, Object element) {
+			if (viewer.getInput() == currentParent) {
+				return isLeafMatch(viewer, element);
+			}
+
+			return true;
+		}
+
+		@Override
+		public Object[] filter(Viewer viewer, Object parent, Object[] elements) {
+			currentParent = parent;
+			return super.filter(viewer, parent, elements);
+		}
+
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java
位置:  -171,7 +171,8   public class PluginsView extends ViewPart implements IPluginModelListener {
 
 	@Override
 	public void createPartControl(Composite parent) {
-		fTreeViewer = new TreeViewer(parent, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.VIRTUAL);
+		fTreeViewer = new TreeViewer(parent, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL);
+		fTreeViewer.setUseHashlookup(true);
 		fDrillDownAdapter = new DrillDownAdapter(fTreeViewer);
 		fTreeViewer.setContentProvider(new PluginsContentProvider(this));
 		fTreeViewer.setLabelProvider(new PluginsLabelProvider());
位置:  -429,8 +430,6   public class PluginsView extends ViewPart implements IPluginModelListener {
 			IPluginModelBase entry = getEnclosingModel();
 			if (entry != null) {
 				Action action = new OpenPluginDependenciesAction(entry);
-				action.setText(PDEUIMessages.PluginsView_openDependencies);
-				action.setImageDescriptor(PDEPluginImages.DESC_CALLEES);
 				manager.add(action);
 				manager.add(new Separator());
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewLibraryPluginCreationOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewLibraryPluginCreationOperation.java
位置:  -526,7 +526,7   public class NewLibraryPluginCreationOperation extends NewProjectCreationOperati
 				protected void addProjectPackages(IBundle bundle, Set<String> ignorePkgs) {
 					if (!unzip)
 						super.addProjectPackages(bundle, ignorePkgs);
-					Stack<IResource> stack = new Stack<>();
+					ArrayDeque<IResource> stack = new ArrayDeque<>();
 					stack.push(fProject);
 					try {
 						while (!stack.isEmpty()) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewProjectCreationOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewProjectCreationOperation.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2000, 2017 IBM Corporation and others.
+ * Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -14,6 +14,7  
  *     Gary Duprex <Gary.Duprex@aspectstools.com> - bug 179213
  *     Benjamin Cabe <benjamin.cabe@anyware-tech.com> - bug 247553
  *     Johannes Ahlers <Johannes.Ahlers@gmx.de> - bug 477677
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.wizards.plugin;
 
位置:  -41,6 +42,7   import org.eclipse.pde.internal.ui.PDEPlugin;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.wizards.IProjectProvider;
 import org.eclipse.pde.ui.*;
+import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.*;
 import org.eclipse.ui.actions.WorkspaceModifyOperation;
 import org.eclipse.ui.ide.IDE;
位置:  -460,11 +462,12   public class NewProjectCreationOperation extends WorkspaceModifyOperation {
 	 * @param file file to open the editor on
 	 */
 	private void openFile(final IFile file) {
-		PDEPlugin.getDefault().getWorkbench().getDisplay().asyncExec(() -> {
+		Display.getDefault().asyncExec(() -> {
 			final IWorkbenchWindow ww = PDEPlugin.getActiveWorkbenchWindow();
 			final IWorkbenchPage page = ww.getActivePage();
-			if (page == null)
+			if (page == null) {
 				return;
+			}
 			IWorkbenchPart focusPart = page.getActivePart();
 			if (focusPart instanceof ISetSelectionTarget) {
 				ISelection selection = new StructuredSelection(file);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/NewTargetDefinitionWizard2.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/NewTargetDefinitionWizard2.java
位置:  -1,72 +1,74  
-/*******************************************************************************
- * Copyright (c) 2005, 2015 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2005, 2015 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.target;
-
-import org.eclipse.pde.core.target.ITargetDefinition;
-
-import org.eclipse.jface.wizard.Wizard;
-import org.eclipse.pde.internal.ui.PDEPluginImages;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-
-/**
- * Target definition wizard used to create a new target definition from
- * the new target platform preference page.
- */
-public class NewTargetDefinitionWizard2 extends Wizard {
-
-	TargetCreationPage fPage;
-	ITargetDefinition fDefinition;
-
-	public NewTargetDefinitionWizard2() {
-		super();
-		setDefaultPageImageDescriptor(PDEPluginImages.DESC_TARGET_WIZ);
-		setWindowTitle(PDEUIMessages.NewTargetProfileWizard_title);
-		setNeedsProgressMonitor(true);
-	}
-
-	@Override
-	public void addPages() {
-		fPage = new TargetCreationPage(
-		addPage(fPage);
-		addPage(new TargetDefinitionContentPage(null));
-	}
-
-	@Override
-	public boolean canFinish() {
-		return false;
-	}
-
-	@Override
-	public boolean performFinish() {
-		return true;
-	}
-
-	/**
-	 * Returns the target definition created by this wizard.
-	 *
-	 * @return target definition or <code>null</code> if none
-	 */
-	public ITargetDefinition getTargetDefinition() {
-		return fDefinition;
-	}
-
-	/**
-	 * Sets the target being edited.
-	 *
-	 * @param definition target
-	 */
-	public void setTargetDefinition(ITargetDefinition definition) {
-		fDefinition = definition;
-	}
-}
+package org.eclipse.pde.internal.ui.wizards.target;
+
+import org.eclipse.pde.core.target.ITargetDefinition;
+
+import org.eclipse.jface.wizard.Wizard;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+
+/**
+ * Target definition wizard used to create a new target definition from
+ * the new target platform preference page.
+ */
+public class NewTargetDefinitionWizard2 extends Wizard {
+
+	TargetCreationPage fPage;
+	ITargetDefinition fDefinition;
+
+	public NewTargetDefinitionWizard2() {
+		super();
+		setDefaultPageImageDescriptor(PDEPluginImages.DESC_TARGET_WIZ);
+		setWindowTitle(PDEUIMessages.NewTargetProfileWizard_title);
+		setNeedsProgressMonitor(true);
+	}
+
+	@Override
+	public void addPages() {
+		fPage = new TargetCreationPage(
+		addPage(fPage);
+		addPage(new TargetDefinitionContentPage(null));
+	}
+
+
+	@Override
+	public boolean canFinish() {
+		return false;
+	}
+
+
+	@Override
+	public boolean performFinish() {
+		return true;
+	}
+
+	/**
+	 * Returns the target definition created by this wizard.
+	 *
+	 * @return target definition or <code>null</code> if none
+	 */
+	public ITargetDefinition getTargetDefinition() {
+		return fDefinition;
+	}
+
+	/**
+	 * Sets the target being edited.
+	 *
+	 * @param definition target
+	 */
+	public void setTargetDefinition(ITargetDefinition definition) {
+		fDefinition = definition;
+	}
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/TracingTab.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/TracingTab.java
位置:  -40,6 +40,7   public class TracingTab extends AbstractLauncherTab {
 
 	private Image fImage;
 	private TracingBlock fTracingBlock;
+	private boolean fInitialized;
 
 	/**
 	 * Constructor
位置:  -64,6 +65,10   public class TracingTab extends AbstractLauncherTab {
 
 	@Override
 	public void activated(ILaunchConfigurationWorkingCopy workingCopy) {
+		if (!fInitialized) {
+			fTracingBlock.initializeFrom(workingCopy);
+			fInitialized = true;
+		}
 		fTracingBlock.activated(workingCopy);
 	}
 
位置:  -78,7 +83,7   public class TracingTab extends AbstractLauncherTab {
 
 	@Override
 	public void initializeFrom(ILaunchConfiguration config) {
-		fTracingBlock.initializeFrom(config);
+		// do nothing, initialize during activated
 	}
 
 	@Override

原文件: ui/org.eclipse.ui.trace/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.ui.trace/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.ui.trace;singleton:=true
-Bundle-Version: 1.1.500.qualifier
+Bundle-Version: 1.1.600.qualifier
 Bundle-Activator: org.eclipse.ui.trace.internal.TracingUIActivator
 Bundle-Vendor: %providerName
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: ui/org.eclipse.ui.trace/pom.xml 
新文件: ui/org.eclipse.ui.trace/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.ui</groupId>
   <artifactId>org.eclipse.ui.trace</artifactId>
-  <version>1.1.500-SNAPSHOT</version>
+  <version>1.1.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentTreeViewer.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentTreeViewer.java
位置:  -1,53 +1,53  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal;
-
-import org.eclipse.jface.viewers.TreeViewer;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.widgets.Composite;
-import org.eclipse.swt.widgets.Text;
-import org.eclipse.ui.dialogs.FilteredTree;
-
-/**
- * A {@link TracingComponentTreeViewer} provides a tree viewer with support for filtering the content based on user
- * input in a {@link Text} field. Filtering is done via {@link TracingComponentViewerFilter}.
- */
-public class TracingComponentTreeViewer extends FilteredTree {
-
-	/**
-	 * Create a new {@link TracingComponentTreeViewer} instance
-	 *
-	 * @param parent
-	 *            The parent composite
-	 */
-	public TracingComponentTreeViewer(final Composite parent) {
-
-		super(parent, SWT.NONE, new TracingComponentViewerFilter(), true);
-		setInitialText(Messages.filterSearchText);
-	}
-
-	@Override
-	protected TreeViewer doCreateTreeViewer(final Composite treeViewerParentComposite, final int style) {
-
-		return new TreeViewer(treeViewerParentComposite, style | SWT.BORDER | SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL | SWT.FULL_SELECTION);
-	}
-
-	@Override
-	public void setEnabled(final boolean enabled) {
-
-		filterComposite.setEnabled(enabled);
-		getViewer().getTree().setEnabled(enabled);
-		getFilterControl().setEnabled(enabled);
-	}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal;
+
+import org.eclipse.jface.viewers.TreeViewer;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Text;
+import org.eclipse.ui.dialogs.FilteredTree;
+
+/**
+ * A {@link TracingComponentTreeViewer} provides a tree viewer with support for filtering the content based on user
+ * input in a {@link Text} field. Filtering is done via {@link TracingComponentViewerFilter}.
+ */
+public class TracingComponentTreeViewer extends FilteredTree {
+
+	/**
+	 * Create a new {@link TracingComponentTreeViewer} instance
+	 *
+	 * @param parent
+	 *            The parent composite
+	 */
+	public TracingComponentTreeViewer(final Composite parent) {
+
+		super(parent, SWT.NONE, new TracingComponentViewerFilter(), true);
+		setInitialText(Messages.filterSearchText);
+	}
+
+	@Override
+	protected TreeViewer doCreateTreeViewer(final Composite treeViewerParentComposite, final int style) {
+
+		return new TreeViewer(treeViewerParentComposite, style | SWT.BORDER | SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL | SWT.FULL_SELECTION);
+	}
+
+	@Override
+	public void setEnabled(boolean enabled) {
+
+		filterComposite.setEnabled(enabled);
+		getViewer().getTree().setEnabled(enabled);
+		getFilterControl().setEnabled(enabled);
+	}
 }
\ No newline at end of file

---------------------------89---------------------------
需求名称: Bug 550585 - Fix files that have ended up with CRLF in the git
创建时间: 2019-08-30	05:53:38
修改时间: 2019-08-30	07:58:25

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetDefinition.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/ITargetDefinition.java
位置:  -1,340 +1,340  
-/*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2008, 2018 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *     Lucas Bullen (Red Hat Inc.) - [Bug 531602] formatting munged by editor
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import org.eclipse.core.runtime.IPath;
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.MultiStatus;
-import org.eclipse.jdt.launching.JavaRuntime;
-import org.eclipse.osgi.service.environment.Constants;
-import org.w3c.dom.Document;
-
-/**
- * Defines a target platform. A target platform is a collection of bundles and
- * features configured for a specific environment.
- *
- * @see ITargetPlatformService Use the target platform service to work with target definitions
- *
- * @since 3.8
- * @noimplement This interface is not intended to be implemented by clients.
- * @noextend This interface is not intended to be extended by clients.
- */
-public interface ITargetDefinition {
-
-	/**
-	 * Resolves all contents of this target definition by resolving each
-	 * {@link ITargetLocation} in this target definition.
-	 * <p>
-	 * Returns a {@link MultiStatus} containing any non-OK statuses produced
-	 * when resolving each {@link ITargetLocation}.  An OK status will be
-	 * returned if no non-OK statuses are returned from the locations. A
-	 * CANCEL status will be returned if the monitor is cancelled.
-	 * </p><p>
-	 * For more information on how a target resolves, see
-	 * {@link ITargetLocation#resolve(ITargetDefinition, IProgressMonitor)}
-	 * </p>
-	 *
-	 * @param monitor progress monitor or <code>null</code>
-	 * @return resolution multi-status
-	 */
-	IStatus resolve(IProgressMonitor monitor);
-
-	/**
-	 * Returns whether all {@link ITargetLocation}s in this target currently in
-	 * a resolved state.
-	 *
-	 * @return <code>true</code> if all locations are currently resolved
-	 */
-	boolean isResolved();
-
-	/**
-	 * Sets the XML document that stores the state of this target. The document is
-	 * updated with each setter that has an affect on the target file source.
-	 *
-	 * @param document
-	 *                     xml document or <code>null</code>
-	 * @since 3.12
-	 */
-	void setDocument(Document document);
-
-	/**
-	 * Returns the Document that represents this target, or <code>null</code> if
-	 * none
-	 *
-	 * @return document or <code>null</code>
-	 * @since 3.12
-	 */
-	Document getDocument();
-
-	/**
-	 * Returns all bundles included in this target definition or <code>null</code>
-	 * if this container is not resolved. Takes all the bundles available from the
-	 * set target locations (returned by {@link #getAllBundles()} and applies
-	 * the filters (returned by {@link #getIncluded()})
-	 * to determine the final list of bundles in this target.
-	 * <p>
-	 * Some of the returned bundles may have non-OK statuses. These bundles may be
-	 * missing some information (location, version, source target). To get a bundle's
-	 * status call {@link TargetBundle#getStatus()}. Calling {@link #getStatus()}
-	 * will return all problems in this target definition.
-	 * </p>
-	 * @return resolved bundles or <code>null</code>
-	 */
-	TargetBundle[] getBundles();
-
-	/**
-	 * Returns a list of all resolved bundles in this target definition or <code>null</code>.
-	 * Does not filter based on any filters ({@link #getIncluded()}.
-	 * Returns <code>null</code> if this target has not been resolved.
-	 * Use {@link #getBundles()} to get the filtered list of bundles.
-	 * <p>
-	 * Some of the returned bundles may have non-OK statuses. These bundles may be
-	 * missing some information (location, version, source target). To get a bundle's
-	 * status call {@link TargetBundle#getStatus()}. Calling {@link #getStatus()}
-	 * will return all problems in this target definition.
-	 * </p>
-	 *
-	 * @return collection of resolved bundles or <code>null</code>
-	 */
-	TargetBundle[] getAllBundles();
-
-	/**
-	 * Returns the list of feature models available in this target or <code>null</code> if
-	 * this target has not been resolved.
-	 *
-	 * @return collection of feature models or <code>null</code>
-	 */
-	TargetFeature[] getAllFeatures();
-
-	/**
-	 * Returns a {@link MultiStatus} containing all problems with this target.
-	 * Returns an OK status if there are no problems. Returns <code>null</code>
-	 * if this target has not been resolved.
-	 * <p>
-	 * The returned status will include all non-OK statuses returned by
-	 * {@link #resolve(IProgressMonitor)} as well as any non-OK statuses found
-	 * in {@link TargetBundle}s returned by {@link #getBundles()}. For more
-	 * information on the statuses that can be returned see
-	 * {@link ITargetLocation#getStatus()} and {@link TargetBundle#getStatus()}.
-	 * </p>
-	 *
-	 * @return {@link MultiStatus} containing all problems with this target or
-	 *         <code>null</code>
-	 */
-	IStatus getStatus();
-
-	/**
-	 * Returns a handle to this target definition.
-	 *
-	 * @return target handle
-	 */
-	ITargetHandle getHandle();
-
-	/**
-	 * Returns the name of this target, or <code>null</code> if none
-	 *
-	 * @return name or <code>null</code>
-	 */
-	String getName();
-
-	/**
-	 * Sets the name of this target.
-	 *
-	 * @param name target name or <code>null</code>
-	 */
-	void setName(String name);
-
-	/**
-	 * Returns the locations defined by this target, possible <code>null</code>.
-	 *
-	 * @return target locations or <code>null</code>
-	 */
-	ITargetLocation[] getTargetLocations();
-
-	/**
-	 * Sets the locations in this target definition or <code>null</code> if none.
-	 *
-	 * @param containers target locations or <code>null</code>
-	 */
-	void setTargetLocations(ITargetLocation[] containers);
-
-	/**
-	 * Returns a list of descriptors that filter the resolved plug-ins in this target.  The list may include
-	 * both plug-ins and features.  The returned descriptors will have an id, may have a version and will have
-	 * either {@link NameVersionDescriptor#TYPE_FEATURE} or {@link NameVersionDescriptor#TYPE_PLUGIN} as their
-	 * type.  If the target is set to include all units (no filtering is being done), this method will return
-	 * <code>null</code>.
-	 *
-	 * @see #getBundles()
-	 * @see #setIncluded(NameVersionDescriptor[])
-	 * @return list of name version descriptors or <code>null</code>
-	 */
-	NameVersionDescriptor[] getIncluded();
-
-	/**
-	 * Sets a list of descriptors to filter the resolved plug-ins in this target.  The list may include both
-	 * plug-ins and features.  To include all plug-ins in the target, pass <code>null</code> as the argument.
-	 * <p>
-	 * The descriptions passed to this method must have an ID set.  The version may be <code>null</code>
-	 * to include any version of the matches the ID.  Only descriptors with a type of {@link NameVersionDescriptor#TYPE_FEATURE}
-	 * or {@link NameVersionDescriptor#TYPE_PLUGIN} will be considered.
-	 * </p>
-	 * @see #getBundles()
-	 * @see #getIncluded()
-	 * @param included list of descriptors to include in the target or <code>null</code> to include all plug-ins
-	 */
-	void setIncluded(NameVersionDescriptor[] included);
-
-	/**
-	 * Returns JRE container path that this target definition should be built against,
-	 * or <code>null</code> if the workspace default JRE should be used. JavaRuntime can be used
-	 * to resolve JRE's and execution environments from a container path.
-	 *
-	 * @return JRE container path or <code>null</code>
-	 * @see JavaRuntime
-	 */
-	IPath getJREContainer();
-
-	/**
-	 * Sets the JRE that this target definition should be built against, or <code>null</code>
-	 * to use the workspace default JRE. JavaRuntime should be used to generate and parse
-	 * JRE container paths.
-	 *
-	 * @param containerPath JRE container path
-	 * @see JavaRuntime
-	 */
-	void setJREContainer(IPath containerPath);
-
-	/**
-	 * Returns the identifier of the operating system this target is configured for,
-	 * possibly <code>null</code>.
-	 *
-	 * @return operating system identifier or <code>null</code> to default to the
-	 * 	running operating system
-	 */
-	String getOS();
-
-	/**
-	 * Sets the operating system this target is configured for or <code>null</code> to
-	 * default to the running operating system.
-	 *
-	 * @param os operating system identifier - one of the operating system constants
-	 * 	defined by {@link Constants} or <code>null</code> to default to the running
-	 * 	operating system
-	 */
-	void setOS(String os);
-
-	/**
-	 * Returns the identifier of the window system this target is configured for,
-	 * possibly <code>null</code>.
-	 *
-	 * @return window system identifier - one of the window system constants
-	 * 	defined by {@link Constants}, or <code>null</code> to default to the
-	 * 	running window system
-	 */
-	String getWS();
-
-	/**
-	 * Sets the window system this target is configured for or <code>null</code> to
-	 * default to the running window system.
-	 *
-	 * @param ws window system identifier or <code>null</code> to default to the
-	 * 	running window system
-	 */
-	void setWS(String ws);
-
-	/**
-	 * Returns the identifier of the architecture this target is configured for,
-	 * or <code>null</code> to default to the running architecture.
-	 *
-	 * @return architecture identifier - one of the architecture constants
-	 * 	defined by {@link Constants} or <code>null</code> to default to the running
-	 * 	architecture
-	 */
-	String getArch();
-
-	/**
-	 * Sets the architecture this target is configured for, or <code>null</code> to default
-	 * to the running architecture.
-	 *
-	 * @param arch architecture identifier or <code>null</code> to default to the
-	 * 	running architecture.
-	 */
-	void setArch(String arch);
-
-	/**
-	 * Returns the identifier of the locale this target is configured for, or <code>null</code>
-	 * for default.
-	 *
-	 * @return locale identifier or <code>null</code> for default
-	 */
-	String getNL();
-
-	/**
-	 * Sets the locale this target is configured for or <code>null</code> for default.
-	 *
-	 * @param nl locale identifier or <code>null</code> for default
-	 */
-	void setNL(String nl);
-
-	/**
-	 * Returns any program arguments that should be used when launching this target
-	 * or <code>null</code> if none.
-	 *
-	 * @return program arguments or <code>null</code> if none
-	 */
-	String getProgramArguments();
-
-	/**
-	 * Sets any program arguments that should be used when launching this target
-	 * or <code>null</code> if none.
-	 *
-	 * @param args program arguments or <code>null</code>
-	 */
-	void setProgramArguments(String args);
-
-	/**
-	 * Returns any VM arguments that should be used when launching this target
-	 * or <code>null</code> if none.
-	 *
-	 * @return VM arguments or <code>null</code> if none
-	 */
-	String getVMArguments();
-
-	/**
-	 * Sets any VM arguments that should be used when launching this target
-	 * or <code>null</code> if none.
-	 *
-	 * @param args VM arguments or <code>null</code>
-	 */
-	void setVMArguments(String args);
-
-	/**
-	 * Sets implicit dependencies for this target. Bundles in this collection are always
-	 * considered by PDE when computing plug-in dependencies. Only symbolic names need to
-	 * be specified in the given descriptors.
-	 *
-	 * @param bundles implicit dependencies or <code>null</code> if none
-	 */
-	void setImplicitDependencies(NameVersionDescriptor[] bundles);
-
-	/**
-	 * Returns the implicit dependencies set on this target or <code>null</code> if none.
-	 *
-	 * @return implicit dependencies or <code>null</code>
-	 */
-	NameVersionDescriptor[] getImplicitDependencies();
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *     Lucas Bullen (Red Hat Inc.) - [Bug 531602] formatting munged by editor
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.MultiStatus;
+import org.eclipse.jdt.launching.JavaRuntime;
+import org.eclipse.osgi.service.environment.Constants;
+import org.w3c.dom.Document;
+
+/**
+ * Defines a target platform. A target platform is a collection of bundles and
+ * features configured for a specific environment.
+ *
+ * @see ITargetPlatformService Use the target platform service to work with target definitions
+ *
+ * @since 3.8
+ * @noimplement This interface is not intended to be implemented by clients.
+ * @noextend This interface is not intended to be extended by clients.
+ */
+public interface ITargetDefinition {
+
+	/**
+	 * Resolves all contents of this target definition by resolving each
+	 * {@link ITargetLocation} in this target definition.
+	 * <p>
+	 * Returns a {@link MultiStatus} containing any non-OK statuses produced
+	 * when resolving each {@link ITargetLocation}.  An OK status will be
+	 * returned if no non-OK statuses are returned from the locations. A
+	 * CANCEL status will be returned if the monitor is cancelled.
+	 * </p><p>
+	 * For more information on how a target resolves, see
+	 * {@link ITargetLocation#resolve(ITargetDefinition, IProgressMonitor)}
+	 * </p>
+	 *
+	 * @param monitor progress monitor or <code>null</code>
+	 * @return resolution multi-status
+	 */
+	IStatus resolve(IProgressMonitor monitor);
+
+	/**
+	 * Returns whether all {@link ITargetLocation}s in this target currently in
+	 * a resolved state.
+	 *
+	 * @return <code>true</code> if all locations are currently resolved
+	 */
+	boolean isResolved();
+
+	/**
+	 * Sets the XML document that stores the state of this target. The document is
+	 * updated with each setter that has an affect on the target file source.
+	 *
+	 * @param document
+	 *                     xml document or <code>null</code>
+	 * @since 3.12
+	 */
+	void setDocument(Document document);
+
+	/**
+	 * Returns the Document that represents this target, or <code>null</code> if
+	 * none
+	 *
+	 * @return document or <code>null</code>
+	 * @since 3.12
+	 */
+	Document getDocument();
+
+	/**
+	 * Returns all bundles included in this target definition or <code>null</code>
+	 * if this container is not resolved. Takes all the bundles available from the
+	 * set target locations (returned by {@link #getAllBundles()} and applies
+	 * the filters (returned by {@link #getIncluded()})
+	 * to determine the final list of bundles in this target.
+	 * <p>
+	 * Some of the returned bundles may have non-OK statuses. These bundles may be
+	 * missing some information (location, version, source target). To get a bundle's
+	 * status call {@link TargetBundle#getStatus()}. Calling {@link #getStatus()}
+	 * will return all problems in this target definition.
+	 * </p>
+	 * @return resolved bundles or <code>null</code>
+	 */
+	TargetBundle[] getBundles();
+
+	/**
+	 * Returns a list of all resolved bundles in this target definition or <code>null</code>.
+	 * Does not filter based on any filters ({@link #getIncluded()}.
+	 * Returns <code>null</code> if this target has not been resolved.
+	 * Use {@link #getBundles()} to get the filtered list of bundles.
+	 * <p>
+	 * Some of the returned bundles may have non-OK statuses. These bundles may be
+	 * missing some information (location, version, source target). To get a bundle's
+	 * status call {@link TargetBundle#getStatus()}. Calling {@link #getStatus()}
+	 * will return all problems in this target definition.
+	 * </p>
+	 *
+	 * @return collection of resolved bundles or <code>null</code>
+	 */
+	TargetBundle[] getAllBundles();
+
+	/**
+	 * Returns the list of feature models available in this target or <code>null</code> if
+	 * this target has not been resolved.
+	 *
+	 * @return collection of feature models or <code>null</code>
+	 */
+	TargetFeature[] getAllFeatures();
+
+	/**
+	 * Returns a {@link MultiStatus} containing all problems with this target.
+	 * Returns an OK status if there are no problems. Returns <code>null</code>
+	 * if this target has not been resolved.
+	 * <p>
+	 * The returned status will include all non-OK statuses returned by
+	 * {@link #resolve(IProgressMonitor)} as well as any non-OK statuses found
+	 * in {@link TargetBundle}s returned by {@link #getBundles()}. For more
+	 * information on the statuses that can be returned see
+	 * {@link ITargetLocation#getStatus()} and {@link TargetBundle#getStatus()}.
+	 * </p>
+	 *
+	 * @return {@link MultiStatus} containing all problems with this target or
+	 *         <code>null</code>
+	 */
+	IStatus getStatus();
+
+	/**
+	 * Returns a handle to this target definition.
+	 *
+	 * @return target handle
+	 */
+	ITargetHandle getHandle();
+
+	/**
+	 * Returns the name of this target, or <code>null</code> if none
+	 *
+	 * @return name or <code>null</code>
+	 */
+	String getName();
+
+	/**
+	 * Sets the name of this target.
+	 *
+	 * @param name target name or <code>null</code>
+	 */
+	void setName(String name);
+
+	/**
+	 * Returns the locations defined by this target, possible <code>null</code>.
+	 *
+	 * @return target locations or <code>null</code>
+	 */
+	ITargetLocation[] getTargetLocations();
+
+	/**
+	 * Sets the locations in this target definition or <code>null</code> if none.
+	 *
+	 * @param containers target locations or <code>null</code>
+	 */
+	void setTargetLocations(ITargetLocation[] containers);
+
+	/**
+	 * Returns a list of descriptors that filter the resolved plug-ins in this target.  The list may include
+	 * both plug-ins and features.  The returned descriptors will have an id, may have a version and will have
+	 * either {@link NameVersionDescriptor#TYPE_FEATURE} or {@link NameVersionDescriptor#TYPE_PLUGIN} as their
+	 * type.  If the target is set to include all units (no filtering is being done), this method will return
+	 * <code>null</code>.
+	 *
+	 * @see #getBundles()
+	 * @see #setIncluded(NameVersionDescriptor[])
+	 * @return list of name version descriptors or <code>null</code>
+	 */
+	NameVersionDescriptor[] getIncluded();
+
+	/**
+	 * Sets a list of descriptors to filter the resolved plug-ins in this target.  The list may include both
+	 * plug-ins and features.  To include all plug-ins in the target, pass <code>null</code> as the argument.
+	 * <p>
+	 * The descriptions passed to this method must have an ID set.  The version may be <code>null</code>
+	 * to include any version of the matches the ID.  Only descriptors with a type of {@link NameVersionDescriptor#TYPE_FEATURE}
+	 * or {@link NameVersionDescriptor#TYPE_PLUGIN} will be considered.
+	 * </p>
+	 * @see #getBundles()
+	 * @see #getIncluded()
+	 * @param included list of descriptors to include in the target or <code>null</code> to include all plug-ins
+	 */
+	void setIncluded(NameVersionDescriptor[] included);
+
+	/**
+	 * Returns JRE container path that this target definition should be built against,
+	 * or <code>null</code> if the workspace default JRE should be used. JavaRuntime can be used
+	 * to resolve JRE's and execution environments from a container path.
+	 *
+	 * @return JRE container path or <code>null</code>
+	 * @see JavaRuntime
+	 */
+	IPath getJREContainer();
+
+	/**
+	 * Sets the JRE that this target definition should be built against, or <code>null</code>
+	 * to use the workspace default JRE. JavaRuntime should be used to generate and parse
+	 * JRE container paths.
+	 *
+	 * @param containerPath JRE container path
+	 * @see JavaRuntime
+	 */
+	void setJREContainer(IPath containerPath);
+
+	/**
+	 * Returns the identifier of the operating system this target is configured for,
+	 * possibly <code>null</code>.
+	 *
+	 * @return operating system identifier or <code>null</code> to default to the
+	 * 	running operating system
+	 */
+	String getOS();
+
+	/**
+	 * Sets the operating system this target is configured for or <code>null</code> to
+	 * default to the running operating system.
+	 *
+	 * @param os operating system identifier - one of the operating system constants
+	 * 	defined by {@link Constants} or <code>null</code> to default to the running
+	 * 	operating system
+	 */
+	void setOS(String os);
+
+	/**
+	 * Returns the identifier of the window system this target is configured for,
+	 * possibly <code>null</code>.
+	 *
+	 * @return window system identifier - one of the window system constants
+	 * 	defined by {@link Constants}, or <code>null</code> to default to the
+	 * 	running window system
+	 */
+	String getWS();
+
+	/**
+	 * Sets the window system this target is configured for or <code>null</code> to
+	 * default to the running window system.
+	 *
+	 * @param ws window system identifier or <code>null</code> to default to the
+	 * 	running window system
+	 */
+	void setWS(String ws);
+
+	/**
+	 * Returns the identifier of the architecture this target is configured for,
+	 * or <code>null</code> to default to the running architecture.
+	 *
+	 * @return architecture identifier - one of the architecture constants
+	 * 	defined by {@link Constants} or <code>null</code> to default to the running
+	 * 	architecture
+	 */
+	String getArch();
+
+	/**
+	 * Sets the architecture this target is configured for, or <code>null</code> to default
+	 * to the running architecture.
+	 *
+	 * @param arch architecture identifier or <code>null</code> to default to the
+	 * 	running architecture.
+	 */
+	void setArch(String arch);
+
+	/**
+	 * Returns the identifier of the locale this target is configured for, or <code>null</code>
+	 * for default.
+	 *
+	 * @return locale identifier or <code>null</code> for default
+	 */
+	String getNL();
+
+	/**
+	 * Sets the locale this target is configured for or <code>null</code> for default.
+	 *
+	 * @param nl locale identifier or <code>null</code> for default
+	 */
+	void setNL(String nl);
+
+	/**
+	 * Returns any program arguments that should be used when launching this target
+	 * or <code>null</code> if none.
+	 *
+	 * @return program arguments or <code>null</code> if none
+	 */
+	String getProgramArguments();
+
+	/**
+	 * Sets any program arguments that should be used when launching this target
+	 * or <code>null</code> if none.
+	 *
+	 * @param args program arguments or <code>null</code>
+	 */
+	void setProgramArguments(String args);
+
+	/**
+	 * Returns any VM arguments that should be used when launching this target
+	 * or <code>null</code> if none.
+	 *
+	 * @return VM arguments or <code>null</code> if none
+	 */
+	String getVMArguments();
+
+	/**
+	 * Sets any VM arguments that should be used when launching this target
+	 * or <code>null</code> if none.
+	 *
+	 * @param args VM arguments or <code>null</code>
+	 */
+	void setVMArguments(String args);
+
+	/**
+	 * Sets implicit dependencies for this target. Bundles in this collection are always
+	 * considered by PDE when computing plug-in dependencies. Only symbolic names need to
+	 * be specified in the given descriptors.
+	 *
+	 * @param bundles implicit dependencies or <code>null</code> if none
+	 */
+	void setImplicitDependencies(NameVersionDescriptor[] bundles);
+
+	/**
+	 * Returns the implicit dependencies set on this target or <code>null</code> if none.
+	 *
+	 * @return implicit dependencies or <code>null</code>
+	 */
+	NameVersionDescriptor[] getImplicitDependencies();
+}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/TargetBundle.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/core/target/TargetBundle.java
位置:  -1,279 +1,280  
-/*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2009, 2017 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.pde.core.target;
-
-import java.io.BufferedInputStream;
-import java.io.ByteArrayInputStream;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.util.Map;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IConfigurationElement;
-import org.eclipse.core.runtime.IExtension;
-import org.eclipse.core.runtime.IExtensionRegistry;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.RegistryFactory;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.core.runtime.spi.RegistryContributor;
-import org.eclipse.equinox.frameworkadmin.BundleInfo;
-import org.eclipse.osgi.util.ManifestElement;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.internal.core.ICoreConstants;
-import org.eclipse.pde.internal.core.PDECore;
-import org.eclipse.pde.internal.core.target.Messages;
-import org.eclipse.pde.internal.core.util.ManifestUtils;
-import org.osgi.framework.BundleException;
-import org.osgi.framework.Constants;
-
-/**
- * Describes a single bundle in a target definition. Also used to represent
- * content in the target that is missing or invalid.
- *
- * @since 3.8
- */
-public class TargetBundle {
-
-	/**
-	 * Status code indicating that this target bundle represents a required plug-in that is missing from a target definition
-	 */
-	public static final int STATUS_PLUGIN_DOES_NOT_EXIST = 100;
-
-	/**
-	 * Status code indicating that this target bundle represents a required feature that is missing from a target definition
-	 */
-	public static final int STATUS_FEATURE_DOES_NOT_EXIST = 110;
-
-	/**
-	 * Status code indicating that a required bundle version does not exist (a bundle
-	 * with the correct symbolic name is present, but the specified version was not
-	 * found).
-	 */
-	public static final int STATUS_VERSION_DOES_NOT_EXIST = 101;
-
-	/**
-	 * Status code indicating that a bundle's manifest could not be read, or did not exist.
-	 */
-	public static final int STATUS_INVALID_MANIFEST = 102;
-
-	protected BundleInfo fInfo;
-	protected boolean fIsFragment = false;
-	protected BundleInfo fSourceTarget;
-	protected String fSourcePath = null;
-
-	/**
-	 * Constructs a target bundle for a local bundle.  The bundle may be a directory or
-	 * an archive file. The manifest of the bundle will be read to collect the additional
-	 * information.
-	 *
-	 * @param bundleLocation the location of the bundle (directory or archive) to open
-	 * @throws CoreException if there is a problem opening the bundle or its manifest
-	 */
-	public TargetBundle(File bundleLocation) throws CoreException {
-		initialize(bundleLocation);
-	}
-
-	/**
-	 * Constructs an empty target bundle with no information.
-	 */
-	protected TargetBundle() {
-		fInfo = new BundleInfo();
-	}
-
-	/**
-	 * Returns a {@link BundleInfo} object containing additional information about the bundle
-	 * this target bundle represents. It is not guaranteed that the bundle info will have any
-	 * fields set.  The base implementation of {@link TargetBundle} will fill in the location,
-	 * symbolic name and version if that information was available in the bundle's manifest.
-	 *
-	 * @return a bundle info object with information on the bundle this target bundle represents
-	 */
-	public BundleInfo getBundleInfo() {
-		return fInfo;
-	}
-
-	/**
-	 * Returns a status object describing any problems with this target bundle. The base
-	 * implementation of {@link TargetBundle} will always return an OK status.
-	 *
-	 * @return status of this bundle
-	 */
-	public IStatus getStatus() {
-		// The status will always be ok as the constructor would throw an exception for any issues.
-		return Status.OK_STATUS;
-	}
-
-	/**
-	 * Returns <code>true</code> if this bundle is a source bundle and
-	 * <code>false</code> if this bundle is an executable bundle.
-	 *
-	 * @return whether the resolved bundle is a source bundle
-	 */
-	public boolean isSourceBundle() {
-		return fSourceTarget != null;
-	}
-
-	/**
-	 * If this bundle is a source bundle this method returns a bundle info
-	 * representing the executable bundle that this bundle provides source for.
-	 * The returned bundle info may not have a symbolic name and version set if
-	 * this source bundle is an old style source plug-in.
-	 *
-	 * @return bundle info representing bundle this bundle provides source for or <code>null</code>
-	 */
-	public BundleInfo getSourceTarget() {
-		return fSourceTarget;
-	}
-
-	/**
-	 * Returns whether this bundle is a fragment.
-	 *
-	 * @return whether this bundle is a fragment
-	 */
-	public boolean isFragment() {
-		return fIsFragment;
-	}
-
-	/**
-	 * Returns bundle relative path to old-style source folders, or <code>null</code>
-	 * if not applicable.
-	 *
-	 * @return bundle relative path to old-style source folders, or <code>null</code>
-	 */
-	public String getSourcePath() {
-		return fSourcePath;
-	}
-
-	/**
-	 * Initializes the contents of this target bundle from the provided local bundle
-	 *
-	 * @param file the bundle to initialize from
-	 */
-	private void initialize(File file) throws CoreException {
-		if (file == null || !file.exists()) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetFeature_FileDoesNotExist, file)));
-		}
-		Map<String, String> manifest = ManifestUtils.loadManifest(file);
-		try {
-			fInfo = new BundleInfo(file.toURI());
-			// Attempt to retrieve additional bundle information from the manifest
-			String header = manifest.get(Constants.BUNDLE_SYMBOLICNAME);
-			if (header != null) {
-				ManifestElement[] elements = ManifestElement.parseHeader(Constants.BUNDLE_SYMBOLICNAME, header);
-				if (elements != null) {
-					String name = elements[0].getValue();
-					if (name != null) {
-						fInfo.setSymbolicName(name);
-						header = manifest.get(Constants.BUNDLE_VERSION);
-						if (header != null) {
-							elements = ManifestElement.parseHeader(Constants.BUNDLE_VERSION, header);
-							if (elements != null) {
-								fInfo.setVersion(elements[0].getValue());
-							}
-						}
-					}
-					fSourceTarget = getProvidedSource(file, name, manifest);
-				}
-			}
-			fIsFragment = manifest.containsKey(Constants.FRAGMENT_HOST);
-		} catch (BundleException e) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, STATUS_INVALID_MANIFEST, NLS.bind(Messages.TargetBundle_ErrorReadingManifest, file.getAbsolutePath()), e));
-		}
-	}
-
-	/**
-	 * If the given bundle is a source bundle, the bundle that this bundle provides source for will be returned.
-	 * If the given bundle is not a source bundle or there was a problem getting the source target, <code>null</code>
-	 * will be returned.
-	 *
-	 * @param bundle location of the bundle in the file system, can be <code>null</code> to skip searching plugin.xml
-	 * @param symbolicName symbolic name of the bundle, can be <code>null</code> to skip searching of plugin.xml
-	 * @param manifest the bundle's manifest, can be <code>null</code> to skip searching of manifest entries
-	 * @return bundle for provided source or <code>null</code> if not a source bundle
-	 */
-	private BundleInfo getProvidedSource(File bundle, String symbolicName, Map<String, String> manifest) {
-		fSourcePath = null;
-		if (manifest != null) {
-			if (manifest.containsKey(ICoreConstants.ECLIPSE_SOURCE_BUNDLE)) {
-				try {
-					ManifestElement[] manifestElements = ManifestElement.parseHeader(ICoreConstants.ECLIPSE_SOURCE_BUNDLE, manifest.get(ICoreConstants.ECLIPSE_SOURCE_BUNDLE));
-					if (manifestElements != null) {
-						for (ManifestElement element : manifestElements) {
-							String binaryPluginName = element.getValue();
-							String versionEntry = element.getAttribute(Constants.VERSION_ATTRIBUTE);
-							// Currently the version attribute is required
-							if (binaryPluginName != null &amp;&amp; binaryPluginName.length() > 0 &amp;&amp; versionEntry != null &amp;&amp; versionEntry.length() > 0) {
-								return new BundleInfo(binaryPluginName, versionEntry, null, BundleInfo.NO_LEVEL, false);
-							}
-						}
-					}
-				} catch (BundleException e) {
-					PDECore.log(e);
-					return null;
-				}
-			}
-			// source bundles never have a class path
-			if (manifest.containsKey(Constants.BUNDLE_CLASSPATH)) {
-				return null;
-			}
-		}
-
-		if (bundle != null &amp;&amp; symbolicName != null) {
-			// old source bundles were never jar'd
-			if (bundle.isFile()) {
-				return null;
-			}
-
-			// check for an 
-			File pxml = new File(bundle, ICoreConstants.PLUGIN_FILENAME_DESCRIPTOR);
-			if (!pxml.exists()) {
-				pxml = new File(bundle, ICoreConstants.FRAGMENT_FILENAME_DESCRIPTOR);
-			}
-			if (pxml.exists()) {
-				IExtensionRegistry registry = RegistryFactory.createRegistry(null, this, this);
-				// Contribute PDE source extension point
-				String bogusDef = 
-				RegistryContributor pointContributor = new RegistryContributor(PDECore.PLUGIN_ID, PDECore.PLUGIN_ID, null, null);
-				registry.addContribution(new ByteArrayInputStream(bogusDef.getBytes()), pointContributor, false, null, null, this);
-				// Search for extensions to the extension point
-				RegistryContributor contributor = new RegistryContributor(symbolicName, symbolicName, null, null);
-				try {
-					registry.addContribution(new BufferedInputStream(new FileInputStream(pxml)), contributor, false, null, null, this);
-					IExtension[] extensions = registry.getExtensions(contributor);
-					for (IExtension extension : extensions) {
-						if (ICoreConstants.EXTENSION_POINT_SOURCE.equals(extension.getExtensionPointUniqueIdentifier())) {
-							IConfigurationElement[] elements = extension.getConfigurationElements();
-							if (elements.length == 1) {
-								fSourcePath = elements[0].getAttribute(
-							}
-							return new BundleInfo(null, null, bundle.toURI(), BundleInfo.NO_LEVEL, false);
-						}
-					}
-				} catch (FileNotFoundException e) {
-				}
-			}
-		}
-		return null;
-	}
-
-	@Override
-	public String toString() {
-		StringBuilder result = new StringBuilder(getBundleInfo().toString());
-		IStatus status = getStatus();
-		if (status != null &amp;&amp; !status.isOK()) {
-			result.append(' ').append(status.toString());
-		}
-		return result.toString();
-	}
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.core.target;
+
+import java.io.BufferedInputStream;
+import java.io.ByteArrayInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.util.Map;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IConfigurationElement;
+import org.eclipse.core.runtime.IExtension;
+import org.eclipse.core.runtime.IExtensionRegistry;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.RegistryFactory;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.spi.RegistryContributor;
+import org.eclipse.equinox.frameworkadmin.BundleInfo;
+import org.eclipse.osgi.util.ManifestElement;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.internal.core.ICoreConstants;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.target.Messages;
+import org.eclipse.pde.internal.core.util.ManifestUtils;
+import org.osgi.framework.BundleException;
+import org.osgi.framework.Constants;
+
+/**
+ * Describes a single bundle in a target definition. Also used to represent
+ * content in the target that is missing or invalid.
+ *
+ * @since 3.8
+ */
+public class TargetBundle {
+
+	/**
+	 * Status code indicating that this target bundle represents a required plug-in that is missing from a target definition
+	 */
+	public static final int STATUS_PLUGIN_DOES_NOT_EXIST = 100;
+
+	/**
+	 * Status code indicating that this target bundle represents a required feature that is missing from a target definition
+	 */
+	public static final int STATUS_FEATURE_DOES_NOT_EXIST = 110;
+
+	/**
+	 * Status code indicating that a required bundle version does not exist (a bundle
+	 * with the correct symbolic name is present, but the specified version was not
+	 * found).
+	 */
+	public static final int STATUS_VERSION_DOES_NOT_EXIST = 101;
+
+	/**
+	 * Status code indicating that a bundle's manifest could not be read, or did not exist.
+	 */
+	public static final int STATUS_INVALID_MANIFEST = 102;
+
+	protected BundleInfo fInfo;
+	protected boolean fIsFragment = false;
+	protected BundleInfo fSourceTarget;
+	protected String fSourcePath = null;
+
+	/**
+	 * Constructs a target bundle for a local bundle.  The bundle may be a directory or
+	 * an archive file. The manifest of the bundle will be read to collect the additional
+	 * information.
+	 *
+	 * @param bundleLocation the location of the bundle (directory or archive) to open
+	 * @throws CoreException if there is a problem opening the bundle or its manifest
+	 */
+	public TargetBundle(File bundleLocation) throws CoreException {
+		initialize(bundleLocation);
+	}
+
+	/**
+	 * Constructs an empty target bundle with no information.
+	 */
+	protected TargetBundle() {
+		fInfo = new BundleInfo();
+	}
+
+	/**
+	 * Returns a {@link BundleInfo} object containing additional information about the bundle
+	 * this target bundle represents. It is not guaranteed that the bundle info will have any
+	 * fields set.  The base implementation of {@link TargetBundle} will fill in the location,
+	 * symbolic name and version if that information was available in the bundle's manifest.
+	 *
+	 * @return a bundle info object with information on the bundle this target bundle represents
+	 */
+	public BundleInfo getBundleInfo() {
+		return fInfo;
+	}
+
+	/**
+	 * Returns a status object describing any problems with this target bundle. The base
+	 * implementation of {@link TargetBundle} will always return an OK status.
+	 *
+	 * @return status of this bundle
+	 */
+	public IStatus getStatus() {
+		// The status will always be ok as the constructor would throw an exception for any issues.
+		return Status.OK_STATUS;
+	}
+
+	/**
+	 * Returns <code>true</code> if this bundle is a source bundle and
+	 * <code>false</code> if this bundle is an executable bundle.
+	 *
+	 * @return whether the resolved bundle is a source bundle
+	 */
+	public boolean isSourceBundle() {
+		return fSourceTarget != null;
+	}
+
+	/**
+	 * If this bundle is a source bundle this method returns a bundle info
+	 * representing the executable bundle that this bundle provides source for.
+	 * The returned bundle info may not have a symbolic name and version set if
+	 * this source bundle is an old style source plug-in.
+	 *
+	 * @return bundle info representing bundle this bundle provides source for or <code>null</code>
+	 */
+	public BundleInfo getSourceTarget() {
+		return fSourceTarget;
+	}
+
+	/**
+	 * Returns whether this bundle is a fragment.
+	 *
+	 * @return whether this bundle is a fragment
+	 */
+	public boolean isFragment() {
+		return fIsFragment;
+	}
+
+	/**
+	 * Returns bundle relative path to old-style source folders, or <code>null</code>
+	 * if not applicable.
+	 *
+	 * @return bundle relative path to old-style source folders, or <code>null</code>
+	 */
+	public String getSourcePath() {
+		return fSourcePath;
+	}
+
+	/**
+	 * Initializes the contents of this target bundle from the provided local bundle
+	 *
+	 * @param file the bundle to initialize from
+	 */
+	private void initialize(File file) throws CoreException {
+		if (file == null || !file.exists()) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(Messages.TargetFeature_FileDoesNotExist, file)));
+		}
+		Map<String, String> manifest = ManifestUtils.loadManifest(file);
+		try {
+			fInfo = new BundleInfo(file.toURI());
+			// Attempt to retrieve additional bundle information from the manifest
+			String header = manifest.get(Constants.BUNDLE_SYMBOLICNAME);
+			if (header != null) {
+				ManifestElement[] elements = ManifestElement.parseHeader(Constants.BUNDLE_SYMBOLICNAME, header);
+				if (elements != null) {
+					String name = elements[0].getValue();
+					if (name != null) {
+						fInfo.setSymbolicName(name);
+						header = manifest.get(Constants.BUNDLE_VERSION);
+						if (header != null) {
+							elements = ManifestElement.parseHeader(Constants.BUNDLE_VERSION, header);
+							if (elements != null) {
+								fInfo.setVersion(elements[0].getValue());
+							}
+						}
+					}
+					fSourceTarget = getProvidedSource(file, name, manifest);
+				}
+			}
+			fIsFragment = manifest.containsKey(Constants.FRAGMENT_HOST);
+		} catch (BundleException e) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, STATUS_INVALID_MANIFEST, NLS.bind(Messages.TargetBundle_ErrorReadingManifest, file.getAbsolutePath()), e));
+		}
+	}
+
+	/**
+	 * If the given bundle is a source bundle, the bundle that this bundle provides source for will be returned.
+	 * If the given bundle is not a source bundle or there was a problem getting the source target, <code>null</code>
+	 * will be returned.
+	 *
+	 * @param bundle location of the bundle in the file system, can be <code>null</code> to skip searching plugin.xml
+	 * @param symbolicName symbolic name of the bundle, can be <code>null</code> to skip searching of plugin.xml
+	 * @param manifest the bundle's manifest, can be <code>null</code> to skip searching of manifest entries
+	 * @return bundle for provided source or <code>null</code> if not a source bundle
+	 */
+	private BundleInfo getProvidedSource(File bundle, String symbolicName, Map<String, String> manifest) {
+		fSourcePath = null;
+		if (manifest != null) {
+			if (manifest.containsKey(ICoreConstants.ECLIPSE_SOURCE_BUNDLE)) {
+				try {
+					ManifestElement[] manifestElements = ManifestElement.parseHeader(ICoreConstants.ECLIPSE_SOURCE_BUNDLE, manifest.get(ICoreConstants.ECLIPSE_SOURCE_BUNDLE));
+					if (manifestElements != null) {
+						for (ManifestElement element : manifestElements) {
+							String binaryPluginName = element.getValue();
+							String versionEntry = element.getAttribute(Constants.VERSION_ATTRIBUTE);
+							// Currently the version attribute is required
+							if (binaryPluginName != null &amp;&amp; binaryPluginName.length() > 0 &amp;&amp; versionEntry != null &amp;&amp; versionEntry.length() > 0) {
+								return new BundleInfo(binaryPluginName, versionEntry, null, BundleInfo.NO_LEVEL, false);
+							}
+						}
+					}
+				} catch (BundleException e) {
+					PDECore.log(e);
+					return null;
+				}
+			}
+			// source bundles never have a class path
+			if (manifest.containsKey(Constants.BUNDLE_CLASSPATH)) {
+				return null;
+			}
+		}
+
+		if (bundle != null &amp;&amp; symbolicName != null) {
+			// old source bundles were never jar'd
+			if (bundle.isFile()) {
+				return null;
+			}
+
+			// check for an 
+			File pxml = new File(bundle, ICoreConstants.PLUGIN_FILENAME_DESCRIPTOR);
+			if (!pxml.exists()) {
+				pxml = new File(bundle, ICoreConstants.FRAGMENT_FILENAME_DESCRIPTOR);
+			}
+			if (pxml.exists()) {
+				IExtensionRegistry registry = RegistryFactory.createRegistry(null, this, this);
+				// Contribute PDE source extension point
+				String bogusDef = 
+				RegistryContributor pointContributor = new RegistryContributor(PDECore.PLUGIN_ID, PDECore.PLUGIN_ID, null, null);
+				registry.addContribution(new ByteArrayInputStream(bogusDef.getBytes()), pointContributor, false, null, null, this);
+				// Search for extensions to the extension point
+				RegistryContributor contributor = new RegistryContributor(symbolicName, symbolicName, null, null);
+				try {
+					registry.addContribution(new BufferedInputStream(new FileInputStream(pxml)), contributor, false, null, null, this);
+					IExtension[] extensions = registry.getExtensions(contributor);
+					for (IExtension extension : extensions) {
+						if (ICoreConstants.EXTENSION_POINT_SOURCE.equals(extension.getExtensionPointUniqueIdentifier())) {
+							IConfigurationElement[] elements = extension.getConfigurationElements();
+							if (elements.length == 1) {
+								fSourcePath = elements[0].getAttribute(
+							}
+							return new BundleInfo(null, null, bundle.toURI(), BundleInfo.NO_LEVEL, false);
+						}
+					}
+				} catch (FileNotFoundException e) {
+				}
+			}
+		}
+		return null;
+	}
+
+
+	@Override
+	public String toString() {
+		StringBuilder result = new StringBuilder(getBundleInfo().toString());
+		IStatus status = getStatus();
+		if (status != null &amp;&amp; !status.isOK()) {
+			result.append(' ').append(status.toString());
+		}
+		return result.toString();
+	}
+}

原文件: ui/org.eclipse.pde.core/src_ant/org/eclipse/pde/internal/core/ant/TargetPlatformProvisionTask.java 
新文件: ui/org.eclipse.pde.core/src_ant/org/eclipse/pde/internal/core/ant/TargetPlatformProvisionTask.java
位置:  -1,139 +1,140  
-/**
- * Copyright (c) 2011, 2012 Gunnar Wagenknecht and others.
- * All rights reserved.
- *
- * This program and the accompanying materials are made available under the terms of the
- * Eclipse Public License 2.0 which accompanies this distribution, and is available at
+/**
+ * Copyright (c) 2011, 2012 Gunnar Wagenknecht and others.
+ * All rights reserved.
+ *
+ * This program and the accompanying materials are made available under the terms of the
+ * Eclipse Public License 2.0 which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     Gunnar Wagenknecht - initial API and implementation
- */
-package org.eclipse.pde.internal.core.ant;
-
-import java.io.File;
-import org.apache.tools.ant.BuildException;
-import org.apache.tools.ant.Project;
-import org.apache.tools.ant.Task;
-import org.eclipse.core.runtime.CoreException;
-import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.core.runtime.jobs.Job;
-import org.eclipse.osgi.util.NLS;
-import org.eclipse.pde.core.target.ITargetDefinition;
-import org.eclipse.pde.internal.build.BundleHelper;
-import org.eclipse.pde.internal.build.tasks.TaskHelper;
-import org.eclipse.pde.internal.core.PDECore;
-import org.eclipse.pde.internal.core.PDECoreMessages;
-import org.eclipse.pde.internal.core.target.ExportTargetJob;
-import org.eclipse.pde.internal.core.target.TargetPlatformService;
-
-/**
- * Exports the bundles and plug-ins of a target definition to a directory
- */
-public class TargetPlatformProvisionTask extends Task {
-
-	private File targetFile;
-	private File destinationDirectory;
-	private boolean clearDestination;
-
-	@Override
-	public void execute() throws BuildException {
-
-		try {
-			BundleHelper.getDefault().setLog(this);
-			run();
-		} catch (CoreException e) {
-			throw new BuildException(TaskHelper.statusToString(e.getStatus(), null).toString());
-		} finally {
-			BundleHelper.getDefault().setLog(null);
-		}
-
-	}
-
-	private void export(final ITargetDefinition targetDefinition) throws CoreException {
-		// export using Job to allow progress reporting when run inside IDE
-		ExportTargetJob exportTargetJob = new ExportTargetJob(targetDefinition, destinationDirectory.toURI(), clearDestination);
-		exportTargetJob.schedule();
-		try {
-			exportTargetJob.join();
-		} catch (InterruptedException e) {
-			Thread.currentThread().interrupt();
-			throw new CoreException(Status.CANCEL_STATUS);
-		}
-	}
-
-	private IStatus resolve(final ITargetDefinition targetDefinition) throws CoreException {
-		// resolve using Job to allow progress reporting when run inside IDE
-		final IStatus[] status = new IStatus[1];
-		Job resolveJob = new Job(NLS.bind(PDECoreMessages.TargetPlatformProvisionTask_Resolving_X_Job, null != targetDefinition.getName() &amp;&amp; targetDefinition.getName().length() > 0 ? targetDefinition.getName() : targetFile.getName())) {
-			@Override
-			protected IStatus run(IProgressMonitor monitor) {
-				status[0] = targetDefinition.resolve(monitor);
-				return Status.OK_STATUS;
-			}
-		};
-		resolveJob.setPriority(Job.LONG);
-		resolveJob.schedule();
-		try {
-			resolveJob.join();
-		} catch (InterruptedException e) {
-			Thread.currentThread().interrupt();
-			throw new CoreException(Status.CANCEL_STATUS);
-		}
-		return status[0];
-	}
-
-	private void run() throws CoreException {
-		if (null == targetFile) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.TargetPlatformProvisionTask_ErrorDefinitionNotSet));
-		}
-		if (!targetFile.isFile() || !targetFile.canRead()) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(PDECoreMessages.TargetPlatformProvisionTask_ErrorDefinitionNotFoundAtSpecifiedLocation, targetFile)));
-		}
-		if (null == destinationDirectory) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.TargetPlatformProvisionTask_ErrorDestinationNotSet));
-		}
-
-		final ITargetDefinition targetDefinition = TargetPlatformService.getDefault().getTarget(targetFile.toURI()).getTargetDefinition();
-
-		log(PDECoreMessages.TargetPlatformProvisionTask_Resolving_target_status);
-		IStatus status = resolve(targetDefinition);
-		if (status.matches(IStatus.ERROR | IStatus.CANCEL)) {
-			throw new CoreException(status);
-		} else if (!status.isOK()) {
-			log(TaskHelper.statusToString(status, null).toString(), Project.MSG_WARN);
-		}
-
-		log(PDECoreMessages.TargetPlatformProvisionTask_Exporting_target_status);
-		export(targetDefinition);
-	}
-
-	/**
-	 * Set whether the destination should be cleared prior to provisioning.
-	 * @param clearDestination
-	 */
-	public void setClearDestination(boolean clearDestination) {
-		this.clearDestination = clearDestination;
-	}
-
-	/**
-	 * Set the folder in which the target will be provisioned.
-	 * @param destinationDirectory
-	 */
-	public void setDestinationDirectory(File destinationDirectory) {
-		this.destinationDirectory = destinationDirectory;
-	}
-
-	/**
-	 * Set the target file to provision
-	 * @param targetFile
-	 */
-	public void setTargetFile(File targetFile) {
-		this.targetFile = targetFile;
-	}
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Gunnar Wagenknecht - initial API and implementation
+ */
+package org.eclipse.pde.internal.core.ant;
+
+import java.io.File;
+import org.apache.tools.ant.BuildException;
+import org.apache.tools.ant.Project;
+import org.apache.tools.ant.Task;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.core.target.ITargetDefinition;
+import org.eclipse.pde.internal.build.BundleHelper;
+import org.eclipse.pde.internal.build.tasks.TaskHelper;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.PDECoreMessages;
+import org.eclipse.pde.internal.core.target.ExportTargetJob;
+import org.eclipse.pde.internal.core.target.TargetPlatformService;
+
+/**
+ * Exports the bundles and plug-ins of a target definition to a directory
+ */
+public class TargetPlatformProvisionTask extends Task {
+
+	private File targetFile;
+	private File destinationDirectory;
+	private boolean clearDestination;
+
+
+	@Override
+	public void execute() throws BuildException {
+
+		try {
+			BundleHelper.getDefault().setLog(this);
+			run();
+		} catch (CoreException e) {
+			throw new BuildException(TaskHelper.statusToString(e.getStatus(), null).toString());
+		} finally {
+			BundleHelper.getDefault().setLog(null);
+		}
+
+	}
+
+	private void export(final ITargetDefinition targetDefinition) throws CoreException {
+		// export using Job to allow progress reporting when run inside IDE
+		ExportTargetJob exportTargetJob = new ExportTargetJob(targetDefinition, destinationDirectory.toURI(), clearDestination);
+		exportTargetJob.schedule();
+		try {
+			exportTargetJob.join();
+		} catch (InterruptedException e) {
+			Thread.currentThread().interrupt();
+			throw new CoreException(Status.CANCEL_STATUS);
+		}
+	}
+
+	private IStatus resolve(final ITargetDefinition targetDefinition) throws CoreException {
+		// resolve using Job to allow progress reporting when run inside IDE
+		final IStatus[] status = new IStatus[1];
+		Job resolveJob = new Job(NLS.bind(PDECoreMessages.TargetPlatformProvisionTask_Resolving_X_Job, null != targetDefinition.getName() &amp;&amp; targetDefinition.getName().length() > 0 ? targetDefinition.getName() : targetFile.getName())) {
+			@Override
+			protected IStatus run(IProgressMonitor monitor) {
+				status[0] = targetDefinition.resolve(monitor);
+				return Status.OK_STATUS;
+			}
+		};
+		resolveJob.setPriority(Job.LONG);
+		resolveJob.schedule();
+		try {
+			resolveJob.join();
+		} catch (InterruptedException e) {
+			Thread.currentThread().interrupt();
+			throw new CoreException(Status.CANCEL_STATUS);
+		}
+		return status[0];
+	}
+
+	private void run() throws CoreException {
+		if (null == targetFile) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.TargetPlatformProvisionTask_ErrorDefinitionNotSet));
+		}
+		if (!targetFile.isFile() || !targetFile.canRead()) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, NLS.bind(PDECoreMessages.TargetPlatformProvisionTask_ErrorDefinitionNotFoundAtSpecifiedLocation, targetFile)));
+		}
+		if (null == destinationDirectory) {
+			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.TargetPlatformProvisionTask_ErrorDestinationNotSet));
+		}
+
+		final ITargetDefinition targetDefinition = TargetPlatformService.getDefault().getTarget(targetFile.toURI()).getTargetDefinition();
+
+		log(PDECoreMessages.TargetPlatformProvisionTask_Resolving_target_status);
+		IStatus status = resolve(targetDefinition);
+		if (status.matches(IStatus.ERROR | IStatus.CANCEL)) {
+			throw new CoreException(status);
+		} else if (!status.isOK()) {
+			log(TaskHelper.statusToString(status, null).toString(), Project.MSG_WARN);
+		}
+
+		log(PDECoreMessages.TargetPlatformProvisionTask_Exporting_target_status);
+		export(targetDefinition);
+	}
+
+	/**
+	 * Set whether the destination should be cleared prior to provisioning.
+	 * @param clearDestination
+	 */
+	public void setClearDestination(boolean clearDestination) {
+		this.clearDestination = clearDestination;
+	}
+
+	/**
+	 * Set the folder in which the target will be provisioned.
+	 * @param destinationDirectory
+	 */
+	public void setDestinationDirectory(File destinationDirectory) {
+		this.destinationDirectory = destinationDirectory;
+	}
+
+	/**
+	 * Set the target file to provision
+	 * @param targetFile
+	 */
+	public void setTargetFile(File targetFile) {
+		this.targetFile = targetFile;
+	}
+
+}

原文件: ui/org.eclipse.pde.genericeditor.extension.tests/src/org/eclipse/pde/genericeditor/extension/tests/StringAsserts.java 
新文件: ui/org.eclipse.pde.genericeditor.extension.tests/src/org/eclipse/pde/genericeditor/extension/tests/StringAsserts.java
位置:  -1,203 +1,203  
-package org.eclipse.pde.genericeditor.extension.tests;
-
-/*******************************************************************************
- * Copyright (c) 2000, 2013 IBM Corporation and others.
+package org.eclipse.pde.genericeditor.extension.tests;
+
+/*******************************************************************************
+ * Copyright (c) 2000, 2013 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.StringReader;
-import java.util.ArrayList;
-import java.util.Arrays;
-
-import org.junit.Assert;
-
-/*
- * Copied from org.eclipse.jdt.ui.tests/test plugin/org/eclipse/jdt/testplugin/StringAsserts.javas
- */
-
-public class StringAsserts {
-	/**
-	 *
-	 */
-	public StringAsserts() {
-		super();
-	}
-
-	private static int getDiffPos(String str1, String str2) {
-		int len1 = Math.min(str1.length(), str2.length());
-
-		int diffPos = -1;
-		for (int i = 0; i < len1; i++) {
-			if (str1.charAt(i) != str2.charAt(i)) {
-				diffPos = i;
-				break;
-			}
-		}
-		if (diffPos == -1 &amp;&amp; str1.length() != str2.length()) {
-			diffPos = len1;
-		}
-		return diffPos;
-	}
-
-	private static final int printRange = 6;
-
-	public static void assertEqualString(String actual, String expected) {
-		if (actual == null || expected == null) {
-			if (actual == expected) {
-				return;
-			}
-			if (actual == null) {
-				Assert.assertTrue(
-			} else {
-				Assert.assertTrue(
-			}
-		}
-
-		int diffPos = getDiffPos(actual, expected);
-		if (diffPos != -1) {
-			int diffAhead = Math.max(0, diffPos - printRange);
-			int diffAfter = Math.min(actual.length(), diffPos + printRange);
-
-			String diffStr = actual.substring(diffAhead, diffPos) + '^' + actual.substring(diffPos, diffAfter);
-
-			// use detailed message
-			String message = 
-					+ 
-
-			Assert.assertEquals(message, expected, actual);
-		}
-	}
-
-	public static void assertEqualStringIgnoreDelim(String actual, String expected) throws IOException {
-		if (actual == null || expected == null) {
-			if (actual == expected) {
-				return;
-			}
-			if (actual == null) {
-				Assert.assertTrue(
-			} else {
-				Assert.assertTrue(
-			}
-		}
-
-		BufferedReader read1 = new BufferedReader(new StringReader(actual));
-		BufferedReader read2 = new BufferedReader(new StringReader(expected));
-
-		int line = 1;
-		do {
-			String s1 = read1.readLine();
-			String s2 = read2.readLine();
-
-			if (s1 == null || !s1.equals(s2)) {
-				if (s1 == null &amp;&amp; s2 == null) {
-					return;
-				}
-				String diffStr = (s1 == null) ? s2 : s1;
-
-				String message = 
-						+ diffStr + 
-				Assert.assertEquals(message, expected, actual);
-			}
-			line++;
-		} while (true);
-	}
-
-	public static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds) {
-		ArrayList<String> list1 = new ArrayList<>(Arrays.asList(actuals));
-		ArrayList<String> list2 = new ArrayList<>(Arrays.asList(expecteds));
-
-		for (int i = list1.size() - 1; i >= 0; i--) {
-			if (list2.remove(list1.get(i))) {
-				list1.remove(i);
-			}
-		}
-
-		int n1 = list1.size();
-		int n2 = list2.size();
-
-		if (n1 + n2 > 0) {
-			if (n1 == 1 &amp;&amp; n2 == 1) {
-				assertEqualString(list1.get(0), list2.get(0));
-			}
-
-			StringBuilder buf = new StringBuilder();
-			for (int i = 0; i < n1; i++) {
-				String s1 = list1.get(i);
-				if (s1 != null) {
-					buf.append(s1);
-					buf.append(
-				}
-			}
-			String actual = buf.toString();
-
-			buf = new StringBuilder();
-			for (int i = 0; i < n2; i++) {
-				String s2 = list2.get(i);
-				if (s2 != null) {
-					buf.append(s2);
-					buf.append(
-				}
-			}
-			String expected = buf.toString();
-
-			String message = 
-			Assert.assertEquals(message, expected, actual);
-		}
-	}
-
-	public static void assertExpectedExistInProposals(String[] actuals, String[] expecteds) {
-		ArrayList<String> list1 = new ArrayList<>(Arrays.asList(actuals));
-		ArrayList<String> list2 = new ArrayList<>(Arrays.asList(expecteds));
-
-		for (int i = list1.size() - 1; i >= 0; i--) {
-			if (list2.remove(list1.get(i))) {
-				list1.remove(i);
-			}
-		}
-
-		int n1 = list1.size();
-		int n2 = list2.size();
-
-		if (n2 > 0) {
-			if (n1 == 1 &amp;&amp; n2 == 1) {
-				assertEqualString(list1.get(0), list2.get(0));
-			}
-
-			StringBuilder buf = new StringBuilder();
-			for (int i = 0; i < n1; i++) {
-				String s1 = list1.get(i);
-				if (s1 != null) {
-					buf.append(s1);
-					buf.append(
-				}
-			}
-			String actual = buf.toString();
-
-			buf = new StringBuilder();
-			for (int i = 0; i < n2; i++) {
-				String s2 = list2.get(i);
-				if (s2 != null) {
-					buf.append(s2);
-					buf.append(
-				}
-			}
-			String expected = buf.toString();
-
-			String message = 
-			Assert.assertEquals(message, expected, actual);
-		}
-	}
-
-}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.StringReader;
+import java.util.ArrayList;
+import java.util.Arrays;
+
+import org.junit.Assert;
+
+/*
+ * Copied from org.eclipse.jdt.ui.tests/test plugin/org/eclipse/jdt/testplugin/StringAsserts.javas
+ */
+
+public class StringAsserts {
+	/**
+	 *
+	 */
+	public StringAsserts() {
+		super();
+	}
+
+	private static int getDiffPos(String str1, String str2) {
+		int len1 = Math.min(str1.length(), str2.length());
+
+		int diffPos = -1;
+		for (int i = 0; i < len1; i++) {
+			if (str1.charAt(i) != str2.charAt(i)) {
+				diffPos = i;
+				break;
+			}
+		}
+		if (diffPos == -1 &amp;&amp; str1.length() != str2.length()) {
+			diffPos = len1;
+		}
+		return diffPos;
+	}
+
+	private static final int printRange = 6;
+
+	public static void assertEqualString(String actual, String expected) {
+		if (actual == null || expected == null) {
+			if (actual == expected) {
+				return;
+			}
+			if (actual == null) {
+				Assert.assertTrue(
+			} else {
+				Assert.assertTrue(
+			}
+		}
+
+		int diffPos = getDiffPos(actual, expected);
+		if (diffPos != -1) {
+			int diffAhead = Math.max(0, diffPos - printRange);
+			int diffAfter = Math.min(actual.length(), diffPos + printRange);
+
+			String diffStr = actual.substring(diffAhead, diffPos) + '^' + actual.substring(diffPos, diffAfter);
+
+			// use detailed message
+			String message = 
+					+ 
+
+			Assert.assertEquals(message, expected, actual);
+		}
+	}
+
+	public static void assertEqualStringIgnoreDelim(String actual, String expected) throws IOException {
+		if (actual == null || expected == null) {
+			if (actual == expected) {
+				return;
+			}
+			if (actual == null) {
+				Assert.assertTrue(
+			} else {
+				Assert.assertTrue(
+			}
+		}
+
+		BufferedReader read1 = new BufferedReader(new StringReader(actual));
+		BufferedReader read2 = new BufferedReader(new StringReader(expected));
+
+		int line = 1;
+		do {
+			String s1 = read1.readLine();
+			String s2 = read2.readLine();
+
+			if (s1 == null || !s1.equals(s2)) {
+				if (s1 == null &amp;&amp; s2 == null) {
+					return;
+				}
+				String diffStr = (s1 == null) ? s2 : s1;
+
+				String message = 
+						+ diffStr + 
+				Assert.assertEquals(message, expected, actual);
+			}
+			line++;
+		} while (true);
+	}
+
+	public static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds) {
+		ArrayList<String> list1 = new ArrayList<>(Arrays.asList(actuals));
+		ArrayList<String> list2 = new ArrayList<>(Arrays.asList(expecteds));
+
+		for (int i = list1.size() - 1; i >= 0; i--) {
+			if (list2.remove(list1.get(i))) {
+				list1.remove(i);
+			}
+		}
+
+		int n1 = list1.size();
+		int n2 = list2.size();
+
+		if (n1 + n2 > 0) {
+			if (n1 == 1 &amp;&amp; n2 == 1) {
+				assertEqualString(list1.get(0), list2.get(0));
+			}
+
+			StringBuilder buf = new StringBuilder();
+			for (int i = 0; i < n1; i++) {
+				String s1 = list1.get(i);
+				if (s1 != null) {
+					buf.append(s1);
+					buf.append(
+				}
+			}
+			String actual = buf.toString();
+
+			buf = new StringBuilder();
+			for (int i = 0; i < n2; i++) {
+				String s2 = list2.get(i);
+				if (s2 != null) {
+					buf.append(s2);
+					buf.append(
+				}
+			}
+			String expected = buf.toString();
+
+			String message = 
+			Assert.assertEquals(message, expected, actual);
+		}
+	}
+
+	public static void assertExpectedExistInProposals(String[] actuals, String[] expecteds) {
+		ArrayList<String> list1 = new ArrayList<>(Arrays.asList(actuals));
+		ArrayList<String> list2 = new ArrayList<>(Arrays.asList(expecteds));
+
+		for (int i = list1.size() - 1; i >= 0; i--) {
+			if (list2.remove(list1.get(i))) {
+				list1.remove(i);
+			}
+		}
+
+		int n1 = list1.size();
+		int n2 = list2.size();
+
+		if (n2 > 0) {
+			if (n1 == 1 &amp;&amp; n2 == 1) {
+				assertEqualString(list1.get(0), list2.get(0));
+			}
+
+			StringBuilder buf = new StringBuilder();
+			for (int i = 0; i < n1; i++) {
+				String s1 = list1.get(i);
+				if (s1 != null) {
+					buf.append(s1);
+					buf.append(
+				}
+			}
+			String actual = buf.toString();
+
+			buf = new StringBuilder();
+			for (int i = 0; i < n2; i++) {
+				String s2 = list2.get(i);
+				if (s2 != null) {
+					buf.append(s2);
+					buf.append(
+				}
+			}
+			String expected = buf.toString();
+
+			String message = 
+			Assert.assertEquals(message, expected, actual);
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/NewTargetDefinitionWizard2.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/NewTargetDefinitionWizard2.java
位置:  -1,72 +1,74  
-/*******************************************************************************
- * Copyright (c) 2005, 2015 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2005, 2015 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
  *******************************************************************************/
-package org.eclipse.pde.internal.ui.wizards.target;
-
-import org.eclipse.pde.core.target.ITargetDefinition;
-
-import org.eclipse.jface.wizard.Wizard;
-import org.eclipse.pde.internal.ui.PDEPluginImages;
-import org.eclipse.pde.internal.ui.PDEUIMessages;
-
-/**
- * Target definition wizard used to create a new target definition from
- * the new target platform preference page.
- */
-public class NewTargetDefinitionWizard2 extends Wizard {
-
-	TargetCreationPage fPage;
-	ITargetDefinition fDefinition;
-
-	public NewTargetDefinitionWizard2() {
-		super();
-		setDefaultPageImageDescriptor(PDEPluginImages.DESC_TARGET_WIZ);
-		setWindowTitle(PDEUIMessages.NewTargetProfileWizard_title);
-		setNeedsProgressMonitor(true);
-	}
-
-	@Override
-	public void addPages() {
-		fPage = new TargetCreationPage(
-		addPage(fPage);
-		addPage(new TargetDefinitionContentPage(null));
-	}
-
-	@Override
-	public boolean canFinish() {
-		return false;
-	}
-
-	@Override
-	public boolean performFinish() {
-		return true;
-	}
-
-	/**
-	 * Returns the target definition created by this wizard.
-	 *
-	 * @return target definition or <code>null</code> if none
-	 */
-	public ITargetDefinition getTargetDefinition() {
-		return fDefinition;
-	}
-
-	/**
-	 * Sets the target being edited.
-	 *
-	 * @param definition target
-	 */
-	public void setTargetDefinition(ITargetDefinition definition) {
-		fDefinition = definition;
-	}
-}
+package org.eclipse.pde.internal.ui.wizards.target;
+
+import org.eclipse.pde.core.target.ITargetDefinition;
+
+import org.eclipse.jface.wizard.Wizard;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+
+/**
+ * Target definition wizard used to create a new target definition from
+ * the new target platform preference page.
+ */
+public class NewTargetDefinitionWizard2 extends Wizard {
+
+	TargetCreationPage fPage;
+	ITargetDefinition fDefinition;
+
+	public NewTargetDefinitionWizard2() {
+		super();
+		setDefaultPageImageDescriptor(PDEPluginImages.DESC_TARGET_WIZ);
+		setWindowTitle(PDEUIMessages.NewTargetProfileWizard_title);
+		setNeedsProgressMonitor(true);
+	}
+
+	@Override
+	public void addPages() {
+		fPage = new TargetCreationPage(
+		addPage(fPage);
+		addPage(new TargetDefinitionContentPage(null));
+	}
+
+
+	@Override
+	public boolean canFinish() {
+		return false;
+	}
+
+
+	@Override
+	public boolean performFinish() {
+		return true;
+	}
+
+	/**
+	 * Returns the target definition created by this wizard.
+	 *
+	 * @return target definition or <code>null</code> if none
+	 */
+	public ITargetDefinition getTargetDefinition() {
+		return fDefinition;
+	}
+
+	/**
+	 * Sets the target being edited.
+	 *
+	 * @param definition target
+	 */
+	public void setTargetDefinition(ITargetDefinition definition) {
+		fDefinition = definition;
+	}
+}

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentTreeViewer.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentTreeViewer.java
位置:  -1,53 +1,53  
-/*******************************************************************************
- * Copyright (c) 2011, 2012 IBM Corporation and others.
+/*******************************************************************************
+ * Copyright (c) 2011, 2012 IBM Corporation and others.
  *
- * This program and the accompanying materials
- * are made available under the terms of the Eclipse Public License 2.0
- * which accompanies this distribution, and is available at
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
  * https://www.eclipse.org/legal/epl-2.0/
  *
- * SPDX-License-Identifier: EPL-2.0
- *
- * Contributors:
- *     IBM Corporation - initial API and implementation
- *******************************************************************************/
-package org.eclipse.ui.trace.internal;
-
-import org.eclipse.jface.viewers.TreeViewer;
-import org.eclipse.swt.SWT;
-import org.eclipse.swt.widgets.Composite;
-import org.eclipse.swt.widgets.Text;
-import org.eclipse.ui.dialogs.FilteredTree;
-
-/**
- * A {@link TracingComponentTreeViewer} provides a tree viewer with support for filtering the content based on user
- * input in a {@link Text} field. Filtering is done via {@link TracingComponentViewerFilter}.
- */
-public class TracingComponentTreeViewer extends FilteredTree {
-
-	/**
-	 * Create a new {@link TracingComponentTreeViewer} instance
-	 *
-	 * @param parent
-	 *            The parent composite
-	 */
-	public TracingComponentTreeViewer(final Composite parent) {
-
-		super(parent, SWT.NONE, new TracingComponentViewerFilter(), true);
-		setInitialText(Messages.filterSearchText);
-	}
-
-	@Override
-	protected TreeViewer doCreateTreeViewer(final Composite treeViewerParentComposite, final int style) {
-
-		return new TreeViewer(treeViewerParentComposite, style | SWT.BORDER | SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL | SWT.FULL_SELECTION);
-	}
-
-	@Override
-	public void setEnabled(boolean enabled) {
-
-		filterComposite.setEnabled(enabled);
-		getViewer().getTree().setEnabled(enabled);
-		getFilterControl().setEnabled(enabled);
-	}
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.ui.trace.internal;
+
+import org.eclipse.jface.viewers.TreeViewer;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Text;
+import org.eclipse.ui.dialogs.FilteredTree;
+
+/**
+ * A {@link TracingComponentTreeViewer} provides a tree viewer with support for filtering the content based on user
+ * input in a {@link Text} field. Filtering is done via {@link TracingComponentViewerFilter}.
+ */
+public class TracingComponentTreeViewer extends FilteredTree {
+
+	/**
+	 * Create a new {@link TracingComponentTreeViewer} instance
+	 *
+	 * @param parent
+	 *            The parent composite
+	 */
+	public TracingComponentTreeViewer(final Composite parent) {
+
+		super(parent, SWT.NONE, new TracingComponentViewerFilter(), true);
+		setInitialText(Messages.filterSearchText);
+	}
+
+	@Override
+	protected TreeViewer doCreateTreeViewer(final Composite treeViewerParentComposite, final int style) {
+
+		return new TreeViewer(treeViewerParentComposite, style | SWT.BORDER | SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL | SWT.FULL_SELECTION);
+	}
+
+	@Override
+	public void setEnabled(boolean enabled) {
+
+		filterComposite.setEnabled(enabled);
+		getViewer().getTree().setEnabled(enabled);
+		getFilterControl().setEnabled(enabled);
+	}
 }
\ No newline at end of file

---------------------------90---------------------------
需求名称: Bug 550054 - Update PDE templates to not use
创建时间: 2019-08-15	01:59:24
修改时间: 2019-08-29	03:58:42

原文件: ui/org.eclipse.pde.ui.templates/templates_3.3/mail/jav
原文件: MessagePopupAction.java 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.3/mail/java/MessagePopupAction.java
位置:  -1,8 +1,13  
 package $packageName$;
 
+import java.net.URL;
+
+import org.eclipse.core.runtime.Platform;
 import org.eclipse.jface.action.Action;
 import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.jface.resource.ImageDescriptor;
 import org.eclipse.ui.IWorkbenchWindow;
+import org.osgi.framework.Bundle;
 
 
 public class MessagePopupAction extends Action {
位置:  -16,7 +21,9   public class MessagePopupAction extends Action {
         setId(ICommandIds.CMD_OPEN_MESSAGE);
         // Associate the action with a pre-defined command, to allow key bindings.
         setActionDefinitionId(ICommandIds.CMD_OPEN_MESSAGE);
-        setImageDescriptor($pluginClass$.getImageDescriptor(
+        Bundle bundle = Platform.getBundle(Activator.PLUGIN_ID);
+        URL fileURL = bundle.getEntry(
+        setImageDescriptor(ImageDescriptor.createFromURL(fileURL));
     }
 
     @Override

原文件: ui/org.eclipse.pde.ui.templates/templates_3.3/mail/jav
原文件: OpenViewAction.java 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.3/mail/java/OpenViewAction.java
位置:  -1,10 +1,12  
 package $packageName$;
 
+import java.net.URL;
+import org.eclipse.core.runtime.Platform;
 import org.eclipse.jface.action.Action;
 import org.eclipse.jface.dialogs.MessageDialog;
-import org.eclipse.ui.IWorkbenchPage;
-import org.eclipse.ui.IWorkbenchWindow;
-import org.eclipse.ui.PartInitException;
+import org.eclipse.jface.resource.ImageDescriptor;
+import org.eclipse.ui.*;
+import org.osgi.framework.Bundle;
 
 
 public class OpenViewAction extends Action {
位置:  -21,7 +23,9   public class OpenViewAction extends Action {
 		setId(ICommandIds.CMD_OPEN);
         // Associate the action with a pre-defined command, to allow key bindings.
 		setActionDefinitionId(ICommandIds.CMD_OPEN);
-		setImageDescriptor($pluginClass$.getImageDescriptor(
+        Bundle bundle = Platform.getBundle(Activator.PLUGIN_ID);
+        URL fileURL = bundle.getEntry(
+        setImageDescriptor(ImageDescriptor.createFromURL(fileURL));
 	}
 
 	@Override

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/PluginClassCodeGenerator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/PluginClassCodeGenerator.java
位置:  -30,13 +30,11   public class PluginClassCodeGenerator {
 	private PluginFieldData fPluginData;
 	private IProject fProject;
 	private String fQualifiedClassName;
-	private boolean fGenerateTemplate;
 
 	public PluginClassCodeGenerator(IProject project, String qualifiedClassName, PluginFieldData data, boolean generateTemplate) {
 		fProject = project;
 		fQualifiedClassName = qualifiedClassName;
 		fPluginData = data;
-		fGenerateTemplate = generateTemplate;
 	}
 
 	public IFile generate(IProgressMonitor monitor) throws CoreException {
位置:  -80,8 +78,6   public class PluginClassCodeGenerator {
 			writer.println();
 		}
 		if (fPluginData.isUIPlugin()) {
-			if (fGenerateTemplate)
-				writer.println(
 			writer.println(
 		} else {
 			writer.println(
位置:  -130,18 +126,7   public class PluginClassCodeGenerator {
 		writer.println(
 		writer.println(
 		writer.println();
-		if (fPluginData.isUIPlugin() &amp;&amp; fGenerateTemplate) {
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-		}
+
 		writer.println(
 	}
 

---------------------------91---------------------------
需求名称: Bug 550346 - UI Freeze of approx 40 seconds on opening Launch
创建时间: 2019-08-27	11:28:45
修改时间: 2019-08-27	12:21:45

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/TracingTab.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/TracingTab.java
位置:  -40,6 +40,7   public class TracingTab extends AbstractLauncherTab {
 
 	private Image fImage;
 	private TracingBlock fTracingBlock;
+	private boolean fInitialized;
 
 	/**
 	 * Constructor
位置:  -64,6 +65,10   public class TracingTab extends AbstractLauncherTab {
 
 	@Override
 	public void activated(ILaunchConfigurationWorkingCopy workingCopy) {
+		if (!fInitialized) {
+			fTracingBlock.initializeFrom(workingCopy);
+			fInitialized = true;
+		}
 		fTracingBlock.activated(workingCopy);
 	}
 
位置:  -78,7 +83,7   public class TracingTab extends AbstractLauncherTab {
 
 	@Override
 	public void initializeFrom(ILaunchConfiguration config) {
-		fTracingBlock.initializeFrom(config);
+		// do nothing, initialize during activated
 	}
 
 	@Override

---------------------------92---------------------------
需求名称: Bug 550250 - Remove ManifestBuilder and SchemaBuilder from API analysis
创建时间: 2019-08-19	12:17:56
修改时间: 2019-08-20	04:46:37

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java
位置:  -18,9 +18,11   import java.io.IOException;
 import java.nio.file.Files;
 import java.util.Arrays;
 import java.util.HashMap;
+import java.util.List;
 import java.util.Map;
 import java.util.Objects;
 import java.util.function.Predicate;
+import java.util.stream.Collectors;
 
 import org.eclipse.core.resources.ICommand;
 import org.eclipse.core.resources.IMarker;
位置:  -308,9 +310,23   public class ApiAnalysisApplication implements IApplication {
 			projectDescription.setBuildSpec(builders);
 			res.setDescription(projectDescription, 0, new NullProgressMonitor());
 		}
+		ICommand[] buildSpec = projectDescription.getBuildSpec();
+		List<ICommand> newBuilders = removeManifestAndSchemaBuilders(buildSpec);
+		projectDescription.setBuildSpec(
+				newBuilders.toArray(new ICommand[newBuilders.size()]));
+		res.setDescription(projectDescription, new NullProgressMonitor());
 		return res;
 	}
 
+	private static List<ICommand> removeManifestAndSchemaBuilders(ICommand[] buildSpec) {
+		// remove manifest and schema builders
+		return Arrays.stream(buildSpec)
+				.filter(x -> !(
+				|| 
+
+				).collect(Collectors.toList());
+	}
+
 	@Override
 	public void stop() {
 		// Nothing to do

---------------------------93---------------------------
需求名称: Bug 550203 - [API Analysis application] Exceptions return success
创建时间: 2019-08-19	07:29:38
修改时间: 2019-08-19	08:50:24

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiAnalysisApplication.java
位置:  -102,79 +102,90   public class ApiAnalysisApplication implements IApplication {
 
 	@Override
 	public Object start(IApplicationContext context) throws Exception {
-		IWorkspaceDescription desc = ResourcesPlugin.getWorkspace().getDescription();
-		desc.setAutoBuilding(false);
-		ResourcesPlugin.getWorkspace().setDescription(desc);
-		PDECore.getDefault().getPreferencesManager().setValue(ICoreConstants.DISABLE_API_ANALYSIS_BUILDER, false);
+		try {
+			IWorkspaceDescription desc = ResourcesPlugin.getWorkspace().getDescription();
+			desc.setAutoBuilding(false);
+			ResourcesPlugin.getWorkspace().setDescription(desc);
+			PDECore.getDefault().getPreferencesManager().setValue(ICoreConstants.DISABLE_API_ANALYSIS_BUILDER, false);
 
-		Request args = Request
-				.readFromArgs((String[]) context.getArguments().get(IApplicationContext.APPLICATION_ARGS));
-		IProject project = importProject(args.project);
-		if (project == null) {
-			System.err.println(
-			return IStatus.ERROR;
-		}
-		IApiBaseline baseline = setBaseline(args.baselinePath);
-		if (baseline == null) {
-			System.err.println(
-			return IStatus.ERROR;
-		}
-		setTargetPlatform(args.tpFile);
-		configureSeverity(project);
+			Request args = Request
+					.readFromArgs((String[]) context.getArguments().get(IApplicationContext.APPLICATION_ARGS));
+			IProject project = importProject(args.project);
+			if (project == null) {
+				System.err.println(
+				return IStatus.ERROR;
+			}
+			IApiBaseline baseline = setBaseline(args.baselinePath);
+			if (baseline == null) {
+				System.err.println(
+				return IStatus.ERROR;
+			}
+			setTargetPlatform(args.tpFile);
+			configureSeverity(project);
 
-		project.build(IncrementalProjectBuilder.FULL_BUILD, new NullProgressMonitor());
-		IMarker[] allProblemMarkers = project.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
-		Predicate<IMarker> isAPIMarker = marker -> {
-			try {
-				return marker.getType().startsWith(ApiPlugin.PLUGIN_ID);
-			} catch (CoreException e) {
-				ApiPlugin.log(e);
-				return false;
+			project.build(IncrementalProjectBuilder.FULL_BUILD, new NullProgressMonitor());
+			IMarker[] allProblemMarkers = project.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE);
+			Predicate<IMarker> isAPIMarker = marker -> {
+				try {
+					return marker.getType().startsWith(ApiPlugin.PLUGIN_ID);
+				} catch (CoreException e) {
+					ApiPlugin.log(e);
+					return false;
+				}
+			};
+			IMarker[] allAPIProbleMarkers = Arrays.stream(allProblemMarkers) //
+					.filter(isAPIMarker) //
+					.toArray(IMarker[]::new);
+			IMarker[] allNonAPIErrors = Arrays.stream(allProblemMarkers) //
+					.filter(isAPIMarker.negate()) //
+					.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR) //
+					.toArray(IMarker[]::new);
+			if (allNonAPIErrors.length > 0) {
+				System.err.println(
+				for (IMarker marker : allNonAPIErrors) {
+					System.err.println(
+				}
+				System.err.println(
+				return 10;
 			}
-		};
-		IMarker[] allAPIProbleMarkers = Arrays.stream(allProblemMarkers).filter(isAPIMarker).toArray(IMarker[]::new);
-		IMarker[] allNonAPIErrors = Arrays.stream(allProblemMarkers).filter(isAPIMarker.negate())
-				.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR)
-				.toArray(IMarker[]::new);
-		if (allNonAPIErrors.length > 0) {
-			System.err.println(
-			for (IMarker marker : allNonAPIErrors) {
+			// errors
+			IMarker[] errorMarkers = Arrays.stream(allAPIProbleMarkers)
+					.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR)
+					.toArray(IMarker[]::new);
+			System.err.println(errorMarkers.length + 
+			for (IMarker marker : errorMarkers) {
 				System.err.println(
 			}
-			System.err.println(
-			return 10;
-		}
-		// errors
-		IMarker[] errorMarkers = Arrays.stream(allAPIProbleMarkers)
-				.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR)
-				.toArray(IMarker[]::new);
-		System.err.println(errorMarkers.length + 
-		for (IMarker marker : errorMarkers) {
-			System.err.println(
-		}
-		// warnings
-		IMarker[] warningMarkers = Arrays.stream(allAPIProbleMarkers)
-				.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_WARNING)
-				.toArray(IMarker[]::new);
-		System.out.println(warningMarkers.length + 
-		for (IMarker marker : warningMarkers) {
-			System.out.println(
-		}
-		// fail
-		if (args.failOnError &amp;&amp; errorMarkers.length > 0) {
+			// warnings
+			IMarker[] warningMarkers = Arrays.stream(allAPIProbleMarkers)
+					.filter(marker -> marker.getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_WARNING)
+					.toArray(IMarker[]::new);
+			System.out.println(warningMarkers.length + 
+			for (IMarker marker : warningMarkers) {
+				System.out.println(
+			}
+			// fail
+			if (args.failOnError &amp;&amp; errorMarkers.length > 0) {
+				return IStatus.ERROR;
+			}
+			return IStatus.OK;
+		} catch (Exception e) {
+			e.printStackTrace();
 			return IStatus.ERROR;
 		}
-		return IStatus.OK;
 	}
 
 	private void setTargetPlatform(File dependencyList) throws IOException, CoreException, InterruptedException {
 		if (dependencyList != null) {
+			if (!(dependencyList.isFile() &amp;&amp; dependencyList.canRead())) {
+				throw new IllegalArgumentException(
+			}
 			// File is typically the output of `mvn dependnecy:list
 			// -DoutputAbsoluteArtifactFilename=true -DoutputScope=false -DoutputFile=...`
 			// like
 			// ```
 			// The following files have been resolved:
-			// p2.eclipse-plugin:org.eclipse.equinox.event:jar:1.5.0.v20181008-1938:/home/mistria/.m2/repository/p2/osgi/bundle/org.eclipse.equinox.event/1.5.0.v20181008-1938/org.eclipse.equinox.event-1.5.0.v20181008-1938.jar
+			// p2.eclipse-plugin:org.eclipse.equinoxz.event:jar:1.5.0.v20181008-1938:/home/mistria/.m2/repository/p2/osgi/bundle/org.eclipse.equinox.event/1.5.0.v20181008-1938/org.eclipse.equinox.event-1.5.0.v20181008-1938.jar
 			// p2.eclipse-plugin:org.eclipse.equinox.p2.core:jar:2.6.0.v20190215-2242:/home/mistria/.m2/repository/p2/osgi/bundle/org.eclipse.equinox.p2.core/2.6.0.v20190215-2242/org.eclipse.equinox.p2.core-2.6.0.v20190215-2242.jar
 			// p2.eclipse-plugin:org.eclipse.osgi.compatibility.state:jar:1.1.400.v20190208-1533:/home/mistria/.m2/repository/p2/osgi/bundle/org.eclipse.osgi.compatibility.state/1.1.400.v20190208-1533/org.eclipse.osgi.compatibility.state-1.1.400.v20190208-1533.jar
 			// ```
位置:  -234,7 +245,16   public class ApiAnalysisApplication implements IApplication {
 		} else if (baselinePath.isFile() &amp;&amp; baselinePath.getName().endsWith(
 			ITargetPlatformService service = TargetPlatformService.getDefault();
 			ITargetDefinition definition = service.getTarget(baselinePath.toURI()).getTargetDefinition();
-			definition.resolve(new NullProgressMonitor());
+			IStatus resolutionStatus = definition.resolve(new NullProgressMonitor());
+			switch (resolutionStatus.getSeverity())
+				{
+				case IStatus.WARNING:
+					System.out.println(
+					break;
+				case IStatus.ERROR:
+					throw new CoreException(resolutionStatus);
+				default: // Nothing
+				}
 			ApiBaseline baseline = new ApiBaseline(baselinePath.getAbsolutePath());
 			for (TargetBundle bundle : definition.getAllBundles()) {
 				BundleInfo bundleInfo = bundle.getBundleInfo();

---------------------------94---------------------------
需求名称: Bug 550054 - Update PDE templates to not use
创建时间: 2019-08-15	01:59:24
修改时间: 2019-08-15	11:51:46

原文件: ui/org.eclipse.pde.ui.templates/templates_3.3/mail/jav
原文件: MessagePopupAction.java 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.3/mail/java/MessagePopupAction.java
位置:  -1,8 +1,13  
 package $packageName$;
 
+import java.net.URL;
+
+import org.eclipse.core.runtime.Platform;
 import org.eclipse.jface.action.Action;
 import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.jface.resource.ImageDescriptor;
 import org.eclipse.ui.IWorkbenchWindow;
+import org.osgi.framework.Bundle;
 
 
 public class MessagePopupAction extends Action {
位置:  -16,7 +21,9   public class MessagePopupAction extends Action {
         setId(ICommandIds.CMD_OPEN_MESSAGE);
         // Associate the action with a pre-defined command, to allow key bindings.
         setActionDefinitionId(ICommandIds.CMD_OPEN_MESSAGE);
-        setImageDescriptor($pluginClass$.getImageDescriptor(
+        Bundle bundle = Platform.getBundle(Activator.PLUGIN_ID);
+        URL fileURL = bundle.getEntry(
+        setImageDescriptor(ImageDescriptor.createFromURL(fileURL));
     }
 
     @Override

原文件: ui/org.eclipse.pde.ui.templates/templates_3.3/mail/jav
原文件: OpenViewAction.java 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.3/mail/java/OpenViewAction.java
位置:  -1,10 +1,12  
 package $packageName$;
 
+import java.net.URL;
+import org.eclipse.core.runtime.Platform;
 import org.eclipse.jface.action.Action;
 import org.eclipse.jface.dialogs.MessageDialog;
-import org.eclipse.ui.IWorkbenchPage;
-import org.eclipse.ui.IWorkbenchWindow;
-import org.eclipse.ui.PartInitException;
+import org.eclipse.jface.resource.ImageDescriptor;
+import org.eclipse.ui.*;
+import org.osgi.framework.Bundle;
 
 
 public class OpenViewAction extends Action {
位置:  -21,7 +23,9   public class OpenViewAction extends Action {
 		setId(ICommandIds.CMD_OPEN);
         // Associate the action with a pre-defined command, to allow key bindings.
 		setActionDefinitionId(ICommandIds.CMD_OPEN);
-		setImageDescriptor($pluginClass$.getImageDescriptor(
+        Bundle bundle = Platform.getBundle(Activator.PLUGIN_ID);
+        URL fileURL = bundle.getEntry(
+        setImageDescriptor(ImageDescriptor.createFromURL(fileURL));
 	}
 
 	@Override

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/PluginClassCodeGenerator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/PluginClassCodeGenerator.java
位置:  -30,13 +30,11   public class PluginClassCodeGenerator {
 	private PluginFieldData fPluginData;
 	private IProject fProject;
 	private String fQualifiedClassName;
-	private boolean fGenerateTemplate;
 
 	public PluginClassCodeGenerator(IProject project, String qualifiedClassName, PluginFieldData data, boolean generateTemplate) {
 		fProject = project;
 		fQualifiedClassName = qualifiedClassName;
 		fPluginData = data;
-		fGenerateTemplate = generateTemplate;
 	}
 
 	public IFile generate(IProgressMonitor monitor) throws CoreException {
位置:  -80,8 +78,6   public class PluginClassCodeGenerator {
 			writer.println();
 		}
 		if (fPluginData.isUIPlugin()) {
-			if (fGenerateTemplate)
-				writer.println(
 			writer.println(
 		} else {
 			writer.println(
位置:  -130,18 +126,7   public class PluginClassCodeGenerator {
 		writer.println(
 		writer.println(
 		writer.println();
-		if (fPluginData.isUIPlugin() &amp;&amp; fGenerateTemplate) {
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-			writer.println(
-		}
+
 		writer.println(
 	}
 

---------------------------95---------------------------
需求名称: Bug 543217 - Implement Features view
创建时间: 2019-08-14	13:52:12
修改时间: 2019-08-15	10:53:19

原文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ui/META-INF/MANIFEST.MF
位置:  -49,6 +49,10   Export-Package:
  org.eclipse.pde.internal.ui.views.imagebrowser;x-internal:=true,
  org.eclipse.pde.internal.ui.views.imagebrowser.filter;x-internal:=true,
  org.eclipse.pde.internal.ui.views.imagebrowser.repositories;x-internal:=true,
+ org.eclipse.pde.internal.ui.views.features;x-internal:=true,
+ org.eclipse.pde.internal.ui.views.features.action;x-internal:=true,
+ org.eclipse.pde.internal.ui.views.features.support;x-internal:=true,
+ org.eclipse.pde.internal.ui.views.features.viewer;x-internal:=true,
  org.eclipse.pde.internal.ui.views.plugins;x-internal:=true,
  org.eclipse.pde.internal.ui.views.target;x-internal:=true,
  org.eclipse.pde.internal.ui.wizards;x-friends:=

原文件: ui/org.eclipse.pde.ui/plugin.properties 
新文件: ui/org.eclipse.pde.ui/plugin.properties
位置:  -106,6 +106,7   editors.categoryManifest.name=Category Manifest Editor
 
 views.category.name = Plug-in Development
 views.plugins.name = Plug-ins
+views.features.name = Features
 views.dependencies.name = Plug-in Dependencies
 views.tpstate.name = Target Platform State
 ViewCommand.pluginsView.name = Plug-ins

原文件: ui/org.eclipse.pde.ui/plugin.xml 
新文件: ui/org.eclipse.pde.ui/plugin.xml
位置:  -444,6 +444,13  
             id=
       </view>
       <view
+            name=
+            icon=
+            category=
+            class=
+            id=
+      </view>
+      <view
             name=
             icon=
             category=

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java
位置:  -1712,6 +1712,20   public class PDEUIMessages extends NLS {
 	public static String DependencyAnalysisSection_plugin_editable;
 	public static String DependencyAnalysisSection_plugin_notEditable;
 
+	public static String FeaturesView_CollapseAllAction_description;
+	public static String FeaturesView_CollapseAllAction_tooltip;
+	public static String FeaturesView_FeatureAndPluginCopyAction_label;
+	public static String FeaturesView_FilterFeatureChildAction_description;
+	public static String FeaturesView_FilterFeatureChildAction_tooltip;
+	public static String FeaturesView_ShowCalleesContentProviderAction_description;
+	public static String FeaturesView_ShowCalleesContentProviderAction_tooltip;
+	public static String FeaturesView_ShowCallersContentProviderAction_description;
+	public static String FeaturesView_ShowCallersContentProviderAction_tooltip;
+	public static String FeaturesView_ShowPluginsAction_description;
+	public static String FeaturesView_ShowPluginsAction_tooltip;
+	public static String FeaturesView_OpenAction_label;
+	public static String FeaturesView_searchPlaceholder;
+
 	public static String HistoryAction_description;
 	public static String HistoryAction_tooltip;
 	public static String HistoryDropDownAction_tooltip;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties
位置:  -1448,6 +1448,20   DependencyAnalysisSection_plugin_notEditable = <form>\
 <p><img href=
 </form>
 
+FeaturesView_CollapseAllAction_description=Collapse All
+FeaturesView_CollapseAllAction_tooltip=Collapse All
+FeaturesView_FeatureAndPluginCopyAction_label=Copy
+FeaturesView_FilterFeatureChildAction_description=Show Included Features at Top Level
+FeaturesView_FilterFeatureChildAction_tooltip=Show Included Features at Top Level
+FeaturesView_ShowCalleesContentProviderAction_description=Show Features Included by Each Feature
+FeaturesView_ShowCalleesContentProviderAction_tooltip=Show Features Included by Each Feature
+FeaturesView_ShowCallersContentProviderAction_description=Show Features Including Each Feature
+FeaturesView_ShowCallersContentProviderAction_tooltip=Show Features Including Each Feature
+FeaturesView_ShowPluginsAction_description=Show Included Plugins and Fragments
+FeaturesView_ShowPluginsAction_tooltip=Show Included Plugins and Fragments
+FeaturesView_OpenAction_label=Open
+FeaturesView_searchPlaceholder=type filter text
+
 HistoryAction_description=Open ''{0}'' in Hierarchy
 HistoryAction_tooltip=Open ''{0}'' in Hierarchy
 HistoryDropDownAction_tooltip = Previous Plug-ins

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/dependencies/OpenPluginDependenciesAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/dependencies/OpenPluginDependenciesAction.java
位置:  -15,8 +15,7   package org.eclipse.pde.internal.ui.views.dependencies;
 
 import org.eclipse.jface.action.Action;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
-import org.eclipse.pde.internal.ui.IPDEUIConstants;
-import org.eclipse.pde.internal.ui.PDEPlugin;
+import org.eclipse.pde.internal.ui.*;
 import org.eclipse.ui.IViewPart;
 import org.eclipse.ui.PartInitException;
 
位置:  -25,6 +24,9   public class OpenPluginDependenciesAction extends Action {
 	private IPluginModelBase fModel = null;
 
 	public OpenPluginDependenciesAction(IPluginModelBase base) {
+		setText(PDEUIMessages.PluginsView_openDependencies);
+		setImageDescriptor(PDEPluginImages.DESC_CALLEES);
+
 		fModel = base;
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/FeaturesView.java
位置:  -0,0 +1,264  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.function.Consumer;
+import org.eclipse.jface.action.*;
+import org.eclipse.jface.viewers.*;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.PDELabelProvider;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.editor.feature.FeatureEditor;
+import org.eclipse.pde.internal.ui.editor.plugin.ManifestEditor;
+import org.eclipse.pde.internal.ui.views.dependencies.OpenPluginDependenciesAction;
+import org.eclipse.pde.internal.ui.views.features.action.*;
+import org.eclipse.pde.internal.ui.views.features.support.*;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureElementComparer;
+import org.eclipse.pde.internal.ui.views.features.viewer.RootElementsFilteredTree;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.dnd.Clipboard;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Menu;
+import org.eclipse.ui.IActionBars;
+import org.eclipse.ui.actions.ActionFactory;
+import org.eclipse.ui.dialogs.FilteredTree;
+import org.eclipse.ui.dialogs.PatternFilter;
+import org.eclipse.ui.part.ViewPart;
+
+public class FeaturesView extends ViewPart {
+
+	private final Action fOpenAction = new Action(PDEUIMessages.FeaturesView_OpenAction_label) {
+		@Override
+		public void run() {
+			handleOpen();
+		}
+	};
+
+	private final Collection<ViewerFilterAction> fViewerFilterActions = new ArrayList<>();
+
+	private final Collection<ViewerFilter> fViewerFilters = new ArrayList<>();
+
+	private PatternFilter fPatternFilter;
+
+	private Action fShowPluginsAction;
+
+	private TreeViewer fViewer;
+
+	private Clipboard fClipboard;
+
+	private Action fCopyAction;
+
+	private FeatureIndex fFeatureIndex;
+
+	@Override
+	public void createPartControl(Composite parent) {
+		FeatureModelManager featureModelManager = FeatureSupport.getManager();
+		FeatureInput input = new FeatureInput(featureModelManager);
+		fFeatureIndex = new FeatureIndex(featureModelManager);
+
+		FilteredTree filteredTree = createFilteredTree(parent);
+		fViewer = filteredTree.getViewer();
+		fPatternFilter = filteredTree.getPatternFilter();
+		fViewerFilters.add(fPatternFilter);
+
+		fClipboard = new Clipboard(parent.getDisplay());
+		fCopyAction = new FeatureAndPluginCopyAction(fViewer, fClipboard);
+
+		registerGlobalActions();
+		contributeToActionBar(featureModelManager);
+		hookContextMenu();
+
+		initialiseViewer(input);
+	}
+
+	@Override
+	public void setFocus() {
+		fViewer.getControl().setFocus();
+	}
+
+	@Override
+	public void dispose() {
+		super.dispose();
+		fFeatureIndex.dispose();
+		fClipboard.dispose();
+	}
+
+	private FilteredTree createFilteredTree(Composite parent) {
+		FilteredTree filteredTree = new RootElementsFilteredTree(parent, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL);
+		filteredTree.setInitialText(PDEUIMessages.FeaturesView_searchPlaceholder);
+
+		PatternFilter patternFilter = filteredTree.getPatternFilter();
+		patternFilter.setIncludeLeadingWildcard(true);
+
+		TreeViewer viewer = filteredTree.getViewer();
+		viewer.setComparer(new FeatureElementComparer());
+		viewer.setLabelProvider(new PDELabelProvider());
+
+		viewer.addDoubleClickListener(event -> handleOpen());
+		viewer.addSelectionChangedListener(event -> {
+			Collection<?> selection = getViewerSelection();
+			fOpenAction.setEnabled(!selection.isEmpty());
+			fCopyAction.setEnabled(!selection.isEmpty());
+		});
+
+		return filteredTree;
+	}
+
+	private void initialiseViewer(FeatureInput input) {
+		resetViewerFilters();
+		fViewer.setInput(input);
+	}
+
+	private void resetViewerFilters() {
+		fViewer.setFilters(fViewerFilters.toArray(new ViewerFilter[fViewerFilters.size()]));
+	}
+
+	public void toggle(ViewerFilter filter) {
+		if (fViewerFilters.contains(filter)) {
+			fViewerFilters.remove(filter);
+		} else {
+			fViewerFilters.add(filter);
+		}
+		resetViewerFilters();
+	}
+
+	public boolean isActive(ViewerFilter filter) {
+		return fViewerFilters.contains(filter);
+	}
+
+	private void setContentProvider(ViewerComparator viewerComparator, IContentProvider contentProvider,
+			boolean supportsFilters, boolean supportsPlugins) {
+		fViewer.setComparator(viewerComparator);
+		fViewer.setContentProvider(contentProvider);
+
+		setViewerFilterActionsEnabled(supportsFilters);
+		fShowPluginsAction.setEnabled(supportsPlugins);
+
+		if (supportsFilters) {
+			resetViewerFilters();
+		} else {
+			fViewer.setFilters(new ViewerFilter[] { fPatternFilter });
+		}
+	}
+
+	private void setViewerFilterActionsEnabled(boolean supportsFilters) {
+		for (ViewerFilterAction viewerFilterAction : fViewerFilterActions) {
+			viewerFilterAction.setEnabled(supportsFilters);
+		}
+	}
+
+	public void configureContent(Consumer<FeatureInput> configurator) {
+		configurator.accept((FeatureInput) fViewer.getInput());
+		fViewer.refresh();
+	}
+
+	private void registerGlobalActions() {
+		IActionBars actionBars = getViewSite().getActionBars();
+		actionBars.setGlobalActionHandler(ActionFactory.COPY.getId(), fCopyAction);
+	}
+
+	private void contributeToActionBar(FeatureModelManager featureModelManager) {
+		IActionBars actionBars = getViewSite().getActionBars();
+		IToolBarManager toolBarManager = actionBars.getToolBarManager();
+
+		toolBarManager.add(new CollapseAllAction(fViewer));
+		toolBarManager.add(new Separator());
+
+		ContentProviderAction calleesAction = new ShowCalleesContentProviderAction(this, featureModelManager);
+		calleesAction.setChecked(true);
+		toolBarManager.add(calleesAction);
+
+		ContentProviderAction callersAction = new ShowCallersContentProviderAction(this, featureModelManager,
+				fFeatureIndex);
+		toolBarManager.add(callersAction);
+		toolBarManager.add(new Separator());
+
+		ViewerFilterAction filterFeatureChildAction = new FilterFeatureChildAction(this, fFeatureIndex);
+		toolBarManager.add(filterFeatureChildAction);
+
+		fShowPluginsAction = new ShowPluginsAction(this);
+		toolBarManager.add(fShowPluginsAction);
+
+		setContentProvider(calleesAction);
+		setContentProvider(callersAction);
+		registerFilterAction(filterFeatureChildAction);
+
+		actionBars.updateActionBars();
+	}
+
+	private void hookContextMenu() {
+		MenuManager menuManager = new MenuManager();
+		menuManager.setRemoveAllWhenShown(true);
+		menuManager.addMenuListener(this::fillContextMenu);
+		Menu menu = menuManager.createContextMenu(fViewer.getControl());
+		fViewer.getControl().setMenu(menu);
+	}
+
+	private void fillContextMenu(IMenuManager manager) {
+		manager.add(fOpenAction);
+
+		IPluginModelBase selectedPluginModel = getSelectedPluginModel();
+		if (selectedPluginModel != null) {
+			Action dependenciesAction = new OpenPluginDependenciesAction(selectedPluginModel);
+			manager.add(dependenciesAction);
+		}
+
+		manager.add(new Separator());
+		manager.add(fCopyAction);
+	}
+
+	private void registerFilterAction(ViewerFilterAction filterAction) {
+		fViewerFilterActions.add(filterAction);
+		if (!filterAction.isChecked()) {
+			fViewerFilters.add(filterAction.getViewerFilter());
+		}
+	}
+
+	public void setContentProvider(ContentProviderAction contentProviderAction) {
+		if (contentProviderAction.isChecked()) {
+			setContentProvider(contentProviderAction.createViewerComparator(),
+					contentProviderAction.createContentProvider(), contentProviderAction.isSupportsFilters(),
+					contentProviderAction.isSupportsPlugins());
+		}
+	}
+
+	private void handleOpen() {
+		for (Object selection : getViewerSelection()) {
+			IFeatureModel featureModel = FeatureSupport.toFeatureModel(selection);
+			if (featureModel != null) {
+				FeatureEditor.openFeatureEditor(featureModel);
+				continue;
+			}
+
+			IPluginModelBase pluginModel = PluginSupport.toPluginModel(selection);
+			if (pluginModel != null) {
+				ManifestEditor.openPluginEditor(pluginModel);
+				continue;
+			}
+		}
+	}
+
+	private Collection<?> getViewerSelection() {
+		return fViewer.getStructuredSelection().toList();
+	}
+
+	private IPluginModelBase getSelectedPluginModel() {
+		return PluginSupport.toSinglePluginModel(fViewer.getStructuredSelection());
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/CollapseAllAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/CollapseAllAction.java
位置:  -0,0 +1,38  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.viewers.TreeViewer;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+
+public class CollapseAllAction extends Action {
+
+	private final TreeViewer fViewer;
+
+	public CollapseAllAction(TreeViewer viewer) {
+		fViewer = viewer;
+
+		setDescription(PDEUIMessages.FeaturesView_CollapseAllAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_CollapseAllAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_COLLAPSE_ALL);
+	}
+
+	@Override
+	public void run() {
+		fViewer.collapseAll();
+	}
+
+}
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ContentProviderAction.java
位置:  -0,0 +1,47  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.viewers.IContentProvider;
+import org.eclipse.jface.viewers.ViewerComparator;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+
+public abstract class ContentProviderAction extends Action {
+
+	private final FeaturesView fFeaturesView;
+
+	protected final FeatureModelManager fFeatureModelManager;
+
+	public ContentProviderAction(FeaturesView featuresView, FeatureModelManager featureModelManager) {
+		super(null, AS_RADIO_BUTTON);
+		fFeaturesView = featuresView;
+		fFeatureModelManager = featureModelManager;
+	}
+
+	public abstract ViewerComparator createViewerComparator();
+
+	public abstract IContentProvider createContentProvider();
+
+	@Override
+	public void run() {
+		fFeaturesView.setContentProvider(this);
+	}
+
+	public abstract boolean isSupportsFilters();
+
+	public abstract boolean isSupportsPlugins();
+
+}
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FeatureAndPluginCopyAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FeatureAndPluginCopyAction.java
位置:  -0,0 +1,112  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import java.util.*;
+import java.util.stream.Collectors;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.viewers.StructuredViewer;
+import org.eclipse.pde.core.IModel;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureSupport;
+import org.eclipse.pde.internal.ui.views.features.support.PluginSupport;
+import org.eclipse.swt.dnd.*;
+import org.eclipse.swt.widgets.Event;
+import org.eclipse.ui.ISharedImages;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.actions.ActionFactory;
+import org.eclipse.ui.part.ResourceTransfer;
+
+public class FeatureAndPluginCopyAction extends Action {
+
+	private final StructuredViewer fStructuredViewer;
+
+	private final Clipboard fClipboard;
+
+	public FeatureAndPluginCopyAction(StructuredViewer structuredViewer, Clipboard clipboard) {
+		super(PDEUIMessages.FeaturesView_FeatureAndPluginCopyAction_label,
+				PlatformUI.getWorkbench().getSharedImages().getImageDescriptor(ISharedImages.IMG_TOOL_COPY));
+		fStructuredViewer = structuredViewer;
+		fClipboard = clipboard;
+
+		setActionDefinitionId(ActionFactory.COPY.getCommandId());
+	}
+
+	@Override
+	public void runWithEvent(Event event) {
+		IStructuredSelection selection = fStructuredViewer.getStructuredSelection();
+		List<IModel> models = toModels(selection);
+
+		String textData = toTextData(models);
+		IResource[] projectResources = toProjectResources(models);
+		String[] fileData = toFileData(projectResources);
+
+		Object[] data = { textData, projectResources, fileData };
+		Transfer[] dataTypes = { TextTransfer.getInstance(), ResourceTransfer.getInstance(),
+				FileTransfer.getInstance() };
+		fClipboard.setContents(data, dataTypes);
+	}
+
+	private List<IModel> toModels(IStructuredSelection selection) {
+		List<Object> selectionList = selection.toList();
+		return selectionList.stream()
+				.map(this::toModel)
+				.filter(Objects::nonNull)
+				.collect(Collectors.toList());
+	}
+
+	private IModel toModel(Object element) {
+		IModel model = FeatureSupport.toFeatureModel(element);
+		if (model == null) {
+			model = PluginSupport.toPluginModel(element);
+		}
+
+		return model;
+	}
+
+	private String toTextData(Collection<IModel> models) {
+		return models.stream()
+				.map(this::toModelId)
+				.collect(Collectors.joining(System.lineSeparator()));
+	}
+
+	private String toModelId(IModel model) {
+		if (model instanceof IFeatureModel) {
+			return ((IFeatureModel) model).getFeature().getId();
+		} else if (model instanceof IPluginModelBase) {
+			return ((IPluginModelBase) model).getPluginBase().getId();
+		}
+
+		return null;
+	}
+
+	private IResource[] toProjectResources(Collection<IModel> models) {
+		return models.stream()
+				.map(IModel::getUnderlyingResource)
+				.filter(Objects::nonNull)
+				.map(IResource::getProject)
+				.distinct().toArray(IResource[]::new);
+	}
+
+	private String[] toFileData(IResource[] resources) {
+		return Arrays.stream(resources)
+				.map(resource -> resource.getLocation().toOSString())
+				.toArray(String[]::new);
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FilterFeatureChildAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/FilterFeatureChildAction.java
位置:  -0,0 +1,32  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureChildViewerFilter;
+
+public class FilterFeatureChildAction extends ViewerFilterAction {
+
+	public FilterFeatureChildAction(FeaturesView featuresView, FeatureIndex featureIndex) {
+		super(featuresView, new FeatureChildViewerFilter(featureIndex));
+
+		setDescription(PDEUIMessages.FeaturesView_FilterFeatureChildAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_FilterFeatureChildAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_FULL_HIERARCHY);
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCalleesContentProviderAction.java
位置:  -0,0 +1,56  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.viewers.IContentProvider;
+import org.eclipse.jface.viewers.ViewerComparator;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureTreeCalleesContentProvider;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureViewerComparator;
+
+public class ShowCalleesContentProviderAction extends ContentProviderAction {
+
+	public ShowCalleesContentProviderAction(FeaturesView featuresView,
+			FeatureModelManager featureModelManager) {
+		super(featuresView, featureModelManager);
+
+		setDescription(PDEUIMessages.FeaturesView_ShowCalleesContentProviderAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_ShowCalleesContentProviderAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_CALLEES);
+	}
+
+	@Override
+	public ViewerComparator createViewerComparator() {
+		return new FeatureViewerComparator();
+	}
+
+	@Override
+	public IContentProvider createContentProvider() {
+		return new FeatureTreeCalleesContentProvider(fFeatureModelManager);
+	}
+
+	@Override
+	public boolean isSupportsFilters() {
+		return true;
+	}
+
+	@Override
+	public boolean isSupportsPlugins() {
+		return true;
+	}
+
+}
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowCallersContentProviderAction.java
位置:  -0,0 +1,59  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.viewers.IContentProvider;
+import org.eclipse.jface.viewers.ViewerComparator;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
+import org.eclipse.pde.internal.ui.views.features.viewer.FeatureTreeCallersContentProvider;
+
+public class ShowCallersContentProviderAction extends ContentProviderAction {
+
+	private final FeatureIndex fFeatureIndex;
+
+	public ShowCallersContentProviderAction(FeaturesView featuresView,
+			FeatureModelManager featureModelManager, FeatureIndex featureIndex) {
+		super(featuresView, featureModelManager);
+		fFeatureIndex = featureIndex;
+
+		setDescription(PDEUIMessages.FeaturesView_ShowCallersContentProviderAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_ShowCallersContentProviderAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_CALLERS);
+	}
+
+	@Override
+	public ViewerComparator createViewerComparator() {
+		return new ViewerComparator();
+	}
+
+	@Override
+	public IContentProvider createContentProvider() {
+		return new FeatureTreeCallersContentProvider(fFeatureModelManager, fFeatureIndex);
+	}
+
+	@Override
+	public boolean isSupportsFilters() {
+		return false;
+	}
+
+	@Override
+	public boolean isSupportsPlugins() {
+		return false;
+	}
+
+}
\ No newline at end of file

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowPluginsAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ShowPluginsAction.java
位置:  -0,0 +1,39  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.pde.internal.ui.PDEPluginImages;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+
+public class ShowPluginsAction extends Action {
+
+	private final FeaturesView fFeaturesView;
+
+	public ShowPluginsAction(FeaturesView featuresView) {
+		super(null, AS_CHECK_BOX);
+		fFeaturesView = featuresView;
+
+		setDescription(PDEUIMessages.FeaturesView_ShowPluginsAction_description);
+		setToolTipText(PDEUIMessages.FeaturesView_ShowPluginsAction_tooltip);
+		setImageDescriptor(PDEPluginImages.DESC_PLUGINS_FRAGMENTS);
+	}
+
+	@Override
+	public void run() {
+		fFeaturesView.configureContent(featureInput -> featureInput.setIncludePlugins(isChecked()));
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ViewerFilterAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/action/ViewerFilterAction.java
位置:  -0,0 +1,42  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.action;
+
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.viewers.ViewerFilter;
+import org.eclipse.pde.internal.ui.views.features.FeaturesView;
+
+public abstract class ViewerFilterAction extends Action {
+
+	private final FeaturesView fFeaturesView;
+
+	private final ViewerFilter fFilter;
+
+	public ViewerFilterAction(FeaturesView featuresView, ViewerFilter filter) {
+		super(null, AS_CHECK_BOX);
+		fFeaturesView = featuresView;
+		fFilter = filter;
+		setChecked(featuresView.isActive(filter));
+	}
+
+	@Override
+	public void run() {
+		fFeaturesView.toggle(fFilter);
+	}
+
+	public ViewerFilter getViewerFilter() {
+		return fFilter;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureIndex.java
位置:  -0,0 +1,65  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import java.util.*;
+import org.eclipse.pde.internal.core.*;
+import org.eclipse.pde.internal.core.ifeature.IFeatureChild;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+
+public class FeatureIndex implements IFeatureModelListener {
+
+	private final Map<String, Collection<IFeatureModel>> fIncludingFeatures = new HashMap<>();
+
+	private final FeatureModelManager fFeatureModelManager;
+
+	public FeatureIndex(FeatureModelManager featureModelManager) {
+		fFeatureModelManager = featureModelManager;
+		fFeatureModelManager.addFeatureModelListener(this);
+		reIndex();
+	}
+
+	public Collection<IFeatureModel> getIncludingFeatures(String childId) {
+		return fIncludingFeatures.getOrDefault(childId, Collections.emptySet());
+	}
+
+	public void dispose() {
+		fFeatureModelManager.removeFeatureModelListener(this);
+	}
+
+	private void reIndex() {
+		fIncludingFeatures.clear();
+		for (IFeatureModel parentModel : fFeatureModelManager.getWorkspaceModels()) {
+			for (IFeatureChild child : parentModel.getFeature().getIncludedFeatures()) {
+				IFeatureModel childModel = fFeatureModelManager.findFeatureModel(child.getId());
+				if (childModel != null) {
+					index(childModel, parentModel);
+				}
+			}
+		}
+	}
+
+	private void index(IFeatureModel childModel, IFeatureModel parentModel) {
+		String childId = childModel.getFeature().getId();
+
+		Collection<IFeatureModel> parents = fIncludingFeatures.computeIfAbsent(childId, key -> new HashSet<>());
+		parents.add(parentModel);
+	}
+
+	@Override
+	public void modelsChanged(IFeatureModelDelta delta) {
+		reIndex();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureInput.java
位置:  -0,0 +1,40  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import org.eclipse.pde.internal.core.FeatureModelManager;
+
+public class FeatureInput {
+
+	private final FeatureModelManager fFeatureModelManager;
+
+	private boolean fIncludePlugins;
+
+	public FeatureInput(FeatureModelManager featureModelManager) {
+		fFeatureModelManager = featureModelManager;
+	}
+
+	public FeatureModelManager getFeatureModelManager() {
+		return fFeatureModelManager;
+	}
+
+	public boolean isIncludePlugins() {
+		return fIncludePlugins;
+	}
+
+	public void setIncludePlugins(boolean includePlugins) {
+		fIncludePlugins = includePlugins;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureSupport.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/FeatureSupport.java
位置:  -0,0 +1,44  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.pde.core.IIdentifiable;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+
+public class FeatureSupport {
+
+	private FeatureSupport() {
+	}
+
+	public static IFeatureModel toFeatureModel(Object obj) {
+		if (obj instanceof IFeatureModel) {
+			return (IFeatureModel) obj;
+		} else if (obj instanceof IIdentifiable) {
+			IIdentifiable featureOrChild = (IIdentifiable) obj;
+			return getManager().findFeatureModel(featureOrChild.getId());
+		} else if (obj instanceof IProject) {
+			return getManager().getFeatureModel((IProject) obj);
+		} else {
+			return null;
+		}
+	}
+
+	public static FeatureModelManager getManager() {
+		return PDECore.getDefault().getFeatureModelManager();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/PluginSupport.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/support/PluginSupport.java
位置:  -0,0 +1,57  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.support;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.jdt.core.IJavaProject;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.core.PluginModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeaturePlugin;
+
+public class PluginSupport {
+
+	private PluginSupport() {
+	}
+
+	public static IPluginModelBase toSinglePluginModel(IStructuredSelection selection) {
+		if (selection.size() != 1) {
+			return null;
+		}
+
+		Object firstElement = selection.getFirstElement();
+		return toPluginModel(firstElement);
+	}
+
+	public static IPluginModelBase toPluginModel(Object obj) {
+		if (obj instanceof IPluginModelBase) {
+			return (IPluginModelBase) obj;
+		} else if (obj instanceof IFeaturePlugin) {
+			IFeaturePlugin featurePlugin = (IFeaturePlugin) obj;
+			return getManager().findModel(featurePlugin.getId());
+		} else if (obj instanceof IProject) {
+			return getManager().findModel((IProject) obj);
+		} else if (obj instanceof IJavaProject) {
+			return getManager().findModel(((IJavaProject) obj).getProject());
+		} else {
+			return null;
+		}
+	}
+
+	public static PluginModelManager getManager() {
+		return PDECore.getDefault().getModelManager();
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/AbstractFeatureTreeContentProvider.java
位置:  -0,0 +1,76  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.ITreeContentProvider;
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.pde.internal.core.*;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+
+public abstract class AbstractFeatureTreeContentProvider
+		implements ITreeContentProvider, IFeatureModelListener {
+
+	protected final FeatureModelManager fFeatureModelManager;
+
+	protected FeatureInput fInput;
+
+	private Viewer fViewer;
+
+	public AbstractFeatureTreeContentProvider(FeatureModelManager featureModelManager) {
+		fFeatureModelManager = featureModelManager;
+		fFeatureModelManager.addFeatureModelListener(this);
+	}
+
+	@Override
+	public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
+		fViewer = viewer;
+
+		if (newInput instanceof FeatureInput) {
+			fInput = (FeatureInput) newInput;
+		}
+	}
+
+	@Override
+	public Object getParent(Object element) {
+		return null;
+	}
+
+	@Override
+	public boolean hasChildren(Object element) {
+		return getChildren(element).length > 0;
+	}
+
+	@Override
+	public void dispose() {
+		fFeatureModelManager.removeFeatureModelListener(this);
+	}
+
+	@Override
+	public void modelsChanged(IFeatureModelDelta delta) {
+		refreshViewer();
+	}
+
+	private void refreshViewer() {
+		if (fViewer.getControl().isDisposed()) {
+			return;
+		}
+
+		fViewer.getControl().getDisplay().asyncExec(() -> {
+			if (!fViewer.getControl().isDisposed()) {
+				fViewer.refresh();
+			}
+		});
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureChildViewerFilter.java
位置:  -0,0 +1,43  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.jface.viewers.ViewerFilter;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+
+public class FeatureChildViewerFilter extends ViewerFilter {
+
+	private final FeatureIndex fFeatureIndex;
+
+	public FeatureChildViewerFilter(FeatureIndex featureIndex) {
+		fFeatureIndex = featureIndex;
+	}
+
+	@Override
+	public boolean select(Viewer viewer, Object parentElement, Object element) {
+		if (parentElement instanceof FeatureInput &amp;&amp; element instanceof IFeatureModel) {
+			IFeatureModel featureModel = (IFeatureModel) element;
+			String featureId = featureModel.getFeature().getId();
+			boolean includedInFeature = !fFeatureIndex.getIncludingFeatures(featureId).isEmpty();
+
+			return !includedInFeature;
+		}
+
+		return true;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureElementComparer.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureElementComparer.java
位置:  -0,0 +1,59  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.IElementComparer;
+import org.eclipse.pde.internal.core.ifeature.*;
+
+public class FeatureElementComparer implements IElementComparer {
+
+	@Override
+	public boolean equals(Object aObj, Object bObj) {
+		if (areInstances(aObj, bObj, IFeatureModel.class)) {
+			IFeature a = ((IFeatureModel) aObj).getFeature();
+			IFeature b = ((IFeatureModel) bObj).getFeature();
+			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion());
+		} else if (areInstances(aObj, bObj, IFeatureChild.class)) {
+			IFeatureChild a = (IFeatureChild) aObj;
+			IFeatureChild b = (IFeatureChild) bObj;
+			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+					&amp;&amp; equals(a.getModel(), b.getModel());
+		} else if (areInstances(aObj, bObj, IFeaturePlugin.class)) {
+			IFeaturePlugin a = (IFeaturePlugin) aObj;
+			IFeaturePlugin b = (IFeaturePlugin) bObj;
+			return a.getId().equals(b.getId()) &amp;&amp; a.getVersion().equals(b.getVersion())
+					&amp;&amp; equals(a.getModel(), b.getModel());
+		} else {
+			return aObj.equals(bObj);
+		}
+	}
+
+	@Override
+	public int hashCode(Object element) {
+		if (element instanceof IFeatureModel) {
+			return ((IFeatureModel) element).getFeature().getId().hashCode();
+		} else if (element instanceof IFeatureChild) {
+			return ((IFeatureChild) element).getId().hashCode();
+		} else if (element instanceof IFeaturePlugin) {
+			return ((IFeaturePlugin) element).getId().hashCode();
+		} else {
+			return element.hashCode();
+		}
+	}
+
+	private boolean areInstances(Object aObj, Object bObj, Class<?> target) {
+		return target.isInstance(aObj) &amp;&amp; target.isInstance(bObj);
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCalleesContentProvider.java
位置:  -0,0 +1,65  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import java.util.*;
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeatureChild;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+
+public class FeatureTreeCalleesContentProvider extends AbstractFeatureTreeContentProvider {
+
+	public FeatureTreeCalleesContentProvider(FeatureModelManager featureModelManager) {
+		super(featureModelManager);
+	}
+
+	@Override
+	public Object[] getChildren(Object parentElement) {
+		if (parentElement instanceof IFeatureModel) {
+			IFeatureModel featureModel = (IFeatureModel) parentElement;
+			Object[] features = featureModel.getFeature().getIncludedFeatures();
+
+			if (!fInput.isIncludePlugins()) {
+				return features;
+			}
+
+			Object[] plugins = featureModel.getFeature().getPlugins();
+
+			List<Object> all = new ArrayList<>(features.length + plugins.length);
+			all.addAll(Arrays.asList(features));
+			all.addAll(Arrays.asList(plugins));
+
+			return all.toArray();
+		} else if (parentElement instanceof IFeatureChild) {
+			IFeatureChild featureChild = (IFeatureChild) parentElement;
+			IFeatureModel featureModel = fFeatureModelManager.findFeatureModel(featureChild.getId());
+			return getChildren(featureModel);
+		}
+
+		return new Object[0];
+	}
+
+	@Override
+	public Object[] getElements(Object inputElement) {
+		if (inputElement instanceof FeatureInput) {
+			FeatureInput input = (FeatureInput) inputElement;
+			FeatureModelManager featureModelManager = input.getFeatureModelManager();
+			return featureModelManager.getWorkspaceModels();
+		}
+
+		return new Object[0];
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureTreeCallersContentProvider.java
位置:  -0,0 +1,53  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.pde.internal.core.FeatureModelManager;
+import org.eclipse.pde.internal.core.ifeature.IFeatureModel;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureIndex;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureInput;
+
+public class FeatureTreeCallersContentProvider extends AbstractFeatureTreeContentProvider {
+
+	private final FeatureIndex fFeatureIndex;
+
+	public FeatureTreeCallersContentProvider(FeatureModelManager featureModelManager,
+			FeatureIndex featureIndex) {
+		super(featureModelManager);
+		fFeatureIndex = featureIndex;
+	}
+
+	@Override
+	public Object[] getChildren(Object parentElement) {
+		if (parentElement instanceof IFeatureModel) {
+			IFeatureModel featureModel = (IFeatureModel) parentElement;
+			String featureId = featureModel.getFeature().getId();
+			return fFeatureIndex.getIncludingFeatures(featureId).toArray();
+		}
+
+		return new Object[0];
+	}
+
+	@Override
+	public Object[] getElements(Object inputElement) {
+		if (inputElement instanceof FeatureInput) {
+			FeatureInput input = (FeatureInput) inputElement;
+			FeatureModelManager featureModelManager = input.getFeatureModelManager();
+			return featureModelManager.getWorkspaceModels();
+		}
+
+		return new Object[0];
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureViewerComparator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/FeatureViewerComparator.java
位置:  -0,0 +1,52  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.jface.viewers.ViewerComparator;
+import org.eclipse.pde.internal.core.ifeature.*;
+import org.eclipse.pde.internal.ui.views.features.support.FeatureSupport;
+
+public class FeatureViewerComparator extends ViewerComparator {
+
+	@Override
+	public int category(Object element) {
+		if (element instanceof IFeatureChild) {
+			element = FeatureSupport.toFeatureModel(element);
+			if (element == null) {
+				return 4;
+			}
+		}
+
+		if (element instanceof IFeatureModel) {
+			IFeatureModel featureModel = (IFeatureModel) element;
+			boolean editable = featureModel.isEditable();
+			boolean hasChildren = featureModel.getFeature().getIncludedFeatures().length > 0;
+
+			if (hasChildren &amp;&amp; editable) {
+				return 0;
+			} else if (hasChildren) {
+				return 1;
+			} else if (editable) {
+				return 2;
+			} else {
+				return 3;
+			}
+		} else if (element instanceof IFeaturePlugin) {
+			return 5;
+		}
+
+		return 6;
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/RootElementsFilteredTree.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/features/viewer/RootElementsFilteredTree.java
位置:  -0,0 +1,68  
+/*******************************************************************************
+ * Copyright (c) 2019 Ed Scadding.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     Ed Scadding <edscadding@secondfiddle.org.uk> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.views.features.viewer;
+
+import org.eclipse.core.runtime.*;
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.ui.dialogs.FilteredTree;
+import org.eclipse.ui.dialogs.PatternFilter;
+import org.eclipse.ui.progress.WorkbenchJob;
+
+public class RootElementsFilteredTree extends FilteredTree {
+
+	public RootElementsFilteredTree(Composite parent, int treeStyle) {
+		super(parent, treeStyle, new RootElementsPatternFilter(), true);
+	}
+
+	/**
+	 * Avoid the expansion stage of the refresh by using a monitor in the
+	 * 
+	 */
+	@Override
+	protected WorkbenchJob doCreateRefreshJob() {
+		final WorkbenchJob realJob = super.doCreateRefreshJob();
+		return new WorkbenchJob(realJob.getName()) {
+			@Override
+			public IStatus runInUIThread(IProgressMonitor monitor) {
+				IProgressMonitor cancelledMonitor = new NullProgressMonitor();
+				cancelledMonitor.setCanceled(true);
+				realJob.runInUIThread(cancelledMonitor);
+				return Status.OK_STATUS;
+			}
+		};
+	}
+
+	private static class RootElementsPatternFilter extends PatternFilter {
+
+		private Object currentParent;
+
+		@Override
+		public boolean isElementVisible(Viewer viewer, Object element) {
+			if (viewer.getInput() == currentParent) {
+				return isLeafMatch(viewer, element);
+			}
+
+			return true;
+		}
+
+		@Override
+		public Object[] filter(Viewer viewer, Object parent, Object[] elements) {
+			currentParent = parent;
+			return super.filter(viewer, parent, elements);
+		}
+
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java
位置:  -430,8 +430,6   public class PluginsView extends ViewPart implements IPluginModelListener {
 			IPluginModelBase entry = getEnclosingModel();
 			if (entry != null) {
 				Action action = new OpenPluginDependenciesAction(entry);
-				action.setText(PDEUIMessages.PluginsView_openDependencies);
-				action.setImageDescriptor(PDEPluginImages.DESC_CALLEES);
 				manager.add(action);
 				manager.add(new Separator());
 

---------------------------96---------------------------
需求名称: Bug 550081 - [impl] JavaCore.getAllVersions() should return an immutable
创建时间: 2019-08-14	16:38:37
修改时间: 2019-08-14	16:38:37

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/ee/EnvironmentAnalyzerDelegate.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/ee/EnvironmentAnalyzerDelegate.java
位置:  -40,9 +40,9   public class EnvironmentAnalyzerDelegate implements IExecutionEnvironmentAnalyze
 		if (javaVersion != null) {
 			IExecutionEnvironment env = JavaRuntime.getExecutionEnvironmentsManager().getEnvironment(EE_NO_SOUND);
 			List<String> allVersions = JavaCore.getAllVersions();
-			List<String> compatibleList = allVersions.subList(3, allVersions.size());
-			Collections.reverse(compatibleList);
-			for (String element : compatibleList) {
+			int length = allVersions.size();
+			for (int i = length - 1; i >= 3; i--) {
+				String element = allVersions.get(i);
 				if (javaVersion.startsWith(element)) {
 					result.add(new CompatibleEnvironment(env, false));
 				}

---------------------------97---------------------------
需求名称: Bug 549891 - Target definition: Switch from source to definitions make
创建时间: 2019-08-14	01:59:13
修改时间: 2019-08-14	12:05:26

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/InformationSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/InformationSection.java
位置:  -77,8 +77,12   public class InformationSection extends SectionPart {
 		fNameText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
 		fNameText.addModifyListener(e -> {
 			String value = fNameText.getText().trim();
-			getTarget().setName(value.length() > 0 ? value : null);
-			markDirty();
+			String name = getTarget().getName();
+			if (!value.equals(name)) {
+				getTarget().setName(value.length() > 0 ? value : null);
+				markDirty();
+			}
+
 		});
 
 		fNameTextValidator = new TextValidator(fPage.getManagedForm(), fNameText, null, true) {

---------------------------98---------------------------
需求名称: Bug 550062 - Use ArrayDeque rather than Stack
创建时间: 2019-08-14	07:00:24
修改时间: 2019-08-14	07:02:17

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/RequiredPluginsClasspathContainer.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/RequiredPluginsClasspathContainer.java
位置:  -16,6 +16,7   package org.eclipse.pde.internal.core;
 import static java.util.Collections.singletonMap;
 
 import java.io.File;
+import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
位置:  -24,7 +25,6   import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.Stack;
 import java.util.TreeMap;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
位置:  -529,7 +529,7   public class RequiredPluginsClasspathContainer extends PDEClasspathContainer imp
 
 	protected final void findExportedPackages(BundleDescription desc, BundleDescription projectDesc, Map<BundleDescription, ArrayList<Rule>> map) {
 		if (desc != null) {
-			Stack<BaseDescription> stack = new Stack<>();
+			ArrayDeque<BaseDescription> stack = new ArrayDeque<>();
 			stack.add(desc);
 			while (!stack.isEmpty()) {
 				BundleDescription bdesc = (BundleDescription) stack.pop();

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java
位置:  -16,9 +16,9   package org.eclipse.pde.internal.core.builders;
 
 import java.net.MalformedURLException;
 import java.net.URL;
+import java.util.ArrayDeque;
 import java.util.ArrayList;
 import java.util.List;
-import java.util.Stack;
 import java.util.StringTokenizer;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.runtime.IProgressMonitor;
位置:  -166,7 +166,7   public class SchemaErrorReporter extends XMLErrorReporter {
 				StringTokenizer text = new StringTokenizer(textNode.getData(), 
 
 				int lineNumber = getLine(element);
-				Stack<StackEntry> stack = new Stack<>();
+				ArrayDeque<StackEntry> stack = new ArrayDeque<>();
 				boolean errorReported = false;
 				while (text.hasMoreTokens()) {
 					if (errorReported) {

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java
位置:  -224,7 +224,7   public class LauncherUtils {
 					if (path == null)
 						continue;
 					file = path.toFile();
-					Stack<File> files = new Stack<>();
+					ArrayDeque<File> files = new ArrayDeque<>();
 					files.push(file);
 					while (!files.isEmpty()) {
 						file = files.pop();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/contentassist/XMLCompletionProposal.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/contentassist/XMLCompletionProposal.java
位置:  -15,8 +15,8  
 
 package org.eclipse.pde.internal.ui.editor.contentassist;
 
+import java.util.ArrayDeque;
 import java.util.HashSet;
-import java.util.Stack;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.jface.internal.text.html.BrowserInformationControl;
位置:  -281,7 +281,7   public class XMLCompletionProposal implements ICompletionProposal, ICompletionPr
 						break;
 				}
 			} else if (fRange instanceof IDocumentElementNode &amp;&amp; base instanceof IDocumentElementNode) {
-				Stack<IDocumentElementNode> s = new Stack<>();
+				ArrayDeque<IDocumentElementNode> s = new ArrayDeque<>();
 				IDocumentElementNode node = (IDocumentElementNode) fRange;
 				IDocumentElementNode newSearch = (IDocumentElementNode) base;
 				// traverse up old model, pushing all nodes onto the stack along the way

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExtensionsSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExtensionsSection.java
位置:  -174,7 +174,7   public class ExtensionsSection extends TreeSection implements IPropertyChangeLis
 			String tagName = (parent == extension ? 
 			elementInfo = schema.findElement(tagName);
 		} else {
-			Stack<String> stack = new Stack<>();
+			ArrayDeque<String> stack = new ArrayDeque<>();
 			IPluginParent parentParent = parent;
 			while (parentParent != extension &amp;&amp; parentParent != null) {
 				stack.push(parentParent.getName());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/XMLUtil.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/XMLUtil.java
位置:  -91,7 +91,7   public abstract class XMLUtil {
 
 		// if element is not 
 		// Then search for the element in the same schema in which the parent element if found.
-		Stack<String> stack = new Stack<>();
+		ArrayDeque<String> stack = new ArrayDeque<>();
 		while (node != null) {
 			String tagName = node.getXMLTagName();
 			if (

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesOperation.java
位置:  -181,7 +181,7   public class AddNewDependenciesOperation extends WorkspaceModifyOperation {
 			int index = (value != null) ? value.indexOf(';') : -1;
 			String projectBundleId = (index > 0) ? value.substring(0, index) : value;
 			List<ExportPackageDescription> result = new LinkedList<>();
-			Stack<BaseDescription> stack = new Stack<>();
+			ArrayDeque<BaseDescription> stack = new ArrayDeque<>();
 			stack.add(desc);
 			while (!stack.isEmpty()) {
 				BundleDescription bdesc = (BundleDescription) stack.pop();
位置:  -453,7 +453,7   public class AddNewDependenciesOperation extends WorkspaceModifyOperation {
 	}
 
 	protected final void minimizeBundles(Collection<String> pluginIds) {
-		Stack<String> stack = new Stack<>();
+		ArrayDeque<String> stack = new ArrayDeque<>();
 		Iterator<String> it = pluginIds.iterator();
 		while (it.hasNext())
 			stack.push(it.next().toString());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/GatherUnusedDependenciesOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/GatherUnusedDependenciesOperation.java
位置:  -252,7 +252,7   public class GatherUnusedDependenciesOperation implements IRunnableWithProgress
 		}
 
 		Iterator<String> it = usedPlugins.keySet().iterator();
-		Stack<String> plugins = new Stack<>();
+		ArrayDeque<String> plugins = new ArrayDeque<>();
 		while (it.hasNext())
 			plugins.push(it.next().toString());
 		SubMonitor subMonitor = SubMonitor.convert(monitor);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/PackageFinder.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/PackageFinder.java
位置:  -211,7 +211,7   public class PackageFinder {
 	private static void addClassFilesFromResource(IResource res, List<IClassFile> classFiles) {
 		if (res == null)
 			return;
-		Stack<IResource> stack = new Stack<>();
+		ArrayDeque<IResource> stack = new ArrayDeque<>();
 		if (res instanceof IContainer) {
 			stack.push(res);
 			while (!stack.isEmpty()) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewLibraryPluginCreationOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewLibraryPluginCreationOperation.java
位置:  -526,7 +526,7   public class NewLibraryPluginCreationOperation extends NewProjectCreationOperati
 				protected void addProjectPackages(IBundle bundle, Set<String> ignorePkgs) {
 					if (!unzip)
 						super.addProjectPackages(bundle, ignorePkgs);
-					Stack<IResource> stack = new Stack<>();
+					ArrayDeque<IResource> stack = new ArrayDeque<>();
 					stack.push(fProject);
 					try {
 						while (!stack.isEmpty()) {

---------------------------99---------------------------
需求名称: Bug 550049 - Remove "Are you sure you want to " from text
创建时间: 2019-08-14	04:42:10
修改时间: 2019-08-14	04:42:10

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties
位置:  -1913,7 +1913,7   SampleStandbyContent_content=<form>\
 </form>
 SampleStandbyContent_desc=<form>{0}</form>
 SaveToWorkspace_ConfirmOverwrite=Comfirm Overwrite
-SaveToWorkspace_ConfirmOverwriteText=File {0} already exists. Are you sure you want to overwrite it?
+SaveToWorkspace_ConfirmOverwriteText=File {0} already exists. Do you want to overwrite it?
 SaveToWorkspace_SaveImageToWorkspace=Save image to the workspace
 ReviewPage_title=Review
 ReviewPage_desc=Review the selected sample.
位置:  -1983,7 +1983,7   TargetPlatformPreferencePage2_17=Target Definition Out Of Synch
 TargetPlatformPreferencePage2_18=The active target platform is out of synch with the file system.  Pressing 'Apply and Close' on the preference page will update the target platform.
 TargetPlatformPreferencePage2_19=Remove Target Definition
 TargetPlatformPreferencePage2_2=&amp;Target definitions:
-TargetPlatformPreferencePage2_20=Are you sure you want to remove the selected target definition?  Removing it will delete a file in your workspace.
+TargetPlatformPreferencePage2_20=Remove the selected target definition?  Removing it will delete a file in your workspace.
 TargetPlatformPreferencePage2_21=&amp;Do not ask me again
 TargetPlatformPreferencePage2_22=No target definition is currently set active.
 TargetPlatformPreferencePage2_23=Target definition file could not be located.

---------------------------100---------------------------
需求名称: Bug 549839 - PDE compiler doesnt build after
创建时间: 2019-08-13	08:26:49
修改时间: 2019-08-14	00:12:29

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker.java
位置:  -31,6 +31,7   import org.eclipse.core.resources.IncrementalProjectBuilder;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.Path;
 import org.eclipse.core.runtime.SubMonitor;
 import org.eclipse.core.runtime.jobs.ISchedulingRule;
 import org.eclipse.core.runtime.jobs.MultiRule;
位置:  -48,11 +49,19   public class ManifestConsistencyChecker extends IncrementalProjectBuilder {
 	private final int EXTENSIONS = 0x2;
 	private final int BUILD = 0x4;
 	private final int STRUCTURE = 0x8;
+	static final IPath SETTINGS_PATH = new Path(
 
 	private static IProject[] EMPTY_LIST = new IProject[0];
 
 	private final SelfVisitor fSelfVisitor = new SelfVisitor();
 
+	/*
+	 * Bug 549839:In case auto-building on PDE compiler setting change is not
+	 * desired, specify VM property: {@code
+	 * -Dorg.eclipse.disableAutoBuildOnSettingsChange=true}
+	 */
+	private static final boolean DISABLE_AUTO_BUILDING_ON_SETTINGS_CHANGE = Boolean.getBoolean(
+
 	private final ClassChangeVisitor fClassFileVisitor = new ClassChangeVisitor();
 
 	class ClassChangeVisitor implements IResourceDeltaVisitor {
位置:  -97,6 +106,11   public class ManifestConsistencyChecker extends IncrementalProjectBuilder {
 
 		@Override
 		public boolean visit(IResourceDelta delta) throws CoreException {
+			if (delta != null &amp;&amp; delta.findMember(SETTINGS_PATH) != null) {
+				if (!DISABLE_AUTO_BUILDING_ON_SETTINGS_CHANGE) {
+					type |= MANIFEST | EXTENSIONS | BUILD | STRUCTURE;
+				}
+			}
 			if (delta != null &amp;&amp; type != (MANIFEST | EXTENSIONS | BUILD | STRUCTURE)) {
 				int kind = delta.getKind();
 				if (kind == IResourceDelta.ADDED || kind == IResourceDelta.REMOVED) {

---------------------------101---------------------------
需求名称: Removes unnecessary "final" in method of TracingComponentTreeViewer
创建时间: 2019-08-13	09:01:04
修改时间: 2019-08-13	13:56:05

原文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentTreeViewer.java 
新文件: ui/org.eclipse.ui.trace/src/org/eclipse/ui/trace/internal/TracingComponentTreeViewer.java
位置:  -44,7 +44,7   public class TracingComponentTreeViewer extends FilteredTree {
 	}
 
 	@Override
-	public void setEnabled(final boolean enabled) {
+	public void setEnabled(boolean enabled) {
 
 		filterComposite.setEnabled(enabled);
 		getViewer().getTree().setEnabled(enabled);

---------------------------102---------------------------
需求名称: 4.13 update for org.eclipse.ui.trace
创建时间: 2019-08-13	13:26:31
修改时间: 2019-08-13	13:27:51

原文件: ui/org.eclipse.ui.trace/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.ui.trace/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.ui.trace;singleton:=true
-Bundle-Version: 1.1.500.qualifier
+Bundle-Version: 1.1.600.qualifier
 Bundle-Activator: org.eclipse.ui.trace.internal.TracingUIActivator
 Bundle-Vendor: %providerName
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: ui/org.eclipse.ui.trace/pom.xml 
新文件: ui/org.eclipse.ui.trace/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.ui</groupId>
   <artifactId>org.eclipse.ui.trace</artifactId>
-  <version>1.1.500-SNAPSHOT</version>
+  <version>1.1.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

---------------------------103---------------------------
需求名称: Removes uncalled methods in PDELaunchingPlugin.java
创建时间: 2019-08-08	13:44:22
修改时间: 2019-08-13	12:00:04

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/PDELaunchingPlugin.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/PDELaunchingPlugin.java
位置:  -15,7 +15,6  
 package org.eclipse.pde.internal.launching;
 
 import java.lang.reflect.InvocationTargetException;
-import java.net.URL;
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.*;
 import org.eclipse.debug.core.DebugPlugin;
位置:  -60,9 +59,6   public class PDELaunchingPlugin extends Plugin implements IPDEConstants {
 		return fPreferenceManager;
 	}
 
-	public URL getInstallURL() {
-		return getDefault().getBundle().getEntry(
-	}
 
 	public static PDELaunchingPlugin getDefault() {
 		return fInstance;
位置:  -128,10 +124,6   public class PDELaunchingPlugin extends Plugin implements IPDEConstants {
 		}
 	}
 
-	public BundleContext getBundleContext() {
-		return fBundleContext;
-	}
-
 	@Override
 	public void stop(BundleContext context) throws Exception {
 		if (fLaunchListener != null)

---------------------------104---------------------------
需求名称: Bug 550008 - UI freezes in PluginsView
创建时间: 2019-08-13	08:18:15
修改时间: 2019-08-13	09:35:57

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java
位置:  -171,7 +171,8   public class PluginsView extends ViewPart implements IPluginModelListener {
 
 	@Override
 	public void createPartControl(Composite parent) {
-		fTreeViewer = new TreeViewer(parent, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL | SWT.VIRTUAL);
+		fTreeViewer = new TreeViewer(parent, SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL);
+		fTreeViewer.setUseHashlookup(true);
 		fDrillDownAdapter = new DrillDownAdapter(fTreeViewer);
 		fTreeViewer.setContentProvider(new PluginsContentProvider(this));
 		fTreeViewer.setLabelProvider(new PluginsLabelProvider());

---------------------------105---------------------------
需求名称: Bug 549838 - API Analysisbuilder does not build on
创建时间: 2019-08-07	07:01:17
修改时间: 2019-08-13	07:29:45

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/ApiAnalysisBuilder.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/ApiAnalysisBuilder.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -180,6 +180,12   public class ApiAnalysisBuilder extends IncrementalProjectBuilder {
 	private BuildState buildstate = null;
 
 	/**
+	 * Bug 549838:  In case auto-building on a API tools settings change  is not desired,
+	 * specify VM property: {@code -Dorg.eclipse.disableAutoBuildOnSettingsChange=true}
+	 */
+	private static final boolean DISABLE_AUTO_BUILDING_ON_SETTINGS_CHANGE = Boolean.getBoolean(
+
+	/**
 	 * Cleans up markers associated with API Tools on the given resource.
 	 *
 	 * @param resource
位置:  -535,6 +541,12   public class ApiAnalysisBuilder extends IncrementalProjectBuilder {
 					IFile file = (IFile) subdelta.getResource();
 					return file.getProject().equals(currentproject) &amp;&amp; compareBuildProperties(buildstate);
 				}
+				subdelta = delta.findMember(SETTINGS_PATH);
+				if (subdelta != null) {
+					if (!DISABLE_AUTO_BUILDING_ON_SETTINGS_CHANGE) {
+						return true;
+					}
+				}
 				break;
 			}
 			default: {

---------------------------106---------------------------
需求名称: Bug 550000 - PDE quickfix creates invalid @Since tag 
创建时间: 2019-08-13	06:48:23
修改时间: 2019-08-13	06:48:23

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java
位置:  -14,8 +14,11  
 package org.eclipse.pde.api.tools.ui.internal.markers;
 
 import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
+import org.eclipse.pde.api.tools.ui.internal.ApiUIPlugin;
+import org.osgi.framework.Version;
 
 public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
 
位置:  -26,7 +29,6   public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
 
 	}
 
-
 	@Override
 	public String getLabel() {
 		return NLS.bind(MarkerMessages.SinceTagResolution_add_since_tag_after_version_update, markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null));
位置:  -35,6 +37,15   public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
 	public void run(final IMarker marker) {
 		if (markerVersion != null) {
 			new VersionNumberingResolution(markerVersion).run(markerVersion);
+			String componentVersionString = markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null);
+			StringBuilder buffer = new StringBuilder();
+			Version componentVersion = new Version(componentVersionString);
+			buffer.append(componentVersion.getMajor()).append('.').append(componentVersion.getMinor());
+			try {
+				markerVersion.setAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, buffer.toString());
+			} catch (CoreException e) {
+				ApiUIPlugin.log(e);
+			}
 			this.newVersionValue = markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null);
 		}
 		super.run(marker);

---------------------------107---------------------------
需求名称: Remove commented code in TargetPlatformHelper
创建时间: 2019-08-08	13:06:12
修改时间: 2019-08-09	01:40:48

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/TargetPlatformHelper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/TargetPlatformHelper.java
位置:  -650,8 +650,6   public class TargetPlatformHelper {
 	 */
 	public static String getIniVMArgs() {
 		File installDirectory = new File(Platform.getInstallLocation().getURL().getFile());
-//		if (Platform.getOS().equals(Platform.OS_MACOSX))
-//			installDirectory = new File(installDirectory, 
 		File eclipseIniFile = new File(installDirectory, 
 		StringBuilder result = new StringBuilder();
 		if (eclipseIniFile.exists()) {

---------------------------108---------------------------
需求名称: Fixes typo in Javadoc in LauncherUtils.java
创建时间: 2019-08-08	11:54:20
修改时间: 2019-08-08	15:58:08

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java
位置:  -65,7 +65,7   public class LauncherUtils {
 	public static boolean clearWorkspace(ILaunchConfiguration configuration, String workspace, IProgressMonitor monitor) throws CoreException {
 
 		// If the workspace is not defined, there is no workspace to clear
-		// Unless the user has added the -data program arugment themselves,
+		// Unless the user has added the -data program argument themselves,
 		// the workspace chooser dialog will be brought up.
 		if (workspace == null || workspace.length() == 0) {
 			if (monitor != null) {

---------------------------109---------------------------
需求名称: Bug 549893 - Replace usage of PDELaunchingPlugin.getWorkspace() with
创建时间: 2019-08-08	12:11:34
修改时间: 2019-08-08	13:12:13

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/PDELaunchingPlugin.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/PDELaunchingPlugin.java
位置:  -16,7 +16,6   package org.eclipse.pde.internal.launching;
 
 import java.lang.reflect.InvocationTargetException;
 import java.net.URL;
-import org.eclipse.core.resources.IWorkspace;
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.*;
 import org.eclipse.debug.core.DebugPlugin;
位置:  -73,10 +72,6   public class PDELaunchingPlugin extends Plugin implements IPDEConstants {
 		return getDefault().getBundle().getSymbolicName();
 	}
 
-	public static IWorkspace getWorkspace() {
-		return ResourcesPlugin.getWorkspace();
-	}
-
 	public static void log(IStatus status) {
 		ResourcesPlugin.getPlugin().getLog().log(status);
 	}

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java
位置:  -341,7 +341,7   public class LauncherUtils {
 		try {
 			String projectID = configuration.getAttribute(IJavaLaunchConfigurationConstants.ATTR_PROJECT_NAME, 
 			if (projectID.length() > 0) {
-				IResource project = PDELaunchingPlugin.getWorkspace().getRoot().findMember(projectID);
+				IResource project = ResourcesPlugin.getWorkspace().getRoot().findMember(projectID);
 				if (project instanceof IProject) {
 					IPluginModelBase model = PluginRegistry.findModel((IProject) project);
 					if (model != null) {

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/sourcelookup/PDESourceLookupDirector.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/sourcelookup/PDESourceLookupDirector.java
位置:  -29,7 +29,6   import org.eclipse.jdt.launching.sourcelookup.containers.JavaSourceLookupPartici
 import org.eclipse.pde.core.IBundleClasspathResolver;
 import org.eclipse.pde.core.plugin.*;
 import org.eclipse.pde.internal.core.*;
-import org.eclipse.pde.internal.launching.PDELaunchingPlugin;
 import org.eclipse.pde.internal.launching.launcher.VMHelper;
 
 public class PDESourceLookupDirector extends AbstractSourceLookupDirector {
位置:  -175,7 +174,7   public class PDESourceLookupDirector extends AbstractSourceLookupDirector {
 	}
 
 	private ISourceContainer getArchiveSourceContainer(String location) throws JavaModelException {
-		IWorkspaceRoot root = PDELaunchingPlugin.getWorkspace().getRoot();
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
 		IFile[] containers = root.findFilesForLocationURI(URIUtil.toURI(location));
 		for (IFile container : containers) {
 			IJavaElement element = JavaCore.create(container);

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/PDESourcePathProvider.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/PDESourcePathProvider.java
位置:  -13,18 +13,14  
  *******************************************************************************/
 package org.eclipse.pde.launching;
 
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import org.eclipse.core.resources.IProject;
-import org.eclipse.core.resources.IResource;
+import java.util.*;
+import org.eclipse.core.resources.*;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.debug.core.ILaunchConfiguration;
 import org.eclipse.jdt.core.*;
 import org.eclipse.jdt.launching.*;
 import org.eclipse.pde.internal.core.util.PDEJavaHelper;
-import org.eclipse.pde.internal.launching.PDELaunchingPlugin;
 import org.eclipse.pde.internal.launching.launcher.LaunchPluginValidator;
 import org.eclipse.pde.internal.launching.launcher.VMHelper;
 
位置:  -71,7 +67,7   public class PDESourcePathProvider extends StandardSourcePathProvider {
 	 */
 	private IProject[] getJavaProjects(ILaunchConfiguration configuration) throws CoreException {
 		IProject[] projects = LaunchPluginValidator.getAffectedProjects(configuration, false);
-		return PDELaunchingPlugin.getWorkspace().computeProjectOrder(projects).projects;
+		return ResourcesPlugin.getWorkspace().computeProjectOrder(projects).projects;
 	}
 
 	@Override

---------------------------110---------------------------
需求名称: Bug 489181 - Reduce usage of AbstractUIPlugin.getWorkbench in PDE
创建时间: 2019-08-07	07:30:30
修改时间: 2019-08-07	07:30:30

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/ApiUIPlugin.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/ApiUIPlugin.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.api.tools.ui.internal;
 
位置:  -31,6 +32,7   import org.eclipse.pde.api.tools.internal.provisional.ISession;
 import org.eclipse.pde.api.tools.internal.provisional.ISessionListener;
 import org.eclipse.pde.api.tools.ui.internal.views.APIToolingView;
 import org.eclipse.swt.graphics.Image;
+import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.IViewPart;
 import org.eclipse.ui.IWorkbenchPage;
位置:  -240,7 +242,7   public class ApiUIPlugin extends AbstractUIPlugin {
 	private ISessionListener sessionListener = new ISessionListener() {
 		@Override
 		public void sessionAdded(ISession addedSession) {
-			getWorkbench().getDisplay().asyncExec(() -> showAPIToolingView());
+			Display.getDefault().asyncExec(() -> showAPIToolingView());
 		}
 
 		@Override
位置:  -324,7 +326,7   public class ApiUIPlugin extends AbstractUIPlugin {
 	}
 
 	private void showView(String id) {
-		IWorkbenchWindow window = getWorkbench().getActiveWorkbenchWindow();
+		IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 		if (window == null) {
 			return;
 		}

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/Activator.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/Activator.java
位置:  -11,7 +11,7  
  * Contributors:
  *     Code 9 Corporation - initial API and implementation
  *     Rafael Oliveira Nobrega <rafael.oliveira@gmail.com> - bug 242028
- *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 549441
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 549441, Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ds.ui;
 
位置:  -27,6 +27,7   import org.eclipse.jface.resource.ResourceLocator;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
 import org.osgi.framework.BundleContext;
 
位置:  -102,7 +103,7   public class Activator extends AbstractUIPlugin {
 	}
 
 	public static IWorkbenchWindow getActiveWorkbenchWindow() {
-		return getDefault().getWorkbench().getActiveWorkbenchWindow();
+		return PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 	}
 
 	public static void logException(Throwable e, final String title,

原文件: u
原文件: org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/u
原文件: ui/PDEUserAssistanceUIPlugin.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/PDEUserAssistanceUIPlugin.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2017  IBM Corporation and others.
+ * Copyright (c) 2008, 2019  IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  * Contributors:
  *     Chris Aniszczyk <zx@code9.com> - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ua.ui;
 
位置:  -24,6 +25,7   import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.IWorkbenchPage;
 import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
 import org.osgi.framework.BundleContext;
 
位置:  -76,7 +78,7   public class PDEUserAssistanceUIPlugin extends AbstractUIPlugin {
 	}
 
 	public static IWorkbenchWindow getActiveWorkbenchWindow() {
-		return getDefault().getWorkbench().getActiveWorkbenchWindow();
+		return PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 	}
 
 	public static void logException(Throwable e, final String title,

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/PDERuntimePlugin.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/PDERuntimePlugin.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- *  Copyright (c) 2000, 2017 IBM Corporation and others.
+ *  Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  *  This program and the accompanying materials
  *  are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  *  Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.runtime;
 
位置:  -18,8 +19,7   import org.eclipse.core.runtime.*;
 import org.eclipse.osgi.service.resolver.PlatformAdmin;
 import org.eclipse.osgi.service.resolver.State;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.IWorkbenchPage;
-import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.*;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.BundleContext;
位置:  -60,15 +60,23   public class PDERuntimePlugin extends AbstractUIPlugin {
 	}
 
 	public static IWorkbenchPage getActivePage() {
-		return getDefault().internalGetActivePage();
+		IWorkbenchWindow activeWindow = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
+		if (activeWindow != null) {
+			return activeWindow.getActivePage();
+		}
+		return null;
 	}
 
 	public static Shell getActiveWorkbenchShell() {
-		return getActiveWorkbenchWindow().getShell();
+		IWorkbenchWindow activeWindow = getActiveWorkbenchWindow();
+		if (activeWindow != null) {
+			return activeWindow.getShell();
+		}
+		return null;
 	}
 
 	public static IWorkbenchWindow getActiveWorkbenchWindow() {
-		return getDefault().getWorkbench().getActiveWorkbenchWindow();
+		return PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 	}
 
 	public PackageAdmin getPackageAdmin() {
位置:  -93,10 +101,6   public class PDERuntimePlugin extends AbstractUIPlugin {
 		return getDefault().getBundle().getSymbolicName();
 	}
 
-	private IWorkbenchPage internalGetActivePage() {
-		return getWorkbench().getActiveWorkbenchWindow().getActivePage();
-	}
-
 	@Override
 	public void start(BundleContext context) throws Exception {
 		super.start(context);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEPlugin.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEPlugin.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2000, 2015 IBM Corporation and others.
+ * Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ui;
 
位置:  -28,8 +29,7   import org.eclipse.pde.internal.ui.shared.target.TargetStatus;
 import org.eclipse.pde.internal.ui.util.SWTUtil;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.IWorkbenchPage;
-import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.*;
 import org.eclipse.ui.editors.text.TextFileDocumentProvider;
 import org.eclipse.ui.forms.FormColors;
 import org.eclipse.ui.internal.views.log.ILogFileProvider;
位置:  -99,7 +99,7   public class PDEPlugin extends AbstractUIPlugin implements IPDEUIConstants {
 	 *         no active workbench window or if called from a non-UI thread
 	 */
 	public static IWorkbenchWindow getActiveWorkbenchWindow() {
-		return getDefault().getWorkbench().getActiveWorkbenchWindow();
+		return PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 	}
 
 	public static PDEPlugin getDefault() {
位置:  -124,7 +124,7   public class PDEPlugin extends AbstractUIPlugin implements IPDEUIConstants {
 	 * @return The active workbench page or <code>null</code> if the workbench is shutting down
 	 */
 	private IWorkbenchPage internalGetActivePage() {
-		IWorkbenchWindow workbenchWin = getWorkbench().getActiveWorkbenchWindow();
+		IWorkbenchWindow workbenchWin = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
 		return workbenchWin != null ? workbenchWin.getActivePage() : null;
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java
位置:  -13,6 +13,7  
  *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
  *     EclipseSource - initial API and implementation, ongoing enhancements
  *     IBM Corporation - ongoing enhancements
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.launcher;
 
位置:  -31,14 +32,13   import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.internal.launching.PDELaunchingPlugin;
 import org.eclipse.pde.internal.launching.PDEMessages;
 import org.eclipse.pde.internal.launching.launcher.LauncherUtils;
-import org.eclipse.pde.internal.ui.PDEPlugin;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.wizards.tools.OrganizeManifestsProcessor;
 import org.eclipse.pde.launching.IPDELauncherConstants;
 import org.eclipse.pde.ui.launcher.MainTab;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.*;
 
 public class LauncherUtilsStatusHandler implements IStatusHandler {
 
位置:  -137,13 +137,16   public class LauncherUtilsStatusHandler implements IStatusHandler {
 	}
 
 	public final static Shell getActiveShell() {
-		IWorkbenchWindow window = PDEPlugin.getDefault().getWorkbench().getActiveWorkbenchWindow();
+		IWorkbench workbench = PlatformUI.getWorkbench();
+		IWorkbenchWindow window = workbench.getActiveWorkbenchWindow();
 		if (window == null) {
-			IWorkbenchWindow[] windows = PDEPlugin.getDefault().getWorkbench().getWorkbenchWindows();
-			if (windows.length > 0)
+			IWorkbenchWindow[] windows = workbench.getWorkbenchWindows();
+			if (windows.length > 0) {
 				return windows[0].getShell();
-		} else
+			}
+		} else {
 			return window.getShell();
+		}
 		return getDisplay().getActiveShell();
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewProjectCreationOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewProjectCreationOperation.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2000, 2017 IBM Corporation and others.
+ * Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -14,6 +14,7  
  *     Gary Duprex <Gary.Duprex@aspectstools.com> - bug 179213
  *     Benjamin Cabe <benjamin.cabe@anyware-tech.com> - bug 247553
  *     Johannes Ahlers <Johannes.Ahlers@gmx.de> - bug 477677
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 489181
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.wizards.plugin;
 
位置:  -41,6 +42,7   import org.eclipse.pde.internal.ui.PDEPlugin;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.pde.internal.ui.wizards.IProjectProvider;
 import org.eclipse.pde.ui.*;
+import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.*;
 import org.eclipse.ui.actions.WorkspaceModifyOperation;
 import org.eclipse.ui.ide.IDE;
位置:  -460,11 +462,12   public class NewProjectCreationOperation extends WorkspaceModifyOperation {
 	 * @param file file to open the editor on
 	 */
 	private void openFile(final IFile file) {
-		PDEPlugin.getDefault().getWorkbench().getDisplay().asyncExec(() -> {
+		Display.getDefault().asyncExec(() -> {
 			final IWorkbenchWindow ww = PDEPlugin.getActiveWorkbenchWindow();
 			final IWorkbenchPage page = ww.getActivePage();
-			if (page == null)
+			if (page == null) {
 				return;
+			}
 			IWorkbenchPart focusPart = page.getActivePart();
 			if (focusPart instanceof ISetSelectionTarget) {
 				ISelection selection = new StructuredSelection(file);

---------------------------111---------------------------
需求名称: Bug 549630 - Removing API Use Scan location triggers full build
创建时间: 2019-07-29	08:06:22
修改时间: 2019-08-02	13:46:17

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiUseScanPreferencePage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiUseScanPreferencePage.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2010, 2018 IBM Corporation and others.
+ * Copyright (c) 2010, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -20,6 +20,8   import java.util.HashSet;
 import java.util.Iterator;
 
 import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.preferences.IEclipsePreferences;
 import org.eclipse.core.runtime.preferences.InstanceScope;
 import org.eclipse.jface.dialogs.Dialog;
位置:  -34,6 +36,7   import org.eclipse.jface.viewers.StructuredSelection;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.api.tools.internal.IApiCoreConstants;
 import org.eclipse.pde.api.tools.internal.provisional.ApiPlugin;
+import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
 import org.eclipse.pde.api.tools.internal.search.UseScanManager;
 import org.eclipse.pde.api.tools.internal.util.Util;
 import org.eclipse.pde.api.tools.ui.internal.ApiUIPlugin;
位置:  -358,7 +361,9   public class ApiUseScanPreferencePage extends PreferencePage implements IWorkben
 			locations.append(UseScanManager.LOCATION_DELIM);
 		}
 
-		if (hasLocationsChanges(locations.toString())) {
+		Object[] newCheckedLocations = fTableViewer.getCheckedElements();
+		boolean hasLocationChanges = hasLocationsChanges(locations.toString());
+		if (hasLocationChanges &amp;&amp; newCheckedLocations.length != 0) {
 			IProject[] projects = Util.getApiProjects();
 			// If there are API projects in the workspace, ask the user if they
 			// should be cleaned and built to run the new tooling
位置:  -368,6 +373,9   public class ApiUseScanPreferencePage extends PreferencePage implements IWorkben
 				}
 			}
 		}
+		if (hasLocationChanges &amp;&amp; newCheckedLocations.length == 0) {
+			findAndDeleteAPIUseScanMarkers();
+		}
 
 		setStoredValue(IApiCoreConstants.API_USE_SCAN_LOCATION, locations.toString());
 
位置:  -378,6 +386,22   public class ApiUseScanPreferencePage extends PreferencePage implements IWorkben
 		}
 	}
 
+	private void findAndDeleteAPIUseScanMarkers() {
+		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return;
+		}
+		for (IProject iProject : apiProjects) {
+			try {
+				iProject.deleteMarkers(IApiMarkerConstants.API_USESCAN_PROBLEM_MARKER, false,
+						IResource.DEPTH_INFINITE);
+			} catch (CoreException e) {
+			}
+
+		}
+		return;
+	}
+
 	/**
 	 * Detects changes to the use scan locations
 	 *

---------------------------112---------------------------
需求名称: Bug 535531: create TP based on empty target
创建时间: 2019-08-01	03:58:38
修改时间: 2019-08-01	04:29:49

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java
位置:  -45,7 +45,7   public class TargetPlatformUtil {
 	}
 
 	private static ITargetDefinition createTarget(ITargetPlatformService tps) throws CoreException {
-		ITargetDefinition targetDefinition = tps.newDefaultTarget();
+		ITargetDefinition targetDefinition = tps.newTarget();
 		targetDefinition.setName(TARGET_NAME);
 
 		Bundle[] installedBundles = FrameworkUtil.getBundle(TargetPlatformUtil.class).getBundleContext().getBundles();

---------------------------113---------------------------
需求名称: Bug 549706 - about.html is missing from
创建时间: 2019-08-01	04:11:57
修改时间: 2019-08-01	04:12:28

原文件: ui/org.eclipse.pde.junit.runtime.tests/about.html 
新文件: ui/org.eclipse.pde.junit.runtime.tests/about.html
位置:  -0,0 +1,36  
+<!DOCTYPE html PUBLIC 
+    
+<html xmlns=
+<head>
+<meta http-equiv=
+<title>About</title>
+</head>
+<body lang=
+	<h2>About This Content</h2>
+
+	<p>November 30, 2017</p>
+	<h3>License</h3>
+
+	<p>
+		The Eclipse Foundation makes available all content in this plug-in
+		(&amp;quot;Content&amp;quot;). Unless otherwise indicated below, the Content
+		is provided to you under the terms and conditions of the Eclipse
+		Public License Version 2.0 (&amp;quot;EPL&amp;quot;). A copy of the EPL is
+		available at <a href=
+		For purposes of the EPL, &amp;quot;Program&amp;quot; will mean the Content.
+	</p>
+
+	<p>
+		If you did not receive this Content directly from the Eclipse
+		Foundation, the Content is being redistributed by another party
+		(&amp;quot;Redistributor&amp;quot;) and different terms and conditions may
+		apply to your use of any object code in the Content. Check the
+		Redistributor's license that was provided with the Content. If no such
+		license exists, contact the Redistributor. Unless otherwise indicated
+		below, the terms and conditions of the EPL still apply to any source
+		code in the Content and such source code may be obtained at <a
+			href=
+	</p>
+
+</body>
+</html>
\ No newline at end of file

原文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties
位置:  -3,4 +3,5   output.. = bin/
 bin.includes = META-INF/,\
                .,\
                test-bundles/,\
+               about.html,\
                test.xml

---------------------------114---------------------------
需求名称: Bug 535531 - log command line of test process
创建时间: 2019-07-31	12:52:41
修改时间: 2019-07-31	12:52:41

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java
位置:  -44,6 +44,7   import org.eclipse.debug.core.ILaunchConfiguration;
 import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
 import org.eclipse.debug.core.ILaunchManager;
 import org.eclipse.debug.core.ILaunchesListener2;
+import org.eclipse.debug.core.model.IProcess;
 import org.eclipse.debug.ui.DebugUITools;
 import org.eclipse.jdt.core.IJavaElement;
 import org.eclipse.jdt.junit.JUnitCore;
位置:  -158,13 +159,15   class TestExecutionUtil {
 	}
 
 	private static void checkExitValueAndDumpLog(ILaunch launch) throws DebugException, CoreException {
-		int exitValue = launch.getProcesses()[0].getExitValue();
+		IProcess process = launch.getProcesses()[0];
+		int exitValue = process.getExitValue();
 		String logFile = readLogFile(launch.getLaunchConfiguration());
 		if (exitValue == 13) {
 			fail(
 		} else {
-			System.out.println(MessageFormat.format(
-					exitValue, logFile));
+			System.out.println(MessageFormat.format(
+					
+					process.getAttribute(IProcess.ATTR_CMDLINE), logFile));
 		}
 	}
 

---------------------------115---------------------------
需求名称: Bug 535531: log stdout/stderr of test process
创建时间: 2019-07-30	03:56:49
修改时间: 2019-07-30	03:56:49

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java
位置:  -127,6 +127,13   class TestExecutionUtil {
 		ILaunch launch = DebugUITools.buildAndLaunch(launchConfiguration, ILaunchManager.RUN_MODE,
 				new NullProgressMonitor());
 
+		launch.getProcesses()[0].getStreamsProxy().getOutputStreamMonitor().addListener((text, m) -> {
+			System.out.println(
+		});
+		launch.getProcesses()[0].getStreamsProxy().getErrorStreamMonitor().addListener((text, m) -> {
+			System.err.println(
+		});
+
 		try {
 			while (true) {
 				ILaunch terminatedLaunch = terminatedLaunches.poll(5, TimeUnit.MINUTES);
位置:  -163,8 +170,8   class TestExecutionUtil {
 
 	private static String readLogFile(ILaunchConfiguration launchConfiguration) throws CoreException {
 		File logFile = LaunchListener.getMostRecentLogFile(launchConfiguration);
-		if(logFile == null) {
-			return 
+		if (logFile == null) {
+			return 
 		}
 		try {
 			return String.join(

---------------------------116---------------------------
需求名称: Bug 549649 - Y build fails for version constraint for plugin
创建时间: 2019-07-30	01:30:19
修改时间: 2019-07-30	01:30:19

原文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF
位置:  -15,6 +15,6   Require-Bundle: org.junit,
  org.eclipse.core.resources;bundle-version=
  org.eclipse.pde.ui;bundle-version=
  org.eclipse.jdt.junit;bundle-version=
- org.eclipse.jdt.core;bundle-version=
  org.eclipse.debug.ui;bundle-version=
- org.eclipse.ui;bundle-version=
+ org.eclipse.ui;bundle-version=
+ org.eclipse.jdt.core;bundle-version=

---------------------------117---------------------------
需求名称: Merge commit '9a8779f66cee7781bd33a72cfe1023d2b5f0910e' into BETA_JAVA13
创建时间: 2019-07-30	00:13:29
修改时间: 2019-07-30	00:13:29

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentcdcfoundation10
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.cdcfoundation10
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentcdcfoundation11
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.cdcfoundation11
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se12
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se12
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se13
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se13
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se14
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se14
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se15
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se15
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase16/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase16/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase16/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase16/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase16
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase16
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase17/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase17/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase17/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase17/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase17
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase17
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase18/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase18/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase18/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase18/META-INF/MANIFEST.MF
位置:  -8,5 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase18
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase18
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/META-INF/MANIFEST.MF
位置:  -6,4 +6,3   Bundle-Version: 1.0.200.qualifier
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase9
 Bundle-Vendor: %Bundle-Vendor
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.jre11/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.jre11/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.jre11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.jre11/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjre11
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.jre11
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum10
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.osgiminimum10
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum11
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.osgiminimum11
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum12
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.osgiminimum12
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.tests/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.api.tools.tests
-Bundle-Version: 1.1.500.qualifier
+Bundle-Version: 1.1.600.qualifier
 Bundle-Vendor: %Bundle-Vendor
 Require-Bundle: org.eclipse.core.runtime,
  org.junit,

原文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml
位置:  -1,6 +1,6  
 <?xml version=
 <!--
-  Copyright (c) 2012, 2017 Eclipse Foundation and others.
+  Copyright (c) 2012, 2019 Eclipse Foundation and others.
   All rights reserved. This program and the accompanying materials
   are made available under the terms of the Eclipse Distribution License v1.0
   which accompanies this distribution, and is available at
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools.tests</artifactId>
-  <version>1.1.500-SNAPSHOT</version>
+  <version>1.1.600-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 
 	<build>

原文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/ClassCompatibilityRestrictionTests.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/ClassCompatibilityRestrictionTests.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -83,7 +83,7   public class ClassCompatibilityRestrictionTests extends ClassCompatibilityTests
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}
位置:  -106,7 +106,7   public class ClassCompatibilityRestrictionTests extends ClassCompatibilityTests
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}

原文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/InterfaceCompatibilityRestrictionTests.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/InterfaceCompatibilityRestrictionTests.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -106,7 +106,7   public class InterfaceCompatibilityRestrictionTests extends InterfaceCompatibili
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}
位置:  -158,7 +158,7   public class InterfaceCompatibilityRestrictionTests extends InterfaceCompatibili
 			};
 			setExpectedProblemIds(ids);
 			String[][] args = new String[1][];
-			args[0] = new String[]{PACKAGE_PREFIX + 
+			args[0] = new String[] { 
 			setExpectedMessageArgs(args);
 			performCompatibilityTest(filePath, inc);
 		}
位置:  -189,7 +189,7   public class InterfaceCompatibilityRestrictionTests extends InterfaceCompatibili
 			};
 			setExpectedProblemIds(ids);
 			String[][] args = new String[1][];
-			args[0] = new String[]{PACKAGE_PREFIX + 
+			args[0] = new String[] { 
 			setExpectedMessageArgs(args);
 			performCompatibilityTest(filePath, inc);
 		}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/actions/ExportSessionAction.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/actions/ExportSessionAction.java
位置:  -22,7 +22,6   import java.io.InputStream;
 import javax.xml.transform.Result;
 import javax.xml.transform.Source;
 import javax.xml.transform.Transformer;
-import javax.xml.transform.TransformerConfigurationException;
 import javax.xml.transform.TransformerException;
 import javax.xml.transform.TransformerFactory;
 import javax.xml.transform.stream.StreamResult;
位置:  -126,9 +125,7   public class ExportSessionAction extends Action {
 							writer.flush();
 							progress.worked(25);
 						}
-					} catch (IOException e) {
-						ApiPlugin.log(e);
-					} catch (CoreException e) {
+					} catch (IOException | CoreException e) {
 						ApiPlugin.log(e);
 					} finally {
 						if (writer != null) {
位置:  -161,11 +158,7   public class ExportSessionAction extends Action {
 							TransformerFactory transFact = TransformerFactory.newInstance();
 							Transformer trans = transFact.newTransformer(xsltSource);
 							trans.transform(xmlSource, result);
-						} catch (TransformerConfigurationException e) {
-							ApiUIPlugin.log(e);
-						} catch (TransformerException e) {
-							ApiUIPlugin.log(e);
-						} catch (IOException e) {
+						} catch (TransformerException | IOException e) {
 							ApiUIPlugin.log(e);
 						} finally {
 							if (writer != null) {

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiMarkerResolutionGenerator.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiMarkerResolutionGenerator.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -16,6 +16,8   package org.eclipse.pde.api.tools.ui.internal.markers;
 import org.eclipse.core.resources.IMarker;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.Path;
位置:  -81,11 +83,21   public class ApiMarkerResolutionGenerator implements IMarkerResolutionGenerator2
 					new ConfigureProblemSeverityForAPIToolsResolution(marker) };
 			}
 			case IApiMarkerConstants.SINCE_TAG_MARKER_ID: {
-				return new IMarkerResolution[] {
+				IMarker markerVersion = getVersionProblems(marker);
+				IMarkerResolution[] res = (markerVersion != null) ?
+				new IMarkerResolution[] {
 					new ConfigureProblemSeverityForAPIToolsResolution(marker),
-						new SinceTagResolution(marker),
-						new FilterProblemResolution(marker),
-						new FilterProblemWithCommentResolution(marker) };
+					new SinceTagAfterVersionUpdateResolution(markerVersion, marker),
+					new SinceTagResolution(marker),
+					new FilterProblemResolution(marker),
+					new FilterProblemWithCommentResolution(marker) }:
+				new IMarkerResolution[] {
+					new ConfigureProblemSeverityForAPIToolsResolution(marker),
+					new SinceTagResolution(marker),
+					new FilterProblemResolution(marker),
+					new FilterProblemWithCommentResolution(marker)
+				};
+				return res;
 			}
 			case IApiMarkerConstants.VERSION_NUMBERING_MARKER_ID: {
 			return new IMarkerResolution[] {
位置:  -177,4 +189,33   public class ApiMarkerResolutionGenerator implements IMarkerResolutionGenerator2
 		return false;
 
 	}
+
+	private IMarker getVersionProblems(IMarker marker) {
+		IProject project = null;
+		IProject project2 = null;
+		IResource resource = marker.getResource();
+		if (resource != null) {
+			project = resource.getProject();
+		}
+		IMarker markerVersion = null;
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
+		try {
+			IMarker[] findMarkers = root.findMarkers(IApiMarkerConstants.VERSION_NUMBERING_PROBLEM_MARKER, false,
+					IResource.DEPTH_INFINITE);
+			for (IMarker iMarker : findMarkers) {
+				IResource resource2 = iMarker.getResource();
+				if (resource2 != null) {
+					project2 = resource2.getProject();
+					if(project !=null &amp;&amp; project2 !=null) {
+						if(project.equals(project2)) {
+							markerVersion = iMarker;
+							break;
+						}
+					}
+				}
+			}
+		} catch (CoreException e) {
+		}
+		return markerVersion;
+	}
 }

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiQuickFixProcessor.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiQuickFixProcessor.java
位置:  -251,9 +251,7   public class ApiQuickFixProcessor implements IQuickFixProcessor {
 						return false;
 					}
 				}
-			} catch (CoreException ce) {
-				ApiUIPlugin.log(ce);
-			} catch (IOException e) {
+			} catch (CoreException | IOException e) {
 				ApiUIPlugin.log(e);
 			} finally {
 				if (stream != null) {

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/InstallEEDescriptionProblemResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/InstallEEDescriptionProblemResolution.java
位置:  -60,13 +60,7   public class InstallEEDescriptionProblemResolution implements IMarkerResolution2
 					IHandlerService handlerService = PlatformUI.getWorkbench().getService(IHandlerService.class);
 					try {
 						handlerService.executeCommand(ApiErrorsWarningsConfigurationBlock.P2_INSTALL_COMMAND_HANDLER, null);
-					} catch (ExecutionException ex) {
-						ApiErrorsWarningsConfigurationBlock.handleCommandException();
-					} catch (NotDefinedException ex) {
-						ApiErrorsWarningsConfigurationBlock.handleCommandException();
-					} catch (NotEnabledException ex) {
-						ApiErrorsWarningsConfigurationBlock.handleCommandException();
-					} catch (NotHandledException ex) {
+					} catch (ExecutionException | NotDefinedException | NotEnabledException | NotHandledException ex) {
 						ApiErrorsWarningsConfigurationBlock.handleCommandException();
 					}
 				}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/MarkerMessages.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/MarkerMessages.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -66,6 +66,7   public class MarkerMessages extends NLS {
 	public static String RemoveUnsupportedTagOperation_removeing_unsupported_tag;
 
 	public static String SinceTagResolution_add_since_tag;
+	public static String SinceTagResolution_add_since_tag_after_version_update;
 
 
 	public static String SinceTagResolution_change_since_tag;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/RemoveUnsupportedAnnotationOperation.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/RemoveUnsupportedAnnotationOperation.java
位置:  -43,7 +43,6   import org.eclipse.jdt.core.dom.rewrite.ASTRewrite;
 import org.eclipse.jdt.ui.JavaUI;
 import org.eclipse.text.edits.TextEdit;
 import org.eclipse.text.edits.TextEditGroup;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.progress.UIJob;
 
 /**
位置:  -164,8 +163,6   public class RemoveUnsupportedAnnotationOperation extends UIJob {
 						localMonitor.split(1);
 					}
 				}
-			} catch (JavaModelException jme) {
-			} catch (PartInitException e) {
 			} catch (CoreException e) {
 			}
 		}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/RemoveUnsupportedTagOperation.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/RemoveUnsupportedTagOperation.java
位置:  -42,7 +42,6   import org.eclipse.jdt.core.dom.rewrite.ListRewrite;
 import org.eclipse.jdt.ui.JavaUI;
 import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
 import org.eclipse.text.edits.TextEdit;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.progress.UIJob;
 
 /**
位置:  -135,8 +134,6   public class RemoveUnsupportedTagOperation extends UIJob {
 						localMonitor.split(1);
 					}
 				}
-			} catch (JavaModelException jme) {
-			} catch (PartInitException e) {
 			} catch (CoreException e) {
 			}
 		}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java
位置:  -0,0 +1,49  
+/*******************************************************************************
+ * Copyright (c) 2019 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.api.tools.ui.internal.markers;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
+
+public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
+
+	IMarker markerVersion = null;
+	public SinceTagAfterVersionUpdateResolution(IMarker markerVer ,IMarker marker) {
+		super(marker);
+		markerVersion = markerVer;
+
+	}
+
+
+	@Override
+	public String getLabel() {
+		return NLS.bind(MarkerMessages.SinceTagResolution_add_since_tag_after_version_update, markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null));
+	}
+	@Override
+	public void run(final IMarker marker) {
+		if (markerVersion != null) {
+			new VersionNumberingResolution(markerVersion).run(markerVersion);
+			this.newVersionValue = markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null);
+		}
+		super.run(marker);
+	}
+
+	@Override
+	public String getDescription() {
+		return NLS.bind(MarkerMessages.SinceTagResolution_add_since_tag_after_version_update,
+				markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null));
+	}
+
+}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/markermessages.properties 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/markermessages.properties
位置:  -57,6 +57,7   RemoveFilterProblemResolution_removes_selected_problem_filter=Removes the unused
 RemoveUnsupportedAnnotationOperation_remove_unsupported_annotations=Remove unsupported annotations
 RemoveUnsupportedTagOperation_removeing_unsupported_tag=Removing Unsupported API Javadoc tag
 SinceTagResolution_add_since_tag=Add the missing @since tag with version {0}
+SinceTagResolution_add_since_tag_after_version_update=Add the missing @since tag after updating version to {0}
 SinceTagResolution_change_since_tag=Change @since tag value to be {0}
 UnknownAnnotationResolution_0=Corrects missing imports and adds a build-time reference to API Tools annotations on the build path so that they are visible at compile time, but avoids a bundle dependency on 'org.eclipse.pde.api.tools.annotations' at run time.<br><br>Adds this entry to 'build.properties':<br><code>additional.bundles = org.eclipse.pde.api.tools.annotations</code>
 UnknownAnnotationResolution_1=Fix project setup and import {0} ({1})

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinePreferencePage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinePreferencePage.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -20,6 +20,8   import java.util.HashSet;
 import java.util.Map;
 
 import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.dialogs.IDialogConstants;
 import org.eclipse.jface.dialogs.MessageDialog;
位置:  -34,6 +36,7   import org.eclipse.jface.window.Window;
 import org.eclipse.jface.wizard.WizardDialog;
 import org.eclipse.pde.api.tools.internal.provisional.ApiPlugin;
 import org.eclipse.pde.api.tools.internal.provisional.IApiBaselineManager;
+import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
 import org.eclipse.pde.api.tools.internal.provisional.model.IApiBaseline;
 import org.eclipse.pde.api.tools.internal.util.Util;
 import org.eclipse.pde.api.tools.ui.internal.ApiToolsLabelProvider;
位置:  -326,6 +329,18   public class ApiBaselinePreferencePage extends PreferencePage implements IWorkbe
 			manager.addApiBaseline(iApiBaseline);
 		}
 		manager.setDefaultApiBaseline(newdefault);
+		if (defaultchanged &amp;&amp; newdefault == null &amp;&amp; origdefault != null) {
+			findAndDeleteCompatibilityMarkers();
+			Object[] checkedElements = tableviewer.getCheckedElements();
+			this.block.setHasBaseline(checkedElements.length != 0);
+			this.block.createMissingBaselineMarker();
+			origdefault = newdefault;
+			dirty = false;
+			defaultcontentchanged = false;
+			defaultchanged = false;
+			removed.clear();
+			return;
+		}
 		if (defaultchanged || defaultcontentchanged) {
 			if (rebuildcount < 1) {
 				rebuildcount++;
位置:  -350,8 +365,53   public class ApiBaselinePreferencePage extends PreferencePage implements IWorkbe
 		removed.clear();
 	}
 
+	private void findAndDeleteCompatibilityMarkers() {
+		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return;
+		}
+		for (IProject iProject : apiProjects) {
+			cleanupCompatibilityMarkers(iProject);
+			try {
+				iProject.deleteMarkers(IApiMarkerConstants.UNUSED_FILTER_PROBLEM_MARKER, false,
+						IResource.DEPTH_INFINITE);
+			} catch (CoreException e) {
+			}
+
+		}
+		return;
+	}
+
+	/**
+	 * Cleans up only API compatibility markers on the given {@link IResource}
+	 *
+	 * @param resource
+	 *            the given resource
+	 */
+	void cleanupCompatibilityMarkers(IResource resource) {
+		try {
+			if (resource != null &amp;&amp; resource.isAccessible()) {
+				resource.deleteMarkers(IApiMarkerConstants.COMPATIBILITY_PROBLEM_MARKER, false,
+						IResource.DEPTH_INFINITE);
+				resource.deleteMarkers(IApiMarkerConstants.SINCE_TAGS_PROBLEM_MARKER, false, IResource.DEPTH_INFINITE);
+				if (resource.getType() == IResource.PROJECT) {
+					// on full builds
+					resource.deleteMarkers(IApiMarkerConstants.VERSION_NUMBERING_PROBLEM_MARKER, false,
+							IResource.DEPTH_INFINITE);
+					resource.deleteMarkers(IApiMarkerConstants.DEFAULT_API_BASELINE_PROBLEM_MARKER, true,
+							IResource.DEPTH_ZERO);
+					resource.deleteMarkers(IApiMarkerConstants.API_COMPONENT_RESOLUTION_PROBLEM_MARKER, true,
+							IResource.DEPTH_ZERO);
+				}
+			}
+		} catch (CoreException e) {
+			ApiPlugin.log(e.getStatus());
+		}
+	}
 	@Override
 	public boolean performOk() {
+		Object[] checkedElements = tableviewer.getCheckedElements();
+		this.block.setHasBaseline(checkedElements.length != 0);
 		this.block.performOK();
 		applyChanges();
 		return true;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinesConfigurationBlock.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinesConfigurationBlock.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -16,7 +16,12   package org.eclipse.pde.api.tools.ui.internal.preferences;
 import java.util.ArrayList;
 import java.util.List;
 
+import org.eclipse.core.resources.IMarker;
 import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.preferences.DefaultScope;
 import org.eclipse.core.runtime.preferences.IEclipsePreferences;
 import org.eclipse.core.runtime.preferences.IScopeContext;
位置:  -25,6 +30,7   import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.dialogs.MessageDialog;
 import org.eclipse.jface.window.Window;
 import org.eclipse.pde.api.tools.internal.provisional.ApiPlugin;
+import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
 import org.eclipse.pde.api.tools.internal.provisional.problems.IApiProblemTypes;
 import org.eclipse.pde.api.tools.internal.util.Util;
 import org.eclipse.pde.api.tools.ui.internal.ApiUIPlugin;
位置:  -275,6 +281,7   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 	 */
 	private Composite fParent = null;
 
+	private boolean hasBaseline = true;
 	/**
 	 * Constructor
 	 *
位置:  -327,6 +334,48   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 			try {
 				ArrayList<Key> changes = new ArrayList<>();
 				collectChanges(fLookupOrder[0], changes);
+				if (changes.size() == 1) {
+					// Note that there is only 1 key in ApiBaselineConfigBlock
+					Key k = changes.get(0);
+
+					String original = k.getStoredValue(fLookupOrder[0], null);
+					if (original == null) {
+						// this means default value - always error
+						original = ApiPlugin.VALUE_ERROR;
+					}
+					String newval = k.getStoredValue(fLookupOrder[0], fManager);
+					if (newval.equals(ApiPlugin.VALUE_IGNORE)) {
+						// just check for any missing baseline and delete it
+						deleteMissingBaselineMarker();
+
+					} else if (newval.equals(ApiPlugin.VALUE_WARNING)) {
+						// if error to warning - change attribute
+						if (original.equals(ApiPlugin.VALUE_ERROR)) {
+							updateMissingBaselineMarkerSeverity(IMarker.SEVERITY_WARNING);
+						}
+						// if ignore to warning - calculate
+						if (original.equals(ApiPlugin.VALUE_IGNORE)) {
+							if (hasBaseline == false) {
+								createMissingBaselineMarker(IMarker.SEVERITY_WARNING);
+							}
+						}
+
+					} else if (newval.equals(ApiPlugin.VALUE_ERROR)) {
+						// if warning to error - change attribute
+						if (original.equals(ApiPlugin.VALUE_WARNING)) {
+							updateMissingBaselineMarkerSeverity(IMarker.SEVERITY_ERROR);
+						}
+						// if ignore to warning - calculate
+						if (original.equals(ApiPlugin.VALUE_IGNORE)) {
+							if (hasBaseline == false) {
+								createMissingBaselineMarker(IMarker.SEVERITY_ERROR);
+							}
+						}
+					}
+					fDirty = false;
+					return;
+				}
+				// code below probably redundant now
 				if (changes.size() > 0) {
 					if (ApiBaselinePreferencePage.rebuildcount < 1) {
 						ApiBaselinePreferencePage.rebuildcount++;
位置:  -352,6 +401,106   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 		}
 	}
 
+	private void updateMissingBaselineMarkerSeverity(int severity) {
+		ArrayList<IMarker> marker = findMissingBaselineMarker();
+
+		for (IMarker iMarker : marker) {
+			try {
+				iMarker.setAttribute(IMarker.SEVERITY, severity);
+			} catch (CoreException e) {
+				ApiPlugin.log(e);
+			}
+		}
+	}
+
+	private void deleteMissingBaselineMarker() {
+		ArrayList<IMarker> marker = findMissingBaselineMarker();
+		for (IMarker iMarker : marker) {
+			try {
+				iMarker.delete();
+			} catch (CoreException e) {
+				ApiPlugin.log(e);
+			}
+		}
+	}
+
+	public void createMissingBaselineMarker() {
+		if (hasBaseline) {
+			return;
+		}
+		String newval = fgAllKeys[0].getStoredValue(fLookupOrder[0], fManager);
+		if (newval == null) {
+			newval = ApiPlugin.VALUE_ERROR;
+		}
+		int valueWarning = -1;
+		if (newval.equals(ApiPlugin.VALUE_WARNING)) {
+			valueWarning = IMarker.SEVERITY_WARNING;
+		}
+		if (newval.equals(ApiPlugin.VALUE_ERROR)) {
+			valueWarning = IMarker.SEVERITY_ERROR;
+		}
+		if(valueWarning < 0) {
+			return;
+		}
+		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return;
+		}
+		for (IProject iProject : apiProjects) {
+			createMissingBaselineMarkerOnProject(iProject, valueWarning);
+		}
+	}
+	private void createMissingBaselineMarker(int valueWarning) {
+		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return;
+		}
+		for (IProject iProject : apiProjects) {
+			createMissingBaselineMarkerOnProject(iProject, valueWarning);
+		}
+	}
+
+	private void createMissingBaselineMarkerOnProject(IResource res, int valueWarning) {
+		try {
+			IMarker createMarker = res.createMarker(IApiMarkerConstants.DEFAULT_API_BASELINE_PROBLEM_MARKER);
+			createMarker.setAttribute(IMarker.MESSAGE, PreferenceMessages.ApiBaselinesConfigurationBlock_0);
+			createMarker.setAttribute(IMarker.SEVERITY, valueWarning);
+		} catch (CoreException e) {
+			ApiPlugin.log(e);
+		}
+	}
+
+	private ArrayList<IMarker> findMissingBaselineMarker() {
+		ArrayList<IMarker> markList = new ArrayList<>();
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
+		try {
+			IMarker[] findMarkers = root.findMarkers(IApiMarkerConstants.DEFAULT_API_BASELINE_PROBLEM_MARKER, false,
+					IResource.DEPTH_ZERO);
+			for (IMarker iMarker : findMarkers) {
+				markList.add(iMarker);
+			}
+		} catch (CoreException e) {
+			ApiPlugin.log(e);
+		}
+		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return markList;
+		}
+		for (IProject iProject : apiProjects) {
+			IMarker[] findMarkers;
+			try {
+				findMarkers = iProject.findMarkers(IApiMarkerConstants.DEFAULT_API_BASELINE_PROBLEM_MARKER, false,
+						IResource.DEPTH_ZERO);
+				for (IMarker iMarker : findMarkers) {
+					markList.add(iMarker);
+				}
+			} catch (CoreException e) {
+				ApiPlugin.log(e);
+			}
+		}
+		return markList;
+	}
+
 	/**
 	 * Cancels all of the changes on the page
 	 */
位置:  -458,4 +607,9   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 			}
 		}
 	}
+
+	public void setHasBaseline(boolean b) {
+		hasBaseline = b;
+
+	}
 }

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiErrorsWarningsConfigurationBlock.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiErrorsWarningsConfigurationBlock.java
位置:  -1221,13 +1221,7   public class ApiErrorsWarningsConfigurationBlock extends ConfigurationBlock {
 					IHandlerService handlerService = PlatformUI.getWorkbench().getService(IHandlerService.class);
 					try {
 						handlerService.executeCommand(P2_INSTALL_COMMAND_HANDLER, null);
-					} catch (ExecutionException ex) {
-						handleCommandException();
-					} catch (NotDefinedException ex) {
-						handleCommandException();
-					} catch (NotEnabledException ex) {
-						handleCommandException();
-					} catch (NotHandledException ex) {
+					} catch (ExecutionException | NotDefinedException | NotEnabledException | NotHandledException ex) {
 						handleCommandException();
 					}
 				}));

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/PreferenceMessages.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/PreferenceMessages.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2017 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -17,6 +17,7   import org.eclipse.osgi.util.NLS;
 
 public class PreferenceMessages extends NLS {
 	private static final String BUNDLE_NAME = 
+	public static String ApiBaselinesConfigurationBlock_0;
 	public static String ApiErrorsWarningsConfigurationBlock_0;
 	public static String ApiErrorsWarningsConfigurationBlock_1;
 	public static String ApiErrorsWarningsConfigurationBlock_2;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ProjectSelectionDialog.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ProjectSelectionDialog.java
位置:  -23,7 +23,6   import org.eclipse.core.runtime.Status;
 import org.eclipse.jdt.core.IJavaModel;
 import org.eclipse.jdt.core.IJavaProject;
 import org.eclipse.jdt.core.JavaCore;
-import org.eclipse.jdt.core.JavaModelException;
 import org.eclipse.jdt.ui.JavaElementComparator;
 import org.eclipse.jdt.ui.JavaElementLabelProvider;
 import org.eclipse.jdt.ui.StandardJavaElementContentProvider;
位置:  -68,8 +67,6   public class ProjectSelectionDialog extends SelectionStatusDialog {
 							set.add(project);
 						}
 					}
-				} catch (JavaModelException jme) {
-					// ignore
 				} catch (CoreException ce) {
 					// ignore
 				}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/preferencemessages.properties 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/preferencemessages.properties
位置:  -1,5 +1,5  
 ###############################################################################
-# Copyright (c) 2008, 2017 IBM Corporation and others.
+# Copyright (c) 2008, 2019 IBM Corporation and others.
 #
 # This program and the accompanying materials
 # are made available under the terms of the Eclipse Public License 2.0
位置:  -11,6 +11,7  
 # Contributors:
 #     IBM Corporation - initial API and implementation
 ###############################################################################
+ApiBaselinesConfigurationBlock_0=An API baseline has not been set for the current workspace.
 ApiErrorsWarningsConfigurationBlock_0=Error and warning settings have changed. A full build is required for the changes to take effect.\n\nDo a full build now?
 ApiErrorsWarningsConfigurationBlock_1=Error and warning settings have changed. A rebuild of the project is required for the changes to take effect.\n\nRebuild {0} now?
 ApiErrorsWarningsConfigurationBlock_2=Settings Changed

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiBaselineWizard.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiBaselineWizard.java
位置:  -104,9 +104,7   public class ApiBaselineWizard extends Wizard {
 				return profile != null;
 			}
 			return true;
-		} catch (IOException e) {
-			ApiUIPlugin.log(e);
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 			ApiUIPlugin.log(e);
 		}
 		return false;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiBaselineWizardPage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiBaselineWizardPage.java
位置:  -196,9 +196,7   public abstract class ApiBaselineWizardPage extends WizardPage {
 		WorkingCopyOperation op = new WorkingCopyOperation(fProfile);
 		try {
 			getContainer().run(true, false, op);
-		} catch (InvocationTargetException e) {
-			ApiUIPlugin.log(e);
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			ApiUIPlugin.log(e);
 		}
 		fProfile = op.getWorkingCopy();

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiToolingSetupWizardPage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiToolingSetupWizardPage.java
位置:  -372,9 +372,7   public class ApiToolingSetupWizardPage extends UserInputWizardPage {
 				}
 				projectchange.add(change);
 			}
-		} catch (CoreException e) {
-			ApiUIPlugin.log(e);
-		} catch (IOException e) {
+		} catch (CoreException | IOException e) {
 			ApiUIPlugin.log(e);
 		}
 	}
位置:  -413,9 +411,7   public class ApiToolingSetupWizardPage extends UserInputWizardPage {
 		};
 		try {
 			getContainer().run(false, false, op);
-		} catch (InvocationTargetException e) {
-			ApiUIPlugin.log(e);
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			ApiUIPlugin.log(e);
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/CompareOperation.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/CompareOperation.java
位置:  -178,8 +178,6   public class CompareOperation extends Job {
 						default:
 							break;
 					}
-				} catch (JavaModelException e) {
-					ApiPlugin.log(e);
 				} catch (CoreException e) {
 					ApiPlugin.log(e);
 				}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/DirectoryBasedApiBaselineWizardPage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/DirectoryBasedApiBaselineWizardPage.java
位置:  -303,8 +303,7   public class DirectoryBasedApiBaselineWizardPage extends ApiBaselineWizardPage {
 			setPageComplete(pageValid());
 			nametext.setFocus();
 			nametext.selectAll();
-		} catch (InvocationTargetException ite) {
-		} catch (InterruptedException ie) {
+		} catch (InvocationTargetException | InterruptedException ie) {
 		}
 	}
 

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/JavadocConversionRefactoring.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/JavadocConversionRefactoring.java
位置:  -39,7 +39,6   import org.eclipse.jdt.core.ICompilationUnit;
 import org.eclipse.jdt.core.IJavaProject;
 import org.eclipse.jdt.core.IType;
 import org.eclipse.jdt.core.JavaCore;
-import org.eclipse.jdt.core.JavaModelException;
 import org.eclipse.jdt.core.dom.AST;
 import org.eclipse.jdt.core.dom.ASTNode;
 import org.eclipse.jdt.core.dom.ASTParser;
位置:  -308,8 +307,6   public class JavadocConversionRefactoring extends Refactoring {
 					}
 				} catch (OperationCanceledException e) {
 					return false;
-				} catch (JavaModelException e) {
-					ApiUIPlugin.log(e);
 				} catch (CoreException e) {
 					ApiUIPlugin.log(e);
 				}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/TargetBasedApiBaselineWizardPage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/TargetBasedApiBaselineWizardPage.java
位置:  -363,8 +363,7   public class TargetBasedApiBaselineWizardPage extends ApiBaselineWizardPage {
 			treeviewer.setInput(getCurrentComponents());
 			treeviewer.refresh();
 			setPageComplete(pageValid());
-		} catch (InvocationTargetException ite) {
-		} catch (InterruptedException ie) {
+		} catch (InvocationTargetException | InterruptedException ie) {
 		}
 	}
 

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiBaselineManager.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiBaselineManager.java
位置:  -428,9 +428,7   public final class ApiBaselineManager implements IApiBaselineManager, ISaveParti
 		try {
 			parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
 			parser.setErrorHandler(new DefaultHandler());
-		} catch (ParserConfigurationException e) {
-			abort(
-		} catch (FactoryConfigurationError e) {
+		} catch (ParserConfigurationException | FactoryConfigurationError e) {
 			abort(
 		}
 		try {
位置:  -485,9 +483,7   public final class ApiBaselineManager implements IApiBaselineManager, ISaveParti
 				}
 				baseline.addApiComponents(components.toArray(new IApiComponent[components.size()]));
 			}
-		} catch (IOException e) {
-			abort(
-		} catch (SAXException e) {
+		} catch (IOException | SAXException e) {
 			abort(
 		} finally {
 			try {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiFilterStore.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiFilterStore.java
位置:  -177,9 +177,7   public class ApiFilterStore extends FilterStore implements IResourceChangeListen
 					}
 					fTriggeredChange = true;
 					fNeedsSaving = false;
-				} catch (CoreException ce) {
-					ApiPlugin.log(ce);
-				} catch (IOException ioe) {
+				} catch (CoreException | IOException ioe) {
 					ApiPlugin.log(ioe);
 				}
 				return Status.OK_STATUS;
位置:  -523,9 +521,7   public class ApiFilterStore extends FilterStore implements IResourceChangeListen
 				contents = filterFile.getContents();
 				readFilterFile(contents);
 			}
-		} catch (CoreException e) {
-			ApiPlugin.log(e);
-		} catch (IOException e) {
+		} catch (CoreException | IOException e) {
 			ApiPlugin.log(e);
 		} finally {
 			if (contents != null) {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/AbstractProblemDetector.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/AbstractProblemDetector.java
位置:  -250,10 +250,7   public abstract class AbstractProblemDetector implements IApiProblemDetector {
 								lineNumber = document.getLineOfOffset(charStart);
 							}
 						}
-					} catch (CoreException e) {
-						ApiPlugin.log(e);
-						return null;
-					} catch (BadLocationException e) {
+					} catch (CoreException | BadLocationException e) {
 						ApiPlugin.log(e);
 						return null;
 					}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java
位置:  -744,8 +744,6   public class BaseApiAnalyzer implements IApiAnalyzer {
 							// ignore
 						}
 					}
-				} catch (JavaModelException e) {
-					ApiPlugin.log(e);
 				} catch (CoreException e) {
 					ApiPlugin.log(e);
 				}
位置:  -2299,9 +2297,7   public class BaseApiAnalyzer implements IApiAnalyzer {
 						break loop;
 					}
 				}
-			} catch (CoreException e) {
-				// ignore
-			} catch (IOException e) {
+			} catch (CoreException | IOException e) {
 				// ignore
 			} finally {
 				try {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BuildState.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BuildState.java
位置:  -646,14 +646,7   public class BuildState {
 			} finally {
 				out.close();
 			}
-		} catch (RuntimeException e) {
-			try {
-				file.delete();
-			} catch (SecurityException se) {
-				// could not delete file: cannot do much more
-			}
-			throw new CoreException(new Status(IStatus.ERROR, ApiPlugin.PLUGIN_ID, Platform.PLUGIN_ERROR, NLS.bind(BuilderMessages.build_cannotSaveState, project.getName()), e));
-		} catch (IOException e) {
+		} catch (RuntimeException | IOException e) {
 			try {
 				file.delete();
 			} catch (SecurityException se) {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/TagValidator.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/TagValidator.java
位置:  -754,9 +754,7   public class TagValidator extends Validator {
 			// unit cannot be null
 			IDocument document = Util.getDocument(fCompilationUnit);
 			linenumber = document.getLineOfOffset(charstart);
-		} catch (BadLocationException e) {
-			e.printStackTrace();
-		} catch (CoreException e) {
+		} catch (BadLocationException | CoreException e) {
 			e.printStackTrace();
 		}
 		try {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/ClassFileComparator.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/ClassFileComparator.java
位置:  -972,34 +972,39   public class ClassFileComparator {
 						// adding/removing no extend on a final class is ok
 						// adding/removing no instantiate on an abstract class
 						// is ok
+						String NO_EXTEND = 
+						String NO_IMPLEMENT = 
+						String NO_INSTANSTIATE = 
 						if (this.type1.isInterface()) {
-							if ((RestrictionModifiers.isImplementRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isImplementRestriction(restrictions)) || (RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isExtendRestriction(restrictions))) {
-								this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), Util.getDescriptorName(type1));
+							boolean noImplementAdded = (RestrictionModifiers.isImplementRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isImplementRestriction(restrictions));
+							if (noImplementAdded || (RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isExtendRestriction(restrictions))) {
+								this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), new String[] {noImplementAdded? NO_IMPLEMENT:NO_EXTEND, Util.getDescriptorName(type1) });
 							}
-							if ((!RestrictionModifiers.isImplementRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isImplementRestriction(restrictions)) || (!RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isExtendRestriction(restrictions))) {
-								this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), Util.getDescriptorName(type1));
+							boolean noImplementRemoved = (!RestrictionModifiers.isImplementRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isImplementRestriction(restrictions)) ;
+							if (noImplementRemoved || (!RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isExtendRestriction(restrictions))) {
+								this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), new String[] {noImplementRemoved?  NO_IMPLEMENT:NO_EXTEND, Util.getDescriptorName(type1) });
 							}
 						} else {
 							boolean reportChangedRestrictions = false;
 							if (!Flags.isFinal(typeAccess2) &amp;&amp; !Flags.isFinal(typeAccess)) {
 								if (RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isExtendRestriction(restrictions)) {
 									reportChangedRestrictions = true;
-									this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), Util.getDescriptorName(type1));
+									this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), new String[] { NO_EXTEND, Util.getDescriptorName(type1) });
 								}
 								if (!RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isExtendRestriction(restrictions)) {
 									reportChangedRestrictions = true;
-									this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(),Util.getDescriptorName(type1));
+									this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(),new String[] { NO_EXTEND, Util.getDescriptorName(type1) });
 								}
 							}
 							if (!reportChangedRestrictions &amp;&amp; !Flags.isAbstract(typeAccess2) &amp;&amp; !Flags.isAbstract(typeAccess)) {
 								if (RestrictionModifiers.isInstantiateRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isInstantiateRestriction(restrictions)) {
-									this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), Util.getDescriptorName(type1));
+									this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), new String[] { NO_INSTANSTIATE, Util.getDescriptorName(type1) });
 								}
 							}
 							if (!reportChangedRestrictions &amp;&amp; !Flags.isAbstract(typeAccess2)
 									&amp;&amp; !Flags.isAbstract(typeAccess)) {
 								if (!RestrictionModifiers.isInstantiateRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isInstantiateRestriction(restrictions)) {
-									this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(),Util.getDescriptorName(type1));
+									this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(),new String[] {  NO_INSTANSTIATE, Util.getDescriptorName(type1) });
 								}
 							}
 						}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/Messages.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/Messages.java
位置:  -68,9 +68,7   public class Messages extends NLS {
 			try {
 				int messageID = Integer.parseInt(key);
 				templates.put(Integer.valueOf(messageID), bundle.getString(key));
-			} catch (NumberFormatException e) {
-				// key ill-formed
-			} catch (MissingResourceException e) {
+			} catch (NumberFormatException | MissingResourceException e) {
 				// available ID
 			}
 		}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/compatible_delta_messages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/compatible_delta_messages.properties
位置:  -221,7 +221,7  
 # {0} interface name {1} super interface name
 107 = The interface {1} adds method {2} to {0} that is tagged as @noimplement
 # {0} type name
-108 = Restrictions have been added for type {0}
+108 = The {0} restriction have been added for type {1}
 # {0} type name, {1} component id
 109 = The re-exported type {0} has been added to {1}
 # {0} given element
位置:  -229,4 +229,4  
 # {0} given element
 111=The deprecation modifiers has been removed from {0}
 # {0} type name
-112 = Restrictions have been removed for type {0}
\ No newline at end of file
+112 = The {0} restriction have been removed for type {1}
\ No newline at end of file

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/ApiBaseline.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/ApiBaseline.java
位置:  -490,9 +490,7   public class ApiBaseline extends ApiElement implements IApiBaseline, IVMInstallC
 							fVMBinding = iVMInstall;
 							ExecutionEnvironmentDescription ee = new ExecutionEnvironmentDescription(file);
 							initialize(ee);
-						} catch (CoreException e) {
-							error = new Status(IStatus.ERROR, ApiPlugin.PLUGIN_ID, CoreMessages.ApiBaseline_2, e);
-						} catch (IOException e) {
+						} catch (CoreException | IOException e) {
 							error = new Status(IStatus.ERROR, ApiPlugin.PLUGIN_ID, CoreMessages.ApiBaseline_2, e);
 						}
 					}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/BundleComponent.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/BundleComponent.java
位置:  -1066,9 +1066,7   public class BundleComponent extends Component {
 		SAXParser saxParser = null;
 		try {
 			saxParser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			// ignore
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			// ignore
 		}
 
位置:  -1082,9 +1080,7   public class BundleComponent extends Component {
 			SourceDefaultHandler defaultHandler = new SourceDefaultHandler();
 			saxParser.parse(inputSource, defaultHandler);
 			return defaultHandler.isSource();
-		} catch (SAXException e) {
-			// ignore
-		} catch (IOException e) {
+		} catch (SAXException | IOException e) {
 			// ignore
 		}
 		return false;

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java
位置:  -289,9 +289,7   public class TypeStructureBuilder extends ClassVisitor {
 			try {
 				ClassReader classReader = new ClassReader(abstractApiTypeRoot.getContents());
 				classReader.accept(visitor, ClassReader.SKIP_FRAMES);
-			} catch (ArrayIndexOutOfBoundsException e) {
-				ApiPlugin.log(e);
-			} catch (CoreException e) {
+			} catch (ArrayIndexOutOfBoundsException | CoreException e) {
 				// bytes could not be retrieved for abstractApiTypeRoot
 				ApiPlugin.log(e);
 			}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties
位置:  -1,5 +1,5  
 ###############################################################################
-# Copyright (c) 2008, 2018 IBM Corporation and others.
+# Copyright (c) 2008, 2019 IBM Corporation and others.
 #
 # This program and the accompanying materials
 # are made available under the terms of the Eclipse Public License 2.0
位置:  -98,7 +98,7  
 66 = The ''abstract'' keyword has been added for class {0}
 67 = The ''final'' keyword has been added for the type {0}
 69 = The ''static'' keyword has been added for field {0}.{1}
-72 = Restrictions have been added for type {0}
+72 = The {0} restriction have been added for type {1}
 73 = The static member type {0} has been converted to a non-static member type
 74 = The superclass for {0} has changed
 # This message is using ChoiceFormat in order to fill the argument {1} and {2}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/XmlReferenceDescriptorWriter.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/XmlReferenceDescriptorWriter.java
位置:  -88,9 +88,7   public class XmlReferenceDescriptorWriter {
 		try {
 			parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
 			parser.setErrorHandler(new DefaultHandler());
-		} catch (FactoryConfigurationError fce) {
-			ApiPlugin.log(fce);
-		} catch (ParserConfigurationException pce) {
+		} catch (FactoryConfigurationError | ParserConfigurationException pce) {
 			ApiPlugin.log(pce);
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/XmlSearchReporter.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/XmlSearchReporter.java
位置:  -15,7 +15,6   package org.eclipse.pde.api.tools.internal.search;
 
 import java.io.BufferedWriter;
 import java.io.File;
-import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStreamWriter;
位置:  -72,9 +71,7   public class XmlSearchReporter implements IApiSearchReporter {
 		try {
 			parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
 			parser.setErrorHandler(new DefaultHandler());
-		} catch (FactoryConfigurationError fce) {
-			ApiPlugin.log(fce);
-		} catch (ParserConfigurationException pce) {
+		} catch (FactoryConfigurationError | ParserConfigurationException pce) {
 			ApiPlugin.log(pce);
 		}
 	}
位置:  -194,11 +191,7   public class XmlSearchReporter implements IApiSearchReporter {
 				file.createNewFile();
 			}
 			data.serializeToFile(file);
-		} catch (FileNotFoundException fnfe) {
-			ApiPlugin.log(fnfe);
-		} catch (IOException ioe) {
-			ApiPlugin.log(ioe);
-		} catch (CoreException ce) {
+		} catch (IOException | CoreException ce) {
 			ApiPlugin.log(ce);
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/TarFile.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/TarFile.java
位置:  -420,9 +420,7   public class TarFile {
 				TarEntry oldEntry = curEntry;
 				try {
 					curEntry = entryEnumerationStream.getNextEntry();
-				} catch (TarException e) {
-					curEntry = null;
-				} catch (IOException e) {
+				} catch (TarException | IOException e) {
 					curEntry = null;
 				}
 				return oldEntry;

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/Util.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/Util.java
位置:  -57,7 +57,6   import java.util.regex.Pattern;
 import java.util.regex.PatternSyntaxException;
 import java.util.stream.Stream;
 import java.util.zip.ZipEntry;
-import java.util.zip.ZipException;
 import java.util.zip.ZipFile;
 import java.util.zip.ZipInputStream;
 
位置:  -464,8 +463,6   public final class Util {
 		try {
 			inputStream = new BufferedInputStream(new FileInputStream(file));
 			bytes = Util.getInputStreamAsByteArray(inputStream, -1);
-		} catch (FileNotFoundException e) {
-			ApiPlugin.log(e);
 		} catch (IOException e) {
 			ApiPlugin.log(e);
 		} finally {
位置:  -483,8 +480,6   public final class Util {
 				outputStream = new BufferedOutputStream(new FileOutputStream(newFile));
 				outputStream.write(bytes);
 				outputStream.flush();
-			} catch (FileNotFoundException e) {
-				ApiPlugin.log(e);
 			} catch (IOException e) {
 				ApiPlugin.log(e);
 			} finally {
位置:  -703,13 +698,7   public final class Util {
 		try {
 			Field field = IDeltaClass.getField(elementType);
 			return field.getInt(null);
-		} catch (SecurityException e) {
-			// ignore
-		} catch (IllegalArgumentException e) {
-			// ignore
-		} catch (NoSuchFieldException e) {
-			// ignore
-		} catch (IllegalAccessException e) {
+		} catch (SecurityException | IllegalArgumentException | NoSuchFieldException | IllegalAccessException e) {
 			// ignore
 		}
 		return -1;
位置:  -1718,8 +1707,6   public final class Util {
 			try {
 				zipFile = new ZipFile(file);
 				return zipFile.getEntry(IApiCoreConstants.API_DESCRIPTION_XML_NAME) != null;
-			} catch (ZipException e) {
-				// ignore
 			} catch (IOException e) {
 				// ignore
 			} finally {
位置:  -1915,13 +1902,7   public final class Util {
 			parser.setErrorHandler(new DefaultHandler());
 			stream = new ByteArrayInputStream(document.getBytes(StandardCharsets.UTF_8));
 			root = parser.parse(stream).getDocumentElement();
-		} catch (ParserConfigurationException e) {
-			abort(
-		} catch (FactoryConfigurationError e) {
-			abort(
-		} catch (SAXException e) {
-			abort(
-		} catch (IOException e) {
+		} catch (ParserConfigurationException | FactoryConfigurationError | SAXException | IOException e) {
 			abort(
 		} finally {
 			try {
位置:  -2017,9 +1998,7   public final class Util {
 			StreamResult outputTarget = new StreamResult(s);
 			transformer.transform(source, outputTarget);
 			return s.toString(IApiCoreConstants.UTF_8);
-		} catch (TransformerException e) {
-			abort(
-		} catch (IOException e) {
+		} catch (TransformerException | IOException e) {
 			abort(
 		}
 		return null;
位置:  -2545,8 +2524,6   public final class Util {
 							}
 						}
 					}
-				} catch (JavaModelException e) {
-					ApiPlugin.log(e);
 				} catch (CoreException e) {
 					ApiPlugin.log(e);
 				}

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationReportConversionTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationReportConversionTask.java
位置:  -307,9 +307,7   public class APIDeprecationReportConversionTask extends Task {
 		SAXParser parser = null;
 		try {
 			parser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			e.printStackTrace();
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			e.printStackTrace();
 		}
 		if (parser == null) {
位置:  -329,9 +327,7   public class APIDeprecationReportConversionTask extends Task {
 			StringBuilder buffer = new StringBuilder();
 			dumpEntries(defaultHandler.getEntries(), buffer);
 			writeOutput(buffer);
-		} catch (SAXException e) {
-			// ignore
-		} catch (IOException e) {
+		} catch (SAXException | IOException e) {
 			// ignore
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationTask.java
位置:  -162,9 +162,7   public class APIDeprecationTask extends CommonUtilsTask {
 						System.out.println(potentialExcludeList);
 					}
 				}
-			} catch (IOException e) {
-				ApiPlugin.log(e);
-			} catch (CoreException e) {
+			} catch (IOException | CoreException e) {
 				ApiPlugin.log(e);
 			} finally {
 				try {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeReportConversionTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeReportConversionTask.java
位置:  -485,9 +485,7   public class APIFreezeReportConversionTask extends Task {
 		SAXParser parser = null;
 		try {
 			parser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			e.printStackTrace();
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			e.printStackTrace();
 		}
 		if (parser == null) {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeTask.java
位置:  -197,9 +197,7   public class APIFreezeTask extends CommonUtilsTask {
 						System.out.println(potentialExcludeList);
 					}
 				}
-			} catch (IOException e) {
-				ApiPlugin.log(e);
-			} catch (CoreException e) {
+			} catch (IOException | CoreException e) {
 				ApiPlugin.log(e);
 			} finally {
 				try {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIToolsAnalysisTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIToolsAnalysisTask.java
位置:  -247,9 +247,7   public class APIToolsAnalysisTask extends CommonUtilsTask {
 				}
 
 				contents = Util.serializeDocument(document);
-			} catch (DOMException e) {
-				throw new BuildException(e);
-			} catch (CoreException e) {
+			} catch (DOMException | CoreException e) {
 				throw new BuildException(e);
 			}
 			if (contents != null) {
位置:  -274,9 +272,7   public class APIToolsAnalysisTask extends CommonUtilsTask {
 					}
 				}
 				contents = Util.serializeDocument(document);
-			} catch (DOMException e) {
-				throw new BuildException(e);
-			} catch (CoreException e) {
+			} catch (DOMException | CoreException e) {
 				throw new BuildException(e);
 			}
 			if (contents != null) {
位置:  -294,9 +290,7   public class APIToolsAnalysisTask extends CommonUtilsTask {
 			root.setAttribute(IApiXmlConstants.ATTR_COUNT_WARNINGS, Integer.toString(counter.warnings));
 			root.setAttribute(IApiXmlConstants.ATTR_COUNT_ERRORS, Integer.toString(counter.errors));
 			contents = Util.serializeDocument(document);
-		} catch (DOMException e) {
-			throw new BuildException(e);
-		} catch (CoreException e) {
+		} catch (DOMException | CoreException e) {
 			throw new BuildException(e);
 		}
 		if (contents != null) {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/AnalysisReportConversionTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/AnalysisReportConversionTask.java
位置:  -448,9 +448,7   public class AnalysisReportConversionTask extends Task {
 		SAXParser parser = null;
 		try {
 			parser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			e.printStackTrace();
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			e.printStackTrace();
 		}
 		if (parser == null) {
位置:  -503,9 +501,7   public class AnalysisReportConversionTask extends Task {
 					dumpIndexFile(reportsRoot, summaries, nonApiBundleSummary);
 				}
 			}
-		} catch (SAXException e) {
-			// ignore
-		} catch (IOException e) {
+		} catch (SAXException | IOException e) {
 			// ignore
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/ApiFileGenerationTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/ApiFileGenerationTask.java
位置:  -18,7 +18,6   import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileFilter;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.PrintWriter;
 import java.io.StringReader;
位置:  -381,11 +380,7   public class ApiFileGenerationTask extends Task {
 								manifestMap = ManifestElement.parseBundleManifest(inputStream, null);
 								currentApiPackages = collectApiPackageNames(manifestMap);
 							}
-						} catch (FileNotFoundException e) {
-							ApiPlugin.log(e);
-						} catch (IOException e) {
-							ApiPlugin.log(e);
-						} catch (BundleException e) {
+						} catch (IOException | BundleException e) {
 							ApiPlugin.log(e);
 						} finally {
 							if (inputStream != null) {
位置:  -590,8 +585,6   public class ApiFileGenerationTask extends Task {
 			stream = new BufferedInputStream(new FileInputStream(dotProjectFile));
 			String contents = new String(Util.getInputStreamAsCharArray(stream, -1, StandardCharsets.UTF_8));
 			return containsAPIToolsNature(contents);
-		} catch (FileNotFoundException e) {
-			e.printStackTrace();
 		} catch (IOException e) {
 			e.printStackTrace();
 		} finally {
位置:  -628,9 +621,7   public class ApiFileGenerationTask extends Task {
 		SAXParser saxParser = null;
 		try {
 			saxParser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			// ignore
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			// ignore
 		}
 
位置:  -644,9 +635,7   public class ApiFileGenerationTask extends Task {
 			APIToolsNatureDefaultHandler defaultHandler = new APIToolsNatureDefaultHandler();
 			saxParser.parse(inputSource, defaultHandler);
 			return defaultHandler.isAPIToolsNature();
-		} catch (SAXException e) {
-			// ignore
-		} catch (IOException e) {
+		} catch (SAXException | IOException e) {
 			// ignore
 		}
 		return false;

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/CompareTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/CompareTask.java
位置:  -189,9 +189,7   public class CompareTask extends CommonUtilsTask {
 					System.out.println(potentialExcludeList);
 				}
 			}
-		} catch (IOException e) {
-			ApiPlugin.log(e);
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 			ApiPlugin.log(e);
 		} finally {
 			try {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/MissingRefProblemsTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/MissingRefProblemsTask.java
位置:  -17,7 +17,6   import java.io.BufferedInputStream;
 import java.io.BufferedWriter;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStreamWriter;
位置:  -270,11 +269,7   public class MissingRefProblemsTask extends CommonUtilsTask {
 
 			MissingRefMetadata metadata = new MissingRefMetadata(super.currentBaselineLocation, super.reportLocation, this.apiUseScans);
 			metadata.serializeToFile(file);
-		} catch (FileNotFoundException e) {
-			ApiPlugin.log(e);
-		} catch (IOException e) {
-			ApiPlugin.log(e);
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 			ApiPlugin.log(e);
 		}
 	}
位置:  -317,9 +312,7   public class MissingRefProblemsTask extends CommonUtilsTask {
 				report.appendChild(category);
 
 				contents = Util.serializeDocument(document);
-			} catch (DOMException e) {
-				throw new BuildException(e);
-			} catch (CoreException e) {
+			} catch (DOMException | CoreException e) {
 				throw new BuildException(e);
 			}
 			if (contents != null) {

原文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-10-systempackages.profile 
新文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-10-systempackages.profile
位置:  -12,7 +12,7  
 #     IBM Corporation - initial API and implementation
 ###############################################################################
 # NOTE: This profile only has JavaSE-10's VM packages
- org.osgi.framework.system.packages = \
+org.osgi.framework.system.packages = \
  com.oracle.awt,\
  com.oracle.net,\
  com.oracle.nio,\

原文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-11-systempackages.profile 
新文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-11-systempackages.profile
位置:  -9,7 +9,7  
 #     IBM Corporation - initial API and implementation
 ###############################################################################
 # NOTE: This profile only has JavaSE-11's VM packages
- org.osgi.framework.system.packages = \
+org.osgi.framework.system.packages = \
  com.sun.jarsigner,\
  com.sun.java.accessibility.util,\
  com.sun.javadoc,\

原文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-12-systempackages.profile 
新文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-12-systempackages.profile
位置:  -9,7 +9,7  
 #     IBM Corporation - initial API and implementation
 ###############################################################################
 # NOTE: This profile only has JavaSE-12's VM packages
- org.osgi.framework.system.packages = \
+org.osgi.framework.system.packages = \
  com.sun.jarsigner,\
  com.sun.java.accessibility.util,\
  com.sun.javadoc,\

原文件: ds/org.eclipse.pde.ds.annotations/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.annotations/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.ds.annotations;singleton:=true
-Bundle-Version: 1.1.400.qualifier
+Bundle-Version: 1.1.500.qualifier
 Bundle-Activator: org.eclipse.pde.ds.internal.annotations.Activator
 Bundle-Vendor: %Bundle-Vendor
 Require-Bundle: org.eclipse.ui;bundle-version=

原文件: ds/org.eclipse.pde.ds.annotations/pom.xml 
新文件: ds/org.eclipse.pde.ds.annotations/pom.xml
位置:  -21,6 +21,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.annotations</artifactId>
-  <version>1.1.400-SNAPSHOT</version>
+  <version>1.1.500-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ds/org.eclipse.pde.ds.annotations/src/org/eclipse/pde/ds/internal/annotations/AnnotationVisitor.java 
新文件: ds/org.eclipse.pde.ds.annotations/src/org/eclipse/pde/ds/internal/annotations/AnnotationVisitor.java
位置:  -477,9 +477,7   public class AnnotationVisitor extends ASTVisitor {
 
 			LinkedModeModel.closeAllModels(document);
 			edit.apply(document);
-		} catch (MalformedTreeException e) {
-			throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, 
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, 
 		} finally {
 			if (session != null) {
位置:  -1396,11 +1394,7   public class AnnotationVisitor extends ASTVisitor {
 			}
 			// Reconnect
 			clone.reconnect(obj, obj.getSharedModel());
-		} catch (IOException e) {
-			if (debug.isDebugging()) {
-				debug.trace(
-			}
-		} catch (ClassNotFoundException e) {
+		} catch (IOException | ClassNotFoundException e) {
 			if (debug.isDebugging()) {
 				debug.trace(
 			}

原文件: ds/org.eclipse.pde.ds.core/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.core/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ds.core;singleton:=true
-Bundle-Version: 1.1.500.qualifier
+Bundle-Version: 1.1.600.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ds.core.Activator
 Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.core.filebuffers;bundle-version=

原文件: ds/org.eclipse.pde.ds.core/pom.xml 
新文件: ds/org.eclipse.pde.ds.core/pom.xml
位置:  -20,6 +20,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.core</artifactId>
-  <version>1.1.500-SNAPSHOT</version>
+  <version>1.1.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/builders/DefaultSAXParser.java 
新文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/builders/DefaultSAXParser.java
位置:  -35,10 +35,7   public class DefaultSAXParser {
 			try (InputStream stream = new BufferedInputStream(file.getContents())) {
 				parser.parse(stream, reporter);
 			}
-		} catch (CoreException e) {
-		} catch (SAXException e) {
-		} catch (IOException e) {
-		} catch (ParserConfigurationException e) {
+		} catch (CoreException | SAXException | IOException | ParserConfigurationException e) {
 		}
 	}
 }

原文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/text/DSDocumentFactory.java 
新文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/text/DSDocumentFactory.java
位置:  -49,7 +49,7   public class DSDocumentFactory extends DocumentNodeFactory implements
 
 		// TODO this logic needs to be pushed up somehow... we shouldn't care
 		// about the namespace prefix
-		int index = name.indexOf(
+		int index = name.indexOf(':'); //$NON-NLS-1$
 		if (index != -1) {
 			name = name.substring(index + 1);
 		}

原文件: ds/org.eclipse.pde.ds.tests/.settings/org.eclipse.jdt.core.prefs 
新文件: ds/org.eclipse.pde.ds.tests/.settings/org.eclipse.jdt.core.prefs
位置:  -1,4 +1,13  
 eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
 org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
 org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
 org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
位置:  -6,8 +15,99   org.eclipse.jdt.core.compiler.compliance=1.8
 org.eclipse.jdt.core.compiler.debug.lineNumber=generate
 org.eclipse.jdt.core.compiler.debug.localVariable=generate
 org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
 org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=warning
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore
 org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=warning
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=warning
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=warning
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
 org.eclipse.jdt.core.compiler.source=1.8
 org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
 org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16

原文件: ds/org.eclipse.pde.ds.tests/src/org/eclipse/pde/internal/ds/tests/AbstractDSModelTestCase.java 
新文件: ds/org.eclipse.pde.ds.tests/src/org/eclipse/pde/internal/ds/tests/AbstractDSModelTestCase.java
位置:  -86,9 +86,7   public abstract class AbstractDSModelTestCase extends TestCase {
 		multi.addChildren(ops);
 		try {
 			multi.apply(fDocument);
-		} catch (MalformedTreeException e) {
-			fail(e.getMessage());
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			fail(e.getMessage());
 		}
 		load();

原文件: ds/org.eclipse.pde.ds.ui/.settings/org.eclipse.jdt.core.prefs 
新文件: ds/org.eclipse.pde.ds.ui/.settings/org.eclipse.jdt.core.prefs
位置:  -2,8 +2,11   eclipse.preferences.version=1
 org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
 org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
 org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
 org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
 org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
 org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
 org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
 org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
位置:  -12,6 +15,7   org.eclipse.jdt.core.compiler.compliance=1.8
 org.eclipse.jdt.core.compiler.debug.lineNumber=generate
 org.eclipse.jdt.core.compiler.debug.localVariable=generate
 org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
 org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
 org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
 org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
位置:  -49,12 +53,14   org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
 org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
 org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
 org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
 org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
 org.eclipse.jdt.core.compiler.problem.nullReference=warning
 org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
 org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
 org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
 org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
 org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=ignore
 org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
 org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
位置:  -71,21 +77,26   org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
 org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
 org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
 org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
 org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
 org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
 org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
 org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
 org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
 org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
 org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
 org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
 org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
 org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedImport=warning
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
 org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
 org.eclipse.jdt.core.compiler.problem.unusedLocal=error
 org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditPropertiesDialog.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditPropertiesDialog.java
位置:  -44,7 +44,6   import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.dialogs.ElementTreeSelectionDialog;
 import org.eclipse.ui.forms.FormDialog;
 import org.eclipse.ui.forms.IManagedForm;
位置:  -192,7 +191,6   public class DSEditPropertiesDialog extends FormDialog {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditPropertyDialog.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditPropertyDialog.java
位置:  -50,7 +50,6   import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.dialogs.ElementTreeSelectionDialog;
 import org.eclipse.ui.forms.FormDialog;
 import org.eclipse.ui.forms.IManagedForm;
位置:  -315,7 +314,6   public class DSEditPropertyDialog extends FormDialog {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditProvideDialog.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditProvideDialog.java
位置:  -41,7 +41,6   import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.dialogs.SelectionDialog;
 import org.eclipse.ui.forms.FormDialog;
位置:  -193,7 +192,6   public class DSEditProvideDialog extends FormDialog {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditReferenceDialog.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditReferenceDialog.java
位置:  -45,7 +45,6   import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Label;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.dialogs.SelectionDialog;
 import org.eclipse.ui.forms.FormDialog;
位置:  -326,7 +325,6   public class DSEditReferenceDialog extends FormDialog {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSComponentSection.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSComponentSection.java
位置:  -46,7 +46,6   import org.eclipse.jface.window.Window;
 import org.eclipse.jface.wizard.WizardDialog;
 
 import org.eclipse.ui.IActionBars;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.forms.events.HyperlinkEvent;
 import org.eclipse.ui.forms.widgets.FormToolkit;
 import org.eclipse.ui.forms.widgets.Section;
位置:  -321,7 +320,6   public class DSComponentSection extends PDESection {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSProvideSection.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSProvideSection.java
位置:  -59,7 +59,6   import org.eclipse.swt.SWT;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Table;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.actions.ActionFactory;
 import org.eclipse.ui.dialogs.SelectionDialog;
位置:  -360,8 +359,6   public class DSProvideSection extends TableSection implements
 				if (element != null)
 					JavaUI.openInEditor(element);
 			}
-		} catch (PartInitException e) {
-			Activator.logException(e);
 		} catch (CoreException e) {
 			Activator.logException(e);
 		}

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSReferenceSection.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSReferenceSection.java
位置:  -59,7 +59,6   import org.eclipse.swt.SWT;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Table;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.actions.ActionFactory;
 import org.eclipse.ui.dialogs.SelectionDialog;
位置:  -441,8 +440,6   public class DSReferenceSection extends TableSection implements
 				if (element != null)
 					JavaUI.openInEditor(element);
 			}
-		} catch (PartInitException e) {
-			Activator.logException(e);
 		} catch (CoreException e) {
 			Activator.logException(e);
 		}

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/wizards/DSFileWizardPage.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/wizards/DSFileWizardPage.java
位置:  -56,7 +56,6   import org.eclipse.swt.widgets.Group;
 import org.eclipse.swt.widgets.Label;
 import org.eclipse.swt.widgets.Link;
 import org.eclipse.swt.widgets.Text;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.dialogs.SelectionDialog;
 import org.eclipse.ui.dialogs.WizardNewFileCreationPage;
位置:  -219,7 +218,6   public class DSFileWizardPage extends WizardNewFileCreationPage {
 								}
 							}
 						}
-							} catch (PartInitException e1) {
 							} catch (CoreException e1) {
 					}
 						}

原文件: pom.xml 
新文件: pom.xml
位置:  -67,6 +67,7  
     <module>ui/org.eclipse.pde</module>
     <module>ui/org.eclipse.pde.core</module>
     <module>ui/org.eclipse.pde.junit.runtime</module>
+    <module>ui/org.eclipse.pde.junit.runtime.tests</module>
     <module>ui/org.eclipse.pde.launching</module>
     <module>ui/org.eclipse.pde.runtime</module>
     <module>ui/org.eclipse.pde.ui</module>

原文件: u
原文件: org.eclipse.pde.ua.tests/META-INF/MANIFEST.MF 
新文件: ua/org.eclipse.pde.ua.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ua.tests
-Bundle-Version: 1.1.200.qualifier
+Bundle-Version: 1.1.300.qualifier
 Bundle-ClassPath: tests.jar
 Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.pde.ua.core;bundle-version=

原文件: u
原文件: org.eclipse.pde.ua.tests/pom.xml 
新文件: ua/org.eclipse.pde.ua.tests/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ua.tests</artifactId>
-  <version>1.1.200-SNAPSHOT</version>
+  <version>1.1.300-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 
   <properties>

原文件: u
原文件: org.eclipse.pde.ua.tests/src/org/eclipse/pde/internal/u
原文件: tests/cheatsheet/AbstractCheatSheetModelTestCase.java 
新文件: ua/org.eclipse.pde.ua.tests/src/org/eclipse/pde/internal/ua/tests/cheatsheet/AbstractCheatSheetModelTestCase.java
位置:  -83,9 +83,7   public abstract class AbstractCheatSheetModelTestCase {
 		multi.addChildren(ops);
 		try {
 			multi.apply(fDocument);
-		} catch (MalformedTreeException e) {
-			fail(e.getMessage());
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			fail(e.getMessage());
 		}
 		load();

原文件: u
原文件: org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/u
原文件: ui/editor/cheatsheet/comp/CompCSMasterTreeSection.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/editor/cheatsheet/comp/CompCSMasterTreeSection.java
位置:  -375,9 +375,7   public class CompCSMasterTreeSection extends TreeSection implements ICSMaster {
 						swriter.toString(), url);
 				openAction.run();
 			}
-		} catch (IOException e) {
-			PDEUserAssistanceUIPlugin.logException(e);
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 			PDEUserAssistanceUIPlugin.logException(e);
 		}
 	}

原文件: u
原文件: org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/u
原文件: ui/editor/cheatsheet/simple/details/SimpleCSCommandDetails.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/editor/cheatsheet/simple/details/SimpleCSCommandDetails.java
位置:  -403,9 +403,7   public class SimpleCSCommandDetails extends CSAbstractSubDetails {
 			if (service != null) {
 				try {
 					return service.deserialize(serialization);
-				} catch (NotDefinedException e) {
-					PDEUserAssistanceUIPlugin.logException(e, SimpleDetailsMessages.SimpleCSCommandDetails_errTitle, SimpleDetailsMessages.SimpleCSCommandDetails_errMsg + serialization);
-				} catch (SerializationException e) {
+				} catch (NotDefinedException | SerializationException e) {
 					PDEUserAssistanceUIPlugin.logException(e, SimpleDetailsMessages.SimpleCSCommandDetails_errTitle, SimpleDetailsMessages.SimpleCSCommandDetails_errMsg + serialization);
 				}
 			}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java
位置:  -364,7 +364,6   public class ClasspathHelper {
 					}
 				}
 			}
-		} catch (JavaModelException e) {
 		} catch (CoreException e) {
 		}
 		return result.toArray(new IPath[result.size()]);

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/MinimalState.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/MinimalState.java
位置:  -112,7 +112,6   public class MinimalState {
 			MultiStatus status = new MultiStatus(PDECore.PLUGIN_ID, 0, NLS.bind(UtilMessages.ErrorReadingManifest, bundleLocation.toString()), null);
 			status.add(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage()));
 			throw new CoreException(status);
-		} catch (NumberFormatException e) {
 		} catch (IllegalArgumentException e) {
 		}
 		return null;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/P2Utils.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/P2Utils.java
位置:  -144,9 +144,6   public class P2Utils {
 				return null;
 			}
 			return bundles;
-		} catch (MalformedURLException e) {
-			PDECore.log(e);
-			return null;
 		} catch (IOException e) {
 			PDECore.log(e);
 			return null;
位置:  -176,9 +173,6   public class P2Utils {
 				return null;
 			}
 			return srcBundles;
-		} catch (MalformedURLException e) {
-			PDECore.log(e);
-			return null;
 		} catch (IOException e) {
 			PDECore.log(e);
 			return null;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDEAuxiliaryState.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDEAuxiliaryState.java
位置:  -268,11 +268,7   public class PDEAuxiliaryState {
 					}
 				}
 				return true;
-			} catch (org.xml.sax.SAXException e) {
-				PDECore.log(e);
-			} catch (IOException e) {
-				PDECore.log(e);
-			} catch (ParserConfigurationException e) {
+			} catch (org.xml.sax.SAXException | IOException | ParserConfigurationException e) {
 				PDECore.log(e);
 			}
 		}
位置:  -356,9 +352,7   public class PDEAuxiliaryState {
 				root.appendChild(element);
 			}
 			XMLPrintHandler.writeFile(doc, new File(destination, CACHE_EXTENSION));
-		} catch (ParserConfigurationException e) {
-		} catch (FactoryConfigurationError e) {
-		} catch (IOException e) {
+		} catch (ParserConfigurationException | FactoryConfigurationError | IOException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDECoreMessages.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDECoreMessages.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2005, 2017 IBM Corporation and others.
+ * Copyright (c) 2005, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -212,6 +212,7   public class PDECoreMessages extends NLS {
 	public static String BundleErrorReporter_BundleRangeInvalidInBundleVersion;
 	public static String BundleErrorReporter_R4SyntaxInR3Bundle;
 	public static String BundleErrorReporter_NotExistPDE;
+	public static String BundleErrorReporter_EmptyTargetPlatform;
 	public static String BundleErrorReporter_HostNotExistPDE;
 	public static String BundleErrorReporter_HostNeeded;
 	public static String BundleErrorReporter_PackageNotExported;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginPathFinder.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginPathFinder.java
位置:  -189,7 +189,6   public class PluginPathFinder {
 				} finally {
 					System.setProperty(URL_PROPERTY, EMPTY_STRING);
 				}
-			} catch (MalformedURLException e) {
 			} catch (IOException e) {
 			}
 		}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/SearchablePluginsManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/SearchablePluginsManager.java
位置:  -147,8 +147,7   public class SearchablePluginsManager implements IFileAdapterFactory, IPluginMod
 					}
 				}
 			}
-		} catch (IOException e) {
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 		}
 		return set;
 	}
位置:  -433,9 +432,7   public class SearchablePluginsManager implements IFileAdapterFactory, IPluginMod
 						file.create(inStream, true, new NullProgressMonitor());
 					}
 				}
-			} catch (IOException e) {
-				PDECore.log(e);
-			} catch (CoreException e) {
+			} catch (IOException | CoreException e) {
 				PDECore.log(e);
 			}
 		}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/SourceLocationManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/SourceLocationManager.java
位置:  -104,9 +104,7   public class SourceLocationManager implements ICoreConstants {
 					URI encodedUri = URIUtil.toURI(result.toFile().toURL());
 					URI jarUri = URIUtil.toJarURI(encodedUri, filePath);
 					return new URL(URIUtil.toUnencodedString(jarUri));
-				} catch (MalformedURLException e) {
-					PDECore.log(e);
-				} catch (URISyntaxException e) {
+				} catch (MalformedURLException | URISyntaxException e) {
 					PDECore.log(e);
 				}
 			}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/TargetWeaver.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/TargetWeaver.java
位置:  -17,7 +17,6   package org.eclipse.pde.internal.core;
 import java.io.BufferedInputStream;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.net.MalformedURLException;
 import java.net.URL;
位置:  -81,8 +80,6   public class TargetWeaver {
 							if (file.exists()) {
 								try (BufferedInputStream stream = new BufferedInputStream(new FileInputStream(file));) {
 									fgDevProperties.load(stream);
-								} catch (FileNotFoundException e) {
-									PDECore.log(e);
 								} catch (IOException e) {
 									PDECore.log(e);
 								}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BuildErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BuildErrorReporter.java
位置:  -14,6 +14,7  
  *     Brock Janiczak <brockj@tpg.com.au> - bug 191545
  *     Jacek Pospychala <jacek.pospychala@pl.ibm.com> - bug 221998
  *     Steven Spungin <steven@spungin.tv> - Bug 408727
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 500495
  *******************************************************************************/
 package org.eclipse.pde.internal.core.builders;
 
位置:  -692,10 +693,22   public class BuildErrorReporter extends ErrorReporter implements IBuildPropertie
 			if (nodeProduct != null) {
 				Node attValue = (Node) xpath.evaluate(
 				if (attValue != null) {
-					if (attValue.getNodeValue().isEmpty()) {
-						//Error: no URL defined but should already be reported.
+					String nodeValue = attValue.getNodeValue();
+					if (nodeValue.isEmpty()) {
+						// Error: no URL defined but should already be reported.
 					} else {
-						validateBinIncludes(binIncludes, attValue.getNodeValue());
+						String platform = 
+						if (nodeValue.startsWith(platform)) {
+							IPluginModelBase model = PluginRegistry.findModel(fProject);
+							if (model != null) {
+								String prefix = platform + model.getPluginBase().getId() + '/';
+								if (nodeValue.startsWith(prefix)) {
+									validateBinIncludes(binIncludes, nodeValue.substring(prefix.length()));
+								}
+							}
+						} else {
+							validateBinIncludes(binIncludes, nodeValue);
+						}
 					}
 				} else {
 					if (fProject.exists(new Path(
位置:  -1043,7 +1056,7   public class BuildErrorReporter extends ErrorReporter implements IBuildPropertie
 
 	private boolean startsWithAntVariable(String token) {
 		int varStart = token.indexOf(
-		return varStart != -1 &amp;&amp; varStart < token.indexOf('}'); //$NON-NLS-1$
+		return varStart != -1 &amp;&amp; varStart < token.indexOf('}');
 	}
 
 	private void validateDependencyManagement(IBuildEntry bundleList) {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java
位置:  -68,6 +68,7   import org.eclipse.pde.internal.core.NLResourceHelper;
 import org.eclipse.pde.internal.core.PDECore;
 import org.eclipse.pde.internal.core.PDECoreMessages;
 import org.eclipse.pde.internal.core.PDEManager;
+import org.eclipse.pde.internal.core.PDEState;
 import org.eclipse.pde.internal.core.TargetPlatformHelper;
 import org.eclipse.pde.internal.core.TargetWeaver;
 import org.eclipse.pde.internal.core.builders.IncrementalErrorReporter.VirtualMarker;
位置:  -795,6 +796,17   public class BundleErrorReporter extends JarManifestErrorReporter {
 			// It is possible for the bundle description to not match the headers
 			if (specs != null &amp;&amp; specs[i].getSupplier() == null) {
 				if (desc.getContainingState().getBundle(specs[i].getName(), null) == null) {
+					PDEState pdeState = TargetPlatformHelper.getPDEState();
+					if (pdeState != null) {
+						IPluginModelBase[] targetModels = pdeState.getTargetModels();
+						if (targetModels != null &amp;&amp; targetModels.length == 0) {
+							VirtualMarker marker = report(PDECoreMessages.BundleErrorReporter_EmptyTargetPlatform, 1,
+									severity, PDEMarkerFactory.M_REQ_BUNDLE_NOT_AVAILABLE, PDEMarkerFactory.CAT_FATAL);
+							addMarkerAttribute(marker, PDEMarkerFactory.compilerKey,
+									CompilerFlags.P_UNRESOLVED_IMPORTS);
+							return;
+						}
+					}
 					VirtualMarker marker = report(NLS.bind(PDECoreMessages.BundleErrorReporter_NotExistPDE, bundleID), getPackageLine(header, required[i]), severity, PDEMarkerFactory.M_REQ_BUNDLE_NOT_AVAILABLE, PDEMarkerFactory.CAT_FATAL);
 					addMarkerAttribute(marker,PDEMarkerFactory.compilerKey,  CompilerFlags.P_UNRESOLVED_IMPORTS);
 					if (marker != null) {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/DefaultSAXParser.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/DefaultSAXParser.java
位置:  -31,10 +31,7   public class DefaultSAXParser {
 			try (InputStream stream = new BufferedInputStream(file.getContents())) {
 			parser.parse(stream, reporter);
 			}
-		} catch (CoreException e) {
-		} catch (SAXException e) {
-		} catch (IOException e) {
-		} catch (ParserConfigurationException e) {
+		} catch (CoreException | SAXException | IOException | ParserConfigurationException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2000, 2017 IBM Corporation and others.
+ * Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -12,6 +12,7  
  *     IBM Corporation - initial API and implementation
  *     Code 9 Corporation - ongoing enhancements
  *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 477527
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 500495
  *******************************************************************************/
 package org.eclipse.pde.internal.core.builders;
 
位置:  -132,9 +133,9   public class ManifestConsistencyChecker extends IncrementalProjectBuilder {
 							System.out.println(
 						}
 					} else if (name.endsWith(
-						type |= EXTENSIONS;
+						type |= EXTENSIONS | BUILD;
 						if (PDECore.DEBUG_VALIDATION) {
-							System.out.print(
+							System.out.print(
 							System.out.print(delta.getResource().getProjectRelativePath().toString());
 							System.out.println(
 						}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- *  Copyright (c) 2005, 2017 IBM Corporation and others.
+ *  Copyright (c) 2005, 2019 IBM Corporation and others.
  *
  *  This program and the accompanying materials
  *  are made available under the terms of the Eclipse Public License 2.0
位置:  -217,7 +217,7   public class SchemaErrorReporter extends XMLErrorReporter {
 										errorReported = true;
 									}
 								} else {
-									String shortTag = getTagName(tagName);
+									String shortTag = tagName.trim().isEmpty() ? tagName : getTagName(tagName);
 									if (!forbiddenEndTag(shortTag)) {
 										stack.push(new StackEntry(shortTag, lineNumber));
 									}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/BundleFragment.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/BundleFragment.java
位置:  -40,7 +40,6   public class BundleFragment extends BundlePluginBase implements IBundleFragment
 		try {
 			VersionRange versionRange = new VersionRange(version);
 			return versionRange.getMinimum() != null ? versionRange.getMinimum().toString() : version;
-		} catch (NumberFormatException e) {
 		} catch (IllegalArgumentException e) {
 		}
 		return version;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/BundleModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/BundleModel.java
位置:  -71,9 +71,7   public abstract class BundleModel extends AbstractModel implements IBundleModel
 				updateTimeStamp();
 			}
 
-		} catch (BundleException e) {
-			PDECore.log(e);
-		} catch (IOException e) {
+		} catch (BundleException | IOException e) {
 			PDECore.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/WorkspaceBundleModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/WorkspaceBundleModel.java
位置:  -170,9 +170,7   public class WorkspaceBundleModel extends BundleModel implements IEditableModel
 			}
 			stream.close();
 			setLoaded(true);
-		} catch (CoreException e) {
-			PDECore.logException(e);
-		} catch (IOException e) {
+		} catch (CoreException | IOException e) {
 			PDECore.logException(e);
 		} finally {
 			try {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/exports/FeatureExportOperation.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/exports/FeatureExportOperation.java
位置:  -171,9 +171,7   public class FeatureExportOperation extends Job {
 				}
 			}
 			return status;
-		} catch (InvocationTargetException e) {
-			return new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.FeatureBasedExportOperation_ProblemDuringExport, e.getCause() != null ? e.getCause() : e);
-		} catch (CoreException e) {
+		} catch (InvocationTargetException | CoreException e) {
 			return new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.FeatureBasedExportOperation_ProblemDuringExport, e.getCause() != null ? e.getCause() : e);
 		} catch (IOException e) {
 			return new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.FeatureBasedExportOperation_ProblemDuringExport, e);
位置:  -905,10 +903,7   public class FeatureExportOperation extends Job {
 			runner.setBuildFileLocation(scriptFile.getAbsolutePath());
 			runner.setExecutionTargets(targets);
 			runner.run(subMonitor.split(1));
-		} catch (FactoryConfigurationError e) {
-		} catch (ParserConfigurationException e) {
-		} catch (CoreException e) {
-		} catch (IOException e) {
+		} catch (FactoryConfigurationError | ParserConfigurationException | CoreException | IOException e) {
 		} finally {
 			if (scriptFile != null &amp;&amp; scriptFile.exists()) {
 				scriptFile.delete();
位置:  -1007,9 +1002,7   public class FeatureExportOperation extends Job {
 
 			save(new File(file, ICoreConstants.BUILD_FILENAME_DESCRIPTOR), prop, 
 			XMLPrintHandler.writeFile(doc, new File(file, ICoreConstants.FEATURE_FILENAME_DESCRIPTOR));
-		} catch (DOMException e1) {
-		} catch (FactoryConfigurationError e1) {
-		} catch (ParserConfigurationException e1) {
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e1) {
 		}
 	}
 
位置:  -1177,9 +1170,7   public class FeatureExportOperation extends Job {
 				}
 			}
 			XMLPrintHandler.writeFile(doc, new File(file, ICoreConstants.FEATURE_FILENAME_DESCRIPTOR));
-		} catch (DOMException e1) {
-		} catch (FactoryConfigurationError e1) {
-		} catch (ParserConfigurationException e1) {
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e1) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/feature/WorkspaceFeatureModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/feature/WorkspaceFeatureModel.java
位置:  -135,9 +135,7   public class WorkspaceFeatureModel extends AbstractFeatureModel implements IEdit
 					// if we have an empty file, then mark as loaded so users changes will be saved
 					setLoaded(true);
 				}
-			} catch (CoreException e) {
-				PDECore.logException(e);
-			} catch (IOException e) {
+			} catch (CoreException | IOException e) {
 				PDECore.logException(e);
 			}
 		} else {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties
位置:  -173,6 +173,7   BundleErrorReporter_NotExistInProject=Package ''{0}'' does not exist in this plu
 BundleErrorReporter_missingPackagesInProject=This plug-in does not export all of its packages
 BundleErrorReporter_BundleRangeInvalidInBundleVersion=Unsatisfied version constraint: ''{0}''
 BundleErrorReporter_NotExistPDE=Bundle ''{0}'' cannot be resolved
+BundleErrorReporter_EmptyTargetPlatform=Target Platform is not set
 BundleErrorReporter_exportNoJRE=Cannot export packages prefixed with 'java'
 BundleErrorReporter_importNoJRE=Cannot import packages prefixed with 'java'
 BundleErrorReporter_HostNotExistPDE=Host bundle ''{0}'' cannot be resolved

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/AbstractExtensions.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/AbstractExtensions.java
位置:  -199,10 +199,7   public abstract class AbstractExtensions extends PluginObject implements IExtens
 						PluginHandler handler = new PluginHandler(true);
 						SAXParserFactory.newInstance().newSAXParser().parse(stream, handler);
 						return handler.getSchemaVersion();
-					} catch (CoreException e) {
-					} catch (SAXException e) {
-					} catch (IOException e) {
-					} catch (ParserConfigurationException e) {
+					} catch (CoreException | SAXException | IOException | ParserConfigurationException e) {
 					}
 				}
 			}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/AbstractExtensionsModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/AbstractExtensionsModel.java
位置:  -93,10 +93,7   public abstract class AbstractExtensionsModel extends AbstractNLModel implements
 			if (!outOfSync) {
 				updateTimeStamp();
 			}
-		} catch (ParserConfigurationException e) {
-		} catch (SAXException e) {
-		} catch (FactoryConfigurationError e) {
-		} catch (IOException e) {
+		} catch (ParserConfigurationException | SAXException | FactoryConfigurationError | IOException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/product/WorkspaceProductModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/product/WorkspaceProductModel.java
位置:  -85,9 +85,7   public class WorkspaceProductModel extends ProductModel implements IWorkspaceMod
 			} else {
 				fFile.create(stream, false, null);
 			}
-		} catch (CoreException e) {
-			PDECore.logException(e);
-		} catch (IOException e) {
+		} catch (CoreException | IOException e) {
 			PDECore.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectDescription.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectDescription.java
位置:  -207,9 +207,7   public class BundleProjectDescription implements IBundleProjectDescription {
 			try {
 				headers = ManifestElement.parseBundleManifest(manifest.getContents(), null);
 				fReadHeaders = headers;
-			} catch (IOException e) {
-				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage(), e));
-			} catch (BundleException e) {
+			} catch (IOException | BundleException e) {
 				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage(), e));
 			}
 			setActivator(getHeaderValue(headers, Constants.BUNDLE_ACTIVATOR));

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectService.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectService.java
位置:  -285,9 +285,7   public final class BundleProjectService implements IBundleProjectService {
 				return null;
 			}
 			return ManifestElement.parseBundleManifest(manifestStream, new Hashtable<String, String>(10));
-		} catch (BundleException e) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, TargetBundle.STATUS_INVALID_MANIFEST, NLS.bind(Messages.TargetBundle_ErrorReadingManifest, bundleLocation.getAbsolutePath()), e));
-		} catch (IOException e) {
+		} catch (BundleException | IOException e) {
 			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, TargetBundle.STATUS_INVALID_MANIFEST, NLS.bind(Messages.TargetBundle_ErrorReadingManifest, bundleLocation.getAbsolutePath()), e));
 		} finally {
 			closeZipFileAndStream(manifestStream, jarFile);

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/AbstractBundleContainer.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/AbstractBundleContainer.java
位置:  -253,11 +253,7   public abstract class AbstractBundleContainer extends PlatformObject implements
 					manipulator.load();
 					fVMArgs = manipulator.getLauncherData().getJvmArgs();
 				}
-			} catch (BundleException e) {
-				PDECore.log(e);
-			} catch (CoreException e) {
-				PDECore.log(e);
-			} catch (IOException e) {
+			} catch (BundleException | CoreException | IOException e) {
 				PDECore.log(e);
 			}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ExternalFileTargetHandle.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ExternalFileTargetHandle.java
位置:  -19,7 +19,6   import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
-import java.net.MalformedURLException;
 import java.net.URI;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IStatus;
位置:  -76,7 +75,6   public class ExternalFileTargetHandle extends AbstractTargetHandle {
 	protected InputStream getInputStream() throws CoreException {
 		try {
 			return fURI.toURL().openStream();
-		} catch (MalformedURLException e) {
 		} catch (IOException e) {
 		}
 		return null;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java
位置:  -1,11 +1,11  
 /*******************************************************************************
  * Copyright (c) 2011, 2012 IBM Corporation and others.
- *
+ *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
  * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
  * SPDX-License-Identifier: EPL-2.0
  *
  * Contributors:
位置:  -19,7 +19,6   import java.util.Collections;
 import java.util.List;
 import javax.xml.transform.OutputKeys;
 import javax.xml.transform.Transformer;
-import javax.xml.transform.TransformerConfigurationException;
 import javax.xml.transform.TransformerException;
 import javax.xml.transform.TransformerFactory;
 import javax.xml.transform.TransformerFactoryConfigurationError;
位置:  -251,11 +250,7   public class TargetPersistence38Helper {
 				transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, 
 				transformer.transform(new DOMSource(location), result);
 				container = locFactory.getTargetLocation(type, result.getWriter().toString());
-			} catch (TransformerConfigurationException e) {
-				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, Messages.TargetDefinitionPersistenceHelper_0, e));
-			} catch (TransformerException e) {
-				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, Messages.TargetDefinitionPersistenceHelper_0, e));
-			} catch (TransformerFactoryConfigurationError e) {
+			} catch (TransformerException | TransformerFactoryConfigurationError e) {
 				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, Messages.TargetDefinitionPersistenceHelper_0, e));
 			}
 		}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPlatformService.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPlatformService.java
位置:  -401,9 +401,7   public class TargetPlatformService implements ITargetPlatformService {
 					preferenceManager.flush();
 					return true;
 				}
-			} catch (CoreException e) {
-				PDECore.log(e);
-			} catch (BackingStoreException e) {
+			} catch (CoreException | BackingStoreException e) {
 				PDECore.log(e);
 			}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/ManifestUtils.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/ManifestUtils.java
位置:  -138,9 +138,7   public class ManifestUtils {
 			// The necessary bundle information has not been found in manifest.mf or plugin.xml
 			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, STATUS_CODE_NOT_A_BUNDLE_MANIFEST, NLS.bind(UtilMessages.ErrorReadingManifest, bundleLocation.getAbsolutePath()), null));
 
-		} catch (BundleException e) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, 0, NLS.bind(UtilMessages.ErrorReadingManifest, bundleLocation.getAbsolutePath()), e));
-		} catch (IOException e) {
+		} catch (BundleException | IOException e) {
 			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, 0, NLS.bind(UtilMessages.ErrorReadingManifest, bundleLocation.getAbsolutePath()), e));
 		}
 	}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/SchemaUtil.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/SchemaUtil.java
位置:  -66,20 +66,12   public class SchemaUtil {
 				SAXParserWrapper parser = new SAXParserWrapper();
 				parser.parse(input, handler);
 			}
-		} catch (MalformedURLException e) {
+		} catch (MalformedURLException | SAXException e) {
 			// Ignore
 			// Caused when URL is null
 			// This occurs when the extension point schema is first
 			// created.
-		} catch (IOException e) {
-			PDECore.logException(e);
-		} catch (SAXException e) {
-			// Ignore parse errors
-			// Handler may send a SAX Exception to prematurely abort parsing
-			// in order to save execution time.  This is not an error
-		} catch (ParserConfigurationException e) {
-			PDECore.logException(e);
-		} catch (FactoryConfigurationError e) {
+		} catch (IOException | ParserConfigurationException | FactoryConfigurationError e) {
 			PDECore.logException(e);
 		} finally {
 			try {

原文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/DocumentObject.java 
新文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/DocumentObject.java
位置:  -544,8 +544,7   public abstract class DocumentObject extends DocumentElementNode implements IDoc
 			}
 			// Reconnect
 			clone.reconnect(this, fModel);
-		} catch (IOException e) {
-		} catch (ClassNotFoundException e) {
+		} catch (IOException | ClassNotFoundException e) {
 		}
 
 		return clone;

原文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/XMLEditingModel.java 
新文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/XMLEditingModel.java
位置:  -53,11 +53,7   public abstract class XMLEditingModel extends AbstractEditingModel {
 		} catch (SAXException e) {
 			fLoaded = false;
 			status = new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage(), e);
-		} catch (IOException e) {
-			fLoaded = false;
-		} catch (ParserConfigurationException e) {
-			fLoaded = false;
-		} catch (FactoryConfigurationError e) {
+		} catch (IOException | ParserConfigurationException | FactoryConfigurationError e) {
 			fLoaded = false;
 		}
 	}
位置:  -74,10 +70,7   public abstract class XMLEditingModel extends AbstractEditingModel {
 		try {
 			SAXParserWrapper parser = new SAXParserWrapper();
 			parser.parse(getInputStream(document), createDocumentHandler(this, false));
-		} catch (SAXException e) {
-		} catch (IOException e) {
-		} catch (ParserConfigurationException e) {
-		} catch (FactoryConfigurationError e) {
+		} catch (SAXException | IOException | ParserConfigurationException | FactoryConfigurationError e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/bundle/BundleModel.java 
新文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/bundle/BundleModel.java
位置:  -55,9 +55,7   public class BundleModel extends AbstractEditingModel implements IBundleModel {
 		try {
 			fLoaded = true;
 			((Bundle) getBundle()).load(ManifestElement.parseBundleManifest(source, null));
-		} catch (BundleException e) {
-			fLoaded = false;
-		} catch (IOException e) {
+		} catch (BundleException | IOException e) {
 			fLoaded = false;
 		}
 	}

原文件: ui/org.eclipse.pde.genericeditor.extension.tests/src/org/eclipse/pde/genericeditor/extension/tests/StringAsserts.java 
新文件: ui/org.eclipse.pde.genericeditor.extension.tests/src/org/eclipse/pde/genericeditor/extension/tests/StringAsserts.java
位置:  -132,7 +132,7   public class StringAsserts {
 				assertEqualString(list1.get(0), list2.get(0));
 			}
 
-			StringBuffer buf = new StringBuffer();
+			StringBuilder buf = new StringBuilder();
 			for (int i = 0; i < n1; i++) {
 				String s1 = list1.get(i);
 				if (s1 != null) {
位置:  -142,7 +142,7   public class StringAsserts {
 			}
 			String actual = buf.toString();
 
-			buf = new StringBuffer();
+			buf = new StringBuilder();
 			for (int i = 0; i < n2; i++) {
 				String s2 = list2.get(i);
 				if (s2 != null) {
位置:  -175,7 +175,7   public class StringAsserts {
 				assertEqualString(list1.get(0), list2.get(0));
 			}
 
-			StringBuffer buf = new StringBuffer();
+			StringBuilder buf = new StringBuilder();
 			for (int i = 0; i < n1; i++) {
 				String s1 = list1.get(i);
 				if (s1 != null) {
位置:  -185,7 +185,7   public class StringAsserts {
 			}
 			String actual = buf.toString();
 
-			buf = new StringBuffer();
+			buf = new StringBuilder();
 			for (int i = 0; i < n2; i++) {
 				String s2 = list2.get(i);
 				if (s2 != null) {

原文件: ui/org.eclipse.pde.junit.runtime.tests/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.pde.junit.runtime.tests</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,107  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=enabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=warning
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=ignore
+org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=warning
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=warning
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=warning
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=warning
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=warning
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/.settings/org.eclipse.pde.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/.settings/org.eclipse.pde.prefs
位置:  -0,0 +1,34  
+compilers.f.unresolved-features=1
+compilers.f.unresolved-plugins=1
+compilers.incompatible-environment=1
+compilers.p.build=1
+compilers.p.build.bin.includes=1
+compilers.p.build.encodings=2
+compilers.p.build.java.compiler=2
+compilers.p.build.java.compliance=1
+compilers.p.build.missing.output=2
+compilers.p.build.output.library=1
+compilers.p.build.source.library=1
+compilers.p.build.src.includes=1
+compilers.p.deprecated=1
+compilers.p.discouraged-class=1
+compilers.p.internal=1
+compilers.p.missing-packages=2
+compilers.p.missing-version-export-package=2
+compilers.p.missing-version-import-package=2
+compilers.p.missing-version-require-bundle=2
+compilers.p.no-required-att=0
+compilers.p.no.automatic.module=2
+compilers.p.not-externalized-att=2
+compilers.p.service.component.without.lazyactivation=1
+compilers.p.unknown-attribute=1
+compilers.p.unknown-class=1
+compilers.p.unknown-element=1
+compilers.p.unknown-identifier=1
+compilers.p.unknown-resource=1
+compilers.p.unresolved-ex-points=0
+compilers.p.unresolved-import=0
+compilers.s.create-docs=false
+compilers.s.doc-folder=doc
+compilers.s.open-tags=1
+eclipse.preferences.version=1

原文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF
位置:  -0,0 +1,20  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: PDE JUnit Runtime Tests
+Bundle-SymbolicName: org.eclipse.pde.junit.runtime.tests;singleton:=true
+Bundle-Version: 3.5.500.qualifier
+Automatic-Module-Name: org.eclipse.pde.junit.runtime.tests
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Bundle-Vendor: Eclipse.org
+Bundle-ActivationPolicy: lazy
+Eclipse-BundleShape: dir
+Require-Bundle: org.junit,
+ org.hamcrest.library;bundle-version=
+ org.eclipse.core.runtime;bundle-version=
+ org.eclipse.pde.launching;bundle-version=
+ org.eclipse.core.resources;bundle-version=
+ org.eclipse.pde.ui;bundle-version=
+ org.eclipse.jdt.junit;bundle-version=
+ org.eclipse.jdt.core;bundle-version=
+ org.eclipse.debug.ui;bundle-version=
+ org.eclipse.ui;bundle-version=

原文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties
位置:  -0,0 +1,5  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .,\
+               test-bundles/

原文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml
位置:  -0,0 +1,87  
+<?xml version=
+<!--
+  Copyright (c) 2019 Julian Honnen
+ 
+  This program and the accompanying materials
+  are made available under the terms of the Eclipse Public License 2.0
+  which accompanies this distribution, and is available at
+  https://www.eclipse.org/legal/epl-2.0/
+ 
+  SPDX-License-Identifier: EPL-2.0
+ 
+  Contributors:
+     Julian Honnen <julian.honnen@vector.com> - initial implementation
+-->
+<project
+	xmlns=
+	xmlns:xsi=
+	xsi:schemaLocation=
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>tests-pom</artifactId>
+		<groupId>eclipse.pde.ui</groupId>
+		<version>4.13.0-SNAPSHOT</version>
+		<relativePath>../../tests-pom/</relativePath>
+	</parent>
+	<groupId>org.eclipse.pde</groupId>
+	<artifactId>org.eclipse.pde.junit.runtime.tests</artifactId>
+	<version>3.5.500-SNAPSHOT</version>
+	<packaging>eclipse-test-plugin</packaging>
+	
+	<properties>
+		<skipAPIAnalysis>true</skipAPIAnalysis>
+	</properties>
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.eclipse.tycho</groupId>
+				<artifactId>tycho-surefire-plugin</artifactId>
+				<version>${tycho.version}</version>
+				<configuration>
+					<useUIHarness>true</useUIHarness>
+					<useUIThread>true</useUIThread>
+				</configuration>
+			</plugin>
+
+			<plugin>
+				<groupId>org.eclipse.tycho</groupId>
+				<artifactId>target-platform-configuration</artifactId>
+				<version>${tycho.version}</version>
+				<configuration>
+					<dependency-resolution>
+						<extraRequirements>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.eclipse.osgi.compatibility.state</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.junit.jupiter.api</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.eclipse.jdt.junit4.runtime</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.eclipse.jdt.junit5.runtime</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.eclipse.pde.junit.runtime</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+						</extraRequirements>
+					</dependency-resolution>
+				</configuration>
+			</plugin>
+
+		</plugins>
+	</build>
+
+</project>

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitExecutionTest.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitExecutionTest.java
位置:  -0,0 +1,176  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.junit.runtime.tests;
+
+import static org.hamcrest.MatcherAssert.assertThat;
+import static org.hamcrest.collection.IsArrayWithSize.arrayWithSize;
+import static org.hamcrest.core.Is.is;
+import static org.junit.Assert.assertNotNull;
+
+import java.net.URL;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IProjectDescription;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.FileLocator;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.jdt.core.IJavaProject;
+import org.eclipse.jdt.core.IMethod;
+import org.eclipse.jdt.core.IPackageFragment;
+import org.eclipse.jdt.core.IType;
+import org.eclipse.jdt.core.JavaCore;
+import org.eclipse.jdt.core.JavaModelException;
+import org.eclipse.jdt.junit.model.ITestElement;
+import org.eclipse.jdt.junit.model.ITestElement.FailureTrace;
+import org.eclipse.jdt.junit.model.ITestElement.Result;
+import org.eclipse.jdt.junit.model.ITestElementContainer;
+import org.eclipse.jdt.junit.model.ITestRunSession;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.junit.runners.Parameterized;
+import org.junit.runners.Parameterized.Parameter;
+import org.junit.runners.Parameterized.Parameters;
+import org.osgi.framework.Bundle;
+import org.osgi.framework.FrameworkUtil;
+
+import junit.framework.AssertionFailedError;
+
+@RunWith(Parameterized.class)
+public class JUnitExecutionTest {
+
+	@Parameter
+	public TestInput input;
+
+	@BeforeClass
+	public static void setupProjects() throws Exception {
+		TargetPlatformUtil.setRunningPlatformAsTarget();
+
+		Bundle bundle = FrameworkUtil.getBundle(JUnitExecutionTest.class);
+
+		IWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();
+		for (URL resource : Collections.list(bundle.findEntries(
+			Path resourcePath = new Path(FileLocator.toFileURL(resource).getPath());
+			IPath descriptionPath = resourcePath.append(IProjectDescription.DESCRIPTION_FILE_NAME);
+			if (!descriptionPath.toFile().exists())
+				continue;
+
+			IProjectDescription projectDescription = workspaceRoot.getWorkspace()
+					.loadProjectDescription(descriptionPath);
+			IProject project = workspaceRoot.getProject(resourcePath.lastSegment());
+			if (!project.exists()) {
+				project.create(projectDescription, null);
+				project.open(null);
+			}
+		}
+	}
+
+	@Parameters(name = 
+	public static Collection<TestInput> parameters() {
+		return Arrays.asList(new TestInput(
+				new TestInput(
+				new TestInput(
+				new TestInput(
+				new TestInput(
+				new TestInput(
+	}
+
+	@Test
+	public void executeType() throws Exception {
+		IType testClass = input.findType(
+		ITestRunSession session = TestExecutionUtil.runTest(testClass);
+
+		assertThat(session.getChildren(), is(arrayWithSize(1)));
+		assertSuccessful(session);
+	}
+
+	@Test
+	public void executePackage() throws Exception {
+		IPackageFragment testPackage = input.findType(
+		ITestRunSession session = TestExecutionUtil.runTest(testPackage);
+
+		assertThat(session.getChildren(), is(arrayWithSize(2)));
+		assertSuccessful(session);
+	}
+
+	@Test
+	public void executeProject() throws Exception {
+		ITestRunSession session = TestExecutionUtil.runTest(input.project);
+
+		assertThat(session.getChildren(), is(arrayWithSize(2)));
+		assertSuccessful(session);
+	}
+
+	@Test
+	public void executeMethod() throws Exception {
+		IMethod testMethod = input.findType(
+		ITestRunSession session = TestExecutionUtil.runTest(testMethod);
+
+		assertThat(session.getChildren(), is(arrayWithSize(1)));
+		assertSuccessful(session);
+	}
+
+	private void assertSuccessful(ITestRunSession session) {
+		Result testResult = session.getTestResult(true);
+		if (ITestElement.Result.OK.equals(testResult))
+			return;
+		
+		AssertionFailedError assertionFailedError = new AssertionFailedError(
+		addFailureTraces(session, assertionFailedError);
+		
+		throw assertionFailedError;
+	}
+
+	private void addFailureTraces(ITestElement element, AssertionFailedError assertionFailedError) {
+		FailureTrace trace = element.getFailureTrace();
+		if (trace != null) {
+			assertionFailedError.addSuppressed(new AssertionFailedError(
+		}
+		
+		if (element instanceof ITestElementContainer) {
+			for (ITestElement child : ((ITestElementContainer) element).getChildren()) {
+				addFailureTraces(child, assertionFailedError);
+			}
+		}
+	}
+
+	static class TestInput {
+		private final String displayName;
+
+		final IJavaProject project;
+
+		public TestInput(String displayName, String projectName) {
+			this.displayName = displayName;
+			IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);
+			this.project = JavaCore.create(project);
+		}
+
+		@Override
+		public String toString() {
+			return displayName;
+		}
+
+		public IType findType(String name) throws JavaModelException {
+			IType type = project.findType(project.getElementName(), name);
+			assertNotNull(type);
+			return type;
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java
位置:  -0,0 +1,69  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.junit.runtime.tests;
+
+import java.util.Arrays;
+import org.eclipse.core.runtime.*;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.osgi.internal.framework.EquinoxBundle;
+import org.eclipse.osgi.storage.BundleInfo.Generation;
+import org.eclipse.pde.core.target.*;
+import org.eclipse.pde.internal.core.PDECore;
+import org.osgi.framework.Bundle;
+import org.osgi.framework.FrameworkUtil;
+
+public class TargetPlatformUtil {
+
+	private static final String TARGET_NAME = TargetPlatformUtil.class + 
+
+	public static void setRunningPlatformAsTarget() throws CoreException, InterruptedException {
+		ITargetPlatformService tps = PDECore.getDefault().acquireService(ITargetPlatformService.class);
+		ITargetDefinition currentTarget = tps.getWorkspaceTargetDefinition();
+		if (TARGET_NAME.equals(currentTarget.getName())) {
+			return;
+		}
+
+		Job job = new LoadTargetDefinitionJob(createTarget(tps));
+		job.schedule();
+		job.join();
+
+		IStatus result = job.getResult();
+		if (!result.isOK()) {
+			throw new AssertionError(result.getMessage(), result.getException());
+		}
+	}
+
+	private static ITargetDefinition createTarget(ITargetPlatformService tps) throws CoreException {
+		ITargetDefinition targetDefinition = tps.newDefaultTarget();
+		targetDefinition.setName(TARGET_NAME);
+
+		Bundle[] installedBundles = FrameworkUtil.getBundle(TargetPlatformUtil.class).getBundleContext().getBundles();
+		ITargetLocation[] bundleContainers = Arrays.stream(installedBundles).map(bundle -> {
+			EquinoxBundle bundleImpl = (EquinoxBundle) bundle;
+			Generation generation = (Generation) bundleImpl.getModule().getCurrentRevision().getRevisionInfo();
+			return generation.getBundleFile();
+		}).map(f -> f.getBaseFile().getParentFile()).distinct()
+				.map(dir -> tps.newDirectoryLocation(dir.getAbsolutePath())).toArray(ITargetLocation[]::new);
+
+		targetDefinition.setTargetLocations(bundleContainers);
+		targetDefinition.setArch(Platform.getOSArch());
+		targetDefinition.setOS(Platform.getOS());
+		targetDefinition.setWS(Platform.getWS());
+		targetDefinition.setNL(Platform.getNL());
+
+		tps.saveTargetDefinition(targetDefinition);
+		return targetDefinition;
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java
位置:  -0,0 +1,138  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.junit.runtime.tests;
+
+import static java.util.stream.Collectors.toList;
+import static org.hamcrest.MatcherAssert.assertThat;
+import static org.hamcrest.Matchers.empty;
+import static org.hamcrest.core.Is.is;
+import static org.junit.Assert.fail;
+
+import java.util.Arrays;
+import java.util.List;
+import java.util.concurrent.BlockingQueue;
+import java.util.concurrent.LinkedBlockingDeque;
+import java.util.concurrent.TimeUnit;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IncrementalProjectBuilder;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.debug.core.DebugPlugin;
+import org.eclipse.debug.core.ILaunch;
+import org.eclipse.debug.core.ILaunchConfiguration;
+import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
+import org.eclipse.debug.core.ILaunchManager;
+import org.eclipse.debug.core.ILaunchesListener2;
+import org.eclipse.debug.ui.DebugUITools;
+import org.eclipse.jdt.core.IJavaElement;
+import org.eclipse.jdt.junit.JUnitCore;
+import org.eclipse.jdt.junit.TestRunListener;
+import org.eclipse.jdt.junit.model.ITestRunSession;
+import org.eclipse.pde.internal.launching.IPDEConstants;
+import org.eclipse.pde.launching.IPDELauncherConstants;
+import org.eclipse.pde.ui.launcher.JUnitWorkbenchLaunchShortcut;
+
+class TestExecutionUtil {
+
+	public static ITestRunSession runTest(IJavaElement element) throws CoreException {
+		IProject project = element.getResource().getProject();
+		project.build(IncrementalProjectBuilder.FULL_BUILD, null);
+		List<IMarker> errorMarkers = Arrays.stream(project.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE)) //
+				.filter(m -> m.getAttribute(IMarker.SEVERITY, 0) == IMarker.SEVERITY_ERROR) //
+				.collect(toList());
+		assertThat(
+
+		TestLaunchShortcut launchShortcut = new TestLaunchShortcut();
+		ILaunchConfigurationWorkingCopy launchConfiguration = launchShortcut.createLaunchConfiguration(element);
+		launchConfiguration.setAttribute(IPDELauncherConstants.APPLICATION, IPDEConstants.CORE_TEST_APPLICATION);
+
+		BlockingQueue<ITestRunSession> testResult = new LinkedBlockingDeque<>();
+		TestRunListener testRunListener = new TestRunListener() {
+			@Override
+			public void sessionFinished(ITestRunSession session) {
+				testResult.add(session);
+			}
+		};
+		JUnitCore.addTestRunListener(testRunListener);
+
+		try {
+			launchAndWaitForTermination(launchConfiguration);
+			ITestRunSession result = testResult.poll();
+			if (result == null) {
+				fail(
+			}
+			return result;
+		} finally {
+			JUnitCore.removeTestRunListener(testRunListener);
+		}
+	}
+
+	private static void launchAndWaitForTermination(ILaunchConfiguration launchConfiguration) throws CoreException {
+		BlockingQueue<ILaunch> terminatedLaunches = new LinkedBlockingDeque<>();
+		ILaunchManager launchManager = DebugPlugin.getDefault().getLaunchManager();
+		ILaunchesListener2 listener = new ILaunchesListener2() {
+			@Override
+			public void launchesRemoved(ILaunch[] launches) {
+				terminatedLaunches.addAll(Arrays.asList(launches));
+			}
+
+			@Override
+			public void launchesChanged(ILaunch[] launches) {
+			}
+
+			@Override
+			public void launchesAdded(ILaunch[] launches) {
+			}
+
+			@Override
+			public void launchesTerminated(ILaunch[] launches) {
+				terminatedLaunches.addAll(Arrays.asList(launches));
+			}
+		};
+		launchManager.addLaunchListener(listener);
+
+		ILaunch launch = DebugUITools.buildAndLaunch(launchConfiguration, ILaunchManager.RUN_MODE,
+				new NullProgressMonitor());
+
+		try {
+			while (true) {
+				ILaunch terminatedLaunch = terminatedLaunches.poll(5, TimeUnit.MINUTES);
+				if (terminatedLaunch == null) {
+					fail(
+				}
+
+				if (launch.equals(terminatedLaunch)) {
+					break;
+				}
+			}
+		} catch (InterruptedException e) {
+			Thread.currentThread().interrupt();
+			throw new RuntimeException(
+		} finally {
+			launchManager.removeLaunchListener(listener);
+			if (!launch.isTerminated()) {
+				launch.terminate();
+			}
+		}
+	}
+
+	private static class TestLaunchShortcut extends JUnitWorkbenchLaunchShortcut {
+		public ILaunchConfigurationWorkingCopy createLaunchConfiguration(IJavaElement element) throws CoreException {
+			return super.createLaunchConfiguration(element);
+		}
+	}
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/.gitignore 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/.gitignore
位置:  -0,0 +1  
+bin/

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit4.fragment</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/META-INF/MANIFEST.MF
位置:  -0,0 +1,9  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Fragment
+Bundle-SymbolicName: verification.tests.junit4.fragment
+Bundle-Version: 1.0.0.qualifier
+Fragment-Host: verification.tests.junit4;bundle-version=
+Automatic-Module-Name: verification.tests.junit5.fragment
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Export-Package: verification.tests.junit4.fragment

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/src/verification/tests/junit4/fragment/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/src/verification/tests/junit4/fragment/Test1.java
位置:  -0,0 +1,29  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.fragment;
+
+import org.junit.Test;
+
+public class Test1 {
+
+	@Test
+	public void test1() {
+		
+	}
+	
+	@Test
+	public void test2() {
+		
+	}
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/src/verification/tests/junit4/fragment/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/src/verification/tests/junit4/fragment/Test2.java
位置:  -0,0 +1,25  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.fragment;
+
+import org.junit.Test;
+
+public class Test2 {
+
+	@Test
+	public void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit4.platform.fragment</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/META-INF/MANIFEST.MF
位置:  -0,0 +1,9  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Fragment
+Bundle-SymbolicName: verification.tests.junit4.platform.fragment
+Bundle-Version: 1.0.0.qualifier
+Fragment-Host: verification.tests.junit4.platform;bundle-version=
+Automatic-Module-Name: verification.tests.junit5.fragment
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Export-Package: verification.tests.junit4.platform.fragment

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/src/verification/tests/junit4/platform/fragment/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/src/verification/tests/junit4/platform/fragment/Test1.java
位置:  -0,0 +1,33  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.platform.fragment;
+
+import org.junit.Test;
+import org.junit.platform.runner.JUnitPlatform;
+import org.junit.runner.RunWith;
+
+@RunWith(JUnitPlatform.class)
+public class Test1 {
+
+	@Test
+	public void test1() {
+
+	}
+
+	@Test
+	public void test2() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/src/verification/tests/junit4/platform/fragment/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/src/verification/tests/junit4/platform/fragment/Test2.java
位置:  -0,0 +1,28  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.platform.fragment;
+
+import org.junit.Test;
+import org.junit.platform.runner.JUnitPlatform;
+import org.junit.runner.RunWith;
+
+@RunWith(JUnitPlatform.class)
+public class Test2 {
+
+	@Test
+	public void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit4.platform</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/META-INF/MANIFEST.MF
位置:  -0,0 +1,14  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Tests
+Bundle-SymbolicName: verification.tests.junit4.platform
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: verification.tests
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Require-Bundle: org.junit;bundle-version=
+ org.junit.platform.runner;bundle-version=
+ org.junit.jupiter.engine;bundle-version=
+ org.junit.jupiter.api;bundle-version=
+ org.junit.platform.launcher;bundle-version=
+ org.junit.platform.suite.api;bundle-version=
+Export-Package: verification.tests.junit4.platform

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/src/verification/tests/junit4/platform/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/src/verification/tests/junit4/platform/Test1.java
位置:  -0,0 +1,33  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.platform;
+
+import org.junit.Test;
+import org.junit.platform.runner.JUnitPlatform;
+import org.junit.runner.RunWith;
+
+@RunWith(JUnitPlatform.class)
+public class Test1 {
+
+	@Test
+	public void test1() {
+
+	}
+
+	@Test
+	public void test2() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/src/verification/tests/junit4/platform/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/src/verification/tests/junit4/platform/Test2.java
位置:  -0,0 +1,28  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.platform;
+
+import org.junit.Test;
+import org.junit.platform.runner.JUnitPlatform;
+import org.junit.runner.RunWith;
+
+@RunWith(JUnitPlatform.class)
+public class Test2 {
+
+	@Test
+	public void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit4</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/META-INF/MANIFEST.MF
位置:  -0,0 +1,9  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Tests
+Bundle-SymbolicName: verification.tests.junit4
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: verification.tests
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Require-Bundle: org.junit;bundle-version=
+Export-Package: verification.tests.junit4

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/src/verification/tests/junit4/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/src/verification/tests/junit4/Test1.java
位置:  -0,0 +1,30  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4;
+
+import org.junit.Test;
+
+public class Test1 {
+
+	@Test
+	public void test1() {
+
+	}
+	
+	@Test
+	public void test2() {
+		
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/src/verification/tests/junit4/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/src/verification/tests/junit4/Test2.java
位置:  -0,0 +1,25  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4;
+
+import org.junit.Test;
+
+public class Test2 {
+
+	@Test
+	public void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit5.fragment</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/META-INF/MANIFEST.MF
位置:  -0,0 +1,9  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Fragment
+Bundle-SymbolicName: verification.tests.junit5.fragment
+Bundle-Version: 1.0.0.qualifier
+Fragment-Host: verification.tests.junit5;bundle-version=
+Automatic-Module-Name: verification.tests.junit5.fragment
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Export-Package: verification.tests.junit5.fragment

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/src/verification/tests/junit5/fragment/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/src/verification/tests/junit5/fragment/Test1.java
位置:  -0,0 +1,30  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit5.fragment;
+
+import org.junit.jupiter.api.Test;
+
+class Test1 {
+
+	@Test
+	void test1() {
+
+	}
+
+	@Test
+	void test2() {
+
+	}
+	
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/src/verification/tests/junit5/fragment/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/src/verification/tests/junit5/fragment/Test2.java
位置:  -0,0 +1,25  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit5.fragment;
+
+import org.junit.jupiter.api.Test;
+
+class Test2 {
+
+	@Test
+	void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit5</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/META-INF/MANIFEST.MF
位置:  -0,0 +1,10  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Tests
+Bundle-SymbolicName: verification.tests.junit5
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: verification.tests
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Require-Bundle: org.junit;bundle-version=
+ org.junit.jupiter.api;bundle-version=
+Export-Package: verification.tests.junit5

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/src/verification/tests/junit5/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/src/verification/tests/junit5/Test1.java
位置:  -0,0 +1,30  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit5;
+
+import org.junit.jupiter.api.Test;
+
+class Test1 {
+
+	@Test
+	void test1() {
+
+	}
+
+	@Test
+	void test2() {
+
+	}
+	
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/src/verification/tests/junit5/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/src/verification/tests/junit5/Test2.java
位置:  -0,0 +1,25  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit5;
+
+import org.junit.jupiter.api.Test;
+
+class Test2 {
+
+	@Test
+	void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.junit.runtime; singleton:=true
-Bundle-Version: 3.5.400.qualifier
+Bundle-Version: 3.5.500.qualifier
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.jdt.junit.runtime;bundle-version=

原文件: ui/org.eclipse.pde.junit.runtime/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.junit.runtime</artifactId>
-  <version>3.5.400-SNAPSHOT</version>
+  <version>3.5.500-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.pde.junit.runtime/src/org/eclipse/pde/internal/junit/runtime/RemotePluginTestRunner.java 
新文件: ui/org.eclipse.pde.junit.runtime/src/org/eclipse/pde/internal/junit/runtime/RemotePluginTestRunner.java
位置:  -14,13 +14,12  
  *******************************************************************************/
 package org.eclipse.pde.internal.junit.runtime;
 
-import java.io.*;
-import java.net.URI;
+import java.io.IOException;
 import java.net.URL;
 import java.util.*;
+import org.eclipse.core.runtime.FileLocator;
 import org.eclipse.core.runtime.Platform;
 import org.eclipse.jdt.internal.junit.runner.RemoteTestRunner;
-import org.eclipse.osgi.internal.framework.EquinoxBundle;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.FrameworkUtil;
 import org.osgi.framework.wiring.BundleWiring;
位置:  -80,77 +79,17   public class RemotePluginTestRunner extends RemoteTestRunner {
 
 		@Override
 		public Enumeration<URL> getResources(String res) throws IOException {
-			List<URL> resources = new ArrayList<>(6);
-			String location = null;
-			URL url = null;
-			if (bundle instanceof EquinoxBundle) {
-				location = ((EquinoxBundle) bundle).getLocation();
-			}
-			if (location != null &amp;&amp; location.startsWith(
-				location = location.substring(10, location.length());
-				URI uri = URI.create(location);
-				String newPath = uri.getPath() + 
-				URI newUri = uri.resolve(newPath);
-				url = newUri.normalize().toURL();
-			}
-			if (url != null) {
-				File f = new File(url.getFile());
-				if (f.exists()){
-					resources.add(url);
-				} else {
-					Set<String> outputPaths = getOutputPaths();
-					for (String string : outputPaths) {
-						URI uri = URI.create(location);
-						String newPath = uri.getPath() + string + '/' + res;
-						URI newUri = uri.resolve(newPath);
-						url = newUri.normalize().toURL();
-						if (url != null) {
-							File f2 = new File(url.getFile());
-							if (f2.exists()) {
-								resources.add(url);
-							}
-						}
-					}
-				}
-			}
-			else
+			Enumeration<URL> bundleResources = bundle.getResources(res);
+			if (bundleResources == null)
 				return Collections.emptyEnumeration();
 
-			return Collections.enumeration(resources);
-		}
-
-		private Set<String> getOutputPaths() {
-			String location = bundle.getLocation();
-			location = location.substring(16);
-			File cpFile = new File(location + 
-			Set<String> paths = new HashSet<String>();
-			try (BufferedReader br = new BufferedReader(new FileReader(cpFile.getAbsoluteFile()))) {
-				String line;
-				while ((line = br.readLine()) != null) {
-					if (line.contains(
-						int index = line.indexOf(
-						if (index >= 0) {
-							line = line.substring(index);
-							line = line.substring(line.indexOf(
-							line = line.substring(0, line.indexOf(
-							paths.add(line);
-						}
-					}
-					if (line.contains(
-						int index = line.indexOf(
-						if (index >= 0) {
-							line = line.substring(index);
-							line = line.substring(line.indexOf(
-							line = line.substring(0, line.indexOf(
-							paths.add(line);
-						}
-					}
-				}
-			} catch (IOException e) {
-				// return set collected so far
+			List<URL> compatibleResources = new ArrayList<>();
+			while (bundleResources.hasMoreElements()) {
+				URL nativeUrl = FileLocator.resolve(bundleResources.nextElement());
+				compatibleResources.add(nativeUrl);
 			}
-			return paths;
 
+			return Collections.enumeration(compatibleResources);
 		}
 	}
 

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/EquinoxInitializer.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/EquinoxInitializer.java
位置:  -75,7 +75,7   public class EquinoxInitializer extends OSGiLaunchConfigurationInitializer {
 	protected String getAutoStart(String bundleID) {
 		if (fStartLevels.containsKey(bundleID)) {
 			String value = fStartLevels.get(bundleID).toString();
-			return value.substring(value.indexOf(
+			return value.substring(value.indexOf(':') + 1); //$NON-NLS-1$
 		}
 		return super.getAutoStart(bundleID);
 	}
位置:  -84,7 +84,7   public class EquinoxInitializer extends OSGiLaunchConfigurationInitializer {
 	protected String getStartLevel(String bundleID) {
 		if (fStartLevels.containsKey(bundleID)) {
 			String value = fStartLevels.get(bundleID).toString();
-			return value.substring(0, value.indexOf(
+			return value.substring(0, value.indexOf(':')); //$NON-NLS-1$
 		}
 		return super.getStartLevel(bundleID);
 	}
位置:  -99,7 +99,7   public class EquinoxInitializer extends OSGiLaunchConfigurationInitializer {
 				StringTokenizer tokenizer = new StringTokenizer(value, 
 				while (tokenizer.hasMoreTokens()) {
 					String tokenValue = tokenizer.nextToken();
-					int index = tokenValue.indexOf(
+					int index = tokenValue.indexOf('@'); //$NON-NLS-1$
 					if (index > 0) {
 						String bundle = tokenValue.substring(0, index).trim();
 						fStartLevels.put(bundle, getStartValue(tokenValue.substring(index)));

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java
位置:  -15,7 +15,6  
 package org.eclipse.pde.internal.launching.launcher;
 
 import java.io.*;
-import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.*;
 import org.eclipse.core.resources.*;
位置:  -93,13 +92,7   public class LauncherUtils {
 					isLocked = targetLocation.isLocked();
 				}
 			}
-		} catch (InvalidSyntaxException e) {
-			PDECore.log(e);
-			isLocked = false;
-		} catch (MalformedURLException e) {
-			PDECore.log(e);
-			isLocked = false;
-		} catch (IOException e) {
+		} catch (InvalidSyntaxException | IOException e) {
 			PDECore.log(e);
 			isLocked = false;
 		}

原文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.runtime; singleton:=true
-Bundle-Version: 3.6.500.qualifier
+Bundle-Version: 3.6.600.qualifier
 Bundle-Activator: org.eclipse.pde.internal.runtime.PDERuntimePlugin
 Bundle-Vendor: %provider-name
 Bundle-Localization: plugin

原文件: ui/org.eclipse.pde.runtime/pom.xml 
新文件: ui/org.eclipse.pde.runtime/pom.xml
位置:  -20,7 +20,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.runtime</artifactId>
-  <version>3.6.500-SNAPSHOT</version>
+  <version>3.6.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
   <properties>

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/spy/SpyIDEUtil.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/spy/SpyIDEUtil.java
位置:  -66,9 +66,7   public class SpyIDEUtil {
 		try {
 			IType type = project.findType(clazz);
 			JavaUI.openInEditor(type, false, true);
-		} catch (JavaModelException e) {
-			PDERuntimePlugin.log(e);
-		} catch (PartInitException e) {
+		} catch (JavaModelException | PartInitException e) {
 			PDERuntimePlugin.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui.templates/templates_3.5/E4Application/$pluginId$.product 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.5/E4Application/$pluginId$.product
位置:  -51,6 +51,7  
       <plugin id=
       <plugin id=
       <plugin id=
+      <plugin id=
       <plugin id=
       <plugin id=
       <plugin id=

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/imports/ImportFeatureProjectsTestCase.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/imports/ImportFeatureProjectsTestCase.java
位置:  -58,9 +58,7   public class ImportFeatureProjectsTestCase extends NewProjectTestCase {
 			PDEPlugin.getWorkspace().run(op, new NullProgressMonitor());
 			if (models.length > 0)
 				lookingAtProject(models[0]);
-		} catch (OperationCanceledException e) {
-			fail(
-		} catch (CoreException e) {
+		} catch (OperationCanceledException | CoreException e) {
 			fail(
 		}
 	}

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/model/xml/XMLModelTestCase.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/model/xml/XMLModelTestCase.java
位置:  -80,9 +80,7   public abstract class XMLModelTestCase extends TestCase {
 		multi.addChildren(ops);
 		try {
 			multi.apply(fDocument);
-		} catch (MalformedTreeException e) {
-			fail(e.getMessage());
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			fail(e.getMessage());
 		}
 		load();

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/util/xml/ParserWrapperTestCase.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/util/xml/ParserWrapperTestCase.java
位置:  -119,16 +119,7   public class ParserWrapperTestCase extends TestCase {
 					SAXParserWrapper parser = new SAXParserWrapper();
 					parser.parse(fParserXMLFile, handler);
 					parser.dispose();
-				} catch (ParserConfigurationException e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (SAXException e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (FactoryConfigurationError e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (IOException e) {
+				} catch (ParserConfigurationException | SAXException | FactoryConfigurationError | IOException e) {
 					e.printStackTrace();
 					fError = true;
 				}
位置:  -147,16 +138,7   public class ParserWrapperTestCase extends TestCase {
 
 				try (DOMParserWrapper parser = new DOMParserWrapper()) {
 					parser.parse(fParserXMLFile);
-				} catch (ParserConfigurationException e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (SAXException e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (FactoryConfigurationError e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (IOException e) {
+				} catch (ParserConfigurationException | SAXException | FactoryConfigurationError | IOException e) {
 					e.printStackTrace();
 					fError = true;
 				}

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/wizards/ConvertProjectToPluginTestCase.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/wizards/ConvertProjectToPluginTestCase.java
位置:  -133,9 +133,7   public class ConvertProjectToPluginTestCase extends PDETestCase {
 		IProgressService progressService = PlatformUI.getWorkbench().getProgressService();
 		try {
 			progressService.runInUI(progressService, convertOperation, null);
-		} catch (InvocationTargetException e) {
-			fail(
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			fail(
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java
位置:  -3242,6 +3242,7   public class PDEUIMessages extends NLS {
 	public static String PDEJavaHelper_msgContentAssistAvailableWithKeyBinding;
 
 	public static String AddExportPackageResolution_Label;
+	public static String AddExportPackageInternalDirectiveResolution_Label;
 	public static String AddBundleClassPathResolution_add;
 
 	public static String AddBundleManifestVersionResolution_description;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/compare/ManifestStructureCreator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/compare/ManifestStructureCreator.java
位置:  -128,7 +128,7   public class ManifestStructureCreator extends StructureCreator {
 	}
 
 	private String extractKey(String headerBuffer) {
-		int assign = headerBuffer.indexOf(
+		int assign = headerBuffer.indexOf(':'); //$NON-NLS-1$
 		if (assign != -1)
 			return headerBuffer.substring(0, assign);
 		return headerBuffer;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddExportPackageInternalDirectiveMarkerResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddExportPackageInternalDirectiveMarkerResolution.java
位置:  -0,0 +1,47  
+/*******************************************************************************
+ *  Copyright (c) 2019 IBM Corporation and others.
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.correction;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.pde.internal.core.ibundle.IBundle;
+import org.eclipse.pde.internal.core.text.bundle.*;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.osgi.framework.Constants;
+
+public class AddExportPackageInternalDirectiveMarkerResolution extends AddExportPackageMarkerResolution {
+
+	public AddExportPackageInternalDirectiveMarkerResolution(IMarker mark, int type, String values) {
+		super(mark, type, values);
+	}
+
+	@Override
+	public String getLabel() {
+		return PDEUIMessages.AddExportPackageInternalDirectiveResolution_Label;
+	}
+
+	@Override
+	protected void createChange(BundleModel model) {
+		IBundle bundle = model.getBundle();
+		if (bundle instanceof Bundle) {
+			Bundle bun = (Bundle) bundle;
+			ExportPackageHeader header = (ExportPackageHeader) bun.getManifestHeader(Constants.EXPORT_PACKAGE);
+			if (header == null) {
+				bundle.setHeader(Constants.EXPORT_PACKAGE, 
+				header = (ExportPackageHeader) bun.getManifestHeader(Constants.EXPORT_PACKAGE);
+			}
+			processPackages(header, true);
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddExportPackageMarkerResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddExportPackageMarkerResolution.java
位置:  -48,11 +48,11   public class AddExportPackageMarkerResolution extends AbstractManifestMarkerReso
 				bundle.setHeader(Constants.EXPORT_PACKAGE, 
 				header = (ExportPackageHeader) bun.getManifestHeader(Constants.EXPORT_PACKAGE);
 			}
-			processPackages(header);
+			processPackages(header, false);
 		}
 	}
 
-	private void processPackages(ExportPackageHeader header) {
+	protected void processPackages(ExportPackageHeader header, boolean setInternal) {
 		fValues = marker.getAttribute(
 		if (fValues == null) {
 			return;
位置:  -64,6 +64,10   public class AddExportPackageMarkerResolution extends AbstractManifestMarkerReso
 		Pattern pat = PatternConstructor.createPattern(filter, false);
 		for (String packageId : packages) {
 			ExportPackageObject obj = header.addPackage(packageId);
+			if (setInternal){
+				obj.setInternal(setInternal);
+				continue;
+			}
 			if (pat.matcher(packageId).matches())
 				obj.setInternal(true);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddSourceBuildEntryResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddSourceBuildEntryResolution.java
位置:  -81,7 +81,6   public class AddSourceBuildEntryResolution extends BuildEntryMarkerResolution {
 				IClasspathEntry[] cpes = jp.getRawClasspath();
 				return PDEBuilderHelper.getUnlistedClasspaths(sourceEntries, project, cpes);
 			}
-		} catch (JavaModelException e) {
 		} catch (CoreException e) {
 		}
 		return null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ExternalizeResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ExternalizeResolution.java
位置:  -65,11 +65,7   public class ExternalizeResolution extends AbstractXMLMarkerResolution {
 				IDocument document = buffer.getDocument();
 				ExternalizeStringsOperation.getPropertiesInsertEdit(document, element).apply(document);
 				buffer.commit(null, true);
-			} catch (CoreException e) {
-				PDEPlugin.log(e);
-			} catch (MalformedTreeException e) {
-				PDEPlugin.log(e);
-			} catch (BadLocationException e) {
+			} catch (CoreException | MalformedTreeException | BadLocationException e) {
 				PDEPlugin.log(e);
 			} finally {
 				try {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ResolutionGenerator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ResolutionGenerator.java
位置:  -21,8 +21,8   import java.util.Arrays;
 import org.eclipse.core.resources.IMarker;
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.runtime.CoreException;
-import org.eclipse.pde.internal.core.ICoreConstants;
-import org.eclipse.pde.internal.core.TargetPlatformHelper;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.internal.core.*;
 import org.eclipse.pde.internal.core.builders.PDEMarkerFactory;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.ui.*;
位置:  -88,7 +88,7   public class ResolutionGenerator implements IMarkerResolutionGenerator2 {
 			case PDEMarkerFactory.M_UNECESSARY_DEP :
 				return new IMarkerResolution[] {new RemoveRequireBundleResolution(AbstractPDEMarkerResolution.REMOVE_TYPE, marker.getAttribute(
 			case PDEMarkerFactory.M_MISSING_EXPORT_PKGS :
-				return new IMarkerResolution[] { new AddExportPackageMarkerResolution(marker,AbstractPDEMarkerResolution.CREATE_TYPE, marker.getAttribute(
+				return new IMarkerResolution[] { new AddExportPackageMarkerResolution(marker,AbstractPDEMarkerResolution.CREATE_TYPE, marker.getAttribute(
 			case PDEMarkerFactory.B_REMOVE_SLASH_FILE_ENTRY :
 				return new IMarkerResolution[] {new RemoveSeperatorBuildEntryResolution(AbstractPDEMarkerResolution.RENAME_TYPE, marker)};
 			case PDEMarkerFactory.B_APPEND_SLASH_FOLDER_ENTRY :
位置:  -216,8 +216,16   public class ResolutionGenerator implements IMarkerResolutionGenerator2 {
 
 	private IMarkerResolution[] getUnresolvedBundle(IMarker marker) {
 		String bundleId = marker.getAttribute(
-		if (bundleId == null)
+		if (bundleId == null){
+			PDEState pdeState = TargetPlatformHelper.getPDEState();
+			if (pdeState != null) {
+				IPluginModelBase[] targetModels = pdeState.getTargetModels();
+				if (targetModels != null &amp;&amp; targetModels.length == 0) {
+					return new IMarkerResolution[] { new ConfigureTargetPlatformResolution()};
+				}
+			}
 			return NO_RESOLUTIONS;
+		}
 
 		boolean optionalBundle = marker.getAttribute(
 		if (optionalBundle) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/jav
原文件: QuickFixProcessor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/QuickFixProcessor.java
位置:  -221,8 +221,7   public class QuickFixProcessor implements IQuickFixProcessor {
 						collector);
 				try {
 					findOperation.run(new NullProgressMonitor());
-				} catch (InvocationTargetException e) {
-				} catch (InterruptedException e) {
+				} catch (InvocationTargetException | InterruptedException e) {
 				}
 			}
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/jav
原文件: SearchRepositoriesForIUProposal.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/SearchRepositoriesForIUProposal.java
位置:  -50,13 +50,7   public class SearchRepositoriesForIUProposal implements IJavaCompletionProposal
 			Parameterization parameterization = new Parameterization(parameter, fPackageName);
 			ParameterizedCommand pc = new ParameterizedCommand(command, new Parameterization[] {parameterization});
 			handlerService.executeCommand(pc, null);
-		} catch (ExecutionException e) {
-			PDEPlugin.log(e);
-		} catch (NotDefinedException e) {
-			PDEPlugin.log(e);
-		} catch (NotEnabledException e) {
-			PDEPlugin.log(e);
-		} catch (NotHandledException e) {
+		} catch (ExecutionException | NotDefinedException | NotEnabledException | NotHandledException e) {
 			PDEPlugin.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/jav
原文件: UnresolvedImportFixProcessor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/UnresolvedImportFixProcessor.java
位置:  -91,8 +91,7   public class UnresolvedImportFixProcessor extends ClasspathFixProcessor {
 		IRunnableWithProgress findOperation = new FindClassResolutionsOperation(project.getProject(), name, collector);
 		try {
 			findOperation.run(new NullProgressMonitor());
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		}
 		return collector.getProposals();
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/FeatureSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/FeatureSelectionDialog.java
位置:  -58,7 +58,7   public class FeatureSelectionDialog extends FilteredItemsSelectionDialog {
 		public FeatureSearchItemsFilter() {
 			super();
 			String pattern = patternMatcher.getPattern();
-			if (pattern.indexOf(
+			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 				pattern = 
 				patternMatcher.setPattern(pattern);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/PluginSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/PluginSelectionDialog.java
位置:  -44,7 +44,7   public class PluginSelectionDialog extends FilteredItemsSelectionDialog {
 		public PluginSearchItemsFilter() {
 			super();
 			String pattern = patternMatcher.getPattern();
-			if (pattern.indexOf(
+			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 				pattern = 
 				patternMatcher.setPattern(pattern);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/EditorUtilities.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/EditorUtilities.java
位置:  -72,8 +72,6   public class EditorUtilities {
 			message = PDEUIMessages.EditorUtilities_noImageData;
 		} catch (SWTException e) {
 			message = PDEUIMessages.EditorUtilities_pathNotValidImage;
-		} catch (MalformedURLException e) {
-			message = PDEUIMessages.EditorUtilities_invalidFilePath;
 		} catch (IOException e) {
 			message = PDEUIMessages.EditorUtilities_invalidFilePath;
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/FormatAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/FormatAction.java
位置:  -42,9 +42,7   public class FormatAction extends Action {
 
 		try {
 			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(new FormatOperation(new Object[] {fTextEditor.getEditorInput()}));
-		} catch (InvocationTargetException e) {
-			PDEPlugin.log(e);
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			PDEPlugin.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/OpenSchemaAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/OpenSchemaAction.java
位置:  -227,10 +227,7   public class OpenSchemaAction extends Action {
 			if (!SchemaEditor.openSchema(jarFile, schemaEntryName)) {
 				displayErrorDialog();
 			}
-		} catch (URISyntaxException e) {
-			PDEPlugin.log(e);
-			displayErrorDialog();
-		} catch (MalformedURLException e) {
+		} catch (URISyntaxException | MalformedURLException e) {
 			PDEPlugin.log(e);
 			displayErrorDialog();
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/build/RuntimeInfoSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/build/RuntimeInfoSection.java
位置:  -287,8 +287,6   public class RuntimeInfoSection extends PDESection implements IBuildPropertiesCo
 					if (fragmentRoot.getKind() == IPackageFragmentRoot.K_SOURCE)
 						folders.add(fragmentRoot);
 			}
-		} catch (JavaModelException e) {
-			PDEPlugin.logException(e);
 		} catch (CoreException e) {
 			PDEPlugin.logException(e);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/context/InputContext.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/context/InputContext.java
位置:  -237,10 +237,7   public abstract class InputContext {
 					((IEditingModel) fModel).setStale(true);
 				edit.apply(doc);
 				fEditOperations.clear();
-			} catch (MalformedTreeException e) {
-				PDEPlugin.logException(e);
-				flushed = false;
-			} catch (BadLocationException e) {
+			} catch (MalformedTreeException | BadLocationException e) {
 				PDEPlugin.logException(e);
 				flushed = false;
 			}
位置:  -507,10 +504,7   public abstract class InputContext {
 			monitor.setCanceled(false);
 			// Store the new editor input in this context
 			updateInput(newInput);
-		} catch (InterruptedException e) {
-			monitor.setCanceled(true);
-			throw e;
-		} catch (InvocationTargetException e) {
+		} catch (InterruptedException | InvocationTargetException e) {
 			monitor.setCanceled(true);
 			throw e;
 		} finally {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureEditor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureEditor.java
位置:  -96,8 +96,6   public class FeatureEditor extends MultiSourceEditor implements IShowEditorInput
 					input = new FileStoreEditorInput(store);
 				}
 				return IDE.openEditor(PDEPlugin.getActivePage(), input, IPDEUIConstants.FEATURE_EDITOR_ID, true);
-			} catch (PartInitException e) {
-				PDEPlugin.logException(e);
 			} catch (CoreException e) {
 				PDEPlugin.logException(e);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureSpecSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureSpecSection.java
位置:  -119,9 +119,7   public class FeatureSpecSection extends PDESection {
 					}
 				}
 			}
-		} catch (CoreException e) {
-			PDEPlugin.logException(e);
-		} catch (MalformedURLException e) {
+		} catch (CoreException | MalformedURLException e) {
 			PDEPlugin.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/SynchronizeVersionsWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/SynchronizeVersionsWizardPage.java
位置:  -117,9 +117,7   public class SynchronizeVersionsWizardPage extends WizardPage {
 			public void execute(IProgressMonitor monitor) {
 				try {
 					runOperation(mode, monitor);
-				} catch (CoreException e) {
-					PDEPlugin.logException(e);
-				} catch (BadLocationException e) {
+				} catch (CoreException | BadLocationException e) {
 					PDEPlugin.logException(e);
 				} finally {
 					monitor.done();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/URLDetailsSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/URLDetailsSection.java
位置:  -64,9 +64,7   public class URLDetailsSection extends PDESection implements IPartSelectionListe
 			} else {
 				fInput.setURL(null);
 			}
-		} catch (CoreException e) {
-			PDEPlugin.logException(e);
-		} catch (MalformedURLException e) {
+		} catch (CoreException | MalformedURLException e) {
 			PDEPlugin.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/URLSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/URLSection.java
位置:  -154,9 +154,7   public class URLSection extends TableSection {
 			url.addDiscovery(element);
 			fUrlViewer.setSelection(new StructuredSelection(element));
 
-		} catch (CoreException e) {
-			PDEPlugin.logException(e);
-		} catch (MalformedURLException e) {
+		} catch (CoreException | MalformedURLException e) {
 			PDEPlugin.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/CreateManifestOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/CreateManifestOperation.java
位置:  -37,9 +37,7   public class CreateManifestOperation implements IRunnableWithProgress {
 	public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
 		try {
 			trimOldManifest();
-		} catch (BadLocationException e) {
-			throw new InvocationTargetException(e);
-		} catch (CoreException e) {
+		} catch (BadLocationException | CoreException e) {
 			throw new InvocationTargetException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExportPackageSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExportPackageSection.java
位置:  -112,9 +112,9   public class ExportPackageSection extends TableSection {
 				String s1 = e1.toString();
 				String s2 = e2.toString();
 				if (s1.contains(
-					s1 = s1.substring(0, s1.indexOf(
+					s1 = s1.substring(0, s1.indexOf(' ')); //$NON-NLS-1$
 				if (s2.contains(
-					s2 = s2.substring(0, s2.indexOf(
+					s2 = s2.substring(0, s2.indexOf(' ')); //$NON-NLS-1$
 				return super.compare(viewer, s1, s2);
 			}
 		});

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/FragmentGeneralInfoSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/FragmentGeneralInfoSection.java
位置:  -371,7 +371,7   public class FragmentGeneralInfoSection extends GeneralInfoSection {
 			return;
 		}
 		version = version.trim();
-		int comInd = version.indexOf(
+		int comInd = version.indexOf(','); //$NON-NLS-1$
 		int lastPos = version.length() - 1;
 		char first = version.charAt(0);
 		char last = version.charAt(lastPos);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ImportPackageSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ImportPackageSection.java
位置:  -195,9 +195,9   public class ImportPackageSection extends TableSection {
 				String s1 = e1.toString();
 				String s2 = e2.toString();
 				if (s1.contains(
-					s1 = s1.substring(0, s1.indexOf(
+					s1 = s1.substring(0, s1.indexOf(' ')); //$NON-NLS-1$
 				if (s2.contains(
-					s2 = s2.substring(0, s2.indexOf(
+					s2 = s2.substring(0, s2.indexOf(' ')); //$NON-NLS-1$
 				return super.compare(viewer, s1, s2);
 			}
 		});

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizard.java
位置:  -95,11 +95,7   public class JavaAttributeWizard extends Wizard {
 					IDE.openEditor(page, (IFile) resource, true);
 				}
 			}
-		} catch (InvocationTargetException e) {
-			PDEPlugin.logException(e);
-		} catch (InterruptedException e) {
-			PDEPlugin.logException(e);
-		} catch (CoreException e) {
+		} catch (InvocationTargetException | InterruptedException | CoreException e) {
 			PDEPlugin.logException(e);
 		}
 		return true;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizardPage.java
位置:  -124,7 +124,7   public class JavaAttributeWizardPage extends NewClassWizardPage {
 	private void initializeExpectedValues() {
 
 		//			source folder name, package name, class name
-		int loc = className.indexOf(
+		int loc = className.indexOf(':'); //$NON-NLS-1$
 		if (loc != -1) {
 			if (loc < className.length()) {
 				initialValues.classArgs = className.substring(loc + 1, className.length());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/OverviewPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/OverviewPage.java
位置:  -296,13 +296,7   public class OverviewPage extends LaunchShortcutOverviewPage {
 			IHandlerService handlerService = PlatformUI.getWorkbench().getService(IHandlerService.class);
 			try {
 				handlerService.executeCommand(P2_INSTALL_COMMAND_HANDLER, null);
-			} catch (ExecutionException ex) {
-				handleCommandException();
-			} catch (NotDefinedException ex) {
-				handleCommandException();
-			} catch (NotEnabledException ex) {
-				handleCommandException();
-			} catch (NotHandledException ex) {
+			} catch (ExecutionException | NotDefinedException | NotEnabledException | NotHandledException ex) {
 				handleCommandException();
 			}
 		}
位置:  -340,8 +334,7   public class OverviewPage extends LaunchShortcutOverviewPage {
 			manifestEditor.addExtensionTabs();
 			manifestEditor.setShowExtensions(true);
 			manifestEditor.setActivePage(activePageId);
-		} catch (PartInitException e) {
-		} catch (BackingStoreException e) {
+		} catch (PartInitException | BackingStoreException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/OverviewPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/OverviewPage.java
位置:  -113,9 +113,7   public class OverviewPage extends LaunchShortcutOverviewPage {
 
 		try {
 			browser.openURL(new URL(url));
-		} catch (PartInitException e) {
-			PDEPlugin.log(e);
-		} catch (MalformedURLException e) {
+		} catch (PartInitException | MalformedURLException e) {
 			PDEPlugin.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schem
原文件: SchemaEditor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaEditor.java
位置:  -15,7 +15,6   package org.eclipse.pde.internal.ui.editor.schema;
 
 import java.io.File;
 import java.io.IOException;
-import java.util.zip.ZipException;
 import java.util.zip.ZipFile;
 import org.eclipse.core.filesystem.EFS;
 import org.eclipse.core.filesystem.IFileStore;
位置:  -228,8 +227,6   public class SchemaEditor extends MultiSourceEditor {
 			IStorage storage = new JarEntryFile(zipFile, schemaJarFileEntry);
 			IEditorInput input = new JarEntryEditorInput(storage);
 			return openEditor(input);
-		} catch (ZipException e) {
-			PDEPlugin.log(e);
 		} catch (IOException e) {
 			PDEPlugin.log(e);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schem
原文件: SchemaJavaAttributeDetails.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaJavaAttributeDetails.java
位置:  -63,7 +63,7   public class SchemaJavaAttributeDetails extends SchemaAttributeDetails {
 
 		String basedOn = getAttribute().getBasedOn();
 		if ((basedOn != null) &amp;&amp; (basedOn.length() > 0)) {
-			int index = basedOn.indexOf(
+			int index = basedOn.indexOf(':'); //$NON-NLS-1$
 			if (index == -1) {
 				String className = basedOn.substring(basedOn.lastIndexOf(
 				if ((className.length() > 1) &amp;&amp; (className.charAt(0) == 'I')) {
位置:  -161,7 +161,6   public class SchemaJavaAttributeDetails extends SchemaAttributeDetails {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/site/SynchronizePropertiesWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/site/SynchronizePropertiesWizardPage.java
位置:  -102,9 +102,7   public class SynchronizePropertiesWizardPage extends WizardPage {
 			public void execute(IProgressMonitor monitor) {
 				try {
 					runOperation(mode, monitor);
-				} catch (CoreException e) {
-					PDEPlugin.logException(e);
-				} catch (InvocationTargetException e) {
+				} catch (CoreException | InvocationTargetException e) {
 					PDEPlugin.logException(e);
 				} finally {
 					monitor.done();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java
位置:  -163,9 +163,7   public class EnvironmentSection extends SectionPart {
 							initializeAllLocales();
 							LOCALES_INITIALIZED = true;
 						});
-					} catch (InvocationTargetException e) {
-						PDEPlugin.log(e);
-					} catch (InterruptedException e) {
+					} catch (InvocationTargetException | InterruptedException e) {
 						PDEPlugin.log(e);
 					}
 				}
位置:  -185,7 +183,7   public class EnvironmentSection extends SectionPart {
 						if (value == null) {
 							getTarget().setNL(null);
 						} else {
-							int index = value.indexOf(
+							int index = value.indexOf('-'); //$NON-NLS-1$
 							if (index > 0)
 								value = value.substring(0, index);
 							getTarget().setNL(value.trim());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/JavaHyperlink.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/JavaHyperlink.java
位置:  -20,7 +20,6   import org.eclipse.jdt.ui.JavaUI;
 import org.eclipse.jface.text.IRegion;
 import org.eclipse.pde.internal.ui.PDEPlugin;
 import org.eclipse.swt.widgets.Display;
-import org.eclipse.ui.PartInitException;
 
 public class JavaHyperlink extends AbstractHyperlink {
 
位置:  -42,8 +41,6   public class JavaHyperlink extends AbstractHyperlink {
 				if (result != null)
 					JavaUI.openInEditor(result);
 			}
-		} catch (PartInitException e) {
-			PDEPlugin.logException(e);
 		} catch (JavaModelException e) {
 			Display.getCurrent().beep(); // just for Dejan
 		} catch (CoreException e) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/FeatureBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/FeatureBlock.java
位置:  -280,7 +280,8   public class FeatureBlock {
 				Object[] models = dialog.getResult();
 				ArrayList<PluginLaunchModel> modelList = new ArrayList<>(models.length);
 				for (Object model : models) {
-					PluginLaunchModel pluginLaunchModel = new PluginLaunchModel((IPluginModelBase) model);
+					PluginLaunchModel pluginLaunchModel = new PluginLaunchModel((IPluginModelBase) model,
+							DEFAULT_PLUGIN_DATA, fTab::updateLaunchConfigurationDialog);
 					modelList.add(pluginLaunchModel);
 				}
 
位置:  -623,21 +624,18   public class FeatureBlock {
 		}
 	}
 
-	class PluginLaunchModel implements StartLevelEditingSupport.IHasStartLevel, AutoStartEditingSupport.IHasAutoStart {
-		private IPluginModelBase fPluginModelBase;
+	static class PluginLaunchModel
+			implements StartLevelEditingSupport.IHasStartLevel, AutoStartEditingSupport.IHasAutoStart {
+		private final Runnable fPropertyChangedListener;
+		private final IPluginModelBase fPluginModelBase;
 		private String fPluginResolution;
 		private String fStartLevel;
 		private String fAutoStart;
 
-		public PluginLaunchModel(IPluginModelBase pluginModelBase) {
-			fPluginModelBase = pluginModelBase;
-			fPluginResolution = IPDELauncherConstants.LOCATION_DEFAULT;
-			fStartLevel = 
-			fAutoStart = 
-		}
-
-		public PluginLaunchModel(IPluginModelBase pluginModelBase, AdditionalPluginData data) {
+		public PluginLaunchModel(IPluginModelBase pluginModelBase, AdditionalPluginData data,
+				Runnable propertyChangedListener) {
 			fPluginModelBase = pluginModelBase;
+			fPropertyChangedListener = propertyChangedListener;
 			fPluginResolution = data.fResolution;
 			fStartLevel = data.fStartLevel;
 			fAutoStart = data.fAutoStart;
位置:  -665,7 +663,9   public class FeatureBlock {
 			requireNonNull(startLevel, 
 			if (!Objects.equals(fStartLevel, startLevel)) {
 				fStartLevel = startLevel;
-				fTab.updateLaunchConfigurationDialog();
+				if (fPropertyChangedListener != null) {
+					fPropertyChangedListener.run();
+				}
 			}
 		}
 
位置:  -679,7 +679,9   public class FeatureBlock {
 			requireNonNull(autoStart, 
 			if (!Objects.equals(fAutoStart, autoStart)) {
 				fAutoStart = autoStart;
-				fTab.updateLaunchConfigurationDialog();
+				if (fPropertyChangedListener != null) {
+					fPropertyChangedListener.run();
+				}
 			}
 		}
 
位置:  -794,6 +796,9   public class FeatureBlock {
 	private static final String COLUMN_ID = 
 	private static final String PROPERTY_RESOLUTION = 
 
+	static final AdditionalPluginData DEFAULT_PLUGIN_DATA = new AdditionalPluginData(
+			IPDELauncherConstants.LOCATION_DEFAULT, true, null, null);
+
 	private Button fAddRequiredFeaturesButton;
 	private Button fDefaultsButton;
 	private Button fSelectAllButton;
位置:  -1260,7 +1265,8   public class FeatureBlock {
 					.getAdditionalPlugins(config, false);
 			for (Entry<IPluginModelBase, AdditionalPluginData> additionalEntry : additionalMap.entrySet()) {
 				AdditionalPluginData data = additionalEntry.getValue();
-				PluginLaunchModel launchModel = new PluginLaunchModel(additionalEntry.getKey(), data);
+				PluginLaunchModel launchModel = new PluginLaunchModel(additionalEntry.getKey(), data,
+						fTab::updateLaunchConfigurationDialog);
 				fAdditionalPlugins.add(launchModel);
 
 				if (data.fEnabled) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LaunchAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LaunchAction.java
位置:  -14,6 +14,8  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.launcher;
 
+import static java.util.stream.Collectors.toSet;
+
 import java.io.File;
 import java.util.*;
 import org.eclipse.core.resources.IResource;
位置:  -32,6 +34,7   import org.eclipse.pde.internal.core.iproduct.IProduct;
 import org.eclipse.pde.internal.core.util.CoreUtility;
 import org.eclipse.pde.internal.launching.IPDEConstants;
 import org.eclipse.pde.internal.launching.launcher.BundleLauncherHelper;
+import org.eclipse.pde.internal.launching.launcher.BundleLauncherHelper.AdditionalPluginData;
 import org.eclipse.pde.internal.launching.launcher.LaunchArgumentsHelper;
 import org.eclipse.pde.internal.ui.PDEPlugin;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
位置:  -114,24 +117,49   public class LaunchAction extends Action {
 		wc.setAttribute(IPDELauncherConstants.CONFIG_GENERATE_DEFAULT, configIni == null);
 		if (configIni != null)
 			wc.setAttribute(IPDELauncherConstants.CONFIG_TEMPLATE_LOCATION, configIni);
+
+		if (fProduct.useFeatures()) {
+			refreshFeatureLaunchAttributes(wc, models);
+		}
+
 		return wc.doSave();
 	}
 
+	private void refreshFeatureLaunchAttributes(ILaunchConfigurationWorkingCopy wc, IPluginModelBase[] models) {
+		Set<String> selectedFeatures = Arrays.stream(getUniqueFeatures())
+				.map(f -> f.getFeature().getId() + 
+
+		Set<String> additionalPlugins = Arrays.stream(models)
+				.map(model -> getPluginConfiguration(model)
+						.map(c -> new FeatureBlock.PluginLaunchModel(model, c, null).buildEntry(true)).orElse(null))
+				.filter(Objects::nonNull).collect(toSet());
+
+		wc.setAttribute(IPDELauncherConstants.SELECTED_FEATURES, selectedFeatures);
+		wc.setAttribute(IPDELauncherConstants.ADDITIONAL_PLUGINS, additionalPlugins);
+	}
+
 	private void appendBundle(StringBuilder buffer, IPluginModelBase model) {
-		IPluginConfiguration configuration = fPluginConfigurations.get(model.getPluginBase().getId());
-		String sl = 
-		String autostart = 
-		if (configuration != null) {
-			sl = Integer.toString(configuration.getStartLevel());
-			// ensure we don't have a 0 start level
-			sl = sl.equals(
-			autostart = Boolean.toString(configuration.isAutoStart());
-		}
-		String entry = BundleLauncherHelper.writeBundleEntry(model, sl, autostart);
+		AdditionalPluginData configuration = getPluginConfiguration(model).orElse(FeatureBlock.DEFAULT_PLUGIN_DATA);
+		String entry = BundleLauncherHelper.writeBundleEntry(model, configuration.fStartLevel,
+				configuration.fAutoStart);
 		buffer.append(entry);
 		buffer.append(',');
 	}
 
+	private Optional<AdditionalPluginData> getPluginConfiguration(IPluginModelBase model) {
+		IPluginConfiguration configuration = fPluginConfigurations.get(model.getPluginBase().getId());
+		if (configuration == null) {
+			return Optional.empty();
+		}
+
+		String startLevel = (configuration.getStartLevel() > 0) ? String.valueOf(configuration.getStartLevel())
+				: 
+		String autoStart = String.valueOf(configuration.isAutoStart());
+		AdditionalPluginData data = new AdditionalPluginData(IPDELauncherConstants.LOCATION_DEFAULT, true, startLevel,
+				autoStart);
+		return Optional.of(data);
+	}
+
 	private String getProgramArguments(String os, String arch) {
 		StringBuilder buffer = new StringBuilder(LaunchArgumentsHelper.getInitialProgramArguments());
 		IArgumentsInfo info = fProduct.getLauncherArguments();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java
位置:  -13,7 +13,7  
  *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
  *     EclipseSource - initial API and implementation, ongoing enhancements
  *     IBM Corporation - ongoing enhancements
- *******************************************************************************/
+ *******************************************************************************/
 package org.eclipse.pde.internal.ui.launcher;
 
 import java.util.*;
位置:  -123,8 +123,7   public class LauncherUtilsStatusHandler implements IStatusHandler {
 				Iterator<?> it = projects.iterator();
 				while (it.hasNext())
 					table.put(((IProject) it.next()).getName(), ts);
-			} catch (OperationCanceledException e1) {
-			} catch (CoreException e2) {
+			} catch (OperationCanceledException | CoreException e2) {
 			}
 		});
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/ExternalizeStringsProcessor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/ExternalizeStringsProcessor.java
位置:  -43,8 +43,7   public class ExternalizeStringsProcessor extends RefactoringProcessor {
 		ExternalizeStringsOperation op = new ExternalizeStringsOperation(fChangeFiles, change);
 		try {
 			op.run(pm);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		}
 		return change;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/GetNonExternalizedStringsAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/GetNonExternalizedStringsAction.java
位置:  -61,8 +61,7   public class GetNonExternalizedStringsAction extends AbstractHandler {
 		GetNonExternalizedStringsOperation runnable = new GetNonExternalizedStringsOperation(selection, fExternalizeSelectedPluginsOnly);
 		try {
 			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(runnable);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		} finally {
 			if (runnable.wasCanceled())
 				return;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/InternationalizeAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/InternationalizeAction.java
位置:  -41,8 +41,7   public class InternationalizeAction extends AbstractHandler {
 		InternationalizeOperation runnable = new InternationalizeOperation(selection);
 		try {
 			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(runnable);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		} finally {
 			if (runnable.wasCanceled()) {
 				return null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties
位置:  -2370,6 +2370,7   OpenSchemaAction_errorMsgSchemaNotFound=Extension point schema for extension poi
 LocationSection_0=&amp;Locations
 AppendSeperatorBuildEntryResolution_label=Append a trailing separator to {0}.
 AddExportPackageResolution_Label=Add missing packages
+AddExportPackageInternalDirectiveResolution_Label=Add missing packages with x-internal directive
 
 DependencyManagementSection_jobName=Analyzing Code
 DescriptionSection_nameLabel=Name:

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/ProjectSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/ProjectSelectionDialog.java
位置:  -53,8 +53,6   public class ProjectSelectionDialog extends SelectionStatusDialog {
 							set.add(project);
 						}
 					}
-				} catch (JavaModelException jme) {
-					//ignore
 				} catch (CoreException ce) {
 					//ignore
 				}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/TargetPlatformPreferencePage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/TargetPlatformPreferencePage.java
位置:  -631,6 +631,11   public class TargetPlatformPreferencePage extends PreferencePage implements IWor
 			}
 			fTableViewer.refresh(true);
 			fTableViewer.setSelection(new StructuredSelection(def));
+			if (fTargets.size() == 1) {
+				fTableViewer.setCheckedElements(new Object[] { fActiveTarget });
+				handleActivate();
+			}
+
 		}
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/properties/SelfHostingPropertyPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/properties/SelfHostingPropertyPage.java
位置:  -72,7 +72,6   public class SelfHostingPropertyPage extends PropertyPage {
 					}
 				}
 			}
-		} catch (JavaModelException e) {
 		} catch (CoreException e) {
 		}
 		return list.toArray(new String[list.size()]);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/BundleManifestChange.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/BundleManifestChange.java
位置:  -48,9 +48,7   public class BundleManifestChange {
 			bundle.getModel().addModelChangedListener(listener);
 			addPackage(bundle, change);
 			return createChange(listener, file);
-		} catch (CoreException e) {
-		} catch (MalformedTreeException e) {
-		} catch (BadLocationException e) {
+		} catch (CoreException | MalformedTreeException | BadLocationException e) {
 		} finally {
 			FileBuffers.getTextFileBufferManager().disconnect(file.getFullPath(), LocationKind.NORMALIZE, monitor);
 		}
位置:  -88,9 +86,7   public class BundleManifestChange {
 					change.setMovedElements(list.toArray(new PDEManifestElement[list.size()]));
 				return change;
 			}
-		} catch (CoreException e) {
-		} catch (MalformedTreeException e) {
-		} catch (BadLocationException e) {
+		} catch (CoreException | MalformedTreeException | BadLocationException e) {
 		} finally {
 			FileBuffers.getTextFileBufferManager().disconnect(file.getFullPath(), LocationKind.NORMALIZE, monitor);
 		}
位置:  -134,9 +130,7   public class BundleManifestChange {
 				}
 			}
 			return createChange(listener, file);
-		} catch (CoreException e) {
-		} catch (MalformedTreeException e) {
-		} catch (BadLocationException e) {
+		} catch (CoreException | MalformedTreeException | BadLocationException e) {
 		} finally {
 			FileBuffers.getTextFileBufferManager().disconnect(file.getFullPath(), LocationKind.NORMALIZE, monitor);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/ContainerRenameParticipant.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/ContainerRenameParticipant.java
位置:  -114,9 +114,7   public class ContainerRenameParticipant extends PDERenameParticipant {
 						return result;
 					}
 				}
-			} catch (CoreException e) {
-			} catch (MalformedTreeException e) {
-			} catch (BadLocationException e) {
+			} catch (CoreException | MalformedTreeException | BadLocationException e) {
 			} finally {
 				FileBuffers.getTextFileBufferManager().disconnect(manifest.getFullPath(), LocationKind.NORMALIZE,
 						subMonitor.split(1));

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/CreateHeaderChangeOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/CreateHeaderChangeOperation.java
位置:  -97,9 +97,7   public class CreateHeaderChangeOperation implements IWorkspaceRunnable {
 					return getTextChange(listener, manifest);
 				}
 			}
-		} catch (MalformedTreeException e) {
-		} catch (CoreException e) {
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | CoreException | BadLocationException e) {
 		} finally {
 			FileBuffers.getTextFileBufferManager().disconnect(manifest.getFullPath(), LocationKind.NORMALIZE,
 					subMonitor.split(1));

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/ShowDescriptionAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/ShowDescriptionAction.java
位置:  -239,9 +239,7   public class ShowDescriptionAction extends Action {
 				IWebBrowser browser = support.createBrowser(IWorkbenchBrowserSupport.AS_EDITOR | IWorkbenchBrowserSupport.STATUS, file.getName(), fPointID, fPointID);
 				browser.openURL(url);
 			}
-		} catch (MalformedURLException e) {
-			PDEPlugin.logException(e);
-		} catch (PartInitException e) {
+		} catch (MalformedURLException | PartInitException e) {
 			PDEPlugin.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesAction.java
位置:  -61,8 +61,7   public class AddNewDependenciesAction extends Action {
 					op.run(monitor);
 					if (!op.foundNewDependencies())
 						Display.getDefault().asyncExec(() -> MessageDialog.openInformation(PDEPlugin.getActiveWorkbenchShell(), PDEUIMessages.AddNewDependenciesAction_title, PDEUIMessages.AddNewDependenciesAction_notFound));
-				} catch (InvocationTargetException e) {
-				} catch (InterruptedException e) {
+				} catch (InvocationTargetException | InterruptedException e) {
 				} finally {
 					monitor.done();
 				}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesOperation.java
位置:  -447,8 +447,7   public class AddNewDependenciesOperation extends WorkspaceModifyOperation {
 					added.add(pluginId);
 					if (entry != null &amp;&amp; entry.contains(pluginId))
 						entry.removeToken(pluginId);
-				} catch (BundleException e) {
-				} catch (CoreException e) {
+				} catch (BundleException | CoreException e) {
 				}
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/CalculateUsesAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/CalculateUsesAction.java
位置:  -52,8 +52,7   public class CalculateUsesAction extends Action {
 				CalculateUsesOperation op = getOperation();
 				try {
 					op.run(monitor);
-				} catch (InvocationTargetException e) {
-				} catch (InterruptedException e) {
+				} catch (InvocationTargetException | InterruptedException e) {
 				} finally {
 					monitor.done();
 				}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/DependencyExtentSearchResultPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/DependencyExtentSearchResultPage.java
位置:  -130,8 +130,7   public class DependencyExtentSearchResultPage extends AbstractSearchResultPage {
 		} else {
 			try {
 				JavaEditorOpener.open(match, currentOffset, currentLength, activate);
-			} catch (PartInitException e) {
-			} catch (JavaModelException e) {
+			} catch (PartInitException | JavaModelException e) {
 			}
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/UnusedDependenciesJob.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/UnusedDependenciesJob.java
位置:  -40,8 +40,7   public class UnusedDependenciesJob extends Job {
 			udo.run(monitor);
 			// List can contain IPluginImports or ImportPackageObjects
 			showResults(udo.getList().toArray());
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		} finally {
 			monitor.done();
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dialogs/FilteredPluginArtifactsSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dialogs/FilteredPluginArtifactsSelectionDialog.java
位置:  -24,7 +24,9   import org.eclipse.core.runtime.*;
 import org.eclipse.jdt.ui.JavaUI;
 import org.eclipse.jface.action.*;
 import org.eclipse.jface.dialogs.IDialogSettings;
+import org.eclipse.jface.text.contentassist.BoldStylerProvider;
 import org.eclipse.jface.viewers.*;
+import org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.IStyledLabelProvider;
 import org.eclipse.osgi.service.resolver.BundleDescription;
 import org.eclipse.osgi.service.resolver.ExportPackageDescription;
 import org.eclipse.pde.core.plugin.*;
位置:  -36,6 +38,7   import org.eclipse.swt.graphics.Image;
 import org.eclipse.swt.widgets.*;
 import org.eclipse.ui.*;
 import org.eclipse.ui.dialogs.FilteredItemsSelectionDialog;
+import org.eclipse.ui.dialogs.StyledStringHighlighter;
 
 public class FilteredPluginArtifactsSelectionDialog extends FilteredItemsSelectionDialog {
 
位置:  -63,7 +66,11   public class FilteredPluginArtifactsSelectionDialog extends FilteredItemsSelecti
 	private SearchLabelProvider searchLabelProvider = new SearchLabelProvider();
 	private ILabelProvider detailsLabelProvider = new DetailedLabelProvider();
 
-	private class SearchLabelProvider extends LabelProvider implements ILabelDecorator {
+	private class SearchLabelProvider extends LabelProvider implements ILabelDecorator, IStyledLabelProvider {
+
+		private BoldStylerProvider boldStylerProvider;
+		private StyledStringHighlighter styledStringHighlighter = new StyledStringHighlighter();
+
 		@Override
 		public Image getImage(Object element) {
 			if (element instanceof ExportPackageDescription) {
位置:  -118,6 +125,37   public class FilteredPluginArtifactsSelectionDialog extends FilteredItemsSelecti
 			}
 			return text;
 		}
+
+		@Override
+		public StyledString getStyledText(Object element) {
+			String text = getText(element);
+			Text patternControl = (Text) FilteredPluginArtifactsSelectionDialog.this.getPatternControl();
+
+			if (patternControl == null) {
+				return new StyledString(text);
+			}
+
+			String pattern = patternControl.getText();
+			return styledStringHighlighter.highlight(text, pattern, getBoldStylerProvider().getBoldStyler());
+		}
+
+		private BoldStylerProvider getBoldStylerProvider() {
+			if (boldStylerProvider != null) {
+				return boldStylerProvider;
+			}
+
+			return boldStylerProvider = new BoldStylerProvider(getDialogArea().getFont());
+		}
+
+		@Override
+		public void dispose() {
+			if (boldStylerProvider != null) {
+				boldStylerProvider.dispose();
+			}
+
+			super.dispose();
+		}
+
 	}
 
 	private class DetailedLabelProvider extends LabelProvider {
位置:  -622,7 +660,7   public class FilteredPluginArtifactsSelectionDialog extends FilteredItemsSelecti
 		public PluginSearchItemsFilter() {
 			super();
 			String pattern = patternMatcher.getPattern();
-			if (pattern.indexOf(
+			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {
 				pattern = 
 				patternMatcher.setPattern(pattern);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/CachedCheckboxTreeViewer.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/CachedCheckboxTreeViewer.java
位置:  -225,7 +225,7   public class CachedCheckboxTreeViewer extends ContainerCheckedTreeViewer {
 	}
 
 	@Override
-	public void remove(Object[] elementsOrTreePaths) {
+	public void remove(Object... elementsOrTreePaths) {
 		for (Object elementOrTreePath : elementsOrTreePaths) {
 			updateCheckState(elementOrTreePath, false);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/PDEJavaHelperUI.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/PDEJavaHelperUI.java
位置:  -146,8 +146,6   public class PDEJavaHelperUI {
 					}
 				}
 			}
-		} catch (PartInitException e) {
-			PDEPlugin.logException(e);
 		} catch (JavaModelException e) {
 			// nothing
 			Display.getCurrent().beep();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/PDEModelUtility.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/PDEModelUtility.java
位置:  -359,11 +359,7   public class PDEModelUtility {
 					edits.add(change);
 				}
 			}
-		} catch (CoreException e) {
-			PDEPlugin.log(e);
-		} catch (MalformedTreeException e) {
-			PDEPlugin.log(e);
-		} catch (BadLocationException e) {
+		} catch (CoreException | MalformedTreeException | BadLocationException e) {
 			PDEPlugin.log(e);
 		} finally {
 			// don't want to over-disconnect in case we ran into an exception during connections

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/SharedLabelProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/SharedLabelProvider.java
位置:  -233,7 +233,6   public class SharedLabelProvider extends LabelProvider implements ITableLabelPro
 				ImageDescriptor desc = ImageDescriptor.createFromImageData(new ImageData(stream));
 				return get(desc);
 			}
-		} catch (FileNotFoundException e) {
 		} catch (IOException e) {
 		} finally {
 			try {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TemplateFileGenerator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TemplateFileGenerator.java
位置:  -189,7 +189,6   public class TemplateFileGenerator implements IVariableProvider {
 			IPath path = new Path(templateDirectory);
 			try (ZipFile zipFile = new ZipFile(pluginJar)) {
 				generateFiles(zipFile, path, fProject, true, false, monitor);
-			} catch (ZipException ze) {
 			} catch (IOException ioe) {
 			}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TextUtil.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TextUtil.java
位置:  -142,7 +142,7   public abstract class TextUtil {
 		value = value.trim();
 		while (value.length() > 0 &amp;&amp; !Character.isLetter(value.charAt(0)))
 			value = value.substring(1, value.length());
-		int loc = value.indexOf(
+		int loc = value.indexOf(':'); //$NON-NLS-1$
 		if (loc != -1 &amp;&amp; loc > 0)
 			value = value.substring(0, loc);
 		else if (loc == 0)

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/AbstractRepository.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/AbstractRepository.java
位置:  -16,7 +16,8   package org.eclipse.pde.internal.ui.views.imagebrowser.repositories;
 
 import java.io.*;
 import java.util.*;
-import java.util.zip.*;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.runtime.*;
 import org.eclipse.core.runtime.jobs.Job;
位置:  -113,8 +114,6   public abstract class AbstractRepository extends Job {
 					}
 				}
 			}
-		} catch (ZipException e) {
-			PDEPlugin.log(e);
 		} catch (IOException e) {
 			PDEPlugin.log(e);
 		}
位置:  -124,7 +123,11   public abstract class AbstractRepository extends Job {
 		File manifest = new File(directory, 
 		if (manifest.exists()) {
 			try {
-				String pluginName = getPluginName(new FileInputStream(manifest));
+				Optional<String> name = getPluginName(new FileInputStream(manifest));
+				if (!name.isPresent()) {
+					return;
+				}
+				String pluginName = name.get();
 				int directoryPathLength = directory.getAbsolutePath().length();
 
 				Collection<File> locations = new HashSet<>();
位置:  -160,16 +163,24   public abstract class AbstractRepository extends Job {
 		}
 	}
 
-	protected String getPluginName(final InputStream manifest) throws IOException {
+	/**
+	 * @return can return {@link Optional#empty()} if given manifest is not
+	 *         valid bundle manifest
+	 */
+	protected Optional<String> getPluginName(final InputStream manifest) throws IOException {
 		Properties properties = new Properties();
 		try (BufferedInputStream stream = new BufferedInputStream(manifest)) {
 			properties.load(stream);
 		}
 		String property = properties.getProperty(
-		if (property.contains(
-			return property.substring(0, property.indexOf(';')).trim();
+		if (property == null) {
+			return Optional.empty();
+		}
+		if (property.contains(
+			return Optional.of(property.substring(0, property.indexOf(';')).trim());
+		}
 
-		return property.trim();
+		return Optional.of(property.trim());
 	}
 
 	protected void addImageElement(ImageElement element) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/WorkspaceRepository.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/WorkspaceRepository.java
位置:  -45,7 +45,11   public class WorkspaceRepository extends AbstractRepository {
 			if (manifest.exists()) {
 				try {
 					// extract plugin name
-					final String pluginName = getPluginName(manifest.getContents());
+					Optional<String> name = getPluginName(manifest.getContents());
+					if (!name.isPresent()) {
+						return !fProjects.isEmpty();
+					}
+					final String pluginName = name.get();
 
 					// parse all folders
 					project.accept((IResourceProxyVisitor) proxy -> {
位置:  -76,9 +80,7   public class WorkspaceRepository extends AbstractRepository {
 
 						return false;
 					}, IResource.DEPTH_INFINITE, IContainer.INCLUDE_TEAM_PRIVATE_MEMBERS | IContainer.INCLUDE_HIDDEN);
-				} catch (CoreException e) {
-					PDEPlugin.log(e);
-				} catch (IOException e) {
+				} catch (CoreException | IOException e) {
 					PDEPlugin.log(e);
 				}
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/AddAllPluginsToJavaSearchHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/AddAllPluginsToJavaSearchHandler.java
位置:  -29,9 +29,7   public class AddAllPluginsToJavaSearchHandler extends AbstractHandler {
 		IRunnableWithProgress op = new JavaSearchOperation(models, true);
 		try {
 			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(op);
-		} catch (InterruptedException e) {
-			PDEPlugin.logException(e);
-		} catch (InvocationTargetException e) {
+		} catch (InterruptedException | InvocationTargetException e) {
 			PDEPlugin.logException(e);
 		}
 		return null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java
位置:  -683,8 +683,6   public class PluginsView extends ViewPart implements IPluginModelListener {
 			IEditorInput in = new FileStoreEditorInput(store);
 			page.openEditor(in, editorId);
 			adapter.setEditorId(editorId);
-		} catch (PartInitException e) {
-			PDEPlugin.logException(e);
 		} catch (CoreException e) {
 			PDEPlugin.logException(e);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/FeatureExportWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/FeatureExportWizard.java
位置:  -155,9 +155,7   public class FeatureExportWizard extends AntGeneratingExportWizard {
 				export.setAttribute(
 			target.appendChild(export);
 			return doc;
-		} catch (DOMException e) {
-		} catch (FactoryConfigurationError e) {
-		} catch (ParserConfigurationException e) {
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e) {
 		}
 		return null;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/PluginExportWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/PluginExportWizard.java
位置:  -1,16 +1,16  
 /*******************************************************************************
  * Copyright (c) 2000, 2015 IBM Corporation and others.
- *
+ *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
  * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
  * SPDX-License-Identifier: EPL-2.0
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
- *******************************************************************************/
+ *******************************************************************************/
 package org.eclipse.pde.internal.ui.wizards.exports;
 
 import java.io.File;
位置:  -125,9 +125,7   public class PluginExportWizard extends AntGeneratingExportWizard {
 				export.setAttribute(
 			target.appendChild(export);
 			return doc;
-		} catch (DOMException e) {
-		} catch (FactoryConfigurationError e) {
-		} catch (ParserConfigurationException e) {
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e) {
 		}
 		return null;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/NewSchemaFileMainPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/NewSchemaFileMainPage.java
位置:  -52,9 +52,7   public class NewSchemaFileMainPage extends BaseExtensionPointMainPage {
 		} catch (InvocationTargetException e) {
 			PDEPlugin.logException(e);
 			return false;
-		} catch (InterruptedException e) {
-			return false;
-		} catch (CoreException e) {
+		} catch (InterruptedException | CoreException e) {
 			return false;
 		}
 		return true;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java
位置:  -106,7 +106,7   public class PointSelectionPage extends BaseWizardSelectionPage {
 		private String wMatch = 
 
 		protected void setMatchText(String match) {
-			if (match.indexOf(
+			if (match.indexOf('*') != 0 &amp; match.indexOf('?') != 0 &amp; match.indexOf('.') != 0) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 				match = 
 			}
 			wMatch = match + 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/feature/PluginListPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/feature/PluginListPage.java
位置:  -57,8 +57,7   public class PluginListPage extends BasePluginListPage {
 							throw new InterruptedException();
 						}
 					});
-				} catch (InvocationTargetException e) {
-				} catch (InterruptedException e) {
+				} catch (InvocationTargetException | InterruptedException e) {
 				}
 			}
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/FeatureImportWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/FeatureImportWizardPage.java
位置:  -455,8 +455,7   public class FeatureImportWizardPage extends WizardPage {
 		IProgressService pservice = PlatformUI.getWorkbench().getProgressService();
 		try {
 			pservice.busyCursorWhile(runnable);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		}
 		return fModels;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation.java
位置:  -635,9 +635,6   public class PluginImportOperation extends WorkspaceJob {
 			}
 			subMonitor.worked(1);
 
-		} catch (ZipException e) {
-			IStatus status = new Status(IStatus.ERROR, PDEPlugin.getPluginId(), IStatus.ERROR, e.getMessage(), e);
-			throw new CoreException(status);
 		} catch (IOException e) {
 			IStatus status = new Status(IStatus.ERROR, PDEPlugin.getPluginId(), IStatus.ERROR, e.getMessage(), e);
 			throw new CoreException(status);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/FragmentContentPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/FragmentContentPage.java
位置:  -241,8 +241,7   public class FragmentContentPage extends ContentPage {
 							throw new InterruptedException();
 						}
 					});
-				} catch (InvocationTargetException ex) {
-				} catch (InterruptedException ex) {
+				} catch (InvocationTargetException | InterruptedException ex) {
 					// Model initialization cancelled, target platform will be empty
 				}
 			}
位置:  -322,8 +321,7   public class FragmentContentPage extends ContentPage {
 								throw new InterruptedException();
 							}
 						});
-					} catch (InvocationTargetException e) {
-					} catch (InterruptedException e) {
+					} catch (InvocationTargetException | InterruptedException e) {
 						// Model initialization cancelled, target platform will be empty
 					}
 				}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewLibraryPluginCreationOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewLibraryPluginCreationOperation.java
位置:  -172,8 +172,7   public class NewLibraryPluginCreationOperation extends NewProjectCreationOperati
 			javaProject.setRawClasspath(classpath.toArray(new IClasspathEntry[classpath.size()]),
 					subMonitor.split(1));
 //			ClasspathComputer.setClasspath(javaProject.getProject(), model);
-		} catch (IOException e) {
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 		}
 	}
 
位置:  -547,8 +546,7   public class NewLibraryPluginCreationOperation extends NewProjectCreationOperati
 
 				}
 			}.run(monitor);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/product/UpdateSplashProgressOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/product/UpdateSplashProgressOperation.java
位置:  -286,9 +286,7   public class UpdateSplashProgressOperation implements IWorkspaceRunnable {
 			}
 			// Save plugin customization file changes
 			savePluginCustomFileChanges(pluginCustomModel, subMonitor.split(1));
-		} catch (MalformedTreeException e) {
-			throw createCoreException(PDEUIMessages.UpdateSplashProgressAction_msgErrorCustomFileSaveFailed, e);
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			throw createCoreException(PDEUIMessages.UpdateSplashProgressAction_msgErrorCustomFileSaveFailed, e);
 		} finally {
 			// Disconnect from the text file buffer manager

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionContentPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionContentPage.java
位置:  -345,7 +345,7   public class TargetDefinitionContentPage extends TargetDefinitionPage {
 		fNLCombo = SWTFactory.createCombo(group, SWT.SINGLE | SWT.BORDER, 1, fNLChoices.toArray(new String[fNLChoices.size()]));
 		fNLCombo.addModifyListener(e -> {
 			String value = fNLCombo.getText();
-			int index = value.indexOf(
+			int index = value.indexOf('-'); //$NON-NLS-1$
 			if (index > 0)
 				value = value.substring(0, index);
 			getTargetDefinition().setNL(getModelValue(value));

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/templates/NewExtensionTemplateWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/templates/NewExtensionTemplateWizard.java
位置:  -92,10 +92,7   public class NewExtensionTemplateWizard extends Wizard implements IExtensionWiza
 		};
 		try {
 			getContainer().run(false, true, operation);
-		} catch (InvocationTargetException e) {
-			PDEPlugin.logException(e);
-			return false;
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			PDEPlugin.logException(e);
 			return false;
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/ConvertPreferencesWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/ConvertPreferencesWizard.java
位置:  -226,15 +226,7   public class ConvertPreferencesWizard extends Wizard {
 						} else {
 							page.setMessage(PDEUIMessages.ConvertPreferencesWizard_errorNoPrefs, IMessageProvider.WARNING);
 						}
-					} catch (FileNotFoundException e1) {
-						page.setErrorMessage(NLS.bind(PDEUIMessages.ConvertPreferencesWizard_errorFile, errorFilePath));
-						PDEPlugin.logException(e1);
-						return;
-					} catch (CoreException e2) {
-						page.setErrorMessage(NLS.bind(PDEUIMessages.ConvertPreferencesWizard_errorFile, errorFilePath));
-						PDEPlugin.logException(e2);
-						return;
-					} catch (IOException e3) {
+					} catch (CoreException | IOException e3) {
 						page.setErrorMessage(NLS.bind(PDEUIMessages.ConvertPreferencesWizard_errorFile, errorFilePath));
 						PDEPlugin.logException(e3);
 						return;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/ConvertedProjectsPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/ConvertedProjectsPage.java
位置:  -148,10 +148,7   public class ConvertedProjectsPage extends WizardPage {
 			IRunnableWithProgress convertOperation;
 			convertOperation = new ConvertProjectToPluginOperation(projects, fApiAnalysisButton.getSelection());
 			getContainer().run(false, true, convertOperation);
-		} catch (InvocationTargetException e) {
-			PDEPlugin.logException(e);
-			return false;
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			PDEPlugin.logException(e);
 			return false;
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/OrganizeManifestsProcessor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/OrganizeManifestsProcessor.java
位置:  -116,9 +116,7   public class OrganizeManifestsProcessor extends RefactoringProcessor implements
 					try {
 						SubMonitor subMonitor = SubMonitor.convert(monitor);
 						runCleanup(subMonitor, (IBundlePluginModelBase) model, result);
-					} catch (InvocationTargetException e) {
-						ee[0] = e;
-					} catch (InterruptedException e) {
+					} catch (InvocationTargetException | InterruptedException e) {
 						ee[0] = e;
 					}
 			}

原文件: ui/org.eclipse.pde.ui/src_samples/org/eclipse/pde/internal/ui/samples/SampleWizard.java 
新文件: ui/org.eclipse.pde.ui/src_samples/org/eclipse/pde/internal/ui/samples/SampleWizard.java
位置:  -120,16 +120,10   public class SampleWizard extends Wizard implements INewWizard, IExecutableExten
 				enableActivities();
 			if (sampleEditorNeeded &amp;&amp; sampleManifest != null)
 				IDE.openEditor(page, sampleManifest, true);
-		} catch (InvocationTargetException e) {
+		} catch (InvocationTargetException | CoreException e) {
 			PDEPlugin.logException(e);
 			return false;
-		} catch (InterruptedException e) {
-			//PDEPlugin.logException(e);
-			return false;
-		} catch (CoreException e) {
-			PDEPlugin.logException(e);
-			return false;
-		} catch (OperationCanceledException e) {
+		} catch (InterruptedException | OperationCanceledException e) {
 			return false;
 		}
 		return true;

原文件: ui/org.eclipse.tools.layout.spy/.project 
新文件: ui/org.eclipse.tools.layout.spy/.project
位置:  -20,9 +20,15  
 			<arguments>
 			</arguments>
 		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
 		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
 	</natures>
 </projectDescription>

原文件: ui/org.eclipse.tools.layout.spy/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.tools.layout.spy/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.tools.layout.spy;singleton:=true
-Bundle-Version: 1.0.300.qualifier
+Bundle-Version: 1.0.400.qualifier
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.swt;bundle-version=

原文件: ui/org.eclipse.tools.layout.spy/pom.xml 
新文件: ui/org.eclipse.tools.layout.spy/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.tools.layout.spy</artifactId>
-  <version>1.0.300-SNAPSHOT</version>
+  <version>1.0.400-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
 </project>

---------------------------118---------------------------
需求名称: Bug 549441 - Rework usages of AbstractUIPlugin#imageDescriptorFromPlugin
创建时间: 2019-07-21	07:12:24
修改时间: 2019-07-29	08:27:32

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/Activator.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/Activator.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2015 Code 9 Corporation and others.
+ * Copyright (c) 2008, 2019 Code 9 Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -11,6 +11,7  
  * Contributors:
  *     Code 9 Corporation - initial API and implementation
  *     Rafael Oliveira Nobrega <rafael.oliveira@gmail.com> - bug 242028
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 549441
  *******************************************************************************/
 package org.eclipse.pde.internal.ds.ui;
 
位置:  -21,8 +22,8   import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.Status;
 import org.eclipse.jface.dialogs.ErrorDialog;
-import org.eclipse.jface.resource.ImageDescriptor;
 import org.eclipse.jface.resource.ImageRegistry;
+import org.eclipse.jface.resource.ResourceLocator;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
 import org.eclipse.ui.IWorkbenchWindow;
位置:  -70,42 +71,26   public class Activator extends AbstractUIPlugin {
 
 	@Override
 	protected void initializeImageRegistry(ImageRegistry registry) {
-		registry.put(SharedImages.DESC_IMPLEMENTATION,
-				createImageDescriptor(SharedImages.DESC_IMPLEMENTATION));
-		registry.put(SharedImages.DESC_PROPERTIES,
-				createImageDescriptor(SharedImages.DESC_PROPERTIES));
-		registry.put(SharedImages.DESC_PROPERTY,
-				createImageDescriptor(SharedImages.DESC_PROPERTY));
-		registry.put(SharedImages.DESC_PROVIDE,
-				createImageDescriptor(SharedImages.DESC_PROVIDE));
-		registry.put(SharedImages.DESC_REFERENCE,
-				createImageDescriptor(SharedImages.DESC_REFERENCE));
-		registry.put(SharedImages.DESC_REFERENCE_ZERO_N,
-				createImageDescriptor(SharedImages.DESC_REFERENCE_ZERO_N));
-		registry.put(SharedImages.DESC_REFERENCE_ZERO_ONE,
-				createImageDescriptor(SharedImages.DESC_REFERENCE_ZERO_ONE));
-		registry.put(SharedImages.DESC_REFERENCE_ONE_N,
-				createImageDescriptor(SharedImages.DESC_REFERENCE_ONE_N));
-		registry.put(SharedImages.DESC_ROOT,
-				createImageDescriptor(SharedImages.DESC_ROOT));
-		registry.put(SharedImages.DESC_SERVICE,
-				createImageDescriptor(SharedImages.DESC_SERVICE));
-		registry.put(SharedImages.DESC_SERVICES,
-				createImageDescriptor(SharedImages.DESC_SERVICES));
-		registry.put(SharedImages.DESC_DS,
-				createImageDescriptor(SharedImages.DESC_DS));
-		registry.put(SharedImages.DESC_ATTR,
-				createImageDescriptor(SharedImages.DESC_ATTR));
-		registry.put(SharedImages.OVR_DYNAMIC,
-				createImageDescriptor(SharedImages.OVR_DYNAMIC));
-		registry.put(SharedImages.DESC_DETAILS,
-				createImageDescriptor(SharedImages.DESC_DETAILS));
-		registry.put(SharedImages.DESC_DS_WIZ,
-				createImageDescriptor(SharedImages.DESC_DS_WIZ));
+		registerImageDescriptor(registry, SharedImages.DESC_IMPLEMENTATION);
+		registerImageDescriptor(registry, SharedImages.DESC_PROPERTIES);
+		registerImageDescriptor(registry, SharedImages.DESC_PROPERTY);
+		registerImageDescriptor(registry, SharedImages.DESC_PROVIDE);
+		registerImageDescriptor(registry, SharedImages.DESC_REFERENCE);
+		registerImageDescriptor(registry, SharedImages.DESC_REFERENCE_ZERO_N);
+		registerImageDescriptor(registry, SharedImages.DESC_REFERENCE_ZERO_ONE);
+		registerImageDescriptor(registry, SharedImages.DESC_REFERENCE_ONE_N);
+		registerImageDescriptor(registry, SharedImages.DESC_ROOT);
+		registerImageDescriptor(registry, SharedImages.DESC_SERVICE);
+		registerImageDescriptor(registry, SharedImages.DESC_SERVICES);
+		registerImageDescriptor(registry, SharedImages.DESC_DS);
+		registerImageDescriptor(registry, SharedImages.DESC_ATTR);
+		registerImageDescriptor(registry, SharedImages.OVR_DYNAMIC);
+		registerImageDescriptor(registry, SharedImages.DESC_DETAILS);
+		registerImageDescriptor(registry, SharedImages.DESC_DS_WIZ);
 	}
 
-	private ImageDescriptor createImageDescriptor(String id) {
-		return imageDescriptorFromPlugin(PLUGIN_ID, id);
+	private void registerImageDescriptor(ImageRegistry registry, String id) {
+		ResourceLocator.imageDescriptorFromBundle(PLUGIN_ID, id).ifPresent(d -> registry.put(id, d));
 	}
 
 	public static Shell getActiveWorkbenchShell() {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/SharedLabelProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/SharedLabelProvider.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- *  Copyright (c) 2000, 2018 IBM Corporation and others.
+ *  Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  *  This program and the accompanying materials
  *  are made available under the terms of the Eclipse Public License 2.0
位置:  -10,6 +10,7  
  *
  *  Contributors:
  *     IBM Corporation - initial API and implementation
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 549441
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.util;
 
位置:  -18,6 +19,7   import java.util.*;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipFile;
 import org.eclipse.jface.resource.ImageDescriptor;
+import org.eclipse.jface.resource.ResourceLocator;
 import org.eclipse.jface.viewers.ITableLabelProvider;
 import org.eclipse.jface.viewers.LabelProvider;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
位置:  -25,7 +27,6   import org.eclipse.pde.core.plugin.PluginRegistry;
 import org.eclipse.pde.internal.ui.PDEPluginImages;
 import org.eclipse.swt.graphics.Image;
 import org.eclipse.swt.graphics.ImageData;
-import org.eclipse.ui.plugin.AbstractUIPlugin;
 
 public class SharedLabelProvider extends LabelProvider implements ITableLabelProvider {
 	public static final int F_ERROR = 1;
位置:  -183,8 +184,7   public class SharedLabelProvider extends LabelProvider implements ITableLabelPro
 	}
 
 	public Image getImageFromPlugin(String bundleID, String path) {
-		ImageDescriptor desc = AbstractUIPlugin.imageDescriptorFromPlugin(bundleID, path);
-		return (desc != null) ? get(desc) : getBlankImage();
+		return ResourceLocator.imageDescriptorFromBundle(bundleID, path).map(d-> get(d)).orElse(getBlankImage());
 	}
 
 	public Image getImageFromPlugin(IPluginModelBase model, String relativePath) {

---------------------------119---------------------------
需求名称: Bug 549625 - Unchecking use scan locations and applying doesn't remove
创建时间: 2019-07-29	07:20:13
修改时间: 2019-07-29	07:26:22

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java
位置:  -73,6 +73,7   import org.eclipse.osgi.service.resolver.VersionRange;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.api.tools.internal.ApiBaselineManager;
 import org.eclipse.pde.api.tools.internal.ApiFilterStore;
+import org.eclipse.pde.api.tools.internal.IApiCoreConstants;
 import org.eclipse.pde.api.tools.internal.comparator.Delta;
 import org.eclipse.pde.api.tools.internal.model.ProjectComponent;
 import org.eclipse.pde.api.tools.internal.model.StubApiComponent;
位置:  -407,6 +408,10   public class BaseApiAnalyzer implements IApiAnalyzer {
 				System.out.println(
 			}
 		}
+		boolean checkState = hasCheckedAPIScanLocation();
+		if (checkState == false) {
+			return;
+		}
 		SubMonitor localmonitor = SubMonitor.convert(monitor, BuilderMessages.checking_external_dependencies, 10);
 		IReferenceDescriptor[] externalDependencies = UseScanManager.getInstance().getExternalDependenciesFor(apiComponent, apiUseTypes, localmonitor.split(10));
 		try {
位置:  -464,6 +469,25   public class BaseApiAnalyzer implements IApiAnalyzer {
 		}
 	}
 
+	private boolean hasCheckedAPIScanLocation() {
+		IEclipsePreferences node = InstanceScope.INSTANCE.getNode(ApiPlugin.PLUGIN_ID);
+		String location = node.get(IApiCoreConstants.API_USE_SCAN_LOCATION, null);
+		if (location == null || location.length() == 0) {
+			return false;
+		}
+		ArrayList<String> checkedLocations = new ArrayList<>();
+		if (location != null &amp;&amp; location.length() > 0) {
+			String[] locations = location.split(UseScanManager.ESCAPE_REGEX + UseScanManager.LOCATION_DELIM);
+			for (String locationString : locations) {
+				String values[] = locationString.split(UseScanManager.ESCAPE_REGEX + UseScanManager.STATE_DELIM);
+				if (Boolean.parseBoolean(values[1])) {
+					checkedLocations.add(values[0]);
+				}
+			}
+		}
+		return checkedLocations.size() > 0;
+	}
+
 	public boolean isSeverityEnabled(Properties properties) {
 		IEclipsePreferences node = InstanceScope.INSTANCE.getNode(ApiPlugin.PLUGIN_ID);
 		if (properties == null) {

---------------------------120---------------------------
需求名称: Bug 535531: test framework improvements
创建时间: 2019-07-29	03:56:14
修改时间: 2019-07-29	04:04:20

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java
位置:  -56,6 +56,11   public class TargetPlatformUtil {
 		}).map(f -> f.getBaseFile().getParentFile()).distinct()
 				.map(dir -> tps.newDirectoryLocation(dir.getAbsolutePath())).toArray(ITargetLocation[]::new);
 
+		NameVersionDescriptor[] included = Arrays.stream(installedBundles)
+				.map(b -> new NameVersionDescriptor(b.getSymbolicName(), b.getVersion().toString()))
+				.toArray(NameVersionDescriptor[]::new);
+		targetDefinition.setIncluded(included);
+
 		targetDefinition.setTargetLocations(bundleContainers);
 		targetDefinition.setArch(Platform.getOSArch());
 		targetDefinition.setOS(Platform.getOS());

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java
位置:  -34,7 +34,9   import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.resources.IncrementalProjectBuilder;
 import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Platform;
 import org.eclipse.debug.core.DebugException;
 import org.eclipse.debug.core.DebugPlugin;
 import org.eclipse.debug.core.ILaunch;
位置:  -65,6 +67,7   class TestExecutionUtil {
 		TestLaunchShortcut launchShortcut = new TestLaunchShortcut();
 		ILaunchConfigurationWorkingCopy launchConfiguration = launchShortcut.createLaunchConfiguration(element);
 		launchConfiguration.setAttribute(IPDELauncherConstants.APPLICATION, IPDEConstants.CORE_TEST_APPLICATION);
+		setupDirectories(launchConfiguration, element);
 
 		BlockingQueue<ITestRunSession> testResult = new LinkedBlockingDeque<>();
 		TestRunListener testRunListener = new TestRunListener() {
位置:  -87,6 +90,16   class TestExecutionUtil {
 		}
 	}
 
+	private static void setupDirectories(ILaunchConfigurationWorkingCopy launchConfiguration, IJavaElement element) {
+		String dir = element.getJavaProject().getElementName() + 
+		IPath testLocation = Platform.getLocation().append(dir);
+
+		launchConfiguration.setAttribute(IPDELauncherConstants.LOCATION, testLocation.append(
+		launchConfiguration.setAttribute(IPDELauncherConstants.CONFIG_LOCATION,
+				testLocation.append(
+		launchConfiguration.setAttribute(IPDELauncherConstants.CONFIG_USE_DEFAULT_AREA, false);
+	}
+
 	private static void launchAndWaitForTermination(ILaunchConfiguration launchConfiguration) throws CoreException {
 		BlockingQueue<ILaunch> terminatedLaunches = new LinkedBlockingDeque<>();
 		ILaunchManager launchManager = DebugPlugin.getDefault().getLaunchManager();

---------------------------121---------------------------
需求名称: Bug 535531 - don't fail with NPE on missing .log file
创建时间: 2019-07-27	03:13:09
修改时间: 2019-07-27	03:13:09

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java
位置:  -150,6 +150,9   class TestExecutionUtil {
 
 	private static String readLogFile(ILaunchConfiguration launchConfiguration) throws CoreException {
 		File logFile = LaunchListener.getMostRecentLogFile(launchConfiguration);
+		if(logFile == null) {
+			return 
+		}
 		try {
 			return String.join(
 		} catch (IOException e) {

---------------------------122---------------------------
需求名称: Bug 535531 - dump log file of test application
创建时间: 2019-07-26	04:53:10
修改时间: 2019-07-26	04:53:29

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java
位置:  -19,6 +19,10   import static org.hamcrest.Matchers.empty;
 import static org.hamcrest.core.Is.is;
 import static org.junit.Assert.fail;
 
+import java.io.File;
+import java.io.IOException;
+import java.nio.file.Files;
+import java.text.MessageFormat;
 import java.util.Arrays;
 import java.util.List;
 import java.util.concurrent.BlockingQueue;
位置:  -31,6 +35,7   import org.eclipse.core.resources.IResource;
 import org.eclipse.core.resources.IncrementalProjectBuilder;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.debug.core.DebugException;
 import org.eclipse.debug.core.DebugPlugin;
 import org.eclipse.debug.core.ILaunch;
 import org.eclipse.debug.core.ILaunchConfiguration;
位置:  -43,6 +48,7   import org.eclipse.jdt.junit.JUnitCore;
 import org.eclipse.jdt.junit.TestRunListener;
 import org.eclipse.jdt.junit.model.ITestRunSession;
 import org.eclipse.pde.internal.launching.IPDEConstants;
+import org.eclipse.pde.internal.launching.launcher.LaunchListener;
 import org.eclipse.pde.launching.IPDELauncherConstants;
 import org.eclipse.pde.ui.launcher.JUnitWorkbenchLaunchShortcut;
 
位置:  -116,6 +122,7   class TestExecutionUtil {
 				}
 
 				if (launch.equals(terminatedLaunch)) {
+					checkExitValueAndDumpLog(launch);
 					break;
 				}
 			}
位置:  -130,6 +137,26   class TestExecutionUtil {
 		}
 	}
 
+	private static void checkExitValueAndDumpLog(ILaunch launch) throws DebugException, CoreException {
+		int exitValue = launch.getProcesses()[0].getExitValue();
+		String logFile = readLogFile(launch.getLaunchConfiguration());
+		if (exitValue == 13) {
+			fail(
+		} else {
+			System.out.println(MessageFormat.format(
+					exitValue, logFile));
+		}
+	}
+
+	private static String readLogFile(ILaunchConfiguration launchConfiguration) throws CoreException {
+		File logFile = LaunchListener.getMostRecentLogFile(launchConfiguration);
+		try {
+			return String.join(
+		} catch (IOException e) {
+			return 
+		}
+	}
+
 	private static class TestLaunchShortcut extends JUnitWorkbenchLaunchShortcut {
 		public ILaunchConfigurationWorkingCopy createLaunchConfiguration(IJavaElement element) throws CoreException {
 			return super.createLaunchConfiguration(element);

---------------------------123---------------------------
需求名称: Bug 535531 - added test.xml for junit.runtime.tests
创建时间: 2019-07-25	07:22:49
修改时间: 2019-07-25	09:06:07

原文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties
位置:  -2,4 +2,5   source.. = src/
 output.. = bin/
 bin.includes = META-INF/,\
                .,\
-               test-bundles/
+               test-bundles/,\
+               test.xml

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitRuntimeTests.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitRuntimeTests.java
位置:  -0,0 +1,24  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.junit.runtime.tests;
+
+import org.junit.runner.RunWith;
+import org.junit.runners.Suite;
+import org.junit.runners.Suite.SuiteClasses;
+
+@RunWith(Suite.class)
+@SuiteClasses({ JUnitExecutionTest.class })
+public class JUnitRuntimeTests {
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test.xml 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test.xml
位置:  -0,0 +1,48  
+<?xml version=
+
+<project name=
+  <!-- The property ${eclipse-home} should be passed into this script -->
+
+  <!-- sets the properties eclipse-home, and library-file -->
+  <property name=
+  <property name=
+  <property name=
+
+  <!-- This target holds all initialization code that needs to be done for -->
+  <!-- all tests that are to be run. Initialization for individual tests -->
+  <!-- should be done within the body of the suite target. -->
+  <target name=
+    <tstamp/>
+    <delete>
+      <fileset dir=
+    </delete>
+  </target>
+
+  <!-- This target defines the tests that need to be run. -->
+  <target name=
+
+    <property name=
+    <delete dir=
+    <ant target=
+      <property name=
+      <property name=
+      <property name=
+    </ant>
+
+  </target>
+
+  <!-- This target holds code to cleanup the testing environment after the tests -->
+  <!-- have been run. You can use this to delete temporary files that are created. -->
+  <target name=
+  </target>
+
+  <!-- This target runs the test suite. Any actions that need to happen after all -->
+  <!-- the tests have been run should go here. -->
+  <target name=
+    <ant target=
+      <property name=
+      <property name=
+    </ant>
+  </target>
+
+</project>

---------------------------124---------------------------
需求名称: Bug 549552 - NPE on icons search in workspace on non-bundle projects
创建时间: 2019-07-25	06:57:09
修改时间: 2019-07-25	08:48:58

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/AbstractRepository.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/AbstractRepository.java
位置:  -16,7 +16,8   package org.eclipse.pde.internal.ui.views.imagebrowser.repositories;
 
 import java.io.*;
 import java.util.*;
-import java.util.zip.*;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.runtime.*;
 import org.eclipse.core.runtime.jobs.Job;
位置:  -122,7 +123,11   public abstract class AbstractRepository extends Job {
 		File manifest = new File(directory, 
 		if (manifest.exists()) {
 			try {
-				String pluginName = getPluginName(new FileInputStream(manifest));
+				Optional<String> name = getPluginName(new FileInputStream(manifest));
+				if (!name.isPresent()) {
+					return;
+				}
+				String pluginName = name.get();
 				int directoryPathLength = directory.getAbsolutePath().length();
 
 				Collection<File> locations = new HashSet<>();
位置:  -158,16 +163,24   public abstract class AbstractRepository extends Job {
 		}
 	}
 
-	protected String getPluginName(final InputStream manifest) throws IOException {
+	/**
+	 * @return can return {@link Optional#empty()} if given manifest is not
+	 *         valid bundle manifest
+	 */
+	protected Optional<String> getPluginName(final InputStream manifest) throws IOException {
 		Properties properties = new Properties();
 		try (BufferedInputStream stream = new BufferedInputStream(manifest)) {
 			properties.load(stream);
 		}
 		String property = properties.getProperty(
-		if (property.contains(
-			return property.substring(0, property.indexOf(';')).trim();
+		if (property == null) {
+			return Optional.empty();
+		}
+		if (property.contains(
+			return Optional.of(property.substring(0, property.indexOf(';')).trim());
+		}
 
-		return property.trim();
+		return Optional.of(property.trim());
 	}
 
 	protected void addImageElement(ImageElement element) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/WorkspaceRepository.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/WorkspaceRepository.java
位置:  -45,7 +45,11   public class WorkspaceRepository extends AbstractRepository {
 			if (manifest.exists()) {
 				try {
 					// extract plugin name
-					final String pluginName = getPluginName(manifest.getContents());
+					Optional<String> name = getPluginName(manifest.getContents());
+					if (!name.isPresent()) {
+						return !fProjects.isEmpty();
+					}
+					final String pluginName = name.get();
 
 					// parse all folders
 					project.accept((IResourceProxyVisitor) proxy -> {

---------------------------125---------------------------
需求名称: Bug 344163 - Removing baseline triggers a build
创建时间: 2019-07-23	11:54:47
修改时间: 2019-07-25	05:52:59

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinePreferencePage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinePreferencePage.java
位置:  -20,6 +20,8   import java.util.HashSet;
 import java.util.Map;
 
 import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.dialogs.IDialogConstants;
 import org.eclipse.jface.dialogs.MessageDialog;
位置:  -34,6 +36,7   import org.eclipse.jface.window.Window;
 import org.eclipse.jface.wizard.WizardDialog;
 import org.eclipse.pde.api.tools.internal.provisional.ApiPlugin;
 import org.eclipse.pde.api.tools.internal.provisional.IApiBaselineManager;
+import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
 import org.eclipse.pde.api.tools.internal.provisional.model.IApiBaseline;
 import org.eclipse.pde.api.tools.internal.util.Util;
 import org.eclipse.pde.api.tools.ui.internal.ApiToolsLabelProvider;
位置:  -326,6 +329,18   public class ApiBaselinePreferencePage extends PreferencePage implements IWorkbe
 			manager.addApiBaseline(iApiBaseline);
 		}
 		manager.setDefaultApiBaseline(newdefault);
+		if (defaultchanged &amp;&amp; newdefault == null &amp;&amp; origdefault != null) {
+			findAndDeleteCompatibilityMarkers();
+			Object[] checkedElements = tableviewer.getCheckedElements();
+			this.block.setHasBaseline(checkedElements.length != 0);
+			this.block.createMissingBaselineMarker();
+			origdefault = newdefault;
+			dirty = false;
+			defaultcontentchanged = false;
+			defaultchanged = false;
+			removed.clear();
+			return;
+		}
 		if (defaultchanged || defaultcontentchanged) {
 			if (rebuildcount < 1) {
 				rebuildcount++;
位置:  -350,10 +365,53   public class ApiBaselinePreferencePage extends PreferencePage implements IWorkbe
 		removed.clear();
 	}
 
+	private void findAndDeleteCompatibilityMarkers() {
+		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return;
+		}
+		for (IProject iProject : apiProjects) {
+			cleanupCompatibilityMarkers(iProject);
+			try {
+				iProject.deleteMarkers(IApiMarkerConstants.UNUSED_FILTER_PROBLEM_MARKER, false,
+						IResource.DEPTH_INFINITE);
+			} catch (CoreException e) {
+			}
+
+		}
+		return;
+	}
+
+	/**
+	 * Cleans up only API compatibility markers on the given {@link IResource}
+	 *
+	 * @param resource
+	 *            the given resource
+	 */
+	void cleanupCompatibilityMarkers(IResource resource) {
+		try {
+			if (resource != null &amp;&amp; resource.isAccessible()) {
+				resource.deleteMarkers(IApiMarkerConstants.COMPATIBILITY_PROBLEM_MARKER, false,
+						IResource.DEPTH_INFINITE);
+				resource.deleteMarkers(IApiMarkerConstants.SINCE_TAGS_PROBLEM_MARKER, false, IResource.DEPTH_INFINITE);
+				if (resource.getType() == IResource.PROJECT) {
+					// on full builds
+					resource.deleteMarkers(IApiMarkerConstants.VERSION_NUMBERING_PROBLEM_MARKER, false,
+							IResource.DEPTH_INFINITE);
+					resource.deleteMarkers(IApiMarkerConstants.DEFAULT_API_BASELINE_PROBLEM_MARKER, true,
+							IResource.DEPTH_ZERO);
+					resource.deleteMarkers(IApiMarkerConstants.API_COMPONENT_RESOLUTION_PROBLEM_MARKER, true,
+							IResource.DEPTH_ZERO);
+				}
+			}
+		} catch (CoreException e) {
+			ApiPlugin.log(e.getStatus());
+		}
+	}
 	@Override
 	public boolean performOk() {
 		Object[] checkedElements = tableviewer.getCheckedElements();
-		this.block.hasSelectedBaseline(checkedElements.length != 0);
+		this.block.setHasBaseline(checkedElements.length != 0);
 		this.block.performOK();
 		applyChanges();
 		return true;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinesConfigurationBlock.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinesConfigurationBlock.java
位置:  -424,8 +424,37   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 		}
 	}
 
+	public void createMissingBaselineMarker() {
+		if (hasBaseline) {
+			return;
+		}
+		String newval = fgAllKeys[0].getStoredValue(fLookupOrder[0], fManager);
+		if (newval == null) {
+			newval = ApiPlugin.VALUE_ERROR;
+		}
+		int valueWarning = -1;
+		if (newval.equals(ApiPlugin.VALUE_WARNING)) {
+			valueWarning = IMarker.SEVERITY_WARNING;
+		}
+		if (newval.equals(ApiPlugin.VALUE_ERROR)) {
+			valueWarning = IMarker.SEVERITY_ERROR;
+		}
+		if(valueWarning < 0) {
+			return;
+		}
+		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return;
+		}
+		for (IProject iProject : apiProjects) {
+			createMissingBaselineMarkerOnProject(iProject, valueWarning);
+		}
+	}
 	private void createMissingBaselineMarker(int valueWarning) {
 		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return;
+		}
 		for (IProject iProject : apiProjects) {
 			createMissingBaselineMarkerOnProject(iProject, valueWarning);
 		}
位置:  -454,6 +483,9   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 			ApiPlugin.log(e);
 		}
 		IProject[] apiProjects = Util.getApiProjects();
+		if (apiProjects == null) {
+			return markList;
+		}
 		for (IProject iProject : apiProjects) {
 			IMarker[] findMarkers;
 			try {
位置:  -576,7 +608,7   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 		}
 	}
 
-	public void hasSelectedBaseline(boolean b) {
+	public void setHasBaseline(boolean b) {
 		hasBaseline = b;
 
 	}

---------------------------126---------------------------
需求名称: Bug 344110 - Changing 'Missing API baseline' preference triggers a full
创建时间: 2019-07-19	01:57:50
修改时间: 2019-07-23	09:00:56

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinePreferencePage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinePreferencePage.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -352,6 +352,8   public class ApiBaselinePreferencePage extends PreferencePage implements IWorkbe
 
 	@Override
 	public boolean performOk() {
+		Object[] checkedElements = tableviewer.getCheckedElements();
+		this.block.hasSelectedBaseline(checkedElements.length != 0);
 		this.block.performOK();
 		applyChanges();
 		return true;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinesConfigurationBlock.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiBaselinesConfigurationBlock.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -16,7 +16,12   package org.eclipse.pde.api.tools.ui.internal.preferences;
 import java.util.ArrayList;
 import java.util.List;
 
+import org.eclipse.core.resources.IMarker;
 import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.preferences.DefaultScope;
 import org.eclipse.core.runtime.preferences.IEclipsePreferences;
 import org.eclipse.core.runtime.preferences.IScopeContext;
位置:  -25,6 +30,7   import org.eclipse.jface.dialogs.Dialog;
 import org.eclipse.jface.dialogs.MessageDialog;
 import org.eclipse.jface.window.Window;
 import org.eclipse.pde.api.tools.internal.provisional.ApiPlugin;
+import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
 import org.eclipse.pde.api.tools.internal.provisional.problems.IApiProblemTypes;
 import org.eclipse.pde.api.tools.internal.util.Util;
 import org.eclipse.pde.api.tools.ui.internal.ApiUIPlugin;
位置:  -275,6 +281,7   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 	 */
 	private Composite fParent = null;
 
+	private boolean hasBaseline = true;
 	/**
 	 * Constructor
 	 *
位置:  -327,6 +334,48   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 			try {
 				ArrayList<Key> changes = new ArrayList<>();
 				collectChanges(fLookupOrder[0], changes);
+				if (changes.size() == 1) {
+					// Note that there is only 1 key in ApiBaselineConfigBlock
+					Key k = changes.get(0);
+
+					String original = k.getStoredValue(fLookupOrder[0], null);
+					if (original == null) {
+						// this means default value - always error
+						original = ApiPlugin.VALUE_ERROR;
+					}
+					String newval = k.getStoredValue(fLookupOrder[0], fManager);
+					if (newval.equals(ApiPlugin.VALUE_IGNORE)) {
+						// just check for any missing baseline and delete it
+						deleteMissingBaselineMarker();
+
+					} else if (newval.equals(ApiPlugin.VALUE_WARNING)) {
+						// if error to warning - change attribute
+						if (original.equals(ApiPlugin.VALUE_ERROR)) {
+							updateMissingBaselineMarkerSeverity(IMarker.SEVERITY_WARNING);
+						}
+						// if ignore to warning - calculate
+						if (original.equals(ApiPlugin.VALUE_IGNORE)) {
+							if (hasBaseline == false) {
+								createMissingBaselineMarker(IMarker.SEVERITY_WARNING);
+							}
+						}
+
+					} else if (newval.equals(ApiPlugin.VALUE_ERROR)) {
+						// if warning to error - change attribute
+						if (original.equals(ApiPlugin.VALUE_WARNING)) {
+							updateMissingBaselineMarkerSeverity(IMarker.SEVERITY_ERROR);
+						}
+						// if ignore to warning - calculate
+						if (original.equals(ApiPlugin.VALUE_IGNORE)) {
+							if (hasBaseline == false) {
+								createMissingBaselineMarker(IMarker.SEVERITY_ERROR);
+							}
+						}
+					}
+					fDirty = false;
+					return;
+				}
+				// code below probably redundant now
 				if (changes.size() > 0) {
 					if (ApiBaselinePreferencePage.rebuildcount < 1) {
 						ApiBaselinePreferencePage.rebuildcount++;
位置:  -352,6 +401,74   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 		}
 	}
 
+	private void updateMissingBaselineMarkerSeverity(int severity) {
+		ArrayList<IMarker> marker = findMissingBaselineMarker();
+
+		for (IMarker iMarker : marker) {
+			try {
+				iMarker.setAttribute(IMarker.SEVERITY, severity);
+			} catch (CoreException e) {
+				ApiPlugin.log(e);
+			}
+		}
+	}
+
+	private void deleteMissingBaselineMarker() {
+		ArrayList<IMarker> marker = findMissingBaselineMarker();
+		for (IMarker iMarker : marker) {
+			try {
+				iMarker.delete();
+			} catch (CoreException e) {
+				ApiPlugin.log(e);
+			}
+		}
+	}
+
+	private void createMissingBaselineMarker(int valueWarning) {
+		IProject[] apiProjects = Util.getApiProjects();
+		for (IProject iProject : apiProjects) {
+			createMissingBaselineMarkerOnProject(iProject, valueWarning);
+		}
+	}
+
+	private void createMissingBaselineMarkerOnProject(IResource res, int valueWarning) {
+		try {
+			IMarker createMarker = res.createMarker(IApiMarkerConstants.DEFAULT_API_BASELINE_PROBLEM_MARKER);
+			createMarker.setAttribute(IMarker.MESSAGE, PreferenceMessages.ApiBaselinesConfigurationBlock_0);
+			createMarker.setAttribute(IMarker.SEVERITY, valueWarning);
+		} catch (CoreException e) {
+			ApiPlugin.log(e);
+		}
+	}
+
+	private ArrayList<IMarker> findMissingBaselineMarker() {
+		ArrayList<IMarker> markList = new ArrayList<>();
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
+		try {
+			IMarker[] findMarkers = root.findMarkers(IApiMarkerConstants.DEFAULT_API_BASELINE_PROBLEM_MARKER, false,
+					IResource.DEPTH_ZERO);
+			for (IMarker iMarker : findMarkers) {
+				markList.add(iMarker);
+			}
+		} catch (CoreException e) {
+			ApiPlugin.log(e);
+		}
+		IProject[] apiProjects = Util.getApiProjects();
+		for (IProject iProject : apiProjects) {
+			IMarker[] findMarkers;
+			try {
+				findMarkers = iProject.findMarkers(IApiMarkerConstants.DEFAULT_API_BASELINE_PROBLEM_MARKER, false,
+						IResource.DEPTH_ZERO);
+				for (IMarker iMarker : findMarkers) {
+					markList.add(iMarker);
+				}
+			} catch (CoreException e) {
+				ApiPlugin.log(e);
+			}
+		}
+		return markList;
+	}
+
 	/**
 	 * Cancels all of the changes on the page
 	 */
位置:  -458,4 +575,9   public class ApiBaselinesConfigurationBlock extends ConfigurationBlock {
 			}
 		}
 	}
+
+	public void hasSelectedBaseline(boolean b) {
+		hasBaseline = b;
+
+	}
 }

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/PreferenceMessages.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/PreferenceMessages.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2007, 2017 IBM Corporation and others.
+ * Copyright (c) 2007, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -17,6 +17,7   import org.eclipse.osgi.util.NLS;
 
 public class PreferenceMessages extends NLS {
 	private static final String BUNDLE_NAME = 
+	public static String ApiBaselinesConfigurationBlock_0;
 	public static String ApiErrorsWarningsConfigurationBlock_0;
 	public static String ApiErrorsWarningsConfigurationBlock_1;
 	public static String ApiErrorsWarningsConfigurationBlock_2;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/preferencemessages.properties 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/preferencemessages.properties
位置:  -1,5 +1,5  
 ###############################################################################
-# Copyright (c) 2008, 2017 IBM Corporation and others.
+# Copyright (c) 2008, 2019 IBM Corporation and others.
 #
 # This program and the accompanying materials
 # are made available under the terms of the Eclipse Public License 2.0
位置:  -11,6 +11,7  
 # Contributors:
 #     IBM Corporation - initial API and implementation
 ###############################################################################
+ApiBaselinesConfigurationBlock_0=An API baseline has not been set for the current workspace.
 ApiErrorsWarningsConfigurationBlock_0=Error and warning settings have changed. A full build is required for the changes to take effect.\n\nDo a full build now?
 ApiErrorsWarningsConfigurationBlock_1=Error and warning settings have changed. A rebuild of the project is required for the changes to take effect.\n\nRebuild {0} now?
 ApiErrorsWarningsConfigurationBlock_2=Settings Changed

---------------------------127---------------------------
需求名称: Bug 535531 - tests for @RunWith(JUnitPlatform.class)
创建时间: 2019-07-19	05:24:40
修改时间: 2019-07-19	05:24:40

原文件: ui/org.eclipse.pde.junit.runtime.tests/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/.project
位置:  -20,15 +20,9  
 			<arguments>
 			</arguments>
 		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
 		<nature>org.eclipse.jdt.core.javanature</nature>
-		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
 	</natures>
 </projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/.settings/org.eclipse.pde.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/.settings/org.eclipse.pde.prefs
位置:  -0,0 +1,34  
+compilers.f.unresolved-features=1
+compilers.f.unresolved-plugins=1
+compilers.incompatible-environment=1
+compilers.p.build=1
+compilers.p.build.bin.includes=1
+compilers.p.build.encodings=2
+compilers.p.build.java.compiler=2
+compilers.p.build.java.compliance=1
+compilers.p.build.missing.output=2
+compilers.p.build.output.library=1
+compilers.p.build.source.library=1
+compilers.p.build.src.includes=1
+compilers.p.deprecated=1
+compilers.p.discouraged-class=1
+compilers.p.internal=1
+compilers.p.missing-packages=2
+compilers.p.missing-version-export-package=2
+compilers.p.missing-version-import-package=2
+compilers.p.missing-version-require-bundle=2
+compilers.p.no-required-att=0
+compilers.p.no.automatic.module=2
+compilers.p.not-externalized-att=2
+compilers.p.service.component.without.lazyactivation=1
+compilers.p.unknown-attribute=1
+compilers.p.unknown-class=1
+compilers.p.unknown-element=1
+compilers.p.unknown-identifier=1
+compilers.p.unknown-resource=1
+compilers.p.unresolved-ex-points=0
+compilers.p.unresolved-import=0
+compilers.s.create-docs=false
+compilers.s.doc-folder=doc
+compilers.s.open-tags=1
+eclipse.preferences.version=1

原文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF
位置:  -18,4 +18,3   Require-Bundle: org.junit,
  org.eclipse.jdt.core;bundle-version=
  org.eclipse.debug.ui;bundle-version=
  org.eclipse.ui;bundle-version=
-Export-Package: org.eclipse.pde.junit.runtime.tests

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitExecutionTest.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitExecutionTest.java
位置:  -37,6 +37,9   import org.eclipse.jdt.core.IType;
 import org.eclipse.jdt.core.JavaCore;
 import org.eclipse.jdt.core.JavaModelException;
 import org.eclipse.jdt.junit.model.ITestElement;
+import org.eclipse.jdt.junit.model.ITestElement.FailureTrace;
+import org.eclipse.jdt.junit.model.ITestElement.Result;
+import org.eclipse.jdt.junit.model.ITestElementContainer;
 import org.eclipse.jdt.junit.model.ITestRunSession;
 import org.junit.BeforeClass;
 import org.junit.Test;
位置:  -47,6 +50,8   import org.junit.runners.Parameterized.Parameters;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.FrameworkUtil;
 
+import junit.framework.AssertionFailedError;
+
 @RunWith(Parameterized.class)
 public class JUnitExecutionTest {
 
位置:  -81,7 +86,9   public class JUnitExecutionTest {
 		return Arrays.asList(new TestInput(
 				new TestInput(
 				new TestInput(
-				new TestInput(
+				new TestInput(
+				new TestInput(
+				new TestInput(
 	}
 
 	@Test
位置:  -90,7 +97,7   public class JUnitExecutionTest {
 		ITestRunSession session = TestExecutionUtil.runTest(testClass);
 
 		assertThat(session.getChildren(), is(arrayWithSize(1)));
-		assertThat(session.getTestResult(true), is(ITestElement.Result.OK));
+		assertSuccessful(session);
 	}
 
 	@Test
位置:  -99,7 +106,7   public class JUnitExecutionTest {
 		ITestRunSession session = TestExecutionUtil.runTest(testPackage);
 
 		assertThat(session.getChildren(), is(arrayWithSize(2)));
-		assertThat(session.getTestResult(true), is(ITestElement.Result.OK));
+		assertSuccessful(session);
 	}
 
 	@Test
位置:  -107,7 +114,7   public class JUnitExecutionTest {
 		ITestRunSession session = TestExecutionUtil.runTest(input.project);
 
 		assertThat(session.getChildren(), is(arrayWithSize(2)));
-		assertThat(session.getTestResult(true), is(ITestElement.Result.OK));
+		assertSuccessful(session);
 	}
 
 	@Test
位置:  -116,7 +123,31   public class JUnitExecutionTest {
 		ITestRunSession session = TestExecutionUtil.runTest(testMethod);
 
 		assertThat(session.getChildren(), is(arrayWithSize(1)));
-		assertThat(session.getTestResult(true), is(ITestElement.Result.OK));
+		assertSuccessful(session);
+	}
+
+	private void assertSuccessful(ITestRunSession session) {
+		Result testResult = session.getTestResult(true);
+		if (ITestElement.Result.OK.equals(testResult))
+			return;
+		
+		AssertionFailedError assertionFailedError = new AssertionFailedError(
+		addFailureTraces(session, assertionFailedError);
+		
+		throw assertionFailedError;
+	}
+
+	private void addFailureTraces(ITestElement element, AssertionFailedError assertionFailedError) {
+		FailureTrace trace = element.getFailureTrace();
+		if (trace != null) {
+			assertionFailedError.addSuppressed(new AssertionFailedError(
+		}
+		
+		if (element instanceof ITestElementContainer) {
+			for (ITestElement child : ((ITestElementContainer) element).getChildren()) {
+				addFailureTraces(child, assertionFailedError);
+			}
+		}
 	}
 
 	static class TestInput {

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/META-INF/MANIFEST.MF
位置:  -6,3 +6,4   Bundle-Version: 1.0.0.qualifier
 Fragment-Host: verification.tests.junit4;bundle-version=
 Automatic-Module-Name: verification.tests.junit5.fragment
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Export-Package: verification.tests.junit4.fragment

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit4.platform.fragment</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/META-INF/MANIFEST.MF
位置:  -0,0 +1,9  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Fragment
+Bundle-SymbolicName: verification.tests.junit4.platform.fragment
+Bundle-Version: 1.0.0.qualifier
+Fragment-Host: verification.tests.junit4.platform;bundle-version=
+Automatic-Module-Name: verification.tests.junit5.fragment
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Export-Package: verification.tests.junit4.platform.fragment

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/src/verification/tests/junit4/platform/fragment/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/src/verification/tests/junit4/platform/fragment/Test1.java
位置:  -0,0 +1,33  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.platform.fragment;
+
+import org.junit.Test;
+import org.junit.platform.runner.JUnitPlatform;
+import org.junit.runner.RunWith;
+
+@RunWith(JUnitPlatform.class)
+public class Test1 {
+
+	@Test
+	public void test1() {
+
+	}
+
+	@Test
+	public void test2() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/src/verification/tests/junit4/platform/fragment/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform.fragment/src/verification/tests/junit4/platform/fragment/Test2.java
位置:  -0,0 +1,28  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.platform.fragment;
+
+import org.junit.Test;
+import org.junit.platform.runner.JUnitPlatform;
+import org.junit.runner.RunWith;
+
+@RunWith(JUnitPlatform.class)
+public class Test2 {
+
+	@Test
+	public void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit4.platform</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/META-INF/MANIFEST.MF
位置:  -0,0 +1,14  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Tests
+Bundle-SymbolicName: verification.tests.junit4.platform
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: verification.tests
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Require-Bundle: org.junit;bundle-version=
+ org.junit.platform.runner;bundle-version=
+ org.junit.jupiter.engine;bundle-version=
+ org.junit.jupiter.api;bundle-version=
+ org.junit.platform.launcher;bundle-version=
+ org.junit.platform.suite.api;bundle-version=
+Export-Package: verification.tests.junit4.platform

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/src/verification/tests/junit4/platform/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/src/verification/tests/junit4/platform/Test1.java
位置:  -0,0 +1,33  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.platform;
+
+import org.junit.Test;
+import org.junit.platform.runner.JUnitPlatform;
+import org.junit.runner.RunWith;
+
+@RunWith(JUnitPlatform.class)
+public class Test1 {
+
+	@Test
+	public void test1() {
+
+	}
+
+	@Test
+	public void test2() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/src/verification/tests/junit4/platform/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.platform/src/verification/tests/junit4/platform/Test2.java
位置:  -0,0 +1,28  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.platform;
+
+import org.junit.Test;
+import org.junit.platform.runner.JUnitPlatform;
+import org.junit.runner.RunWith;
+
+@RunWith(JUnitPlatform.class)
+public class Test2 {
+
+	@Test
+	public void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/META-INF/MANIFEST.MF
位置:  -6,3 +6,4   Bundle-Version: 1.0.0.qualifier
 Fragment-Host: verification.tests.junit5;bundle-version=
 Automatic-Module-Name: verification.tests.junit5.fragment
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Export-Package: verification.tests.junit5.fragment

---------------------------128---------------------------
需求名称: Bug 535531 - test framework for pde.junit.runtime
创建时间: 2019-07-17	07:32:29
修改时间: 2019-07-19	03:57:36

原文件: pom.xml 
新文件: pom.xml
位置:  -67,6 +67,7  
     <module>ui/org.eclipse.pde</module>
     <module>ui/org.eclipse.pde.core</module>
     <module>ui/org.eclipse.pde.junit.runtime</module>
+    <module>ui/org.eclipse.pde.junit.runtime.tests</module>
     <module>ui/org.eclipse.pde.launching</module>
     <module>ui/org.eclipse.pde.runtime</module>
     <module>ui/org.eclipse.pde.ui</module>

原文件: ui/org.eclipse.pde.junit.runtime.tests/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/.project
位置:  -0,0 +1,34  
+<?xml version=
+<projectDescription>
+	<name>org.eclipse.pde.junit.runtime.tests</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,107  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=enabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=warning
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=ignore
+org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=warning
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=warning
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=warning
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=warning
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=warning
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/META-INF/MANIFEST.MF
位置:  -0,0 +1,21  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: PDE JUnit Runtime Tests
+Bundle-SymbolicName: org.eclipse.pde.junit.runtime.tests;singleton:=true
+Bundle-Version: 3.5.500.qualifier
+Automatic-Module-Name: org.eclipse.pde.junit.runtime.tests
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Bundle-Vendor: Eclipse.org
+Bundle-ActivationPolicy: lazy
+Eclipse-BundleShape: dir
+Require-Bundle: org.junit,
+ org.hamcrest.library;bundle-version=
+ org.eclipse.core.runtime;bundle-version=
+ org.eclipse.pde.launching;bundle-version=
+ org.eclipse.core.resources;bundle-version=
+ org.eclipse.pde.ui;bundle-version=
+ org.eclipse.jdt.junit;bundle-version=
+ org.eclipse.jdt.core;bundle-version=
+ org.eclipse.debug.ui;bundle-version=
+ org.eclipse.ui;bundle-version=
+Export-Package: org.eclipse.pde.junit.runtime.tests

原文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/build.properties
位置:  -0,0 +1,5  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .,\
+               test-bundles/

原文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime.tests/pom.xml
位置:  -0,0 +1,87  
+<?xml version=
+<!--
+  Copyright (c) 2019 Julian Honnen
+ 
+  This program and the accompanying materials
+  are made available under the terms of the Eclipse Public License 2.0
+  which accompanies this distribution, and is available at
+  https://www.eclipse.org/legal/epl-2.0/
+ 
+  SPDX-License-Identifier: EPL-2.0
+ 
+  Contributors:
+     Julian Honnen <julian.honnen@vector.com> - initial implementation
+-->
+<project
+	xmlns=
+	xmlns:xsi=
+	xsi:schemaLocation=
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<artifactId>tests-pom</artifactId>
+		<groupId>eclipse.pde.ui</groupId>
+		<version>4.13.0-SNAPSHOT</version>
+		<relativePath>../../tests-pom/</relativePath>
+	</parent>
+	<groupId>org.eclipse.pde</groupId>
+	<artifactId>org.eclipse.pde.junit.runtime.tests</artifactId>
+	<version>3.5.500-SNAPSHOT</version>
+	<packaging>eclipse-test-plugin</packaging>
+	
+	<properties>
+		<skipAPIAnalysis>true</skipAPIAnalysis>
+	</properties>
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.eclipse.tycho</groupId>
+				<artifactId>tycho-surefire-plugin</artifactId>
+				<version>${tycho.version}</version>
+				<configuration>
+					<useUIHarness>true</useUIHarness>
+					<useUIThread>true</useUIThread>
+				</configuration>
+			</plugin>
+
+			<plugin>
+				<groupId>org.eclipse.tycho</groupId>
+				<artifactId>target-platform-configuration</artifactId>
+				<version>${tycho.version}</version>
+				<configuration>
+					<dependency-resolution>
+						<extraRequirements>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.eclipse.osgi.compatibility.state</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.junit.jupiter.api</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.eclipse.jdt.junit4.runtime</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.eclipse.jdt.junit5.runtime</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+							<requirement>
+								<type>eclipse-plugin</type>
+								<id>org.eclipse.pde.junit.runtime</id>
+								<versionRange>0.0.0</versionRange>
+							</requirement>
+						</extraRequirements>
+					</dependency-resolution>
+				</configuration>
+			</plugin>
+
+		</plugins>
+	</build>
+
+</project>

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitExecutionTest.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/JUnitExecutionTest.java
位置:  -0,0 +1,145  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.junit.runtime.tests;
+
+import static org.hamcrest.MatcherAssert.assertThat;
+import static org.hamcrest.collection.IsArrayWithSize.arrayWithSize;
+import static org.hamcrest.core.Is.is;
+import static org.junit.Assert.assertNotNull;
+
+import java.net.URL;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IProjectDescription;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.FileLocator;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.jdt.core.IJavaProject;
+import org.eclipse.jdt.core.IMethod;
+import org.eclipse.jdt.core.IPackageFragment;
+import org.eclipse.jdt.core.IType;
+import org.eclipse.jdt.core.JavaCore;
+import org.eclipse.jdt.core.JavaModelException;
+import org.eclipse.jdt.junit.model.ITestElement;
+import org.eclipse.jdt.junit.model.ITestRunSession;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.junit.runners.Parameterized;
+import org.junit.runners.Parameterized.Parameter;
+import org.junit.runners.Parameterized.Parameters;
+import org.osgi.framework.Bundle;
+import org.osgi.framework.FrameworkUtil;
+
+@RunWith(Parameterized.class)
+public class JUnitExecutionTest {
+
+	@Parameter
+	public TestInput input;
+
+	@BeforeClass
+	public static void setupProjects() throws Exception {
+		TargetPlatformUtil.setRunningPlatformAsTarget();
+
+		Bundle bundle = FrameworkUtil.getBundle(JUnitExecutionTest.class);
+
+		IWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();
+		for (URL resource : Collections.list(bundle.findEntries(
+			Path resourcePath = new Path(FileLocator.toFileURL(resource).getPath());
+			IPath descriptionPath = resourcePath.append(IProjectDescription.DESCRIPTION_FILE_NAME);
+			if (!descriptionPath.toFile().exists())
+				continue;
+
+			IProjectDescription projectDescription = workspaceRoot.getWorkspace()
+					.loadProjectDescription(descriptionPath);
+			IProject project = workspaceRoot.getProject(resourcePath.lastSegment());
+			if (!project.exists()) {
+				project.create(projectDescription, null);
+				project.open(null);
+			}
+		}
+	}
+
+	@Parameters(name = 
+	public static Collection<TestInput> parameters() {
+		return Arrays.asList(new TestInput(
+				new TestInput(
+				new TestInput(
+				new TestInput(
+	}
+
+	@Test
+	public void executeType() throws Exception {
+		IType testClass = input.findType(
+		ITestRunSession session = TestExecutionUtil.runTest(testClass);
+
+		assertThat(session.getChildren(), is(arrayWithSize(1)));
+		assertThat(session.getTestResult(true), is(ITestElement.Result.OK));
+	}
+
+	@Test
+	public void executePackage() throws Exception {
+		IPackageFragment testPackage = input.findType(
+		ITestRunSession session = TestExecutionUtil.runTest(testPackage);
+
+		assertThat(session.getChildren(), is(arrayWithSize(2)));
+		assertThat(session.getTestResult(true), is(ITestElement.Result.OK));
+	}
+
+	@Test
+	public void executeProject() throws Exception {
+		ITestRunSession session = TestExecutionUtil.runTest(input.project);
+
+		assertThat(session.getChildren(), is(arrayWithSize(2)));
+		assertThat(session.getTestResult(true), is(ITestElement.Result.OK));
+	}
+
+	@Test
+	public void executeMethod() throws Exception {
+		IMethod testMethod = input.findType(
+		ITestRunSession session = TestExecutionUtil.runTest(testMethod);
+
+		assertThat(session.getChildren(), is(arrayWithSize(1)));
+		assertThat(session.getTestResult(true), is(ITestElement.Result.OK));
+	}
+
+	static class TestInput {
+		private final String displayName;
+
+		final IJavaProject project;
+
+		public TestInput(String displayName, String projectName) {
+			this.displayName = displayName;
+			IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);
+			this.project = JavaCore.create(project);
+		}
+
+		@Override
+		public String toString() {
+			return displayName;
+		}
+
+		public IType findType(String name) throws JavaModelException {
+			IType type = project.findType(project.getElementName(), name);
+			assertNotNull(type);
+			return type;
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TargetPlatformUtil.java
位置:  -0,0 +1,69  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.junit.runtime.tests;
+
+import java.util.Arrays;
+import org.eclipse.core.runtime.*;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.osgi.internal.framework.EquinoxBundle;
+import org.eclipse.osgi.storage.BundleInfo.Generation;
+import org.eclipse.pde.core.target.*;
+import org.eclipse.pde.internal.core.PDECore;
+import org.osgi.framework.Bundle;
+import org.osgi.framework.FrameworkUtil;
+
+public class TargetPlatformUtil {
+
+	private static final String TARGET_NAME = TargetPlatformUtil.class + 
+
+	public static void setRunningPlatformAsTarget() throws CoreException, InterruptedException {
+		ITargetPlatformService tps = PDECore.getDefault().acquireService(ITargetPlatformService.class);
+		ITargetDefinition currentTarget = tps.getWorkspaceTargetDefinition();
+		if (TARGET_NAME.equals(currentTarget.getName())) {
+			return;
+		}
+
+		Job job = new LoadTargetDefinitionJob(createTarget(tps));
+		job.schedule();
+		job.join();
+
+		IStatus result = job.getResult();
+		if (!result.isOK()) {
+			throw new AssertionError(result.getMessage(), result.getException());
+		}
+	}
+
+	private static ITargetDefinition createTarget(ITargetPlatformService tps) throws CoreException {
+		ITargetDefinition targetDefinition = tps.newDefaultTarget();
+		targetDefinition.setName(TARGET_NAME);
+
+		Bundle[] installedBundles = FrameworkUtil.getBundle(TargetPlatformUtil.class).getBundleContext().getBundles();
+		ITargetLocation[] bundleContainers = Arrays.stream(installedBundles).map(bundle -> {
+			EquinoxBundle bundleImpl = (EquinoxBundle) bundle;
+			Generation generation = (Generation) bundleImpl.getModule().getCurrentRevision().getRevisionInfo();
+			return generation.getBundleFile();
+		}).map(f -> f.getBaseFile().getParentFile()).distinct()
+				.map(dir -> tps.newDirectoryLocation(dir.getAbsolutePath())).toArray(ITargetLocation[]::new);
+
+		targetDefinition.setTargetLocations(bundleContainers);
+		targetDefinition.setArch(Platform.getOSArch());
+		targetDefinition.setOS(Platform.getOS());
+		targetDefinition.setWS(Platform.getWS());
+		targetDefinition.setNL(Platform.getNL());
+
+		tps.saveTargetDefinition(targetDefinition);
+		return targetDefinition;
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/src/org/eclipse/pde/junit/runtime/tests/TestExecutionUtil.java
位置:  -0,0 +1,138  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.junit.runtime.tests;
+
+import static java.util.stream.Collectors.toList;
+import static org.hamcrest.MatcherAssert.assertThat;
+import static org.hamcrest.Matchers.empty;
+import static org.hamcrest.core.Is.is;
+import static org.junit.Assert.fail;
+
+import java.util.Arrays;
+import java.util.List;
+import java.util.concurrent.BlockingQueue;
+import java.util.concurrent.LinkedBlockingDeque;
+import java.util.concurrent.TimeUnit;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IncrementalProjectBuilder;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.debug.core.DebugPlugin;
+import org.eclipse.debug.core.ILaunch;
+import org.eclipse.debug.core.ILaunchConfiguration;
+import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
+import org.eclipse.debug.core.ILaunchManager;
+import org.eclipse.debug.core.ILaunchesListener2;
+import org.eclipse.debug.ui.DebugUITools;
+import org.eclipse.jdt.core.IJavaElement;
+import org.eclipse.jdt.junit.JUnitCore;
+import org.eclipse.jdt.junit.TestRunListener;
+import org.eclipse.jdt.junit.model.ITestRunSession;
+import org.eclipse.pde.internal.launching.IPDEConstants;
+import org.eclipse.pde.launching.IPDELauncherConstants;
+import org.eclipse.pde.ui.launcher.JUnitWorkbenchLaunchShortcut;
+
+class TestExecutionUtil {
+
+	public static ITestRunSession runTest(IJavaElement element) throws CoreException {
+		IProject project = element.getResource().getProject();
+		project.build(IncrementalProjectBuilder.FULL_BUILD, null);
+		List<IMarker> errorMarkers = Arrays.stream(project.findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE)) //
+				.filter(m -> m.getAttribute(IMarker.SEVERITY, 0) == IMarker.SEVERITY_ERROR) //
+				.collect(toList());
+		assertThat(
+
+		TestLaunchShortcut launchShortcut = new TestLaunchShortcut();
+		ILaunchConfigurationWorkingCopy launchConfiguration = launchShortcut.createLaunchConfiguration(element);
+		launchConfiguration.setAttribute(IPDELauncherConstants.APPLICATION, IPDEConstants.CORE_TEST_APPLICATION);
+
+		BlockingQueue<ITestRunSession> testResult = new LinkedBlockingDeque<>();
+		TestRunListener testRunListener = new TestRunListener() {
+			@Override
+			public void sessionFinished(ITestRunSession session) {
+				testResult.add(session);
+			}
+		};
+		JUnitCore.addTestRunListener(testRunListener);
+
+		try {
+			launchAndWaitForTermination(launchConfiguration);
+			ITestRunSession result = testResult.poll();
+			if (result == null) {
+				fail(
+			}
+			return result;
+		} finally {
+			JUnitCore.removeTestRunListener(testRunListener);
+		}
+	}
+
+	private static void launchAndWaitForTermination(ILaunchConfiguration launchConfiguration) throws CoreException {
+		BlockingQueue<ILaunch> terminatedLaunches = new LinkedBlockingDeque<>();
+		ILaunchManager launchManager = DebugPlugin.getDefault().getLaunchManager();
+		ILaunchesListener2 listener = new ILaunchesListener2() {
+			@Override
+			public void launchesRemoved(ILaunch[] launches) {
+				terminatedLaunches.addAll(Arrays.asList(launches));
+			}
+
+			@Override
+			public void launchesChanged(ILaunch[] launches) {
+			}
+
+			@Override
+			public void launchesAdded(ILaunch[] launches) {
+			}
+
+			@Override
+			public void launchesTerminated(ILaunch[] launches) {
+				terminatedLaunches.addAll(Arrays.asList(launches));
+			}
+		};
+		launchManager.addLaunchListener(listener);
+
+		ILaunch launch = DebugUITools.buildAndLaunch(launchConfiguration, ILaunchManager.RUN_MODE,
+				new NullProgressMonitor());
+
+		try {
+			while (true) {
+				ILaunch terminatedLaunch = terminatedLaunches.poll(5, TimeUnit.MINUTES);
+				if (terminatedLaunch == null) {
+					fail(
+				}
+
+				if (launch.equals(terminatedLaunch)) {
+					break;
+				}
+			}
+		} catch (InterruptedException e) {
+			Thread.currentThread().interrupt();
+			throw new RuntimeException(
+		} finally {
+			launchManager.removeLaunchListener(listener);
+			if (!launch.isTerminated()) {
+				launch.terminate();
+			}
+		}
+	}
+
+	private static class TestLaunchShortcut extends JUnitWorkbenchLaunchShortcut {
+		public ILaunchConfigurationWorkingCopy createLaunchConfiguration(IJavaElement element) throws CoreException {
+			return super.createLaunchConfiguration(element);
+		}
+	}
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/.gitignore 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/.gitignore
位置:  -0,0 +1  
+bin/

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit4.fragment</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/META-INF/MANIFEST.MF
位置:  -0,0 +1,8  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Fragment
+Bundle-SymbolicName: verification.tests.junit4.fragment
+Bundle-Version: 1.0.0.qualifier
+Fragment-Host: verification.tests.junit4;bundle-version=
+Automatic-Module-Name: verification.tests.junit5.fragment
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/src/verification/tests/junit4/fragment/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/src/verification/tests/junit4/fragment/Test1.java
位置:  -0,0 +1,29  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.fragment;
+
+import org.junit.Test;
+
+public class Test1 {
+
+	@Test
+	public void test1() {
+		
+	}
+	
+	@Test
+	public void test2() {
+		
+	}
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/src/verification/tests/junit4/fragment/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4.fragment/src/verification/tests/junit4/fragment/Test2.java
位置:  -0,0 +1,25  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4.fragment;
+
+import org.junit.Test;
+
+public class Test2 {
+
+	@Test
+	public void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit4</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/META-INF/MANIFEST.MF
位置:  -0,0 +1,9  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Tests
+Bundle-SymbolicName: verification.tests.junit4
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: verification.tests
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Require-Bundle: org.junit;bundle-version=
+Export-Package: verification.tests.junit4

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/src/verification/tests/junit4/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/src/verification/tests/junit4/Test1.java
位置:  -0,0 +1,30  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4;
+
+import org.junit.Test;
+
+public class Test1 {
+
+	@Test
+	public void test1() {
+
+	}
+	
+	@Test
+	public void test2() {
+		
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/src/verification/tests/junit4/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit4/src/verification/tests/junit4/Test2.java
位置:  -0,0 +1,25  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit4;
+
+import org.junit.Test;
+
+public class Test2 {
+
+	@Test
+	public void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit5.fragment</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/META-INF/MANIFEST.MF
位置:  -0,0 +1,8  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Fragment
+Bundle-SymbolicName: verification.tests.junit5.fragment
+Bundle-Version: 1.0.0.qualifier
+Fragment-Host: verification.tests.junit5;bundle-version=
+Automatic-Module-Name: verification.tests.junit5.fragment
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/src/verification/tests/junit5/fragment/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/src/verification/tests/junit5/fragment/Test1.java
位置:  -0,0 +1,30  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit5.fragment;
+
+import org.junit.jupiter.api.Test;
+
+class Test1 {
+
+	@Test
+	void test1() {
+
+	}
+
+	@Test
+	void test2() {
+
+	}
+	
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/src/verification/tests/junit5/fragment/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5.fragment/src/verification/tests/junit5/fragment/Test2.java
位置:  -0,0 +1,25  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit5.fragment;
+
+import org.junit.jupiter.api.Test;
+
+class Test2 {
+
+	@Test
+	void test() {
+
+	}
+
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.classpath 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.classpath
位置:  -0,0 +1,11  
+<?xml version=
+<classpath>
+	<classpathentry kind=
+	<classpathentry kind=
+	<classpathentry kind=
+		<attributes>
+			<attribute name=
+		</attributes>
+	</classpathentry>
+	<classpathentry kind=
+</classpath>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.project 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.project
位置:  -0,0 +1,28  
+<?xml version=
+<projectDescription>
+	<name>verification.tests.junit5</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.settings/org.eclipse.jdt.core.prefs 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/.settings/org.eclipse.jdt.core.prefs
位置:  -0,0 +1,7  
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/META-INF/MANIFEST.MF
位置:  -0,0 +1,10  
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Tests
+Bundle-SymbolicName: verification.tests.junit5
+Bundle-Version: 1.0.0.qualifier
+Automatic-Module-Name: verification.tests
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
+Require-Bundle: org.junit;bundle-version=
+ org.junit.jupiter.api;bundle-version=
+Export-Package: verification.tests.junit5

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/build.properties 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/build.properties
位置:  -0,0 +1,4  
+source.. = src/
+output.. = bin/
+bin.includes = META-INF/,\
+               .

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/src/verification/tests/junit5/Test1.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/src/verification/tests/junit5/Test1.java
位置:  -0,0 +1,30  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit5;
+
+import org.junit.jupiter.api.Test;
+
+class Test1 {
+
+	@Test
+	void test1() {
+
+	}
+
+	@Test
+	void test2() {
+
+	}
+	
+}

原文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/src/verification/tests/junit5/Test2.java 
新文件: ui/org.eclipse.pde.junit.runtime.tests/test-bundles/verification.tests.junit5/src/verification/tests/junit5/Test2.java
位置:  -0,0 +1,25  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package verification.tests.junit5;
+
+import org.junit.jupiter.api.Test;
+
+class Test2 {
+
+	@Test
+	void test() {
+
+	}
+
+}

---------------------------129---------------------------
需求名称: Bug 500495 - Warning about missing Application.e4xmi, but it is existing
创建时间: 2019-07-18	06:53:39
修改时间: 2019-07-18	06:53:39

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BuildErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BuildErrorReporter.java
位置:  -14,6 +14,7  
  *     Brock Janiczak <brockj@tpg.com.au> - bug 191545
  *     Jacek Pospychala <jacek.pospychala@pl.ibm.com> - bug 221998
  *     Steven Spungin <steven@spungin.tv> - Bug 408727
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 500495
  *******************************************************************************/
 package org.eclipse.pde.internal.core.builders;
 
位置:  -692,10 +693,22   public class BuildErrorReporter extends ErrorReporter implements IBuildPropertie
 			if (nodeProduct != null) {
 				Node attValue = (Node) xpath.evaluate(
 				if (attValue != null) {
-					if (attValue.getNodeValue().isEmpty()) {
-						//Error: no URL defined but should already be reported.
+					String nodeValue = attValue.getNodeValue();
+					if (nodeValue.isEmpty()) {
+						// Error: no URL defined but should already be reported.
 					} else {
-						validateBinIncludes(binIncludes, attValue.getNodeValue());
+						String platform = 
+						if (nodeValue.startsWith(platform)) {
+							IPluginModelBase model = PluginRegistry.findModel(fProject);
+							if (model != null) {
+								String prefix = platform + model.getPluginBase().getId() + '/';
+								if (nodeValue.startsWith(prefix)) {
+									validateBinIncludes(binIncludes, nodeValue.substring(prefix.length()));
+								}
+							}
+						} else {
+							validateBinIncludes(binIncludes, nodeValue);
+						}
 					}
 				} else {
 					if (fProject.exists(new Path(
位置:  -1043,7 +1056,7   public class BuildErrorReporter extends ErrorReporter implements IBuildPropertie
 
 	private boolean startsWithAntVariable(String token) {
 		int varStart = token.indexOf(
-		return varStart != -1 &amp;&amp; varStart < token.indexOf('}'); //$NON-NLS-1$
+		return varStart != -1 &amp;&amp; varStart < token.indexOf('}');
 	}
 
 	private void validateDependencyManagement(IBuildEntry bundleList) {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/ManifestConsistencyChecker.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2000, 2017 IBM Corporation and others.
+ * Copyright (c) 2000, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -12,6 +12,7  
  *     IBM Corporation - initial API and implementation
  *     Code 9 Corporation - ongoing enhancements
  *     Lars Vogel <Lars.Vogel@vogella.com> - Bug 477527
+ *     Alexander Fedorov <alexander.fedorov@arsysop.ru> - Bug 500495
  *******************************************************************************/
 package org.eclipse.pde.internal.core.builders;
 
位置:  -132,9 +133,9   public class ManifestConsistencyChecker extends IncrementalProjectBuilder {
 							System.out.println(
 						}
 					} else if (name.endsWith(
-						type |= EXTENSIONS;
+						type |= EXTENSIONS | BUILD;
 						if (PDECore.DEBUG_VALIDATION) {
-							System.out.print(
+							System.out.print(
 							System.out.print(delta.getResource().getProjectRelativePath().toString());
 							System.out.println(
 						}

---------------------------130---------------------------
需求名称: Bug 549329 - More Quickfix options for "This plug-in does not export all
创建时间: 2019-07-17	04:19:01
修改时间: 2019-07-17	04:59:27

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/PDEUIMessages.java
位置:  -3242,6 +3242,7   public class PDEUIMessages extends NLS {
 	public static String PDEJavaHelper_msgContentAssistAvailableWithKeyBinding;
 
 	public static String AddExportPackageResolution_Label;
+	public static String AddExportPackageInternalDirectiveResolution_Label;
 	public static String AddBundleClassPathResolution_add;
 
 	public static String AddBundleManifestVersionResolution_description;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddExportPackageInternalDirectiveMarkerResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddExportPackageInternalDirectiveMarkerResolution.java
位置:  -0,0 +1,47  
+/*******************************************************************************
+ *  Copyright (c) 2019 IBM Corporation and others.
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.correction;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.pde.internal.core.ibundle.IBundle;
+import org.eclipse.pde.internal.core.text.bundle.*;
+import org.eclipse.pde.internal.ui.PDEUIMessages;
+import org.osgi.framework.Constants;
+
+public class AddExportPackageInternalDirectiveMarkerResolution extends AddExportPackageMarkerResolution {
+
+	public AddExportPackageInternalDirectiveMarkerResolution(IMarker mark, int type, String values) {
+		super(mark, type, values);
+	}
+
+	@Override
+	public String getLabel() {
+		return PDEUIMessages.AddExportPackageInternalDirectiveResolution_Label;
+	}
+
+	@Override
+	protected void createChange(BundleModel model) {
+		IBundle bundle = model.getBundle();
+		if (bundle instanceof Bundle) {
+			Bundle bun = (Bundle) bundle;
+			ExportPackageHeader header = (ExportPackageHeader) bun.getManifestHeader(Constants.EXPORT_PACKAGE);
+			if (header == null) {
+				bundle.setHeader(Constants.EXPORT_PACKAGE, 
+				header = (ExportPackageHeader) bun.getManifestHeader(Constants.EXPORT_PACKAGE);
+			}
+			processPackages(header, true);
+		}
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddExportPackageMarkerResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddExportPackageMarkerResolution.java
位置:  -48,11 +48,11   public class AddExportPackageMarkerResolution extends AbstractManifestMarkerReso
 				bundle.setHeader(Constants.EXPORT_PACKAGE, 
 				header = (ExportPackageHeader) bun.getManifestHeader(Constants.EXPORT_PACKAGE);
 			}
-			processPackages(header);
+			processPackages(header, false);
 		}
 	}
 
-	private void processPackages(ExportPackageHeader header) {
+	protected void processPackages(ExportPackageHeader header, boolean setInternal) {
 		fValues = marker.getAttribute(
 		if (fValues == null) {
 			return;
位置:  -64,6 +64,10   public class AddExportPackageMarkerResolution extends AbstractManifestMarkerReso
 		Pattern pat = PatternConstructor.createPattern(filter, false);
 		for (String packageId : packages) {
 			ExportPackageObject obj = header.addPackage(packageId);
+			if (setInternal){
+				obj.setInternal(setInternal);
+				continue;
+			}
 			if (pat.matcher(packageId).matches())
 				obj.setInternal(true);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ResolutionGenerator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ResolutionGenerator.java
位置:  -88,7 +88,7   public class ResolutionGenerator implements IMarkerResolutionGenerator2 {
 			case PDEMarkerFactory.M_UNECESSARY_DEP :
 				return new IMarkerResolution[] {new RemoveRequireBundleResolution(AbstractPDEMarkerResolution.REMOVE_TYPE, marker.getAttribute(
 			case PDEMarkerFactory.M_MISSING_EXPORT_PKGS :
-				return new IMarkerResolution[] { new AddExportPackageMarkerResolution(marker,AbstractPDEMarkerResolution.CREATE_TYPE, marker.getAttribute(
+				return new IMarkerResolution[] { new AddExportPackageMarkerResolution(marker,AbstractPDEMarkerResolution.CREATE_TYPE, marker.getAttribute(
 			case PDEMarkerFactory.B_REMOVE_SLASH_FILE_ENTRY :
 				return new IMarkerResolution[] {new RemoveSeperatorBuildEntryResolution(AbstractPDEMarkerResolution.RENAME_TYPE, marker)};
 			case PDEMarkerFactory.B_APPEND_SLASH_FOLDER_ENTRY :

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/pderesources.properties
位置:  -2370,6 +2370,7   OpenSchemaAction_errorMsgSchemaNotFound=Extension point schema for extension poi
 LocationSection_0=&amp;Locations
 AppendSeperatorBuildEntryResolution_label=Append a trailing separator to {0}.
 AddExportPackageResolution_Label=Add missing packages
+AddExportPackageInternalDirectiveResolution_Label=Add missing packages with x-internal directive
 
 DependencyManagementSection_jobName=Analyzing Code
 DescriptionSection_nameLabel=Name:

---------------------------131---------------------------
需求名称: Bug 546111: [JUnit 5] support test discovery in fragments
创建时间: 2019-07-16	03:53:15
修改时间: 2019-07-17	02:31:37

原文件: ui/org.eclipse.pde.junit.runtime/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.junit.runtime/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.junit.runtime; singleton:=true
-Bundle-Version: 3.5.400.qualifier
+Bundle-Version: 3.5.500.qualifier
 Bundle-Vendor: %providerName
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.jdt.junit.runtime;bundle-version=

原文件: ui/org.eclipse.pde.junit.runtime/pom.xml 
新文件: ui/org.eclipse.pde.junit.runtime/pom.xml
位置:  -19,6 +19,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.junit.runtime</artifactId>
-  <version>3.5.400-SNAPSHOT</version>
+  <version>3.5.500-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ui/org.eclipse.pde.junit.runtime/src/org/eclipse/pde/internal/junit/runtime/RemotePluginTestRunner.java 
新文件: ui/org.eclipse.pde.junit.runtime/src/org/eclipse/pde/internal/junit/runtime/RemotePluginTestRunner.java
位置:  -14,13 +14,12  
  *******************************************************************************/
 package org.eclipse.pde.internal.junit.runtime;
 
-import java.io.*;
-import java.net.URI;
+import java.io.IOException;
 import java.net.URL;
 import java.util.*;
+import org.eclipse.core.runtime.FileLocator;
 import org.eclipse.core.runtime.Platform;
 import org.eclipse.jdt.internal.junit.runner.RemoteTestRunner;
-import org.eclipse.osgi.internal.framework.EquinoxBundle;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.FrameworkUtil;
 import org.osgi.framework.wiring.BundleWiring;
位置:  -80,77 +79,17   public class RemotePluginTestRunner extends RemoteTestRunner {
 
 		@Override
 		public Enumeration<URL> getResources(String res) throws IOException {
-			List<URL> resources = new ArrayList<>(6);
-			String location = null;
-			URL url = null;
-			if (bundle instanceof EquinoxBundle) {
-				location = ((EquinoxBundle) bundle).getLocation();
-			}
-			if (location != null &amp;&amp; location.startsWith(
-				location = location.substring(10, location.length());
-				URI uri = URI.create(location);
-				String newPath = uri.getPath() + 
-				URI newUri = uri.resolve(newPath);
-				url = newUri.normalize().toURL();
-			}
-			if (url != null) {
-				File f = new File(url.getFile());
-				if (f.exists()){
-					resources.add(url);
-				} else {
-					Set<String> outputPaths = getOutputPaths();
-					for (String string : outputPaths) {
-						URI uri = URI.create(location);
-						String newPath = uri.getPath() + string + '/' + res;
-						URI newUri = uri.resolve(newPath);
-						url = newUri.normalize().toURL();
-						if (url != null) {
-							File f2 = new File(url.getFile());
-							if (f2.exists()) {
-								resources.add(url);
-							}
-						}
-					}
-				}
-			}
-			else
+			Enumeration<URL> bundleResources = bundle.getResources(res);
+			if (bundleResources == null)
 				return Collections.emptyEnumeration();
 
-			return Collections.enumeration(resources);
-		}
-
-		private Set<String> getOutputPaths() {
-			String location = bundle.getLocation();
-			location = location.substring(16);
-			File cpFile = new File(location + 
-			Set<String> paths = new HashSet<String>();
-			try (BufferedReader br = new BufferedReader(new FileReader(cpFile.getAbsoluteFile()))) {
-				String line;
-				while ((line = br.readLine()) != null) {
-					if (line.contains(
-						int index = line.indexOf(
-						if (index >= 0) {
-							line = line.substring(index);
-							line = line.substring(line.indexOf(
-							line = line.substring(0, line.indexOf(
-							paths.add(line);
-						}
-					}
-					if (line.contains(
-						int index = line.indexOf(
-						if (index >= 0) {
-							line = line.substring(index);
-							line = line.substring(line.indexOf(
-							line = line.substring(0, line.indexOf(
-							paths.add(line);
-						}
-					}
-				}
-			} catch (IOException e) {
-				// return set collected so far
+			List<URL> compatibleResources = new ArrayList<>();
+			while (bundleResources.hasMoreElements()) {
+				URL nativeUrl = FileLocator.resolve(bundleResources.nextElement());
+				compatibleResources.add(nativeUrl);
 			}
-			return paths;
 
+			return Collections.enumeration(compatibleResources);
 		}
 	}
 

---------------------------132---------------------------
需求名称: Bug 549229 - FilteredPluginArtifactsSelectionDialog: Highlight matching
创建时间: 2019-07-12	14:13:27
修改时间: 2019-07-15	12:23:18

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dialogs/FilteredPluginArtifactsSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dialogs/FilteredPluginArtifactsSelectionDialog.java
位置:  -24,7 +24,9   import org.eclipse.core.runtime.*;
 import org.eclipse.jdt.ui.JavaUI;
 import org.eclipse.jface.action.*;
 import org.eclipse.jface.dialogs.IDialogSettings;
+import org.eclipse.jface.text.contentassist.BoldStylerProvider;
 import org.eclipse.jface.viewers.*;
+import org.eclipse.jface.viewers.DelegatingStyledCellLabelProvider.IStyledLabelProvider;
 import org.eclipse.osgi.service.resolver.BundleDescription;
 import org.eclipse.osgi.service.resolver.ExportPackageDescription;
 import org.eclipse.pde.core.plugin.*;
位置:  -36,6 +38,7   import org.eclipse.swt.graphics.Image;
 import org.eclipse.swt.widgets.*;
 import org.eclipse.ui.*;
 import org.eclipse.ui.dialogs.FilteredItemsSelectionDialog;
+import org.eclipse.ui.dialogs.StyledStringHighlighter;
 
 public class FilteredPluginArtifactsSelectionDialog extends FilteredItemsSelectionDialog {
 
位置:  -63,7 +66,11   public class FilteredPluginArtifactsSelectionDialog extends FilteredItemsSelecti
 	private SearchLabelProvider searchLabelProvider = new SearchLabelProvider();
 	private ILabelProvider detailsLabelProvider = new DetailedLabelProvider();
 
-	private class SearchLabelProvider extends LabelProvider implements ILabelDecorator {
+	private class SearchLabelProvider extends LabelProvider implements ILabelDecorator, IStyledLabelProvider {
+
+		private BoldStylerProvider boldStylerProvider;
+		private StyledStringHighlighter styledStringHighlighter = new StyledStringHighlighter();
+
 		@Override
 		public Image getImage(Object element) {
 			if (element instanceof ExportPackageDescription) {
位置:  -118,6 +125,37   public class FilteredPluginArtifactsSelectionDialog extends FilteredItemsSelecti
 			}
 			return text;
 		}
+
+		@Override
+		public StyledString getStyledText(Object element) {
+			String text = getText(element);
+			Text patternControl = (Text) FilteredPluginArtifactsSelectionDialog.this.getPatternControl();
+
+			if (patternControl == null) {
+				return new StyledString(text);
+			}
+
+			String pattern = patternControl.getText();
+			return styledStringHighlighter.highlight(text, pattern, getBoldStylerProvider().getBoldStyler());
+		}
+
+		private BoldStylerProvider getBoldStylerProvider() {
+			if (boldStylerProvider != null) {
+				return boldStylerProvider;
+			}
+
+			return boldStylerProvider = new BoldStylerProvider(getDialogArea().getFont());
+		}
+
+		@Override
+		public void dispose() {
+			if (boldStylerProvider != null) {
+				boldStylerProvider.dispose();
+			}
+
+			super.dispose();
+		}
+
 	}
 
 	private class DetailedLabelProvider extends LabelProvider {
位置:  -622,7 +660,7   public class FilteredPluginArtifactsSelectionDialog extends FilteredItemsSelecti
 		public PluginSearchItemsFilter() {
 			super();
 			String pattern = patternMatcher.getPattern();
-			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
+			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {
 				pattern = 
 				patternMatcher.setPattern(pattern);
 			}

---------------------------133---------------------------
需求名称: Bug 549271 - Adding a target should also check the the target if that is
创建时间: 2019-07-15	05:47:25
修改时间: 2019-07-15	05:47:25

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/TargetPlatformPreferencePage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/TargetPlatformPreferencePage.java
位置:  -631,6 +631,11   public class TargetPlatformPreferencePage extends PreferencePage implements IWor
 			}
 			fTableViewer.refresh(true);
 			fTableViewer.setSelection(new StructuredSelection(def));
+			if (fTargets.size() == 1) {
+				fTableViewer.setCheckedElements(new Object[] { fActiveTarget });
+				handleActivate();
+			}
+
 		}
 	}
 

---------------------------134---------------------------
需求名称: Bug 548677: populate feature-based launch attributes
创建时间: 2019-07-09	07:58:24
修改时间: 2019-07-15	04:17:26

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/FeatureBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/FeatureBlock.java
位置:  -280,7 +280,8   public class FeatureBlock {
 				Object[] models = dialog.getResult();
 				ArrayList<PluginLaunchModel> modelList = new ArrayList<>(models.length);
 				for (Object model : models) {
-					PluginLaunchModel pluginLaunchModel = new PluginLaunchModel((IPluginModelBase) model);
+					PluginLaunchModel pluginLaunchModel = new PluginLaunchModel((IPluginModelBase) model,
+							DEFAULT_PLUGIN_DATA, fTab::updateLaunchConfigurationDialog);
 					modelList.add(pluginLaunchModel);
 				}
 
位置:  -623,21 +624,18   public class FeatureBlock {
 		}
 	}
 
-	class PluginLaunchModel implements StartLevelEditingSupport.IHasStartLevel, AutoStartEditingSupport.IHasAutoStart {
-		private IPluginModelBase fPluginModelBase;
+	static class PluginLaunchModel
+			implements StartLevelEditingSupport.IHasStartLevel, AutoStartEditingSupport.IHasAutoStart {
+		private final Runnable fPropertyChangedListener;
+		private final IPluginModelBase fPluginModelBase;
 		private String fPluginResolution;
 		private String fStartLevel;
 		private String fAutoStart;
 
-		public PluginLaunchModel(IPluginModelBase pluginModelBase) {
-			fPluginModelBase = pluginModelBase;
-			fPluginResolution = IPDELauncherConstants.LOCATION_DEFAULT;
-			fStartLevel = 
-			fAutoStart = 
-		}
-
-		public PluginLaunchModel(IPluginModelBase pluginModelBase, AdditionalPluginData data) {
+		public PluginLaunchModel(IPluginModelBase pluginModelBase, AdditionalPluginData data,
+				Runnable propertyChangedListener) {
 			fPluginModelBase = pluginModelBase;
+			fPropertyChangedListener = propertyChangedListener;
 			fPluginResolution = data.fResolution;
 			fStartLevel = data.fStartLevel;
 			fAutoStart = data.fAutoStart;
位置:  -665,7 +663,9   public class FeatureBlock {
 			requireNonNull(startLevel, 
 			if (!Objects.equals(fStartLevel, startLevel)) {
 				fStartLevel = startLevel;
-				fTab.updateLaunchConfigurationDialog();
+				if (fPropertyChangedListener != null) {
+					fPropertyChangedListener.run();
+				}
 			}
 		}
 
位置:  -679,7 +679,9   public class FeatureBlock {
 			requireNonNull(autoStart, 
 			if (!Objects.equals(fAutoStart, autoStart)) {
 				fAutoStart = autoStart;
-				fTab.updateLaunchConfigurationDialog();
+				if (fPropertyChangedListener != null) {
+					fPropertyChangedListener.run();
+				}
 			}
 		}
 
位置:  -794,6 +796,9   public class FeatureBlock {
 	private static final String COLUMN_ID = 
 	private static final String PROPERTY_RESOLUTION = 
 
+	static final AdditionalPluginData DEFAULT_PLUGIN_DATA = new AdditionalPluginData(
+			IPDELauncherConstants.LOCATION_DEFAULT, true, null, null);
+
 	private Button fAddRequiredFeaturesButton;
 	private Button fDefaultsButton;
 	private Button fSelectAllButton;
位置:  -1260,7 +1265,8   public class FeatureBlock {
 					.getAdditionalPlugins(config, false);
 			for (Entry<IPluginModelBase, AdditionalPluginData> additionalEntry : additionalMap.entrySet()) {
 				AdditionalPluginData data = additionalEntry.getValue();
-				PluginLaunchModel launchModel = new PluginLaunchModel(additionalEntry.getKey(), data);
+				PluginLaunchModel launchModel = new PluginLaunchModel(additionalEntry.getKey(), data,
+						fTab::updateLaunchConfigurationDialog);
 				fAdditionalPlugins.add(launchModel);
 
 				if (data.fEnabled) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LaunchAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LaunchAction.java
位置:  -14,6 +14,8  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.launcher;
 
+import static java.util.stream.Collectors.toSet;
+
 import java.io.File;
 import java.util.*;
 import org.eclipse.core.resources.IResource;
位置:  -32,6 +34,7   import org.eclipse.pde.internal.core.iproduct.IProduct;
 import org.eclipse.pde.internal.core.util.CoreUtility;
 import org.eclipse.pde.internal.launching.IPDEConstants;
 import org.eclipse.pde.internal.launching.launcher.BundleLauncherHelper;
+import org.eclipse.pde.internal.launching.launcher.BundleLauncherHelper.AdditionalPluginData;
 import org.eclipse.pde.internal.launching.launcher.LaunchArgumentsHelper;
 import org.eclipse.pde.internal.ui.PDEPlugin;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
位置:  -114,24 +117,49   public class LaunchAction extends Action {
 		wc.setAttribute(IPDELauncherConstants.CONFIG_GENERATE_DEFAULT, configIni == null);
 		if (configIni != null)
 			wc.setAttribute(IPDELauncherConstants.CONFIG_TEMPLATE_LOCATION, configIni);
+
+		if (fProduct.useFeatures()) {
+			refreshFeatureLaunchAttributes(wc, models);
+		}
+
 		return wc.doSave();
 	}
 
+	private void refreshFeatureLaunchAttributes(ILaunchConfigurationWorkingCopy wc, IPluginModelBase[] models) {
+		Set<String> selectedFeatures = Arrays.stream(getUniqueFeatures())
+				.map(f -> f.getFeature().getId() + 
+
+		Set<String> additionalPlugins = Arrays.stream(models)
+				.map(model -> getPluginConfiguration(model)
+						.map(c -> new FeatureBlock.PluginLaunchModel(model, c, null).buildEntry(true)).orElse(null))
+				.filter(Objects::nonNull).collect(toSet());
+
+		wc.setAttribute(IPDELauncherConstants.SELECTED_FEATURES, selectedFeatures);
+		wc.setAttribute(IPDELauncherConstants.ADDITIONAL_PLUGINS, additionalPlugins);
+	}
+
 	private void appendBundle(StringBuilder buffer, IPluginModelBase model) {
-		IPluginConfiguration configuration = fPluginConfigurations.get(model.getPluginBase().getId());
-		String sl = 
-		String autostart = 
-		if (configuration != null) {
-			sl = Integer.toString(configuration.getStartLevel());
-			// ensure we don't have a 0 start level
-			sl = sl.equals(
-			autostart = Boolean.toString(configuration.isAutoStart());
-		}
-		String entry = BundleLauncherHelper.writeBundleEntry(model, sl, autostart);
+		AdditionalPluginData configuration = getPluginConfiguration(model).orElse(FeatureBlock.DEFAULT_PLUGIN_DATA);
+		String entry = BundleLauncherHelper.writeBundleEntry(model, configuration.fStartLevel,
+				configuration.fAutoStart);
 		buffer.append(entry);
 		buffer.append(',');
 	}
 
+	private Optional<AdditionalPluginData> getPluginConfiguration(IPluginModelBase model) {
+		IPluginConfiguration configuration = fPluginConfigurations.get(model.getPluginBase().getId());
+		if (configuration == null) {
+			return Optional.empty();
+		}
+
+		String startLevel = (configuration.getStartLevel() > 0) ? String.valueOf(configuration.getStartLevel())
+				: 
+		String autoStart = String.valueOf(configuration.isAutoStart());
+		AdditionalPluginData data = new AdditionalPluginData(IPDELauncherConstants.LOCATION_DEFAULT, true, startLevel,
+				autoStart);
+		return Optional.of(data);
+	}
+
 	private String getProgramArguments(String os, String arch) {
 		StringBuilder buffer = new StringBuilder(LaunchArgumentsHelper.getInitialProgramArguments());
 		IArgumentsInfo info = fProduct.getLauncherArguments();

---------------------------135---------------------------
需求名称: Bug 336368 - Tell the user when the target platform is empty
创建时间: 2019-07-15	01:45:17
修改时间: 2019-07-15	01:45:17

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDECoreMessages.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDECoreMessages.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2005, 2017 IBM Corporation and others.
+ * Copyright (c) 2005, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -212,6 +212,7   public class PDECoreMessages extends NLS {
 	public static String BundleErrorReporter_BundleRangeInvalidInBundleVersion;
 	public static String BundleErrorReporter_R4SyntaxInR3Bundle;
 	public static String BundleErrorReporter_NotExistPDE;
+	public static String BundleErrorReporter_EmptyTargetPlatform;
 	public static String BundleErrorReporter_HostNotExistPDE;
 	public static String BundleErrorReporter_HostNeeded;
 	public static String BundleErrorReporter_PackageNotExported;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/BundleErrorReporter.java
位置:  -68,6 +68,7   import org.eclipse.pde.internal.core.NLResourceHelper;
 import org.eclipse.pde.internal.core.PDECore;
 import org.eclipse.pde.internal.core.PDECoreMessages;
 import org.eclipse.pde.internal.core.PDEManager;
+import org.eclipse.pde.internal.core.PDEState;
 import org.eclipse.pde.internal.core.TargetPlatformHelper;
 import org.eclipse.pde.internal.core.TargetWeaver;
 import org.eclipse.pde.internal.core.builders.IncrementalErrorReporter.VirtualMarker;
位置:  -795,6 +796,17   public class BundleErrorReporter extends JarManifestErrorReporter {
 			// It is possible for the bundle description to not match the headers
 			if (specs != null &amp;&amp; specs[i].getSupplier() == null) {
 				if (desc.getContainingState().getBundle(specs[i].getName(), null) == null) {
+					PDEState pdeState = TargetPlatformHelper.getPDEState();
+					if (pdeState != null) {
+						IPluginModelBase[] targetModels = pdeState.getTargetModels();
+						if (targetModels != null &amp;&amp; targetModels.length == 0) {
+							VirtualMarker marker = report(PDECoreMessages.BundleErrorReporter_EmptyTargetPlatform, 1,
+									severity, PDEMarkerFactory.M_REQ_BUNDLE_NOT_AVAILABLE, PDEMarkerFactory.CAT_FATAL);
+							addMarkerAttribute(marker, PDEMarkerFactory.compilerKey,
+									CompilerFlags.P_UNRESOLVED_IMPORTS);
+							return;
+						}
+					}
 					VirtualMarker marker = report(NLS.bind(PDECoreMessages.BundleErrorReporter_NotExistPDE, bundleID), getPackageLine(header, required[i]), severity, PDEMarkerFactory.M_REQ_BUNDLE_NOT_AVAILABLE, PDEMarkerFactory.CAT_FATAL);
 					addMarkerAttribute(marker,PDEMarkerFactory.compilerKey,  CompilerFlags.P_UNRESOLVED_IMPORTS);
 					if (marker != null) {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/pderesources.properties
位置:  -173,6 +173,7   BundleErrorReporter_NotExistInProject=Package ''{0}'' does not exist in this plu
 BundleErrorReporter_missingPackagesInProject=This plug-in does not export all of its packages
 BundleErrorReporter_BundleRangeInvalidInBundleVersion=Unsatisfied version constraint: ''{0}''
 BundleErrorReporter_NotExistPDE=Bundle ''{0}'' cannot be resolved
+BundleErrorReporter_EmptyTargetPlatform=Target Platform is not set
 BundleErrorReporter_exportNoJRE=Cannot export packages prefixed with 'java'
 BundleErrorReporter_importNoJRE=Cannot import packages prefixed with 'java'
 BundleErrorReporter_HostNotExistPDE=Host bundle ''{0}'' cannot be resolved

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ResolutionGenerator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ResolutionGenerator.java
位置:  -21,8 +21,8   import java.util.Arrays;
 import org.eclipse.core.resources.IMarker;
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.runtime.CoreException;
-import org.eclipse.pde.internal.core.ICoreConstants;
-import org.eclipse.pde.internal.core.TargetPlatformHelper;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.internal.core.*;
 import org.eclipse.pde.internal.core.builders.PDEMarkerFactory;
 import org.eclipse.pde.internal.ui.PDEUIMessages;
 import org.eclipse.ui.*;
位置:  -216,8 +216,16   public class ResolutionGenerator implements IMarkerResolutionGenerator2 {
 
 	private IMarkerResolution[] getUnresolvedBundle(IMarker marker) {
 		String bundleId = marker.getAttribute(
-		if (bundleId == null)
+		if (bundleId == null){
+			PDEState pdeState = TargetPlatformHelper.getPDEState();
+			if (pdeState != null) {
+				IPluginModelBase[] targetModels = pdeState.getTargetModels();
+				if (targetModels != null &amp;&amp; targetModels.length == 0) {
+					return new IMarkerResolution[] { new ConfigureTargetPlatformResolution()};
+				}
+			}
 			return NO_RESOLUTIONS;
+		}
 
 		boolean optionalBundle = marker.getAttribute(
 		if (optionalBundle) {

---------------------------136---------------------------
需求名称: Bug 549216 - Description of SinceTagAfterVersionUpdateResolution should
创建时间: 2019-07-12	06:46:34
修改时间: 2019-07-12	06:46:34

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java
位置:  -40,4 +40,10   public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
 		super.run(marker);
 	}
 
+	@Override
+	public String getDescription() {
+		return NLS.bind(MarkerMessages.SinceTagResolution_add_since_tag_after_version_update,
+				markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null));
+	}
+
 }

---------------------------137---------------------------
需求名称: Enable API tooling in o.e.tools.layout.spy.
创建时间: 2019-07-09	04:29:44
修改时间: 2019-07-09	05:01:28

原文件: ui/org.eclipse.tools.layout.spy/.project 
新文件: ui/org.eclipse.tools.layout.spy/.project
位置:  -20,9 +20,15  
 			<arguments>
 			</arguments>
 		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.api.tools.apiAnalysisBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
 		<nature>org.eclipse.jdt.core.javanature</nature>
+		<nature>org.eclipse.pde.api.tools.apiAnalysisNature</nature>
 	</natures>
 </projectDescription>

原文件: ui/org.eclipse.tools.layout.spy/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.tools.layout.spy/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.tools.layout.spy;singleton:=true
-Bundle-Version: 1.0.300.qualifier
+Bundle-Version: 1.0.400.qualifier
 Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 Bundle-Localization: plugin
 Require-Bundle: org.eclipse.swt;bundle-version=

原文件: ui/org.eclipse.tools.layout.spy/pom.xml 
新文件: ui/org.eclipse.tools.layout.spy/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.tools.layout.spy</artifactId>
-  <version>1.0.300-SNAPSHOT</version>
+  <version>1.0.400-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
 </project>

---------------------------138---------------------------
需求名称: Bug 549056 - Update e4 template to include org.eclipse.e4.ui.dialogs
创建时间: 2019-07-08	06:08:54
修改时间: 2019-07-08	06:11:20

原文件: ui/org.eclipse.pde.ui.templates/templates_3.5/E4Application/$pluginId$.product 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.5/E4Application/$pluginId$.product
位置:  -51,6 +51,7  
       <plugin id=
       <plugin id=
       <plugin id=
+      <plugin id=
       <plugin id=
       <plugin id=
       <plugin id=

---------------------------139---------------------------
需求名称: Using StringBuilder in StringAsserts
创建时间: 2019-07-05	08:15:37
修改时间: 2019-07-05	08:16:03

原文件: ui/org.eclipse.pde.genericeditor.extension.tests/src/org/eclipse/pde/genericeditor/extension/tests/StringAsserts.java 
新文件: ui/org.eclipse.pde.genericeditor.extension.tests/src/org/eclipse/pde/genericeditor/extension/tests/StringAsserts.java
位置:  -132,7 +132,7   public class StringAsserts {
 				assertEqualString(list1.get(0), list2.get(0));
 			}
 
-			StringBuffer buf = new StringBuffer();
+			StringBuilder buf = new StringBuilder();
 			for (int i = 0; i < n1; i++) {
 				String s1 = list1.get(i);
 				if (s1 != null) {
位置:  -142,7 +142,7   public class StringAsserts {
 			}
 			String actual = buf.toString();
 
-			buf = new StringBuffer();
+			buf = new StringBuilder();
 			for (int i = 0; i < n2; i++) {
 				String s2 = list2.get(i);
 				if (s2 != null) {
位置:  -175,7 +175,7   public class StringAsserts {
 				assertEqualString(list1.get(0), list2.get(0));
 			}
 
-			StringBuffer buf = new StringBuffer();
+			StringBuilder buf = new StringBuilder();
 			for (int i = 0; i < n1; i++) {
 				String s1 = list1.get(i);
 				if (s1 != null) {
位置:  -185,7 +185,7   public class StringAsserts {
 			}
 			String actual = buf.toString();
 
-			buf = new StringBuffer();
+			buf = new StringBuilder();
 			for (int i = 0; i < n2; i++) {
 				String s2 = list2.get(i);
 				if (s2 != null) {

---------------------------140---------------------------
需求名称: Using indexOf char instead of indexOf String
创建时间: 2019-07-05	03:20:43
修改时间: 2019-07-05	07:35:07

原文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/text/DSDocumentFactory.java 
新文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/text/DSDocumentFactory.java
位置:  -49,7 +49,7   public class DSDocumentFactory extends DocumentNodeFactory implements
 
 		// TODO this logic needs to be pushed up somehow... we shouldn't care
 		// about the namespace prefix
-		int index = name.indexOf(
+		int index = name.indexOf(':'); //$NON-NLS-1$
 		if (index != -1) {
 			name = name.substring(index + 1);
 		}

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/EquinoxInitializer.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/EquinoxInitializer.java
位置:  -75,7 +75,7   public class EquinoxInitializer extends OSGiLaunchConfigurationInitializer {
 	protected String getAutoStart(String bundleID) {
 		if (fStartLevels.containsKey(bundleID)) {
 			String value = fStartLevels.get(bundleID).toString();
-			return value.substring(value.indexOf(
+			return value.substring(value.indexOf(':') + 1); //$NON-NLS-1$
 		}
 		return super.getAutoStart(bundleID);
 	}
位置:  -84,7 +84,7   public class EquinoxInitializer extends OSGiLaunchConfigurationInitializer {
 	protected String getStartLevel(String bundleID) {
 		if (fStartLevels.containsKey(bundleID)) {
 			String value = fStartLevels.get(bundleID).toString();
-			return value.substring(0, value.indexOf(
+			return value.substring(0, value.indexOf(':')); //$NON-NLS-1$
 		}
 		return super.getStartLevel(bundleID);
 	}
位置:  -99,7 +99,7   public class EquinoxInitializer extends OSGiLaunchConfigurationInitializer {
 				StringTokenizer tokenizer = new StringTokenizer(value, 
 				while (tokenizer.hasMoreTokens()) {
 					String tokenValue = tokenizer.nextToken();
-					int index = tokenValue.indexOf(
+					int index = tokenValue.indexOf('@'); //$NON-NLS-1$
 					if (index > 0) {
 						String bundle = tokenValue.substring(0, index).trim();
 						fStartLevels.put(bundle, getStartValue(tokenValue.substring(index)));

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/compare/ManifestStructureCreator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/compare/ManifestStructureCreator.java
位置:  -128,7 +128,7   public class ManifestStructureCreator extends StructureCreator {
 	}
 
 	private String extractKey(String headerBuffer) {
-		int assign = headerBuffer.indexOf(
+		int assign = headerBuffer.indexOf(':'); //$NON-NLS-1$
 		if (assign != -1)
 			return headerBuffer.substring(0, assign);
 		return headerBuffer;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/FeatureSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/FeatureSelectionDialog.java
位置:  -58,7 +58,7   public class FeatureSelectionDialog extends FilteredItemsSelectionDialog {
 		public FeatureSearchItemsFilter() {
 			super();
 			String pattern = patternMatcher.getPattern();
-			if (pattern.indexOf(
+			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 				pattern = 
 				patternMatcher.setPattern(pattern);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/PluginSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/dialogs/PluginSelectionDialog.java
位置:  -44,7 +44,7   public class PluginSelectionDialog extends FilteredItemsSelectionDialog {
 		public PluginSearchItemsFilter() {
 			super();
 			String pattern = patternMatcher.getPattern();
-			if (pattern.indexOf(
+			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 				pattern = 
 				patternMatcher.setPattern(pattern);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExportPackageSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ExportPackageSection.java
位置:  -112,9 +112,9   public class ExportPackageSection extends TableSection {
 				String s1 = e1.toString();
 				String s2 = e2.toString();
 				if (s1.contains(
-					s1 = s1.substring(0, s1.indexOf(
+					s1 = s1.substring(0, s1.indexOf(' ')); //$NON-NLS-1$
 				if (s2.contains(
-					s2 = s2.substring(0, s2.indexOf(
+					s2 = s2.substring(0, s2.indexOf(' ')); //$NON-NLS-1$
 				return super.compare(viewer, s1, s2);
 			}
 		});

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/FragmentGeneralInfoSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/FragmentGeneralInfoSection.java
位置:  -371,7 +371,7   public class FragmentGeneralInfoSection extends GeneralInfoSection {
 			return;
 		}
 		version = version.trim();
-		int comInd = version.indexOf(
+		int comInd = version.indexOf(','); //$NON-NLS-1$
 		int lastPos = version.length() - 1;
 		char first = version.charAt(0);
 		char last = version.charAt(lastPos);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ImportPackageSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/ImportPackageSection.java
位置:  -195,9 +195,9   public class ImportPackageSection extends TableSection {
 				String s1 = e1.toString();
 				String s2 = e2.toString();
 				if (s1.contains(
-					s1 = s1.substring(0, s1.indexOf(
+					s1 = s1.substring(0, s1.indexOf(' ')); //$NON-NLS-1$
 				if (s2.contains(
-					s2 = s2.substring(0, s2.indexOf(
+					s2 = s2.substring(0, s2.indexOf(' ')); //$NON-NLS-1$
 				return super.compare(viewer, s1, s2);
 			}
 		});

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizardPage.java
位置:  -124,7 +124,7   public class JavaAttributeWizardPage extends NewClassWizardPage {
 	private void initializeExpectedValues() {
 
 		//			source folder name, package name, class name
-		int loc = className.indexOf(
+		int loc = className.indexOf(':'); //$NON-NLS-1$
 		if (loc != -1) {
 			if (loc < className.length()) {
 				initialValues.classArgs = className.substring(loc + 1, className.length());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schem
原文件: SchemaJavaAttributeDetails.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaJavaAttributeDetails.java
位置:  -63,7 +63,7   public class SchemaJavaAttributeDetails extends SchemaAttributeDetails {
 
 		String basedOn = getAttribute().getBasedOn();
 		if ((basedOn != null) &amp;&amp; (basedOn.length() > 0)) {
-			int index = basedOn.indexOf(
+			int index = basedOn.indexOf(':'); //$NON-NLS-1$
 			if (index == -1) {
 				String className = basedOn.substring(basedOn.lastIndexOf(
 				if ((className.length() > 1) &amp;&amp; (className.charAt(0) == 'I')) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java
位置:  -183,7 +183,7   public class EnvironmentSection extends SectionPart {
 						if (value == null) {
 							getTarget().setNL(null);
 						} else {
-							int index = value.indexOf(
+							int index = value.indexOf('-'); //$NON-NLS-1$
 							if (index > 0)
 								value = value.substring(0, index);
 							getTarget().setNL(value.trim());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dialogs/FilteredPluginArtifactsSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dialogs/FilteredPluginArtifactsSelectionDialog.java
位置:  -622,7 +622,7   public class FilteredPluginArtifactsSelectionDialog extends FilteredItemsSelecti
 		public PluginSearchItemsFilter() {
 			super();
 			String pattern = patternMatcher.getPattern();
-			if (pattern.indexOf(
+			if (pattern.indexOf('*') != 0 &amp;&amp; pattern.indexOf('?') != 0 &amp;&amp; pattern.indexOf('.') != 0) {//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 				pattern = 
 				patternMatcher.setPattern(pattern);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TextUtil.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TextUtil.java
位置:  -142,7 +142,7   public abstract class TextUtil {
 		value = value.trim();
 		while (value.length() > 0 &amp;&amp; !Character.isLetter(value.charAt(0)))
 			value = value.substring(1, value.length());
-		int loc = value.indexOf(
+		int loc = value.indexOf(':'); //$NON-NLS-1$
 		if (loc != -1 &amp;&amp; loc > 0)
 			value = value.substring(0, loc);
 		else if (loc == 0)

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java
位置:  -106,7 +106,7   public class PointSelectionPage extends BaseWizardSelectionPage {
 		private String wMatch = 
 
 		protected void setMatchText(String match) {
-			if (match.indexOf(
+			if (match.indexOf('*') != 0 &amp; match.indexOf('?') != 0 &amp; match.indexOf('.') != 0) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
 				match = 
 			}
 			wMatch = match + 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionContentPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionContentPage.java
位置:  -345,7 +345,7   public class TargetDefinitionContentPage extends TargetDefinitionPage {
 		fNLCombo = SWTFactory.createCombo(group, SWT.SINGLE | SWT.BORDER, 1, fNLChoices.toArray(new String[fNLChoices.size()]));
 		fNLCombo.addModifyListener(e -> {
 			String value = fNLCombo.getText();
-			int index = value.indexOf(
+			int index = value.indexOf('-'); //$NON-NLS-1$
 			if (index > 0)
 				value = value.substring(0, index);
 			getTargetDefinition().setNL(getModelValue(value));

---------------------------141---------------------------
需求名称: Bug 548920 - ExtensionPoint schema builder throws NoSuchElementException 
创建时间: 2019-07-05	00:52:58
修改时间: 2019-07-05	00:52:58

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/SchemaErrorReporter.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- *  Copyright (c) 2005, 2017 IBM Corporation and others.
+ *  Copyright (c) 2005, 2019 IBM Corporation and others.
  *
  *  This program and the accompanying materials
  *  are made available under the terms of the Eclipse Public License 2.0
位置:  -217,7 +217,7   public class SchemaErrorReporter extends XMLErrorReporter {
 										errorReported = true;
 									}
 								} else {
-									String shortTag = getTagName(tagName);
+									String shortTag = tagName.trim().isEmpty() ? tagName : getTagName(tagName);
 									if (!forbiddenEndTag(shortTag)) {
 										stack.push(new StackEntry(shortTag, lineNumber));
 									}

---------------------------142---------------------------
需求名称: Revert "Bug 417869 - omit libraries from dev.properties"
创建时间: 2019-07-04	06:37:45
修改时间: 2019-07-04	07:23:56

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java
位置:  -188,8 +188,7   public class ClasspathHelper {
 	}
 
 	// creates a map whose key is a Path to the source directory/jar and the value is a Path output directory or jar.
-	private static Map<IPath, ArrayList<IPath>> getClasspathMap(IProject project, boolean checkExcluded,
-			boolean onlyJarsIfLinked, boolean absolutePaths) throws JavaModelException {
+	private static Map<IPath, ArrayList<IPath>> getClasspathMap(IProject project, boolean checkExcluded, boolean absolutePaths) throws JavaModelException {
 		List<Path> excluded = getFoldersToExclude(project, checkExcluded);
 		IJavaProject jProject = JavaCore.create(project);
 		HashMap<IPath, ArrayList<IPath>> map = new LinkedHashMap<>();
位置:  -216,9 +215,6   public class ClasspathHelper {
 				// make the path either relative or absolute
 				if (file != null) {
 					boolean isLinked = file.isLinked(IResource.CHECK_ANCESTORS);
-					if (entry.getEntryKind() != IClasspathEntry.CPE_SOURCE &amp;&amp; !isLinked &amp;&amp; onlyJarsIfLinked) {
-						continue;
-					}
 					if (isLinked || absolutePaths) {
 						IPath location = file.getLocation();
 						if (location != null) {
位置:  -312,10 +308,7   public class ClasspathHelper {
 		IPluginLibrary[] libraries = base.getLibraries();
 		try {
 			if (project.hasNature(JavaCore.NATURE_ID)) {
-				boolean isSystemBundle = base.getId()
-						.equals(PDECore.getDefault().getModelManager().getSystemBundleId());
-				Map<IPath, ArrayList<IPath>> classpathMap = getClasspathMap(project, checkExcluded, !isSystemBundle,
-						false);
+				Map<IPath, ArrayList<IPath>> classpathMap = getClasspathMap(project, checkExcluded, false);
 				IFile file = PDEProject.getBuildProperties(project);
 				IPath filePath = file.getLocation();
 				boolean searchBuild = filePath != null &amp;&amp; filePath.toFile().exists();
位置:  -387,7 +380,7   public class ClasspathHelper {
 			if (frags[i].getUnderlyingResource() != null) {
 				try {
 					IProject project = frags[i].getUnderlyingResource().getProject();
-					Map<IPath, ArrayList<IPath>> classpathMap = getClasspathMap(project, checkExcluded, false, true);
+					Map<IPath, ArrayList<IPath>> classpathMap = getClasspathMap(project, checkExcluded, true);
 					IFile file = PDEProject.getBuildProperties(project);
 					IBuild build = null;
 					if (file.exists()) {

---------------------------143---------------------------
需求名称: Update to -Bug 243878 - first API addition causes cascade of errors
创建时间: 2019-07-03	09:44:54
修改时间: 2019-07-03	09:44:54

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiMarkerResolutionGenerator.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiMarkerResolutionGenerator.java
位置:  -83,10 +83,11   public class ApiMarkerResolutionGenerator implements IMarkerResolutionGenerator2
 					new ConfigureProblemSeverityForAPIToolsResolution(marker) };
 			}
 			case IApiMarkerConstants.SINCE_TAG_MARKER_ID: {
-				IMarkerResolution[] res = hasVersionProblems() ? 
+				IMarker markerVersion = getVersionProblems(marker);
+				IMarkerResolution[] res = (markerVersion != null) ?
 				new IMarkerResolution[] {
 					new ConfigureProblemSeverityForAPIToolsResolution(marker),
-					new SinceTagAfterVersionUpdateResolution(marker),
+					new SinceTagAfterVersionUpdateResolution(markerVersion, marker),
 					new SinceTagResolution(marker),
 					new FilterProblemResolution(marker),
 					new FilterProblemWithCommentResolution(marker) }:
位置:  -189,17 +190,32   public class ApiMarkerResolutionGenerator implements IMarkerResolutionGenerator2
 
 	}
 
-	private boolean hasVersionProblems() {
+	private IMarker getVersionProblems(IMarker marker) {
+		IProject project = null;
+		IProject project2 = null;
+		IResource resource = marker.getResource();
+		if (resource != null) {
+			project = resource.getProject();
+		}
 		IMarker markerVersion = null;
 		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
 		try {
 			IMarker[] findMarkers = root.findMarkers(IApiMarkerConstants.VERSION_NUMBERING_PROBLEM_MARKER, false,
 					IResource.DEPTH_INFINITE);
-			if (findMarkers.length == 1) {
-				markerVersion = findMarkers[0];
+			for (IMarker iMarker : findMarkers) {
+				IResource resource2 = iMarker.getResource();
+				if (resource2 != null) {
+					project2 = resource2.getProject();
+					if(project !=null &amp;&amp; project2 !=null) {
+						if(project.equals(project2)) {
+							markerVersion = iMarker;
+							break;
+						}
+					}
+				}
 			}
 		} catch (CoreException e) {
 		}
-		return markerVersion != null;
+		return markerVersion;
 	}
 }

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java
位置:  -14,34 +14,18  
 package org.eclipse.pde.api.tools.ui.internal.markers;
 
 import org.eclipse.core.resources.IMarker;
-import org.eclipse.core.resources.IResource;
-import org.eclipse.core.resources.IWorkspaceRoot;
-import org.eclipse.core.resources.ResourcesPlugin;
-import org.eclipse.core.runtime.CoreException;
 import org.eclipse.osgi.util.NLS;
 import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
 
 public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
 
 	IMarker markerVersion = null;
-	public SinceTagAfterVersionUpdateResolution(IMarker marker) {
+	public SinceTagAfterVersionUpdateResolution(IMarker markerVer ,IMarker marker) {
 		super(marker);
-		updateVersionMarker();
+		markerVersion = markerVer;
 
 	}
 
-	private void updateVersionMarker() {
-		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
-		try {
-			IMarker[] findMarkers = root.findMarkers(IApiMarkerConstants.VERSION_NUMBERING_PROBLEM_MARKER, false,
-					IResource.DEPTH_INFINITE);
-			if (findMarkers.length == 1) {
-				markerVersion = findMarkers[0];
-			}
-		} catch (CoreException e) {
-
-		}
-	}
 
 	@Override
 	public String getLabel() {
位置:  -49,9 +33,6   public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
 	}
 	@Override
 	public void run(final IMarker marker) {
-
-
-
 		if (markerVersion != null) {
 			new VersionNumberingResolution(markerVersion).run(markerVersion);
 			this.newVersionValue = markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null);

---------------------------144---------------------------
需求名称: Bug 243878 - first API addition causes cascade of errors
创建时间: 2019-07-03	06:08:03
修改时间: 2019-07-03	06:08:03

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiMarkerResolutionGenerator.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiMarkerResolutionGenerator.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -16,6 +16,8   package org.eclipse.pde.api.tools.ui.internal.markers;
 import org.eclipse.core.resources.IMarker;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.Path;
位置:  -81,11 +83,20   public class ApiMarkerResolutionGenerator implements IMarkerResolutionGenerator2
 					new ConfigureProblemSeverityForAPIToolsResolution(marker) };
 			}
 			case IApiMarkerConstants.SINCE_TAG_MARKER_ID: {
-				return new IMarkerResolution[] {
+				IMarkerResolution[] res = hasVersionProblems() ? 
+				new IMarkerResolution[] {
 					new ConfigureProblemSeverityForAPIToolsResolution(marker),
-						new SinceTagResolution(marker),
-						new FilterProblemResolution(marker),
-						new FilterProblemWithCommentResolution(marker) };
+					new SinceTagAfterVersionUpdateResolution(marker),
+					new SinceTagResolution(marker),
+					new FilterProblemResolution(marker),
+					new FilterProblemWithCommentResolution(marker) }:
+				new IMarkerResolution[] {
+					new ConfigureProblemSeverityForAPIToolsResolution(marker),
+					new SinceTagResolution(marker),
+					new FilterProblemResolution(marker),
+					new FilterProblemWithCommentResolution(marker)
+				};
+				return res;
 			}
 			case IApiMarkerConstants.VERSION_NUMBERING_MARKER_ID: {
 			return new IMarkerResolution[] {
位置:  -177,4 +188,18   public class ApiMarkerResolutionGenerator implements IMarkerResolutionGenerator2
 		return false;
 
 	}
+
+	private boolean hasVersionProblems() {
+		IMarker markerVersion = null;
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
+		try {
+			IMarker[] findMarkers = root.findMarkers(IApiMarkerConstants.VERSION_NUMBERING_PROBLEM_MARKER, false,
+					IResource.DEPTH_INFINITE);
+			if (findMarkers.length == 1) {
+				markerVersion = findMarkers[0];
+			}
+		} catch (CoreException e) {
+		}
+		return markerVersion != null;
+	}
 }

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/MarkerMessages.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/MarkerMessages.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -66,6 +66,7   public class MarkerMessages extends NLS {
 	public static String RemoveUnsupportedTagOperation_removeing_unsupported_tag;
 
 	public static String SinceTagResolution_add_since_tag;
+	public static String SinceTagResolution_add_since_tag_after_version_update;
 
 
 	public static String SinceTagResolution_change_since_tag;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/SinceTagAfterVersionUpdateResolution.java
位置:  -0,0 +1,62  
+/*******************************************************************************
+ * Copyright (c) 2019 IBM Corporation and others.
+ *
+ * This program and the accompanying materials
+ * are made available under the terms of the Eclipse Public License 2.0
+ * which accompanies this distribution, and is available at
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
+ * SPDX-License-Identifier: EPL-2.0
+ *
+ * Contributors:
+ *     IBM Corporation - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.api.tools.ui.internal.markers;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.osgi.util.NLS;
+import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
+
+public class SinceTagAfterVersionUpdateResolution extends SinceTagResolution {
+
+	IMarker markerVersion = null;
+	public SinceTagAfterVersionUpdateResolution(IMarker marker) {
+		super(marker);
+		updateVersionMarker();
+
+	}
+
+	private void updateVersionMarker() {
+		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
+		try {
+			IMarker[] findMarkers = root.findMarkers(IApiMarkerConstants.VERSION_NUMBERING_PROBLEM_MARKER, false,
+					IResource.DEPTH_INFINITE);
+			if (findMarkers.length == 1) {
+				markerVersion = findMarkers[0];
+			}
+		} catch (CoreException e) {
+
+		}
+	}
+
+	@Override
+	public String getLabel() {
+		return NLS.bind(MarkerMessages.SinceTagResolution_add_since_tag_after_version_update, markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null));
+	}
+	@Override
+	public void run(final IMarker marker) {
+
+
+
+		if (markerVersion != null) {
+			new VersionNumberingResolution(markerVersion).run(markerVersion);
+			this.newVersionValue = markerVersion.getAttribute(IApiMarkerConstants.MARKER_ATTR_VERSION, null);
+		}
+		super.run(marker);
+	}
+
+}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/markermessages.properties 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/markermessages.properties
位置:  -57,6 +57,7   RemoveFilterProblemResolution_removes_selected_problem_filter=Removes the unused
 RemoveUnsupportedAnnotationOperation_remove_unsupported_annotations=Remove unsupported annotations
 RemoveUnsupportedTagOperation_removeing_unsupported_tag=Removing Unsupported API Javadoc tag
 SinceTagResolution_add_since_tag=Add the missing @since tag with version {0}
+SinceTagResolution_add_since_tag_after_version_update=Add the missing @since tag after updating version to {0}
 SinceTagResolution_change_since_tag=Change @since tag value to be {0}
 UnknownAnnotationResolution_0=Corrects missing imports and adds a build-time reference to API Tools annotations on the build path so that they are visible at compile time, but avoids a bundle dependency on 'org.eclipse.pde.api.tools.annotations' at run time.<br><br>Adds this entry to 'build.properties':<br><code>additional.bundles = org.eclipse.pde.api.tools.annotations</code>
 UnknownAnnotationResolution_1=Fix project setup and import {0} ({1})

---------------------------145---------------------------
需求名称: Bug 488215 - Support varargs in the Viewer API
创建时间: 2019-07-01	15:34:03
修改时间: 2019-07-01	15:34:03

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/CachedCheckboxTreeViewer.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/CachedCheckboxTreeViewer.java
位置:  -225,7 +225,7   public class CachedCheckboxTreeViewer extends ContainerCheckedTreeViewer {
 	}
 
 	@Override
-	public void remove(Object[] elementsOrTreePaths) {
+	public void remove(Object... elementsOrTreePaths) {
 		for (Object elementOrTreePath : elementsOrTreePaths) {
 			updateCheckState(elementOrTreePath, false);
 		}

---------------------------146---------------------------
需求名称: Bug 548794 - Investigate inconsistencies in white-space in
创建时间: 2019-07-01	06:12:46
修改时间: 2019-07-01	06:13:53

原文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-10-systempackages.profile 
新文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-10-systempackages.profile
位置:  -12,7 +12,7  
 #     IBM Corporation - initial API and implementation
 ###############################################################################
 # NOTE: This profile only has JavaSE-10's VM packages
- org.osgi.framework.system.packages = \
+org.osgi.framework.system.packages = \
  com.oracle.awt,\
  com.oracle.net,\
  com.oracle.nio,\

原文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-11-systempackages.profile 
新文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-11-systempackages.profile
位置:  -9,7 +9,7  
 #     IBM Corporation - initial API and implementation
 ###############################################################################
 # NOTE: This profile only has JavaSE-11's VM packages
- org.osgi.framework.system.packages = \
+org.osgi.framework.system.packages = \
  com.sun.jarsigner,\
  com.sun.java.accessibility.util,\
  com.sun.javadoc,\

原文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-12-systempackages.profile 
新文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-12-systempackages.profile
位置:  -9,7 +9,7  
 #     IBM Corporation - initial API and implementation
 ###############################################################################
 # NOTE: This profile only has JavaSE-12's VM packages
- org.osgi.framework.system.packages = \
+org.osgi.framework.system.packages = \
  com.sun.jarsigner,\
  com.sun.java.accessibility.util,\
  com.sun.javadoc,\

---------------------------147---------------------------
需求名称: Using multi-catch in PDE UA folder
创建时间: 2019-06-25	04:14:03
修改时间: 2019-07-01	03:16:47

原文件: u
原文件: org.eclipse.pde.ua.tests/src/org/eclipse/pde/internal/u
原文件: tests/cheatsheet/AbstractCheatSheetModelTestCase.java 
新文件: ua/org.eclipse.pde.ua.tests/src/org/eclipse/pde/internal/ua/tests/cheatsheet/AbstractCheatSheetModelTestCase.java
位置:  -83,9 +83,7   public abstract class AbstractCheatSheetModelTestCase {
 		multi.addChildren(ops);
 		try {
 			multi.apply(fDocument);
-		} catch (MalformedTreeException e) {
-			fail(e.getMessage());
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			fail(e.getMessage());
 		}
 		load();

原文件: u
原文件: org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/u
原文件: ui/editor/cheatsheet/comp/CompCSMasterTreeSection.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/editor/cheatsheet/comp/CompCSMasterTreeSection.java
位置:  -375,9 +375,7   public class CompCSMasterTreeSection extends TreeSection implements ICSMaster {
 						swriter.toString(), url);
 				openAction.run();
 			}
-		} catch (IOException e) {
-			PDEUserAssistanceUIPlugin.logException(e);
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 			PDEUserAssistanceUIPlugin.logException(e);
 		}
 	}

原文件: u
原文件: org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/u
原文件: ui/editor/cheatsheet/simple/details/SimpleCSCommandDetails.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/editor/cheatsheet/simple/details/SimpleCSCommandDetails.java
位置:  -403,9 +403,7   public class SimpleCSCommandDetails extends CSAbstractSubDetails {
 			if (service != null) {
 				try {
 					return service.deserialize(serialization);
-				} catch (NotDefinedException e) {
-					PDEUserAssistanceUIPlugin.logException(e, SimpleDetailsMessages.SimpleCSCommandDetails_errTitle, SimpleDetailsMessages.SimpleCSCommandDetails_errMsg + serialization);
-				} catch (SerializationException e) {
+				} catch (NotDefinedException | SerializationException e) {
 					PDEUserAssistanceUIPlugin.logException(e, SimpleDetailsMessages.SimpleCSCommandDetails_errTitle, SimpleDetailsMessages.SimpleCSCommandDetails_errMsg + serialization);
 				}
 			}

---------------------------148---------------------------
需求名称: 4.13 version update for org.eclipse.pde.ua.tests
创建时间: 2019-07-01	02:33:45
修改时间: 2019-07-01	03:16:25

原文件: u
原文件: org.eclipse.pde.ua.tests/META-INF/MANIFEST.MF 
新文件: ua/org.eclipse.pde.ua.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ua.tests
-Bundle-Version: 1.1.200.qualifier
+Bundle-Version: 1.1.300.qualifier
 Bundle-ClassPath: tests.jar
 Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.pde.ua.core;bundle-version=

原文件: u
原文件: org.eclipse.pde.ua.tests/pom.xml 
新文件: ua/org.eclipse.pde.ua.tests/pom.xml
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ua.tests</artifactId>
-  <version>1.1.200-SNAPSHOT</version>
+  <version>1.1.300-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 
   <properties>

---------------------------149---------------------------
需求名称: Using multi-catch in PDE DS folder
创建时间: 2019-06-25	04:14:16
修改时间: 2019-06-30	05:18:11

原文件: ds/org.eclipse.pde.ds.annotations/src/org/eclipse/pde/ds/internal/annotations/AnnotationVisitor.java 
新文件: ds/org.eclipse.pde.ds.annotations/src/org/eclipse/pde/ds/internal/annotations/AnnotationVisitor.java
位置:  -477,9 +477,7   public class AnnotationVisitor extends ASTVisitor {
 
 			LinkedModeModel.closeAllModels(document);
 			edit.apply(document);
-		} catch (MalformedTreeException e) {
-			throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, 
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, 
 		} finally {
 			if (session != null) {
位置:  -1396,11 +1394,7   public class AnnotationVisitor extends ASTVisitor {
 			}
 			// Reconnect
 			clone.reconnect(obj, obj.getSharedModel());
-		} catch (IOException e) {
-			if (debug.isDebugging()) {
-				debug.trace(
-			}
-		} catch (ClassNotFoundException e) {
+		} catch (IOException | ClassNotFoundException e) {
 			if (debug.isDebugging()) {
 				debug.trace(
 			}

原文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/builders/DefaultSAXParser.java 
新文件: ds/org.eclipse.pde.ds.core/src/org/eclipse/pde/internal/ds/core/builders/DefaultSAXParser.java
位置:  -35,10 +35,7   public class DefaultSAXParser {
 			try (InputStream stream = new BufferedInputStream(file.getContents())) {
 				parser.parse(stream, reporter);
 			}
-		} catch (CoreException e) {
-		} catch (SAXException e) {
-		} catch (IOException e) {
-		} catch (ParserConfigurationException e) {
+		} catch (CoreException | SAXException | IOException | ParserConfigurationException e) {
 		}
 	}
 }

原文件: ds/org.eclipse.pde.ds.tests/src/org/eclipse/pde/internal/ds/tests/AbstractDSModelTestCase.java 
新文件: ds/org.eclipse.pde.ds.tests/src/org/eclipse/pde/internal/ds/tests/AbstractDSModelTestCase.java
位置:  -86,9 +86,7   public abstract class AbstractDSModelTestCase extends TestCase {
 		multi.addChildren(ops);
 		try {
 			multi.apply(fDocument);
-		} catch (MalformedTreeException e) {
-			fail(e.getMessage());
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			fail(e.getMessage());
 		}
 		load();

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditPropertiesDialog.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditPropertiesDialog.java
位置:  -44,7 +44,6   import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.dialogs.ElementTreeSelectionDialog;
 import org.eclipse.ui.forms.FormDialog;
 import org.eclipse.ui.forms.IManagedForm;
位置:  -192,7 +191,6   public class DSEditPropertiesDialog extends FormDialog {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditPropertyDialog.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditPropertyDialog.java
位置:  -50,7 +50,6   import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.dialogs.ElementTreeSelectionDialog;
 import org.eclipse.ui.forms.FormDialog;
 import org.eclipse.ui.forms.IManagedForm;
位置:  -315,7 +314,6   public class DSEditPropertyDialog extends FormDialog {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditProvideDialog.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditProvideDialog.java
位置:  -41,7 +41,6   import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.dialogs.SelectionDialog;
 import org.eclipse.ui.forms.FormDialog;
位置:  -193,7 +192,6   public class DSEditProvideDialog extends FormDialog {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditReferenceDialog.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/dialogs/DSEditReferenceDialog.java
位置:  -45,7 +45,6   import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Label;
 import org.eclipse.swt.widgets.Shell;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.dialogs.SelectionDialog;
 import org.eclipse.ui.forms.FormDialog;
位置:  -326,7 +325,6   public class DSEditReferenceDialog extends FormDialog {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSComponentSection.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSComponentSection.java
位置:  -46,7 +46,6   import org.eclipse.jface.window.Window;
 import org.eclipse.jface.wizard.WizardDialog;
 
 import org.eclipse.ui.IActionBars;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.forms.events.HyperlinkEvent;
 import org.eclipse.ui.forms.widgets.FormToolkit;
 import org.eclipse.ui.forms.widgets.Section;
位置:  -321,7 +320,6   public class DSComponentSection extends PDESection {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSProvideSection.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSProvideSection.java
位置:  -59,7 +59,6   import org.eclipse.swt.SWT;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Table;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.actions.ActionFactory;
 import org.eclipse.ui.dialogs.SelectionDialog;
位置:  -360,8 +359,6   public class DSProvideSection extends TableSection implements
 				if (element != null)
 					JavaUI.openInEditor(element);
 			}
-		} catch (PartInitException e) {
-			Activator.logException(e);
 		} catch (CoreException e) {
 			Activator.logException(e);
 		}

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSReferenceSection.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/editor/sections/DSReferenceSection.java
位置:  -59,7 +59,6   import org.eclipse.swt.SWT;
 import org.eclipse.swt.layout.GridData;
 import org.eclipse.swt.widgets.Composite;
 import org.eclipse.swt.widgets.Table;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.actions.ActionFactory;
 import org.eclipse.ui.dialogs.SelectionDialog;
位置:  -441,8 +440,6   public class DSReferenceSection extends TableSection implements
 				if (element != null)
 					JavaUI.openInEditor(element);
 			}
-		} catch (PartInitException e) {
-			Activator.logException(e);
 		} catch (CoreException e) {
 			Activator.logException(e);
 		}

原文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/wizards/DSFileWizardPage.java 
新文件: ds/org.eclipse.pde.ds.ui/src/org/eclipse/pde/internal/ds/ui/wizards/DSFileWizardPage.java
位置:  -56,7 +56,6   import org.eclipse.swt.widgets.Group;
 import org.eclipse.swt.widgets.Label;
 import org.eclipse.swt.widgets.Link;
 import org.eclipse.swt.widgets.Text;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.dialogs.SelectionDialog;
 import org.eclipse.ui.dialogs.WizardNewFileCreationPage;
位置:  -219,7 +218,6   public class DSFileWizardPage extends WizardNewFileCreationPage {
 								}
 							}
 						}
-							} catch (PartInitException e1) {
 							} catch (CoreException e1) {
 					}
 						}

---------------------------150---------------------------
需求名称: Enable error in ds plug-ins for unused imports
创建时间: 2019-06-25	04:18:50
修改时间: 2019-06-30	05:17:50

原文件: ds/org.eclipse.pde.ds.tests/.settings/org.eclipse.jdt.core.prefs 
新文件: ds/org.eclipse.pde.ds.tests/.settings/org.eclipse.jdt.core.prefs
位置:  -1,4 +1,13  
 eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
+org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
+org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
+org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
 org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
 org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
 org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
位置:  -6,8 +15,99   org.eclipse.jdt.core.compiler.compliance=1.8
 org.eclipse.jdt.core.compiler.debug.lineNumber=generate
 org.eclipse.jdt.core.compiler.debug.localVariable=generate
 org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
+org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
 org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
+org.eclipse.jdt.core.compiler.problem.comparingIdentical=warning
+org.eclipse.jdt.core.compiler.problem.deadCode=warning
+org.eclipse.jdt.core.compiler.problem.deprecation=warning
+org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode=disabled
+org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod=disabled
+org.eclipse.jdt.core.compiler.problem.discouragedReference=warning
+org.eclipse.jdt.core.compiler.problem.emptyStatement=ignore
 org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.fallthroughCase=ignore
+org.eclipse.jdt.core.compiler.problem.fatalOptionalError=disabled
+org.eclipse.jdt.core.compiler.problem.fieldHiding=ignore
+org.eclipse.jdt.core.compiler.problem.finalParameterBound=warning
+org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally=warning
+org.eclipse.jdt.core.compiler.problem.forbiddenReference=error
+org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=warning
+org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled
+org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=warning
+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=warning
+org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore
+org.eclipse.jdt.core.compiler.problem.localVariableHiding=ignore
+org.eclipse.jdt.core.compiler.problem.methodWithConstructorName=warning
+org.eclipse.jdt.core.compiler.problem.missingDefaultCase=ignore
+org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault=disabled
+org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation=ignore
+org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled
+org.eclipse.jdt.core.compiler.problem.missingSerialVersion=warning
+org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod=ignore
+org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
+org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
+org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=ignore
+org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
+org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
+org.eclipse.jdt.core.compiler.problem.nullReference=warning
+org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
+org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
+org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
+org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
+org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
+org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
+org.eclipse.jdt.core.compiler.problem.rawTypeReference=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation=warning
+org.eclipse.jdt.core.compiler.problem.redundantNullCheck=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments=ignore
+org.eclipse.jdt.core.compiler.problem.redundantSuperinterface=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic=ignore
+org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic=ignore
+org.eclipse.jdt.core.compiler.problem.specialParameterHidingField=disabled
+org.eclipse.jdt.core.compiler.problem.staticAccessReceiver=warning
+org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
+org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
+org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
+org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
+org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
+org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=enabled
+org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
+org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
+org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
+org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
+org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
+org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=ignore
+org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
+org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
+org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
+org.eclipse.jdt.core.compiler.problem.unusedLocal=warning
+org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference=enabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract=disabled
+org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete=disabled
+org.eclipse.jdt.core.compiler.problem.unusedPrivateMember=warning
+org.eclipse.jdt.core.compiler.problem.unusedTypeParameter=ignore
+org.eclipse.jdt.core.compiler.problem.unusedWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast=warning
 org.eclipse.jdt.core.compiler.source=1.8
 org.eclipse.jdt.core.formatter.align_type_members_on_columns=false
 org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16

原文件: ds/org.eclipse.pde.ds.ui/.settings/org.eclipse.jdt.core.prefs 
新文件: ds/org.eclipse.pde.ds.ui/.settings/org.eclipse.jdt.core.prefs
位置:  -2,8 +2,11   eclipse.preferences.version=1
 org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations=disabled
 org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation=ignore
 org.eclipse.jdt.core.compiler.annotation.nonnull=org.eclipse.jdt.annotation.NonNull
+org.eclipse.jdt.core.compiler.annotation.nonnull.secondary=
 org.eclipse.jdt.core.compiler.annotation.nonnullbydefault=org.eclipse.jdt.annotation.NonNullByDefault
+org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary=
 org.eclipse.jdt.core.compiler.annotation.nullable=org.eclipse.jdt.annotation.Nullable
+org.eclipse.jdt.core.compiler.annotation.nullable.secondary=
 org.eclipse.jdt.core.compiler.annotation.nullanalysis=disabled
 org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
 org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
位置:  -12,6 +15,7   org.eclipse.jdt.core.compiler.compliance=1.8
 org.eclipse.jdt.core.compiler.debug.lineNumber=generate
 org.eclipse.jdt.core.compiler.debug.localVariable=generate
 org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.APILeak=warning
 org.eclipse.jdt.core.compiler.problem.annotationSuperInterface=warning
 org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
 org.eclipse.jdt.core.compiler.problem.autoboxing=ignore
位置:  -49,12 +53,14   org.eclipse.jdt.core.compiler.problem.noEffectAssignment=warning
 org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion=warning
 org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral=warning
 org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped=warning
+org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation=warning
 org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict=error
 org.eclipse.jdt.core.compiler.problem.nullReference=warning
 org.eclipse.jdt.core.compiler.problem.nullSpecViolation=error
 org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion=warning
 org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod=warning
 org.eclipse.jdt.core.compiler.problem.parameterAssignment=ignore
+org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables=warning
 org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment=ignore
 org.eclipse.jdt.core.compiler.problem.potentialNullReference=ignore
 org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable=ignore
位置:  -71,21 +77,26   org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors=disabled
 org.eclipse.jdt.core.compiler.problem.suppressWarnings=enabled
 org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields=disabled
 org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation=ignore
+org.eclipse.jdt.core.compiler.problem.terminalDeprecation=warning
 org.eclipse.jdt.core.compiler.problem.typeParameterHiding=warning
 org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems=disabled
 org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation=warning
 org.eclipse.jdt.core.compiler.problem.unclosedCloseable=warning
 org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock=ignore
 org.eclipse.jdt.core.compiler.problem.unhandledWarningToken=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType=warning
+org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict=disabled
+org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType=info
 org.eclipse.jdt.core.compiler.problem.unnecessaryElse=ignore
 org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck=error
 org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess=ignore
+org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName=warning
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException=ignore
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable=enabled
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference=enabled
 org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding=disabled
 org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter=ignore
-org.eclipse.jdt.core.compiler.problem.unusedImport=warning
+org.eclipse.jdt.core.compiler.problem.unusedImport=error
 org.eclipse.jdt.core.compiler.problem.unusedLabel=warning
 org.eclipse.jdt.core.compiler.problem.unusedLocal=error
 org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation=ignore

---------------------------151---------------------------
需求名称: Bug 547712 - [13] Create JavaSE-x-systempackages.profile for java 13
创建时间: 2019-06-11	00:54:33
修改时间: 2019-06-30	03:33:39

原文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-13-systempackages.profile 
新文件: apitools/org.eclipse.pde.api.tools/system_packages/JavaSE-13-systempackages.profile
位置:  -0,0 +1,171  
+###############################################################################
+# Copyright (c) 2019 IBM Corporation and others.
+# All rights reserved. This program and the accompanying materials
+# are made available under the terms of the Eclipse Public License v1.0
+# which accompanies this distribution,\and is available at
+# http://www.eclipse.org/legal/epl-v10.html
+# 
+# Contributors:
+#     IBM Corporation - initial API and implementation
+###############################################################################
+# NOTE: This profile only has JavaSE-13's VM packages
+org.osgi.framework.system.packages = \
+ com.sun.jarsigner,\
+ com.sun.java.accessibility.util,\
+ com.sun.jdi,\
+ com.sun.jdi.connect,\
+ com.sun.jdi.connect.spi,\
+ com.sun.jdi.event,\
+ com.sun.jdi.request,\
+ com.sun.management,\
+ com.sun.net.httpserver,\
+ com.sun.net.httpserver.spi,\
+ com.sun.nio.file,\
+ com.sun.nio.sctp,\
+ com.sun.security.auth,\
+ com.sun.security.auth.callback,\
+ com.sun.security.auth.login,\
+ com.sun.security.auth.module,\
+ com.sun.security.jgss,\
+ com.sun.source.doctree,\
+ com.sun.source.tree,\
+ com.sun.source.util,\
+ com.sun.tools.attach,\
+ com.sun.tools.attach.spi,\
+ com.sun.tools.javac,\
+ com.sun.tools.jconsole,\
+ javax.accessibility,\
+ javax.annotation.processing,\
+ javax.crypto,\
+ javax.crypto.interfaces,\
+ javax.crypto.spec,\
+ javax.imageio,\
+ javax.imageio.event,\
+ javax.imageio.metadata,\
+ javax.imageio.plugins.bmp,\
+ javax.imageio.plugins.jpeg,\
+ javax.imageio.plugins.tiff,\
+ javax.imageio.spi,\
+ javax.imageio.stream,\
+ javax.lang.model,\
+ javax.lang.model.element,\
+ javax.lang.model.type,\
+ javax.lang.model.util,\
+ javax.management,\
+ javax.management.loading,\
+ javax.management.modelmbean,\
+ javax.management.monitor,\
+ javax.management.openmbean,\
+ javax.management.relation,\
+ javax.management.remote,\
+ javax.management.remote.rmi,\
+ javax.management.timer,\
+ javax.naming,\
+ javax.naming.directory,\
+ javax.naming.event,\
+ javax.naming.ldap,\
+ javax.naming.ldap.spi,\
+ javax.naming.spi,\
+ javax.net,\
+ javax.net.ssl,\
+ javax.print,\
+ javax.print.attribute,\
+ javax.print.attribute.standard,\
+ javax.print.event,\
+ javax.rmi.ssl,\
+ javax.script,\
+ javax.security.auth,\
+ javax.security.auth.callback,\
+ javax.security.auth.kerberos,\
+ javax.security.auth.login,\
+ javax.security.auth.spi,\
+ javax.security.auth.x500,\
+ javax.security.cert,\
+ javax.security.sasl,\
+ javax.smartcardio,\
+ javax.sound.midi,\
+ javax.sound.midi.spi,\
+ javax.sound.sampled,\
+ javax.sound.sampled.spi,\
+ javax.sql,\
+ javax.sql.rowset,\
+ javax.sql.rowset.serial,\
+ javax.sql.rowset.spi,\
+ javax.swing,\
+ javax.swing.border,\
+ javax.swing.colorchooser,\
+ javax.swing.event,\
+ javax.swing.filechooser,\
+ javax.swing.plaf,\
+ javax.swing.plaf.basic,\
+ javax.swing.plaf.metal,\
+ javax.swing.plaf.multi,\
+ javax.swing.plaf.nimbus,\
+ javax.swing.plaf.synth,\
+ javax.swing.table,\
+ javax.swing.text,\
+ javax.swing.text.html,\
+ javax.swing.text.html.parser,\
+ javax.swing.text.rtf,\
+ javax.swing.tree,\
+ javax.swing.undo,\
+ javax.tools,\
+ javax.transaction.xa,\
+ javax.xml,\
+ javax.xml.catalog,\
+ javax.xml.crypto,\
+ javax.xml.crypto.dom,\
+ javax.xml.crypto.dsig,\
+ javax.xml.crypto.dsig.dom,\
+ javax.xml.crypto.dsig.keyinfo,\
+ javax.xml.crypto.dsig.spec,\
+ javax.xml.datatype,\
+ javax.xml.namespace,\
+ javax.xml.parsers,\
+ javax.xml.stream,\
+ javax.xml.stream.events,\
+ javax.xml.stream.util,\
+ javax.xml.transform,\
+ javax.xml.transform.dom,\
+ javax.xml.transform.sax,\
+ javax.xml.transform.stax,\
+ javax.xml.transform.stream,\
+ javax.xml.validation,\
+ javax.xml.xpath,\
+ jdk.dynalink,\
+ jdk.dynalink.beans,\
+ jdk.dynalink.linker,\
+ jdk.dynalink.linker.support,\
+ jdk.dynalink.support,\
+ jdk.javadoc.doclet,\
+ jdk.jfr,\
+ jdk.jfr.consumer,\
+ jdk.jshell,\
+ jdk.jshell.execution,\
+ jdk.jshell.spi,\
+ jdk.jshell.tool,\
+ jdk.management.jfr,\
+ jdk.nashorn.api.scripting,\
+ jdk.nashorn.api.tree,\
+ jdk.net,\
+ jdk.nio,\
+ jdk.security.jarsigner,\
+ jdk.swing.interop,\
+ netscape.javascript,\
+ org.ietf.jgss,\
+ org.w3c.dom,\
+ org.w3c.dom.bootstrap,\
+ org.w3c.dom.css,\
+ org.w3c.dom.events,\
+ org.w3c.dom.html,\
+ org.w3c.dom.ls,\
+ org.w3c.dom.ranges,\
+ org.w3c.dom.stylesheets,\
+ org.w3c.dom.traversal,\
+ org.w3c.dom.views,\
+ org.w3c.dom.xpath,\
+ org.xml.sax,\
+ org.xml.sax.ext,\
+ org.xml.sax.helpers,\
+ sun.misc,\
+ sun.reflect
\ No newline at end of file

---------------------------152---------------------------
需求名称: Bug 417869 - omit libraries from dev.properties
创建时间: 2019-05-20	08:41:48
修改时间: 2019-06-28	05:19:00

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java
位置:  -188,7 +188,8   public class ClasspathHelper {
 	}
 
 	// creates a map whose key is a Path to the source directory/jar and the value is a Path output directory or jar.
-	private static Map<IPath, ArrayList<IPath>> getClasspathMap(IProject project, boolean checkExcluded, boolean absolutePaths) throws JavaModelException {
+	private static Map<IPath, ArrayList<IPath>> getClasspathMap(IProject project, boolean checkExcluded,
+			boolean onlyJarsIfLinked, boolean absolutePaths) throws JavaModelException {
 		List<Path> excluded = getFoldersToExclude(project, checkExcluded);
 		IJavaProject jProject = JavaCore.create(project);
 		HashMap<IPath, ArrayList<IPath>> map = new LinkedHashMap<>();
位置:  -215,6 +216,9   public class ClasspathHelper {
 				// make the path either relative or absolute
 				if (file != null) {
 					boolean isLinked = file.isLinked(IResource.CHECK_ANCESTORS);
+					if (entry.getEntryKind() != IClasspathEntry.CPE_SOURCE &amp;&amp; !isLinked &amp;&amp; onlyJarsIfLinked) {
+						continue;
+					}
 					if (isLinked || absolutePaths) {
 						IPath location = file.getLocation();
 						if (location != null) {
位置:  -308,7 +312,10   public class ClasspathHelper {
 		IPluginLibrary[] libraries = base.getLibraries();
 		try {
 			if (project.hasNature(JavaCore.NATURE_ID)) {
-				Map<IPath, ArrayList<IPath>> classpathMap = getClasspathMap(project, checkExcluded, false);
+				boolean isSystemBundle = base.getId()
+						.equals(PDECore.getDefault().getModelManager().getSystemBundleId());
+				Map<IPath, ArrayList<IPath>> classpathMap = getClasspathMap(project, checkExcluded, !isSystemBundle,
+						false);
 				IFile file = PDEProject.getBuildProperties(project);
 				IPath filePath = file.getLocation();
 				boolean searchBuild = filePath != null &amp;&amp; filePath.toFile().exists();
位置:  -380,7 +387,7   public class ClasspathHelper {
 			if (frags[i].getUnderlyingResource() != null) {
 				try {
 					IProject project = frags[i].getUnderlyingResource().getProject();
-					Map<IPath, ArrayList<IPath>> classpathMap = getClasspathMap(project, checkExcluded, true);
+					Map<IPath, ArrayList<IPath>> classpathMap = getClasspathMap(project, checkExcluded, false, true);
 					IFile file = PDEProject.getBuildProperties(project);
 					IBuild build = null;
 					if (file.exists()) {

---------------------------153---------------------------
需求名称: Bug 548731 - Restriction has been added/removed should mention the
创建时间: 2019-06-28	02:00:32
修改时间: 2019-06-28	04:57:27

原文件: apitools/org.eclipse.pde.api.tools.tests/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.tests/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.api.tools.tests
-Bundle-Version: 1.1.500.qualifier
+Bundle-Version: 1.1.600.qualifier
 Bundle-Vendor: %Bundle-Vendor
 Require-Bundle: org.eclipse.core.runtime,
  org.junit,

原文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml 
新文件: apitools/org.eclipse.pde.api.tools.tests/pom.xml
位置:  -1,6 +1,6  
 <?xml version=
 <!--
-  Copyright (c) 2012, 2017 Eclipse Foundation and others.
+  Copyright (c) 2012, 2019 Eclipse Foundation and others.
   All rights reserved. This program and the accompanying materials
   are made available under the terms of the Eclipse Distribution License v1.0
   which accompanies this distribution, and is available at
位置:  -19,7 +19,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.api.tools.tests</artifactId>
-  <version>1.1.500-SNAPSHOT</version>
+  <version>1.1.600-SNAPSHOT</version>
   <packaging>eclipse-test-plugin</packaging>
 
 	<build>

原文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/ClassCompatibilityRestrictionTests.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/ClassCompatibilityRestrictionTests.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -83,7 +83,7   public class ClassCompatibilityRestrictionTests extends ClassCompatibilityTests
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}
位置:  -106,7 +106,7   public class ClassCompatibilityRestrictionTests extends ClassCompatibilityTests
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}

原文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/InterfaceCompatibilityRestrictionTests.java 
新文件: apitools/org.eclipse.pde.api.tools.tests/src/org/eclipse/pde/api/tools/builder/tests/compatibility/InterfaceCompatibilityRestrictionTests.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -106,7 +106,7   public class InterfaceCompatibilityRestrictionTests extends InterfaceCompatibili
 		};
 		setExpectedProblemIds(ids);
 		String[][] args = new String[1][];
-		args[0] = new String[]{PACKAGE_PREFIX + 
+		args[0] = new String[] { 
 		setExpectedMessageArgs(args);
 		performCompatibilityTest(filePath, incremental);
 	}
位置:  -158,7 +158,7   public class InterfaceCompatibilityRestrictionTests extends InterfaceCompatibili
 			};
 			setExpectedProblemIds(ids);
 			String[][] args = new String[1][];
-			args[0] = new String[]{PACKAGE_PREFIX + 
+			args[0] = new String[] { 
 			setExpectedMessageArgs(args);
 			performCompatibilityTest(filePath, inc);
 		}
位置:  -189,7 +189,7   public class InterfaceCompatibilityRestrictionTests extends InterfaceCompatibili
 			};
 			setExpectedProblemIds(ids);
 			String[][] args = new String[1][];
-			args[0] = new String[]{PACKAGE_PREFIX + 
+			args[0] = new String[] { 
 			setExpectedMessageArgs(args);
 			performCompatibilityTest(filePath, inc);
 		}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/ClassFileComparator.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/ClassFileComparator.java
位置:  -972,34 +972,39   public class ClassFileComparator {
 						// adding/removing no extend on a final class is ok
 						// adding/removing no instantiate on an abstract class
 						// is ok
+						String NO_EXTEND = 
+						String NO_IMPLEMENT = 
+						String NO_INSTANSTIATE = 
 						if (this.type1.isInterface()) {
-							if ((RestrictionModifiers.isImplementRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isImplementRestriction(restrictions)) || (RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isExtendRestriction(restrictions))) {
-								this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), Util.getDescriptorName(type1));
+							boolean noImplementAdded = (RestrictionModifiers.isImplementRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isImplementRestriction(restrictions));
+							if (noImplementAdded || (RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isExtendRestriction(restrictions))) {
+								this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), new String[] {noImplementAdded? NO_IMPLEMENT:NO_EXTEND, Util.getDescriptorName(type1) });
 							}
-							if ((!RestrictionModifiers.isImplementRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isImplementRestriction(restrictions)) || (!RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isExtendRestriction(restrictions))) {
-								this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), Util.getDescriptorName(type1));
+							boolean noImplementRemoved = (!RestrictionModifiers.isImplementRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isImplementRestriction(restrictions)) ;
+							if (noImplementRemoved || (!RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isExtendRestriction(restrictions))) {
+								this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), new String[] {noImplementRemoved?  NO_IMPLEMENT:NO_EXTEND, Util.getDescriptorName(type1) });
 							}
 						} else {
 							boolean reportChangedRestrictions = false;
 							if (!Flags.isFinal(typeAccess2) &amp;&amp; !Flags.isFinal(typeAccess)) {
 								if (RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isExtendRestriction(restrictions)) {
 									reportChangedRestrictions = true;
-									this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), Util.getDescriptorName(type1));
+									this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), new String[] { NO_EXTEND, Util.getDescriptorName(type1) });
 								}
 								if (!RestrictionModifiers.isExtendRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isExtendRestriction(restrictions)) {
 									reportChangedRestrictions = true;
-									this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(),Util.getDescriptorName(type1));
+									this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(),new String[] { NO_EXTEND, Util.getDescriptorName(type1) });
 								}
 							}
 							if (!reportChangedRestrictions &amp;&amp; !Flags.isAbstract(typeAccess2) &amp;&amp; !Flags.isAbstract(typeAccess)) {
 								if (RestrictionModifiers.isInstantiateRestriction(restrictions2) &amp;&amp; !RestrictionModifiers.isInstantiateRestriction(restrictions)) {
-									this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), Util.getDescriptorName(type1));
+									this.addDelta(getElementType(this.type1), IDelta.ADDED, IDelta.RESTRICTIONS, restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(), new String[] { NO_INSTANSTIATE, Util.getDescriptorName(type1) });
 								}
 							}
 							if (!reportChangedRestrictions &amp;&amp; !Flags.isAbstract(typeAccess2)
 									&amp;&amp; !Flags.isAbstract(typeAccess)) {
 								if (!RestrictionModifiers.isInstantiateRestriction(restrictions2) &amp;&amp; RestrictionModifiers.isInstantiateRestriction(restrictions)) {
-									this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(),Util.getDescriptorName(type1));
+									this.addDelta(getElementType(this.type1), IDelta.REMOVED, IDelta.RESTRICTIONS,restrictions2, typeAccess, typeAccess2, this.type2, this.type2.getName(),new String[] {  NO_INSTANSTIATE, Util.getDescriptorName(type1) });
 								}
 							}
 						}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/compatible_delta_messages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/compatible_delta_messages.properties
位置:  -221,7 +221,7  
 # {0} interface name {1} super interface name
 107 = The interface {1} adds method {2} to {0} that is tagged as @noimplement
 # {0} type name
-108 = Restrictions have been added for type {0}
+108 = The {0} restriction have been added for type {1}
 # {0} type name, {1} component id
 109 = The re-exported type {0} has been added to {1}
 # {0} given element
位置:  -229,4 +229,4  
 # {0} given element
 111=The deprecation modifiers has been removed from {0}
 # {0} type name
-112 = Restrictions have been removed for type {0}
\ No newline at end of file
+112 = The {0} restriction have been removed for type {1}
\ No newline at end of file

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/problems/problemmessages.properties
位置:  -1,5 +1,5  
 ###############################################################################
-# Copyright (c) 2008, 2018 IBM Corporation and others.
+# Copyright (c) 2008, 2019 IBM Corporation and others.
 #
 # This program and the accompanying materials
 # are made available under the terms of the Eclipse Public License 2.0
位置:  -98,7 +98,7  
 66 = The ''abstract'' keyword has been added for class {0}
 67 = The ''final'' keyword has been added for the type {0}
 69 = The ''static'' keyword has been added for field {0}.{1}
-72 = Restrictions have been added for type {0}
+72 = The {0} restriction have been added for type {1}
 73 = The static member type {0} has been converted to a non-static member type
 74 = The superclass for {0} has changed
 # This message is using ChoiceFormat in order to fill the argument {1} and {2}

---------------------------154---------------------------
需求名称: Normalized files with mixed line endings
创建时间: 2019-06-28	02:12:30
修改时间: 2019-06-28	02:12:30

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java
位置:  -1,11 +1,11  
 /*******************************************************************************
  * Copyright (c) 2011, 2012 IBM Corporation and others.
- *
+ *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
  * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
  * SPDX-License-Identifier: EPL-2.0
  *
  * Contributors:

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java
位置:  -13,7 +13,7  
  *     Achim Demelt, eXXcellent solutions gmbh - initial API and implementation
  *     EclipseSource - initial API and implementation, ongoing enhancements
  *     IBM Corporation - ongoing enhancements
- *******************************************************************************/
+ *******************************************************************************/
 package org.eclipse.pde.internal.ui.launcher;
 
 import java.util.*;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/PluginExportWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/PluginExportWizard.java
位置:  -1,16 +1,16  
 /*******************************************************************************
  * Copyright (c) 2000, 2015 IBM Corporation and others.
- *
+ *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
  * which accompanies this distribution, and is available at
- * https://www.eclipse.org/legal/epl-2.0/
- *
+ * https://www.eclipse.org/legal/epl-2.0/
+ *
  * SPDX-License-Identifier: EPL-2.0
  *
  * Contributors:
  *     IBM Corporation - initial API and implementation
- *******************************************************************************/
+ *******************************************************************************/
 package org.eclipse.pde.internal.ui.wizards.exports;
 
 import java.io.File;

---------------------------155---------------------------
需求名称: Using multi-catch in PDE API tools folder
创建时间: 2019-06-25	04:14:45
修改时间: 2019-06-27	10:51:54

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/actions/ExportSessionAction.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/actions/ExportSessionAction.java
位置:  -22,7 +22,6   import java.io.InputStream;
 import javax.xml.transform.Result;
 import javax.xml.transform.Source;
 import javax.xml.transform.Transformer;
-import javax.xml.transform.TransformerConfigurationException;
 import javax.xml.transform.TransformerException;
 import javax.xml.transform.TransformerFactory;
 import javax.xml.transform.stream.StreamResult;
位置:  -126,9 +125,7   public class ExportSessionAction extends Action {
 							writer.flush();
 							progress.worked(25);
 						}
-					} catch (IOException e) {
-						ApiPlugin.log(e);
-					} catch (CoreException e) {
+					} catch (IOException | CoreException e) {
 						ApiPlugin.log(e);
 					} finally {
 						if (writer != null) {
位置:  -161,11 +158,7   public class ExportSessionAction extends Action {
 							TransformerFactory transFact = TransformerFactory.newInstance();
 							Transformer trans = transFact.newTransformer(xsltSource);
 							trans.transform(xmlSource, result);
-						} catch (TransformerConfigurationException e) {
-							ApiUIPlugin.log(e);
-						} catch (TransformerException e) {
-							ApiUIPlugin.log(e);
-						} catch (IOException e) {
+						} catch (TransformerException | IOException e) {
 							ApiUIPlugin.log(e);
 						} finally {
 							if (writer != null) {

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiQuickFixProcessor.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/ApiQuickFixProcessor.java
位置:  -251,9 +251,7   public class ApiQuickFixProcessor implements IQuickFixProcessor {
 						return false;
 					}
 				}
-			} catch (CoreException ce) {
-				ApiUIPlugin.log(ce);
-			} catch (IOException e) {
+			} catch (CoreException | IOException e) {
 				ApiUIPlugin.log(e);
 			} finally {
 				if (stream != null) {

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/InstallEEDescriptionProblemResolution.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/InstallEEDescriptionProblemResolution.java
位置:  -60,13 +60,7   public class InstallEEDescriptionProblemResolution implements IMarkerResolution2
 					IHandlerService handlerService = PlatformUI.getWorkbench().getService(IHandlerService.class);
 					try {
 						handlerService.executeCommand(ApiErrorsWarningsConfigurationBlock.P2_INSTALL_COMMAND_HANDLER, null);
-					} catch (ExecutionException ex) {
-						ApiErrorsWarningsConfigurationBlock.handleCommandException();
-					} catch (NotDefinedException ex) {
-						ApiErrorsWarningsConfigurationBlock.handleCommandException();
-					} catch (NotEnabledException ex) {
-						ApiErrorsWarningsConfigurationBlock.handleCommandException();
-					} catch (NotHandledException ex) {
+					} catch (ExecutionException | NotDefinedException | NotEnabledException | NotHandledException ex) {
 						ApiErrorsWarningsConfigurationBlock.handleCommandException();
 					}
 				}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/RemoveUnsupportedAnnotationOperation.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/RemoveUnsupportedAnnotationOperation.java
位置:  -43,7 +43,6   import org.eclipse.jdt.core.dom.rewrite.ASTRewrite;
 import org.eclipse.jdt.ui.JavaUI;
 import org.eclipse.text.edits.TextEdit;
 import org.eclipse.text.edits.TextEditGroup;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.progress.UIJob;
 
 /**
位置:  -164,8 +163,6   public class RemoveUnsupportedAnnotationOperation extends UIJob {
 						localMonitor.split(1);
 					}
 				}
-			} catch (JavaModelException jme) {
-			} catch (PartInitException e) {
 			} catch (CoreException e) {
 			}
 		}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/RemoveUnsupportedTagOperation.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/markers/RemoveUnsupportedTagOperation.java
位置:  -42,7 +42,6   import org.eclipse.jdt.core.dom.rewrite.ListRewrite;
 import org.eclipse.jdt.ui.JavaUI;
 import org.eclipse.pde.api.tools.internal.provisional.IApiMarkerConstants;
 import org.eclipse.text.edits.TextEdit;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.progress.UIJob;
 
 /**
位置:  -135,8 +134,6   public class RemoveUnsupportedTagOperation extends UIJob {
 						localMonitor.split(1);
 					}
 				}
-			} catch (JavaModelException jme) {
-			} catch (PartInitException e) {
 			} catch (CoreException e) {
 			}
 		}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiErrorsWarningsConfigurationBlock.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ApiErrorsWarningsConfigurationBlock.java
位置:  -1221,13 +1221,7   public class ApiErrorsWarningsConfigurationBlock extends ConfigurationBlock {
 					IHandlerService handlerService = PlatformUI.getWorkbench().getService(IHandlerService.class);
 					try {
 						handlerService.executeCommand(P2_INSTALL_COMMAND_HANDLER, null);
-					} catch (ExecutionException ex) {
-						handleCommandException();
-					} catch (NotDefinedException ex) {
-						handleCommandException();
-					} catch (NotEnabledException ex) {
-						handleCommandException();
-					} catch (NotHandledException ex) {
+					} catch (ExecutionException | NotDefinedException | NotEnabledException | NotHandledException ex) {
 						handleCommandException();
 					}
 				}));

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ProjectSelectionDialog.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/preferences/ProjectSelectionDialog.java
位置:  -23,7 +23,6   import org.eclipse.core.runtime.Status;
 import org.eclipse.jdt.core.IJavaModel;
 import org.eclipse.jdt.core.IJavaProject;
 import org.eclipse.jdt.core.JavaCore;
-import org.eclipse.jdt.core.JavaModelException;
 import org.eclipse.jdt.ui.JavaElementComparator;
 import org.eclipse.jdt.ui.JavaElementLabelProvider;
 import org.eclipse.jdt.ui.StandardJavaElementContentProvider;
位置:  -68,8 +67,6   public class ProjectSelectionDialog extends SelectionStatusDialog {
 							set.add(project);
 						}
 					}
-				} catch (JavaModelException jme) {
-					// ignore
 				} catch (CoreException ce) {
 					// ignore
 				}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiBaselineWizard.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiBaselineWizard.java
位置:  -104,9 +104,7   public class ApiBaselineWizard extends Wizard {
 				return profile != null;
 			}
 			return true;
-		} catch (IOException e) {
-			ApiUIPlugin.log(e);
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 			ApiUIPlugin.log(e);
 		}
 		return false;

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiBaselineWizardPage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiBaselineWizardPage.java
位置:  -196,9 +196,7   public abstract class ApiBaselineWizardPage extends WizardPage {
 		WorkingCopyOperation op = new WorkingCopyOperation(fProfile);
 		try {
 			getContainer().run(true, false, op);
-		} catch (InvocationTargetException e) {
-			ApiUIPlugin.log(e);
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			ApiUIPlugin.log(e);
 		}
 		fProfile = op.getWorkingCopy();

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiToolingSetupWizardPage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/ApiToolingSetupWizardPage.java
位置:  -372,9 +372,7   public class ApiToolingSetupWizardPage extends UserInputWizardPage {
 				}
 				projectchange.add(change);
 			}
-		} catch (CoreException e) {
-			ApiUIPlugin.log(e);
-		} catch (IOException e) {
+		} catch (CoreException | IOException e) {
 			ApiUIPlugin.log(e);
 		}
 	}
位置:  -413,9 +411,7   public class ApiToolingSetupWizardPage extends UserInputWizardPage {
 		};
 		try {
 			getContainer().run(false, false, op);
-		} catch (InvocationTargetException e) {
-			ApiUIPlugin.log(e);
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			ApiUIPlugin.log(e);
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/CompareOperation.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/CompareOperation.java
位置:  -178,8 +178,6   public class CompareOperation extends Job {
 						default:
 							break;
 					}
-				} catch (JavaModelException e) {
-					ApiPlugin.log(e);
 				} catch (CoreException e) {
 					ApiPlugin.log(e);
 				}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/DirectoryBasedApiBaselineWizardPage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/DirectoryBasedApiBaselineWizardPage.java
位置:  -303,8 +303,7   public class DirectoryBasedApiBaselineWizardPage extends ApiBaselineWizardPage {
 			setPageComplete(pageValid());
 			nametext.setFocus();
 			nametext.selectAll();
-		} catch (InvocationTargetException ite) {
-		} catch (InterruptedException ie) {
+		} catch (InvocationTargetException | InterruptedException ie) {
 		}
 	}
 

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/JavadocConversionRefactoring.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/JavadocConversionRefactoring.java
位置:  -39,7 +39,6   import org.eclipse.jdt.core.ICompilationUnit;
 import org.eclipse.jdt.core.IJavaProject;
 import org.eclipse.jdt.core.IType;
 import org.eclipse.jdt.core.JavaCore;
-import org.eclipse.jdt.core.JavaModelException;
 import org.eclipse.jdt.core.dom.AST;
 import org.eclipse.jdt.core.dom.ASTNode;
 import org.eclipse.jdt.core.dom.ASTParser;
位置:  -308,8 +307,6   public class JavadocConversionRefactoring extends Refactoring {
 					}
 				} catch (OperationCanceledException e) {
 					return false;
-				} catch (JavaModelException e) {
-					ApiUIPlugin.log(e);
 				} catch (CoreException e) {
 					ApiUIPlugin.log(e);
 				}

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/TargetBasedApiBaselineWizardPage.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/wizards/TargetBasedApiBaselineWizardPage.java
位置:  -363,8 +363,7   public class TargetBasedApiBaselineWizardPage extends ApiBaselineWizardPage {
 			treeviewer.setInput(getCurrentComponents());
 			treeviewer.refresh();
 			setPageComplete(pageValid());
-		} catch (InvocationTargetException ite) {
-		} catch (InterruptedException ie) {
+		} catch (InvocationTargetException | InterruptedException ie) {
 		}
 	}
 

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiBaselineManager.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiBaselineManager.java
位置:  -428,9 +428,7   public final class ApiBaselineManager implements IApiBaselineManager, ISaveParti
 		try {
 			parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
 			parser.setErrorHandler(new DefaultHandler());
-		} catch (ParserConfigurationException e) {
-			abort(
-		} catch (FactoryConfigurationError e) {
+		} catch (ParserConfigurationException | FactoryConfigurationError e) {
 			abort(
 		}
 		try {
位置:  -485,9 +483,7   public final class ApiBaselineManager implements IApiBaselineManager, ISaveParti
 				}
 				baseline.addApiComponents(components.toArray(new IApiComponent[components.size()]));
 			}
-		} catch (IOException e) {
-			abort(
-		} catch (SAXException e) {
+		} catch (IOException | SAXException e) {
 			abort(
 		} finally {
 			try {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiFilterStore.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ApiFilterStore.java
位置:  -177,9 +177,7   public class ApiFilterStore extends FilterStore implements IResourceChangeListen
 					}
 					fTriggeredChange = true;
 					fNeedsSaving = false;
-				} catch (CoreException ce) {
-					ApiPlugin.log(ce);
-				} catch (IOException ioe) {
+				} catch (CoreException | IOException ioe) {
 					ApiPlugin.log(ioe);
 				}
 				return Status.OK_STATUS;
位置:  -523,9 +521,7   public class ApiFilterStore extends FilterStore implements IResourceChangeListen
 				contents = filterFile.getContents();
 				readFilterFile(contents);
 			}
-		} catch (CoreException e) {
-			ApiPlugin.log(e);
-		} catch (IOException e) {
+		} catch (CoreException | IOException e) {
 			ApiPlugin.log(e);
 		} finally {
 			if (contents != null) {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/AbstractProblemDetector.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/AbstractProblemDetector.java
位置:  -250,10 +250,7   public abstract class AbstractProblemDetector implements IApiProblemDetector {
 								lineNumber = document.getLineOfOffset(charStart);
 							}
 						}
-					} catch (CoreException e) {
-						ApiPlugin.log(e);
-						return null;
-					} catch (BadLocationException e) {
+					} catch (CoreException | BadLocationException e) {
 						ApiPlugin.log(e);
 						return null;
 					}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java
位置:  -744,8 +744,6   public class BaseApiAnalyzer implements IApiAnalyzer {
 							// ignore
 						}
 					}
-				} catch (JavaModelException e) {
-					ApiPlugin.log(e);
 				} catch (CoreException e) {
 					ApiPlugin.log(e);
 				}
位置:  -2299,9 +2297,7   public class BaseApiAnalyzer implements IApiAnalyzer {
 						break loop;
 					}
 				}
-			} catch (CoreException e) {
-				// ignore
-			} catch (IOException e) {
+			} catch (CoreException | IOException e) {
 				// ignore
 			} finally {
 				try {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BuildState.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BuildState.java
位置:  -646,14 +646,7   public class BuildState {
 			} finally {
 				out.close();
 			}
-		} catch (RuntimeException e) {
-			try {
-				file.delete();
-			} catch (SecurityException se) {
-				// could not delete file: cannot do much more
-			}
-			throw new CoreException(new Status(IStatus.ERROR, ApiPlugin.PLUGIN_ID, Platform.PLUGIN_ERROR, NLS.bind(BuilderMessages.build_cannotSaveState, project.getName()), e));
-		} catch (IOException e) {
+		} catch (RuntimeException | IOException e) {
 			try {
 				file.delete();
 			} catch (SecurityException se) {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/TagValidator.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/TagValidator.java
位置:  -754,9 +754,7   public class TagValidator extends Validator {
 			// unit cannot be null
 			IDocument document = Util.getDocument(fCompilationUnit);
 			linenumber = document.getLineOfOffset(charstart);
-		} catch (BadLocationException e) {
-			e.printStackTrace();
-		} catch (CoreException e) {
+		} catch (BadLocationException | CoreException e) {
 			e.printStackTrace();
 		}
 		try {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/Messages.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/Messages.java
位置:  -68,9 +68,7   public class Messages extends NLS {
 			try {
 				int messageID = Integer.parseInt(key);
 				templates.put(Integer.valueOf(messageID), bundle.getString(key));
-			} catch (NumberFormatException e) {
-				// key ill-formed
-			} catch (MissingResourceException e) {
+			} catch (NumberFormatException | MissingResourceException e) {
 				// available ID
 			}
 		}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/ApiBaseline.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/ApiBaseline.java
位置:  -490,9 +490,7   public class ApiBaseline extends ApiElement implements IApiBaseline, IVMInstallC
 							fVMBinding = iVMInstall;
 							ExecutionEnvironmentDescription ee = new ExecutionEnvironmentDescription(file);
 							initialize(ee);
-						} catch (CoreException e) {
-							error = new Status(IStatus.ERROR, ApiPlugin.PLUGIN_ID, CoreMessages.ApiBaseline_2, e);
-						} catch (IOException e) {
+						} catch (CoreException | IOException e) {
 							error = new Status(IStatus.ERROR, ApiPlugin.PLUGIN_ID, CoreMessages.ApiBaseline_2, e);
 						}
 					}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/BundleComponent.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/BundleComponent.java
位置:  -1066,9 +1066,7   public class BundleComponent extends Component {
 		SAXParser saxParser = null;
 		try {
 			saxParser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			// ignore
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			// ignore
 		}
 
位置:  -1082,9 +1080,7   public class BundleComponent extends Component {
 			SourceDefaultHandler defaultHandler = new SourceDefaultHandler();
 			saxParser.parse(inputSource, defaultHandler);
 			return defaultHandler.isSource();
-		} catch (SAXException e) {
-			// ignore
-		} catch (IOException e) {
+		} catch (SAXException | IOException e) {
 			// ignore
 		}
 		return false;

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/TypeStructureBuilder.java
位置:  -289,9 +289,7   public class TypeStructureBuilder extends ClassVisitor {
 			try {
 				ClassReader classReader = new ClassReader(abstractApiTypeRoot.getContents());
 				classReader.accept(visitor, ClassReader.SKIP_FRAMES);
-			} catch (ArrayIndexOutOfBoundsException e) {
-				ApiPlugin.log(e);
-			} catch (CoreException e) {
+			} catch (ArrayIndexOutOfBoundsException | CoreException e) {
 				// bytes could not be retrieved for abstractApiTypeRoot
 				ApiPlugin.log(e);
 			}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/XmlReferenceDescriptorWriter.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/XmlReferenceDescriptorWriter.java
位置:  -88,9 +88,7   public class XmlReferenceDescriptorWriter {
 		try {
 			parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
 			parser.setErrorHandler(new DefaultHandler());
-		} catch (FactoryConfigurationError fce) {
-			ApiPlugin.log(fce);
-		} catch (ParserConfigurationException pce) {
+		} catch (FactoryConfigurationError | ParserConfigurationException pce) {
 			ApiPlugin.log(pce);
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/XmlSearchReporter.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/XmlSearchReporter.java
位置:  -15,7 +15,6   package org.eclipse.pde.api.tools.internal.search;
 
 import java.io.BufferedWriter;
 import java.io.File;
-import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStreamWriter;
位置:  -72,9 +71,7   public class XmlSearchReporter implements IApiSearchReporter {
 		try {
 			parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();
 			parser.setErrorHandler(new DefaultHandler());
-		} catch (FactoryConfigurationError fce) {
-			ApiPlugin.log(fce);
-		} catch (ParserConfigurationException pce) {
+		} catch (FactoryConfigurationError | ParserConfigurationException pce) {
 			ApiPlugin.log(pce);
 		}
 	}
位置:  -194,11 +191,7   public class XmlSearchReporter implements IApiSearchReporter {
 				file.createNewFile();
 			}
 			data.serializeToFile(file);
-		} catch (FileNotFoundException fnfe) {
-			ApiPlugin.log(fnfe);
-		} catch (IOException ioe) {
-			ApiPlugin.log(ioe);
-		} catch (CoreException ce) {
+		} catch (IOException | CoreException ce) {
 			ApiPlugin.log(ce);
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/TarFile.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/TarFile.java
位置:  -420,9 +420,7   public class TarFile {
 				TarEntry oldEntry = curEntry;
 				try {
 					curEntry = entryEnumerationStream.getNextEntry();
-				} catch (TarException e) {
-					curEntry = null;
-				} catch (IOException e) {
+				} catch (TarException | IOException e) {
 					curEntry = null;
 				}
 				return oldEntry;

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/Util.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/Util.java
位置:  -57,7 +57,6   import java.util.regex.Pattern;
 import java.util.regex.PatternSyntaxException;
 import java.util.stream.Stream;
 import java.util.zip.ZipEntry;
-import java.util.zip.ZipException;
 import java.util.zip.ZipFile;
 import java.util.zip.ZipInputStream;
 
位置:  -464,8 +463,6   public final class Util {
 		try {
 			inputStream = new BufferedInputStream(new FileInputStream(file));
 			bytes = Util.getInputStreamAsByteArray(inputStream, -1);
-		} catch (FileNotFoundException e) {
-			ApiPlugin.log(e);
 		} catch (IOException e) {
 			ApiPlugin.log(e);
 		} finally {
位置:  -483,8 +480,6   public final class Util {
 				outputStream = new BufferedOutputStream(new FileOutputStream(newFile));
 				outputStream.write(bytes);
 				outputStream.flush();
-			} catch (FileNotFoundException e) {
-				ApiPlugin.log(e);
 			} catch (IOException e) {
 				ApiPlugin.log(e);
 			} finally {
位置:  -703,13 +698,7   public final class Util {
 		try {
 			Field field = IDeltaClass.getField(elementType);
 			return field.getInt(null);
-		} catch (SecurityException e) {
-			// ignore
-		} catch (IllegalArgumentException e) {
-			// ignore
-		} catch (NoSuchFieldException e) {
-			// ignore
-		} catch (IllegalAccessException e) {
+		} catch (SecurityException | IllegalArgumentException | NoSuchFieldException | IllegalAccessException e) {
 			// ignore
 		}
 		return -1;
位置:  -1718,8 +1707,6   public final class Util {
 			try {
 				zipFile = new ZipFile(file);
 				return zipFile.getEntry(IApiCoreConstants.API_DESCRIPTION_XML_NAME) != null;
-			} catch (ZipException e) {
-				// ignore
 			} catch (IOException e) {
 				// ignore
 			} finally {
位置:  -1915,13 +1902,7   public final class Util {
 			parser.setErrorHandler(new DefaultHandler());
 			stream = new ByteArrayInputStream(document.getBytes(StandardCharsets.UTF_8));
 			root = parser.parse(stream).getDocumentElement();
-		} catch (ParserConfigurationException e) {
-			abort(
-		} catch (FactoryConfigurationError e) {
-			abort(
-		} catch (SAXException e) {
-			abort(
-		} catch (IOException e) {
+		} catch (ParserConfigurationException | FactoryConfigurationError | SAXException | IOException e) {
 			abort(
 		} finally {
 			try {
位置:  -2017,9 +1998,7   public final class Util {
 			StreamResult outputTarget = new StreamResult(s);
 			transformer.transform(source, outputTarget);
 			return s.toString(IApiCoreConstants.UTF_8);
-		} catch (TransformerException e) {
-			abort(
-		} catch (IOException e) {
+		} catch (TransformerException | IOException e) {
 			abort(
 		}
 		return null;
位置:  -2545,8 +2524,6   public final class Util {
 							}
 						}
 					}
-				} catch (JavaModelException e) {
-					ApiPlugin.log(e);
 				} catch (CoreException e) {
 					ApiPlugin.log(e);
 				}

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationReportConversionTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationReportConversionTask.java
位置:  -307,9 +307,7   public class APIDeprecationReportConversionTask extends Task {
 		SAXParser parser = null;
 		try {
 			parser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			e.printStackTrace();
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			e.printStackTrace();
 		}
 		if (parser == null) {
位置:  -329,9 +327,7   public class APIDeprecationReportConversionTask extends Task {
 			StringBuilder buffer = new StringBuilder();
 			dumpEntries(defaultHandler.getEntries(), buffer);
 			writeOutput(buffer);
-		} catch (SAXException e) {
-			// ignore
-		} catch (IOException e) {
+		} catch (SAXException | IOException e) {
 			// ignore
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationTask.java
位置:  -162,9 +162,7   public class APIDeprecationTask extends CommonUtilsTask {
 						System.out.println(potentialExcludeList);
 					}
 				}
-			} catch (IOException e) {
-				ApiPlugin.log(e);
-			} catch (CoreException e) {
+			} catch (IOException | CoreException e) {
 				ApiPlugin.log(e);
 			} finally {
 				try {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeReportConversionTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeReportConversionTask.java
位置:  -485,9 +485,7   public class APIFreezeReportConversionTask extends Task {
 		SAXParser parser = null;
 		try {
 			parser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			e.printStackTrace();
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			e.printStackTrace();
 		}
 		if (parser == null) {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeTask.java
位置:  -197,9 +197,7   public class APIFreezeTask extends CommonUtilsTask {
 						System.out.println(potentialExcludeList);
 					}
 				}
-			} catch (IOException e) {
-				ApiPlugin.log(e);
-			} catch (CoreException e) {
+			} catch (IOException | CoreException e) {
 				ApiPlugin.log(e);
 			} finally {
 				try {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIToolsAnalysisTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIToolsAnalysisTask.java
位置:  -247,9 +247,7   public class APIToolsAnalysisTask extends CommonUtilsTask {
 				}
 
 				contents = Util.serializeDocument(document);
-			} catch (DOMException e) {
-				throw new BuildException(e);
-			} catch (CoreException e) {
+			} catch (DOMException | CoreException e) {
 				throw new BuildException(e);
 			}
 			if (contents != null) {
位置:  -274,9 +272,7   public class APIToolsAnalysisTask extends CommonUtilsTask {
 					}
 				}
 				contents = Util.serializeDocument(document);
-			} catch (DOMException e) {
-				throw new BuildException(e);
-			} catch (CoreException e) {
+			} catch (DOMException | CoreException e) {
 				throw new BuildException(e);
 			}
 			if (contents != null) {
位置:  -294,9 +290,7   public class APIToolsAnalysisTask extends CommonUtilsTask {
 			root.setAttribute(IApiXmlConstants.ATTR_COUNT_WARNINGS, Integer.toString(counter.warnings));
 			root.setAttribute(IApiXmlConstants.ATTR_COUNT_ERRORS, Integer.toString(counter.errors));
 			contents = Util.serializeDocument(document);
-		} catch (DOMException e) {
-			throw new BuildException(e);
-		} catch (CoreException e) {
+		} catch (DOMException | CoreException e) {
 			throw new BuildException(e);
 		}
 		if (contents != null) {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/AnalysisReportConversionTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/AnalysisReportConversionTask.java
位置:  -448,9 +448,7   public class AnalysisReportConversionTask extends Task {
 		SAXParser parser = null;
 		try {
 			parser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			e.printStackTrace();
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			e.printStackTrace();
 		}
 		if (parser == null) {
位置:  -503,9 +501,7   public class AnalysisReportConversionTask extends Task {
 					dumpIndexFile(reportsRoot, summaries, nonApiBundleSummary);
 				}
 			}
-		} catch (SAXException e) {
-			// ignore
-		} catch (IOException e) {
+		} catch (SAXException | IOException e) {
 			// ignore
 		}
 	}

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/ApiFileGenerationTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/ApiFileGenerationTask.java
位置:  -18,7 +18,6   import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileFilter;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.PrintWriter;
 import java.io.StringReader;
位置:  -381,11 +380,7   public class ApiFileGenerationTask extends Task {
 								manifestMap = ManifestElement.parseBundleManifest(inputStream, null);
 								currentApiPackages = collectApiPackageNames(manifestMap);
 							}
-						} catch (FileNotFoundException e) {
-							ApiPlugin.log(e);
-						} catch (IOException e) {
-							ApiPlugin.log(e);
-						} catch (BundleException e) {
+						} catch (IOException | BundleException e) {
 							ApiPlugin.log(e);
 						} finally {
 							if (inputStream != null) {
位置:  -590,8 +585,6   public class ApiFileGenerationTask extends Task {
 			stream = new BufferedInputStream(new FileInputStream(dotProjectFile));
 			String contents = new String(Util.getInputStreamAsCharArray(stream, -1, StandardCharsets.UTF_8));
 			return containsAPIToolsNature(contents);
-		} catch (FileNotFoundException e) {
-			e.printStackTrace();
 		} catch (IOException e) {
 			e.printStackTrace();
 		} finally {
位置:  -628,9 +621,7   public class ApiFileGenerationTask extends Task {
 		SAXParser saxParser = null;
 		try {
 			saxParser = factory.newSAXParser();
-		} catch (ParserConfigurationException e) {
-			// ignore
-		} catch (SAXException e) {
+		} catch (ParserConfigurationException | SAXException e) {
 			// ignore
 		}
 
位置:  -644,9 +635,7   public class ApiFileGenerationTask extends Task {
 			APIToolsNatureDefaultHandler defaultHandler = new APIToolsNatureDefaultHandler();
 			saxParser.parse(inputSource, defaultHandler);
 			return defaultHandler.isAPIToolsNature();
-		} catch (SAXException e) {
-			// ignore
-		} catch (IOException e) {
+		} catch (SAXException | IOException e) {
 			// ignore
 		}
 		return false;

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/CompareTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/CompareTask.java
位置:  -189,9 +189,7   public class CompareTask extends CommonUtilsTask {
 					System.out.println(potentialExcludeList);
 				}
 			}
-		} catch (IOException e) {
-			ApiPlugin.log(e);
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 			ApiPlugin.log(e);
 		} finally {
 			try {

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/MissingRefProblemsTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/MissingRefProblemsTask.java
位置:  -17,7 +17,6   import java.io.BufferedInputStream;
 import java.io.BufferedWriter;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.OutputStreamWriter;
位置:  -270,11 +269,7   public class MissingRefProblemsTask extends CommonUtilsTask {
 
 			MissingRefMetadata metadata = new MissingRefMetadata(super.currentBaselineLocation, super.reportLocation, this.apiUseScans);
 			metadata.serializeToFile(file);
-		} catch (FileNotFoundException e) {
-			ApiPlugin.log(e);
-		} catch (IOException e) {
-			ApiPlugin.log(e);
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 			ApiPlugin.log(e);
 		}
 	}
位置:  -317,9 +312,7   public class MissingRefProblemsTask extends CommonUtilsTask {
 				report.appendChild(category);
 
 				contents = Util.serializeDocument(document);
-			} catch (DOMException e) {
-				throw new BuildException(e);
-			} catch (CoreException e) {
+			} catch (DOMException | CoreException e) {
 				throw new BuildException(e);
 			}
 			if (contents != null) {

原文件: ds/org.eclipse.pde.ds.annotations/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.annotations/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %Bundle-Name
 Bundle-SymbolicName: org.eclipse.pde.ds.annotations;singleton:=true
-Bundle-Version: 1.1.400.qualifier
+Bundle-Version: 1.1.500.qualifier
 Bundle-Activator: org.eclipse.pde.ds.internal.annotations.Activator
 Bundle-Vendor: %Bundle-Vendor
 Require-Bundle: org.eclipse.ui;bundle-version=

原文件: ds/org.eclipse.pde.ds.annotations/pom.xml 
新文件: ds/org.eclipse.pde.ds.annotations/pom.xml
位置:  -21,6 +21,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.annotations</artifactId>
-  <version>1.1.400-SNAPSHOT</version>
+  <version>1.1.500-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

原文件: ds/org.eclipse.pde.ds.core/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.core/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ds.core;singleton:=true
-Bundle-Version: 1.1.500.qualifier
+Bundle-Version: 1.1.600.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ds.core.Activator
 Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.core.filebuffers;bundle-version=

原文件: ds/org.eclipse.pde.ds.core/pom.xml 
新文件: ds/org.eclipse.pde.ds.core/pom.xml
位置:  -20,6 +20,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.core</artifactId>
-  <version>1.1.500-SNAPSHOT</version>
+  <version>1.1.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

---------------------------156---------------------------
需求名称: Using multi-catch in PDE UI folder
创建时间: 2019-06-25	04:13:42
修改时间: 2019-06-27	08:08:02

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java
位置:  -364,7 +364,6   public class ClasspathHelper {
 					}
 				}
 			}
-		} catch (JavaModelException e) {
 		} catch (CoreException e) {
 		}
 		return result.toArray(new IPath[result.size()]);

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/MinimalState.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/MinimalState.java
位置:  -112,7 +112,6   public class MinimalState {
 			MultiStatus status = new MultiStatus(PDECore.PLUGIN_ID, 0, NLS.bind(UtilMessages.ErrorReadingManifest, bundleLocation.toString()), null);
 			status.add(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage()));
 			throw new CoreException(status);
-		} catch (NumberFormatException e) {
 		} catch (IllegalArgumentException e) {
 		}
 		return null;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/P2Utils.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/P2Utils.java
位置:  -144,9 +144,6   public class P2Utils {
 				return null;
 			}
 			return bundles;
-		} catch (MalformedURLException e) {
-			PDECore.log(e);
-			return null;
 		} catch (IOException e) {
 			PDECore.log(e);
 			return null;
位置:  -176,9 +173,6   public class P2Utils {
 				return null;
 			}
 			return srcBundles;
-		} catch (MalformedURLException e) {
-			PDECore.log(e);
-			return null;
 		} catch (IOException e) {
 			PDECore.log(e);
 			return null;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDEAuxiliaryState.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PDEAuxiliaryState.java
位置:  -268,11 +268,7   public class PDEAuxiliaryState {
 					}
 				}
 				return true;
-			} catch (org.xml.sax.SAXException e) {
-				PDECore.log(e);
-			} catch (IOException e) {
-				PDECore.log(e);
-			} catch (ParserConfigurationException e) {
+			} catch (org.xml.sax.SAXException | IOException | ParserConfigurationException e) {
 				PDECore.log(e);
 			}
 		}
位置:  -356,9 +352,7   public class PDEAuxiliaryState {
 				root.appendChild(element);
 			}
 			XMLPrintHandler.writeFile(doc, new File(destination, CACHE_EXTENSION));
-		} catch (ParserConfigurationException e) {
-		} catch (FactoryConfigurationError e) {
-		} catch (IOException e) {
+		} catch (ParserConfigurationException | FactoryConfigurationError | IOException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginPathFinder.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/PluginPathFinder.java
位置:  -189,7 +189,6   public class PluginPathFinder {
 				} finally {
 					System.setProperty(URL_PROPERTY, EMPTY_STRING);
 				}
-			} catch (MalformedURLException e) {
 			} catch (IOException e) {
 			}
 		}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/SearchablePluginsManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/SearchablePluginsManager.java
位置:  -147,8 +147,7   public class SearchablePluginsManager implements IFileAdapterFactory, IPluginMod
 					}
 				}
 			}
-		} catch (IOException e) {
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 		}
 		return set;
 	}
位置:  -433,9 +432,7   public class SearchablePluginsManager implements IFileAdapterFactory, IPluginMod
 						file.create(inStream, true, new NullProgressMonitor());
 					}
 				}
-			} catch (IOException e) {
-				PDECore.log(e);
-			} catch (CoreException e) {
+			} catch (IOException | CoreException e) {
 				PDECore.log(e);
 			}
 		}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/SourceLocationManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/SourceLocationManager.java
位置:  -104,9 +104,7   public class SourceLocationManager implements ICoreConstants {
 					URI encodedUri = URIUtil.toURI(result.toFile().toURL());
 					URI jarUri = URIUtil.toJarURI(encodedUri, filePath);
 					return new URL(URIUtil.toUnencodedString(jarUri));
-				} catch (MalformedURLException e) {
-					PDECore.log(e);
-				} catch (URISyntaxException e) {
+				} catch (MalformedURLException | URISyntaxException e) {
 					PDECore.log(e);
 				}
 			}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/TargetWeaver.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/TargetWeaver.java
位置:  -17,7 +17,6   package org.eclipse.pde.internal.core;
 import java.io.BufferedInputStream;
 import java.io.File;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.net.MalformedURLException;
 import java.net.URL;
位置:  -81,8 +80,6   public class TargetWeaver {
 							if (file.exists()) {
 								try (BufferedInputStream stream = new BufferedInputStream(new FileInputStream(file));) {
 									fgDevProperties.load(stream);
-								} catch (FileNotFoundException e) {
-									PDECore.log(e);
 								} catch (IOException e) {
 									PDECore.log(e);
 								}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/DefaultSAXParser.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/builders/DefaultSAXParser.java
位置:  -31,10 +31,7   public class DefaultSAXParser {
 			try (InputStream stream = new BufferedInputStream(file.getContents())) {
 			parser.parse(stream, reporter);
 			}
-		} catch (CoreException e) {
-		} catch (SAXException e) {
-		} catch (IOException e) {
-		} catch (ParserConfigurationException e) {
+		} catch (CoreException | SAXException | IOException | ParserConfigurationException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/BundleFragment.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/BundleFragment.java
位置:  -40,7 +40,6   public class BundleFragment extends BundlePluginBase implements IBundleFragment
 		try {
 			VersionRange versionRange = new VersionRange(version);
 			return versionRange.getMinimum() != null ? versionRange.getMinimum().toString() : version;
-		} catch (NumberFormatException e) {
 		} catch (IllegalArgumentException e) {
 		}
 		return version;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/BundleModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/BundleModel.java
位置:  -71,9 +71,7   public abstract class BundleModel extends AbstractModel implements IBundleModel
 				updateTimeStamp();
 			}
 
-		} catch (BundleException e) {
-			PDECore.log(e);
-		} catch (IOException e) {
+		} catch (BundleException | IOException e) {
 			PDECore.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/WorkspaceBundleModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/bundle/WorkspaceBundleModel.java
位置:  -170,9 +170,7   public class WorkspaceBundleModel extends BundleModel implements IEditableModel
 			}
 			stream.close();
 			setLoaded(true);
-		} catch (CoreException e) {
-			PDECore.logException(e);
-		} catch (IOException e) {
+		} catch (CoreException | IOException e) {
 			PDECore.logException(e);
 		} finally {
 			try {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/exports/FeatureExportOperation.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/exports/FeatureExportOperation.java
位置:  -171,9 +171,7   public class FeatureExportOperation extends Job {
 				}
 			}
 			return status;
-		} catch (InvocationTargetException e) {
-			return new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.FeatureBasedExportOperation_ProblemDuringExport, e.getCause() != null ? e.getCause() : e);
-		} catch (CoreException e) {
+		} catch (InvocationTargetException | CoreException e) {
 			return new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.FeatureBasedExportOperation_ProblemDuringExport, e.getCause() != null ? e.getCause() : e);
 		} catch (IOException e) {
 			return new Status(IStatus.ERROR, PDECore.PLUGIN_ID, PDECoreMessages.FeatureBasedExportOperation_ProblemDuringExport, e);
位置:  -905,10 +903,7   public class FeatureExportOperation extends Job {
 			runner.setBuildFileLocation(scriptFile.getAbsolutePath());
 			runner.setExecutionTargets(targets);
 			runner.run(subMonitor.split(1));
-		} catch (FactoryConfigurationError e) {
-		} catch (ParserConfigurationException e) {
-		} catch (CoreException e) {
-		} catch (IOException e) {
+		} catch (FactoryConfigurationError | ParserConfigurationException | CoreException | IOException e) {
 		} finally {
 			if (scriptFile != null &amp;&amp; scriptFile.exists()) {
 				scriptFile.delete();
位置:  -1007,9 +1002,7   public class FeatureExportOperation extends Job {
 
 			save(new File(file, ICoreConstants.BUILD_FILENAME_DESCRIPTOR), prop, 
 			XMLPrintHandler.writeFile(doc, new File(file, ICoreConstants.FEATURE_FILENAME_DESCRIPTOR));
-		} catch (DOMException e1) {
-		} catch (FactoryConfigurationError e1) {
-		} catch (ParserConfigurationException e1) {
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e1) {
 		}
 	}
 
位置:  -1177,9 +1170,7   public class FeatureExportOperation extends Job {
 				}
 			}
 			XMLPrintHandler.writeFile(doc, new File(file, ICoreConstants.FEATURE_FILENAME_DESCRIPTOR));
-		} catch (DOMException e1) {
-		} catch (FactoryConfigurationError e1) {
-		} catch (ParserConfigurationException e1) {
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e1) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/feature/WorkspaceFeatureModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/feature/WorkspaceFeatureModel.java
位置:  -135,9 +135,7   public class WorkspaceFeatureModel extends AbstractFeatureModel implements IEdit
 					// if we have an empty file, then mark as loaded so users changes will be saved
 					setLoaded(true);
 				}
-			} catch (CoreException e) {
-				PDECore.logException(e);
-			} catch (IOException e) {
+			} catch (CoreException | IOException e) {
 				PDECore.logException(e);
 			}
 		} else {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/AbstractExtensions.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/AbstractExtensions.java
位置:  -199,10 +199,7   public abstract class AbstractExtensions extends PluginObject implements IExtens
 						PluginHandler handler = new PluginHandler(true);
 						SAXParserFactory.newInstance().newSAXParser().parse(stream, handler);
 						return handler.getSchemaVersion();
-					} catch (CoreException e) {
-					} catch (SAXException e) {
-					} catch (IOException e) {
-					} catch (ParserConfigurationException e) {
+					} catch (CoreException | SAXException | IOException | ParserConfigurationException e) {
 					}
 				}
 			}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/AbstractExtensionsModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/AbstractExtensionsModel.java
位置:  -93,10 +93,7   public abstract class AbstractExtensionsModel extends AbstractNLModel implements
 			if (!outOfSync) {
 				updateTimeStamp();
 			}
-		} catch (ParserConfigurationException e) {
-		} catch (SAXException e) {
-		} catch (FactoryConfigurationError e) {
-		} catch (IOException e) {
+		} catch (ParserConfigurationException | SAXException | FactoryConfigurationError | IOException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/product/WorkspaceProductModel.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/product/WorkspaceProductModel.java
位置:  -85,9 +85,7   public class WorkspaceProductModel extends ProductModel implements IWorkspaceMod
 			} else {
 				fFile.create(stream, false, null);
 			}
-		} catch (CoreException e) {
-			PDECore.logException(e);
-		} catch (IOException e) {
+		} catch (CoreException | IOException e) {
 			PDECore.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectDescription.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectDescription.java
位置:  -207,9 +207,7   public class BundleProjectDescription implements IBundleProjectDescription {
 			try {
 				headers = ManifestElement.parseBundleManifest(manifest.getContents(), null);
 				fReadHeaders = headers;
-			} catch (IOException e) {
-				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage(), e));
-			} catch (BundleException e) {
+			} catch (IOException | BundleException e) {
 				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage(), e));
 			}
 			setActivator(getHeaderValue(headers, Constants.BUNDLE_ACTIVATOR));

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectService.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectService.java
位置:  -285,9 +285,7   public final class BundleProjectService implements IBundleProjectService {
 				return null;
 			}
 			return ManifestElement.parseBundleManifest(manifestStream, new Hashtable<String, String>(10));
-		} catch (BundleException e) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, TargetBundle.STATUS_INVALID_MANIFEST, NLS.bind(Messages.TargetBundle_ErrorReadingManifest, bundleLocation.getAbsolutePath()), e));
-		} catch (IOException e) {
+		} catch (BundleException | IOException e) {
 			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, TargetBundle.STATUS_INVALID_MANIFEST, NLS.bind(Messages.TargetBundle_ErrorReadingManifest, bundleLocation.getAbsolutePath()), e));
 		} finally {
 			closeZipFileAndStream(manifestStream, jarFile);

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/AbstractBundleContainer.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/AbstractBundleContainer.java
位置:  -253,11 +253,7   public abstract class AbstractBundleContainer extends PlatformObject implements
 					manipulator.load();
 					fVMArgs = manipulator.getLauncherData().getJvmArgs();
 				}
-			} catch (BundleException e) {
-				PDECore.log(e);
-			} catch (CoreException e) {
-				PDECore.log(e);
-			} catch (IOException e) {
+			} catch (BundleException | CoreException | IOException e) {
 				PDECore.log(e);
 			}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ExternalFileTargetHandle.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/ExternalFileTargetHandle.java
位置:  -19,7 +19,6   import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
-import java.net.MalformedURLException;
 import java.net.URI;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IStatus;
位置:  -76,7 +75,6   public class ExternalFileTargetHandle extends AbstractTargetHandle {
 	protected InputStream getInputStream() throws CoreException {
 		try {
 			return fURI.toURL().openStream();
-		} catch (MalformedURLException e) {
 		} catch (IOException e) {
 		}
 		return null;

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java
位置:  -19,7 +19,6   import java.util.Collections;
 import java.util.List;
 import javax.xml.transform.OutputKeys;
 import javax.xml.transform.Transformer;
-import javax.xml.transform.TransformerConfigurationException;
 import javax.xml.transform.TransformerException;
 import javax.xml.transform.TransformerFactory;
 import javax.xml.transform.TransformerFactoryConfigurationError;
位置:  -251,11 +250,7   public class TargetPersistence38Helper {
 				transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, 
 				transformer.transform(new DOMSource(location), result);
 				container = locFactory.getTargetLocation(type, result.getWriter().toString());
-			} catch (TransformerConfigurationException e) {
-				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, Messages.TargetDefinitionPersistenceHelper_0, e));
-			} catch (TransformerException e) {
-				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, Messages.TargetDefinitionPersistenceHelper_0, e));
-			} catch (TransformerFactoryConfigurationError e) {
+			} catch (TransformerException | TransformerFactoryConfigurationError e) {
 				throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, Messages.TargetDefinitionPersistenceHelper_0, e));
 			}
 		}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPlatformService.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPlatformService.java
位置:  -401,9 +401,7   public class TargetPlatformService implements ITargetPlatformService {
 					preferenceManager.flush();
 					return true;
 				}
-			} catch (CoreException e) {
-				PDECore.log(e);
-			} catch (BackingStoreException e) {
+			} catch (CoreException | BackingStoreException e) {
 				PDECore.log(e);
 			}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/ManifestUtils.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/ManifestUtils.java
位置:  -138,9 +138,7   public class ManifestUtils {
 			// The necessary bundle information has not been found in manifest.mf or plugin.xml
 			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, STATUS_CODE_NOT_A_BUNDLE_MANIFEST, NLS.bind(UtilMessages.ErrorReadingManifest, bundleLocation.getAbsolutePath()), null));
 
-		} catch (BundleException e) {
-			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, 0, NLS.bind(UtilMessages.ErrorReadingManifest, bundleLocation.getAbsolutePath()), e));
-		} catch (IOException e) {
+		} catch (BundleException | IOException e) {
 			throw new CoreException(new Status(IStatus.ERROR, PDECore.PLUGIN_ID, 0, NLS.bind(UtilMessages.ErrorReadingManifest, bundleLocation.getAbsolutePath()), e));
 		}
 	}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/SchemaUtil.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/SchemaUtil.java
位置:  -66,20 +66,12   public class SchemaUtil {
 				SAXParserWrapper parser = new SAXParserWrapper();
 				parser.parse(input, handler);
 			}
-		} catch (MalformedURLException e) {
+		} catch (MalformedURLException | SAXException e) {
 			// Ignore
 			// Caused when URL is null
 			// This occurs when the extension point schema is first
 			// created.
-		} catch (IOException e) {
-			PDECore.logException(e);
-		} catch (SAXException e) {
-			// Ignore parse errors
-			// Handler may send a SAX Exception to prematurely abort parsing
-			// in order to save execution time.  This is not an error
-		} catch (ParserConfigurationException e) {
-			PDECore.logException(e);
-		} catch (FactoryConfigurationError e) {
+		} catch (IOException | ParserConfigurationException | FactoryConfigurationError e) {
 			PDECore.logException(e);
 		} finally {
 			try {

原文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/DocumentObject.java 
新文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/DocumentObject.java
位置:  -544,8 +544,7   public abstract class DocumentObject extends DocumentElementNode implements IDoc
 			}
 			// Reconnect
 			clone.reconnect(this, fModel);
-		} catch (IOException e) {
-		} catch (ClassNotFoundException e) {
+		} catch (IOException | ClassNotFoundException e) {
 		}
 
 		return clone;

原文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/XMLEditingModel.java 
新文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/XMLEditingModel.java
位置:  -53,11 +53,7   public abstract class XMLEditingModel extends AbstractEditingModel {
 		} catch (SAXException e) {
 			fLoaded = false;
 			status = new Status(IStatus.ERROR, PDECore.PLUGIN_ID, e.getMessage(), e);
-		} catch (IOException e) {
-			fLoaded = false;
-		} catch (ParserConfigurationException e) {
-			fLoaded = false;
-		} catch (FactoryConfigurationError e) {
+		} catch (IOException | ParserConfigurationException | FactoryConfigurationError e) {
 			fLoaded = false;
 		}
 	}
位置:  -74,10 +70,7   public abstract class XMLEditingModel extends AbstractEditingModel {
 		try {
 			SAXParserWrapper parser = new SAXParserWrapper();
 			parser.parse(getInputStream(document), createDocumentHandler(this, false));
-		} catch (SAXException e) {
-		} catch (IOException e) {
-		} catch (ParserConfigurationException e) {
-		} catch (FactoryConfigurationError e) {
+		} catch (SAXException | IOException | ParserConfigurationException | FactoryConfigurationError e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/bundle/BundleModel.java 
新文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/bundle/BundleModel.java
位置:  -55,9 +55,7   public class BundleModel extends AbstractEditingModel implements IBundleModel {
 		try {
 			fLoaded = true;
 			((Bundle) getBundle()).load(ManifestElement.parseBundleManifest(source, null));
-		} catch (BundleException e) {
-			fLoaded = false;
-		} catch (IOException e) {
+		} catch (BundleException | IOException e) {
 			fLoaded = false;
 		}
 	}

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/LauncherUtils.java
位置:  -15,7 +15,6  
 package org.eclipse.pde.internal.launching.launcher;
 
 import java.io.*;
-import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.*;
 import org.eclipse.core.resources.*;
位置:  -93,13 +92,7   public class LauncherUtils {
 					isLocked = targetLocation.isLocked();
 				}
 			}
-		} catch (InvalidSyntaxException e) {
-			PDECore.log(e);
-			isLocked = false;
-		} catch (MalformedURLException e) {
-			PDECore.log(e);
-			isLocked = false;
-		} catch (IOException e) {
+		} catch (InvalidSyntaxException | IOException e) {
 			PDECore.log(e);
 			isLocked = false;
 		}

原文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.runtime/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %name
 Bundle-SymbolicName: org.eclipse.pde.runtime; singleton:=true
-Bundle-Version: 3.6.500.qualifier
+Bundle-Version: 3.6.600.qualifier
 Bundle-Activator: org.eclipse.pde.internal.runtime.PDERuntimePlugin
 Bundle-Vendor: %provider-name
 Bundle-Localization: plugin

原文件: ui/org.eclipse.pde.runtime/pom.xml 
新文件: ui/org.eclipse.pde.runtime/pom.xml
位置:  -20,7 +20,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.runtime</artifactId>
-  <version>3.6.500-SNAPSHOT</version>
+  <version>3.6.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
   <properties>

原文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/spy/SpyIDEUtil.java 
新文件: ui/org.eclipse.pde.runtime/src/org/eclipse/pde/internal/runtime/spy/SpyIDEUtil.java
位置:  -66,9 +66,7   public class SpyIDEUtil {
 		try {
 			IType type = project.findType(clazz);
 			JavaUI.openInEditor(type, false, true);
-		} catch (JavaModelException e) {
-			PDERuntimePlugin.log(e);
-		} catch (PartInitException e) {
+		} catch (JavaModelException | PartInitException e) {
 			PDERuntimePlugin.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/imports/ImportFeatureProjectsTestCase.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/imports/ImportFeatureProjectsTestCase.java
位置:  -58,9 +58,7   public class ImportFeatureProjectsTestCase extends NewProjectTestCase {
 			PDEPlugin.getWorkspace().run(op, new NullProgressMonitor());
 			if (models.length > 0)
 				lookingAtProject(models[0]);
-		} catch (OperationCanceledException e) {
-			fail(
-		} catch (CoreException e) {
+		} catch (OperationCanceledException | CoreException e) {
 			fail(
 		}
 	}

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/model/xml/XMLModelTestCase.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/model/xml/XMLModelTestCase.java
位置:  -80,9 +80,7   public abstract class XMLModelTestCase extends TestCase {
 		multi.addChildren(ops);
 		try {
 			multi.apply(fDocument);
-		} catch (MalformedTreeException e) {
-			fail(e.getMessage());
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			fail(e.getMessage());
 		}
 		load();

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/util/xml/ParserWrapperTestCase.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/util/xml/ParserWrapperTestCase.java
位置:  -119,16 +119,7   public class ParserWrapperTestCase extends TestCase {
 					SAXParserWrapper parser = new SAXParserWrapper();
 					parser.parse(fParserXMLFile, handler);
 					parser.dispose();
-				} catch (ParserConfigurationException e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (SAXException e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (FactoryConfigurationError e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (IOException e) {
+				} catch (ParserConfigurationException | SAXException | FactoryConfigurationError | IOException e) {
 					e.printStackTrace();
 					fError = true;
 				}
位置:  -147,16 +138,7   public class ParserWrapperTestCase extends TestCase {
 
 				try (DOMParserWrapper parser = new DOMParserWrapper()) {
 					parser.parse(fParserXMLFile);
-				} catch (ParserConfigurationException e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (SAXException e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (FactoryConfigurationError e) {
-					e.printStackTrace();
-					fError = true;
-				} catch (IOException e) {
+				} catch (ParserConfigurationException | SAXException | FactoryConfigurationError | IOException e) {
 					e.printStackTrace();
 					fError = true;
 				}

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/wizards/ConvertProjectToPluginTestCase.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/wizards/ConvertProjectToPluginTestCase.java
位置:  -133,9 +133,7   public class ConvertProjectToPluginTestCase extends PDETestCase {
 		IProgressService progressService = PlatformUI.getWorkbench().getProgressService();
 		try {
 			progressService.runInUI(progressService, convertOperation, null);
-		} catch (InvocationTargetException e) {
-			fail(
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			fail(
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddSourceBuildEntryResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/AddSourceBuildEntryResolution.java
位置:  -81,7 +81,6   public class AddSourceBuildEntryResolution extends BuildEntryMarkerResolution {
 				IClasspathEntry[] cpes = jp.getRawClasspath();
 				return PDEBuilderHelper.getUnlistedClasspaths(sourceEntries, project, cpes);
 			}
-		} catch (JavaModelException e) {
 		} catch (CoreException e) {
 		}
 		return null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ExternalizeResolution.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/ExternalizeResolution.java
位置:  -65,11 +65,7   public class ExternalizeResolution extends AbstractXMLMarkerResolution {
 				IDocument document = buffer.getDocument();
 				ExternalizeStringsOperation.getPropertiesInsertEdit(document, element).apply(document);
 				buffer.commit(null, true);
-			} catch (CoreException e) {
-				PDEPlugin.log(e);
-			} catch (MalformedTreeException e) {
-				PDEPlugin.log(e);
-			} catch (BadLocationException e) {
+			} catch (CoreException | MalformedTreeException | BadLocationException e) {
 				PDEPlugin.log(e);
 			} finally {
 				try {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/jav
原文件: QuickFixProcessor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/QuickFixProcessor.java
位置:  -221,8 +221,7   public class QuickFixProcessor implements IQuickFixProcessor {
 						collector);
 				try {
 					findOperation.run(new NullProgressMonitor());
-				} catch (InvocationTargetException e) {
-				} catch (InterruptedException e) {
+				} catch (InvocationTargetException | InterruptedException e) {
 				}
 			}
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/jav
原文件: SearchRepositoriesForIUProposal.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/SearchRepositoriesForIUProposal.java
位置:  -50,13 +50,7   public class SearchRepositoriesForIUProposal implements IJavaCompletionProposal
 			Parameterization parameterization = new Parameterization(parameter, fPackageName);
 			ParameterizedCommand pc = new ParameterizedCommand(command, new Parameterization[] {parameterization});
 			handlerService.executeCommand(pc, null);
-		} catch (ExecutionException e) {
-			PDEPlugin.log(e);
-		} catch (NotDefinedException e) {
-			PDEPlugin.log(e);
-		} catch (NotEnabledException e) {
-			PDEPlugin.log(e);
-		} catch (NotHandledException e) {
+		} catch (ExecutionException | NotDefinedException | NotEnabledException | NotHandledException e) {
 			PDEPlugin.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/jav
原文件: UnresolvedImportFixProcessor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/UnresolvedImportFixProcessor.java
位置:  -91,8 +91,7   public class UnresolvedImportFixProcessor extends ClasspathFixProcessor {
 		IRunnableWithProgress findOperation = new FindClassResolutionsOperation(project.getProject(), name, collector);
 		try {
 			findOperation.run(new NullProgressMonitor());
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		}
 		return collector.getProposals();
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/EditorUtilities.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/EditorUtilities.java
位置:  -72,8 +72,6   public class EditorUtilities {
 			message = PDEUIMessages.EditorUtilities_noImageData;
 		} catch (SWTException e) {
 			message = PDEUIMessages.EditorUtilities_pathNotValidImage;
-		} catch (MalformedURLException e) {
-			message = PDEUIMessages.EditorUtilities_invalidFilePath;
 		} catch (IOException e) {
 			message = PDEUIMessages.EditorUtilities_invalidFilePath;
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/FormatAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/FormatAction.java
位置:  -42,9 +42,7   public class FormatAction extends Action {
 
 		try {
 			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(new FormatOperation(new Object[] {fTextEditor.getEditorInput()}));
-		} catch (InvocationTargetException e) {
-			PDEPlugin.log(e);
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			PDEPlugin.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/OpenSchemaAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/OpenSchemaAction.java
位置:  -227,10 +227,7   public class OpenSchemaAction extends Action {
 			if (!SchemaEditor.openSchema(jarFile, schemaEntryName)) {
 				displayErrorDialog();
 			}
-		} catch (URISyntaxException e) {
-			PDEPlugin.log(e);
-			displayErrorDialog();
-		} catch (MalformedURLException e) {
+		} catch (URISyntaxException | MalformedURLException e) {
 			PDEPlugin.log(e);
 			displayErrorDialog();
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/build/RuntimeInfoSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/build/RuntimeInfoSection.java
位置:  -287,8 +287,6   public class RuntimeInfoSection extends PDESection implements IBuildPropertiesCo
 					if (fragmentRoot.getKind() == IPackageFragmentRoot.K_SOURCE)
 						folders.add(fragmentRoot);
 			}
-		} catch (JavaModelException e) {
-			PDEPlugin.logException(e);
 		} catch (CoreException e) {
 			PDEPlugin.logException(e);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/context/InputContext.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/context/InputContext.java
位置:  -237,10 +237,7   public abstract class InputContext {
 					((IEditingModel) fModel).setStale(true);
 				edit.apply(doc);
 				fEditOperations.clear();
-			} catch (MalformedTreeException e) {
-				PDEPlugin.logException(e);
-				flushed = false;
-			} catch (BadLocationException e) {
+			} catch (MalformedTreeException | BadLocationException e) {
 				PDEPlugin.logException(e);
 				flushed = false;
 			}
位置:  -507,10 +504,7   public abstract class InputContext {
 			monitor.setCanceled(false);
 			// Store the new editor input in this context
 			updateInput(newInput);
-		} catch (InterruptedException e) {
-			monitor.setCanceled(true);
-			throw e;
-		} catch (InvocationTargetException e) {
+		} catch (InterruptedException | InvocationTargetException e) {
 			monitor.setCanceled(true);
 			throw e;
 		} finally {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureEditor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureEditor.java
位置:  -96,8 +96,6   public class FeatureEditor extends MultiSourceEditor implements IShowEditorInput
 					input = new FileStoreEditorInput(store);
 				}
 				return IDE.openEditor(PDEPlugin.getActivePage(), input, IPDEUIConstants.FEATURE_EDITOR_ID, true);
-			} catch (PartInitException e) {
-				PDEPlugin.logException(e);
 			} catch (CoreException e) {
 				PDEPlugin.logException(e);
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureSpecSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/FeatureSpecSection.java
位置:  -119,9 +119,7   public class FeatureSpecSection extends PDESection {
 					}
 				}
 			}
-		} catch (CoreException e) {
-			PDEPlugin.logException(e);
-		} catch (MalformedURLException e) {
+		} catch (CoreException | MalformedURLException e) {
 			PDEPlugin.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/SynchronizeVersionsWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/SynchronizeVersionsWizardPage.java
位置:  -117,9 +117,7   public class SynchronizeVersionsWizardPage extends WizardPage {
 			public void execute(IProgressMonitor monitor) {
 				try {
 					runOperation(mode, monitor);
-				} catch (CoreException e) {
-					PDEPlugin.logException(e);
-				} catch (BadLocationException e) {
+				} catch (CoreException | BadLocationException e) {
 					PDEPlugin.logException(e);
 				} finally {
 					monitor.done();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/URLDetailsSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/URLDetailsSection.java
位置:  -64,9 +64,7   public class URLDetailsSection extends PDESection implements IPartSelectionListe
 			} else {
 				fInput.setURL(null);
 			}
-		} catch (CoreException e) {
-			PDEPlugin.logException(e);
-		} catch (MalformedURLException e) {
+		} catch (CoreException | MalformedURLException e) {
 			PDEPlugin.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/URLSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/feature/URLSection.java
位置:  -154,9 +154,7   public class URLSection extends TableSection {
 			url.addDiscovery(element);
 			fUrlViewer.setSelection(new StructuredSelection(element));
 
-		} catch (CoreException e) {
-			PDEPlugin.logException(e);
-		} catch (MalformedURLException e) {
+		} catch (CoreException | MalformedURLException e) {
 			PDEPlugin.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/CreateManifestOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/CreateManifestOperation.java
位置:  -37,9 +37,7   public class CreateManifestOperation implements IRunnableWithProgress {
 	public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
 		try {
 			trimOldManifest();
-		} catch (BadLocationException e) {
-			throw new InvocationTargetException(e);
-		} catch (CoreException e) {
+		} catch (BadLocationException | CoreException e) {
 			throw new InvocationTargetException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/JavaAttributeWizard.java
位置:  -95,11 +95,7   public class JavaAttributeWizard extends Wizard {
 					IDE.openEditor(page, (IFile) resource, true);
 				}
 			}
-		} catch (InvocationTargetException e) {
-			PDEPlugin.logException(e);
-		} catch (InterruptedException e) {
-			PDEPlugin.logException(e);
-		} catch (CoreException e) {
+		} catch (InvocationTargetException | InterruptedException | CoreException e) {
 			PDEPlugin.logException(e);
 		}
 		return true;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/OverviewPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/OverviewPage.java
位置:  -296,13 +296,7   public class OverviewPage extends LaunchShortcutOverviewPage {
 			IHandlerService handlerService = PlatformUI.getWorkbench().getService(IHandlerService.class);
 			try {
 				handlerService.executeCommand(P2_INSTALL_COMMAND_HANDLER, null);
-			} catch (ExecutionException ex) {
-				handleCommandException();
-			} catch (NotDefinedException ex) {
-				handleCommandException();
-			} catch (NotEnabledException ex) {
-				handleCommandException();
-			} catch (NotHandledException ex) {
+			} catch (ExecutionException | NotDefinedException | NotEnabledException | NotHandledException ex) {
 				handleCommandException();
 			}
 		}
位置:  -340,8 +334,7   public class OverviewPage extends LaunchShortcutOverviewPage {
 			manifestEditor.addExtensionTabs();
 			manifestEditor.setShowExtensions(true);
 			manifestEditor.setActivePage(activePageId);
-		} catch (PartInitException e) {
-		} catch (BackingStoreException e) {
+		} catch (PartInitException | BackingStoreException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/OverviewPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/OverviewPage.java
位置:  -113,9 +113,7   public class OverviewPage extends LaunchShortcutOverviewPage {
 
 		try {
 			browser.openURL(new URL(url));
-		} catch (PartInitException e) {
-			PDEPlugin.log(e);
-		} catch (MalformedURLException e) {
+		} catch (PartInitException | MalformedURLException e) {
 			PDEPlugin.log(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schem
原文件: SchemaEditor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaEditor.java
位置:  -15,7 +15,6   package org.eclipse.pde.internal.ui.editor.schema;
 
 import java.io.File;
 import java.io.IOException;
-import java.util.zip.ZipException;
 import java.util.zip.ZipFile;
 import org.eclipse.core.filesystem.EFS;
 import org.eclipse.core.filesystem.IFileStore;
位置:  -228,8 +227,6   public class SchemaEditor extends MultiSourceEditor {
 			IStorage storage = new JarEntryFile(zipFile, schemaJarFileEntry);
 			IEditorInput input = new JarEntryEditorInput(storage);
 			return openEditor(input);
-		} catch (ZipException e) {
-			PDEPlugin.log(e);
 		} catch (IOException e) {
 			PDEPlugin.log(e);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schem
原文件: SchemaJavaAttributeDetails.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaJavaAttributeDetails.java
位置:  -161,7 +161,6   public class SchemaJavaAttributeDetails extends SchemaAttributeDetails {
 					}
 				}
 			}
-		} catch (PartInitException e1) {
 		} catch (CoreException e1) {
 		}
 		return null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/site/SynchronizePropertiesWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/site/SynchronizePropertiesWizardPage.java
位置:  -102,9 +102,7   public class SynchronizePropertiesWizardPage extends WizardPage {
 			public void execute(IProgressMonitor monitor) {
 				try {
 					runOperation(mode, monitor);
-				} catch (CoreException e) {
-					PDEPlugin.logException(e);
-				} catch (InvocationTargetException e) {
+				} catch (CoreException | InvocationTargetException e) {
 					PDEPlugin.logException(e);
 				} finally {
 					monitor.done();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java
位置:  -163,9 +163,7   public class EnvironmentSection extends SectionPart {
 							initializeAllLocales();
 							LOCALES_INITIALIZED = true;
 						});
-					} catch (InvocationTargetException e) {
-						PDEPlugin.log(e);
-					} catch (InterruptedException e) {
+					} catch (InvocationTargetException | InterruptedException e) {
 						PDEPlugin.log(e);
 					}
 				}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/JavaHyperlink.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/JavaHyperlink.java
位置:  -20,7 +20,6   import org.eclipse.jdt.ui.JavaUI;
 import org.eclipse.jface.text.IRegion;
 import org.eclipse.pde.internal.ui.PDEPlugin;
 import org.eclipse.swt.widgets.Display;
-import org.eclipse.ui.PartInitException;
 
 public class JavaHyperlink extends AbstractHyperlink {
 
位置:  -42,8 +41,6   public class JavaHyperlink extends AbstractHyperlink {
 				if (result != null)
 					JavaUI.openInEditor(result);
 			}
-		} catch (PartInitException e) {
-			PDEPlugin.logException(e);
 		} catch (JavaModelException e) {
 			Display.getCurrent().beep(); // just for Dejan
 		} catch (CoreException e) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/LauncherUtilsStatusHandler.java
位置:  -123,8 +123,7   public class LauncherUtilsStatusHandler implements IStatusHandler {
 				Iterator<?> it = projects.iterator();
 				while (it.hasNext())
 					table.put(((IProject) it.next()).getName(), ts);
-			} catch (OperationCanceledException e1) {
-			} catch (CoreException e2) {
+			} catch (OperationCanceledException | CoreException e2) {
 			}
 		});
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/ExternalizeStringsProcessor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/ExternalizeStringsProcessor.java
位置:  -43,8 +43,7   public class ExternalizeStringsProcessor extends RefactoringProcessor {
 		ExternalizeStringsOperation op = new ExternalizeStringsOperation(fChangeFiles, change);
 		try {
 			op.run(pm);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		}
 		return change;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/GetNonExternalizedStringsAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/GetNonExternalizedStringsAction.java
位置:  -61,8 +61,7   public class GetNonExternalizedStringsAction extends AbstractHandler {
 		GetNonExternalizedStringsOperation runnable = new GetNonExternalizedStringsOperation(selection, fExternalizeSelectedPluginsOnly);
 		try {
 			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(runnable);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		} finally {
 			if (runnable.wasCanceled())
 				return;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/InternationalizeAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/nls/InternationalizeAction.java
位置:  -41,8 +41,7   public class InternationalizeAction extends AbstractHandler {
 		InternationalizeOperation runnable = new InternationalizeOperation(selection);
 		try {
 			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(runnable);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		} finally {
 			if (runnable.wasCanceled()) {
 				return null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/ProjectSelectionDialog.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/preferences/ProjectSelectionDialog.java
位置:  -53,8 +53,6   public class ProjectSelectionDialog extends SelectionStatusDialog {
 							set.add(project);
 						}
 					}
-				} catch (JavaModelException jme) {
-					//ignore
 				} catch (CoreException ce) {
 					//ignore
 				}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/properties/SelfHostingPropertyPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/properties/SelfHostingPropertyPage.java
位置:  -72,7 +72,6   public class SelfHostingPropertyPage extends PropertyPage {
 					}
 				}
 			}
-		} catch (JavaModelException e) {
 		} catch (CoreException e) {
 		}
 		return list.toArray(new String[list.size()]);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/BundleManifestChange.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/BundleManifestChange.java
位置:  -48,9 +48,7   public class BundleManifestChange {
 			bundle.getModel().addModelChangedListener(listener);
 			addPackage(bundle, change);
 			return createChange(listener, file);
-		} catch (CoreException e) {
-		} catch (MalformedTreeException e) {
-		} catch (BadLocationException e) {
+		} catch (CoreException | MalformedTreeException | BadLocationException e) {
 		} finally {
 			FileBuffers.getTextFileBufferManager().disconnect(file.getFullPath(), LocationKind.NORMALIZE, monitor);
 		}
位置:  -88,9 +86,7   public class BundleManifestChange {
 					change.setMovedElements(list.toArray(new PDEManifestElement[list.size()]));
 				return change;
 			}
-		} catch (CoreException e) {
-		} catch (MalformedTreeException e) {
-		} catch (BadLocationException e) {
+		} catch (CoreException | MalformedTreeException | BadLocationException e) {
 		} finally {
 			FileBuffers.getTextFileBufferManager().disconnect(file.getFullPath(), LocationKind.NORMALIZE, monitor);
 		}
位置:  -134,9 +130,7   public class BundleManifestChange {
 				}
 			}
 			return createChange(listener, file);
-		} catch (CoreException e) {
-		} catch (MalformedTreeException e) {
-		} catch (BadLocationException e) {
+		} catch (CoreException | MalformedTreeException | BadLocationException e) {
 		} finally {
 			FileBuffers.getTextFileBufferManager().disconnect(file.getFullPath(), LocationKind.NORMALIZE, monitor);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/ContainerRenameParticipant.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/ContainerRenameParticipant.java
位置:  -114,9 +114,7   public class ContainerRenameParticipant extends PDERenameParticipant {
 						return result;
 					}
 				}
-			} catch (CoreException e) {
-			} catch (MalformedTreeException e) {
-			} catch (BadLocationException e) {
+			} catch (CoreException | MalformedTreeException | BadLocationException e) {
 			} finally {
 				FileBuffers.getTextFileBufferManager().disconnect(manifest.getFullPath(), LocationKind.NORMALIZE,
 						subMonitor.split(1));

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/CreateHeaderChangeOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/refactoring/CreateHeaderChangeOperation.java
位置:  -97,9 +97,7   public class CreateHeaderChangeOperation implements IWorkspaceRunnable {
 					return getTextChange(listener, manifest);
 				}
 			}
-		} catch (MalformedTreeException e) {
-		} catch (CoreException e) {
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | CoreException | BadLocationException e) {
 		} finally {
 			FileBuffers.getTextFileBufferManager().disconnect(manifest.getFullPath(), LocationKind.NORMALIZE,
 					subMonitor.split(1));

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/ShowDescriptionAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/ShowDescriptionAction.java
位置:  -239,9 +239,7   public class ShowDescriptionAction extends Action {
 				IWebBrowser browser = support.createBrowser(IWorkbenchBrowserSupport.AS_EDITOR | IWorkbenchBrowserSupport.STATUS, file.getName(), fPointID, fPointID);
 				browser.openURL(url);
 			}
-		} catch (MalformedURLException e) {
-			PDEPlugin.logException(e);
-		} catch (PartInitException e) {
+		} catch (MalformedURLException | PartInitException e) {
 			PDEPlugin.logException(e);
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesAction.java
位置:  -61,8 +61,7   public class AddNewDependenciesAction extends Action {
 					op.run(monitor);
 					if (!op.foundNewDependencies())
 						Display.getDefault().asyncExec(() -> MessageDialog.openInformation(PDEPlugin.getActiveWorkbenchShell(), PDEUIMessages.AddNewDependenciesAction_title, PDEUIMessages.AddNewDependenciesAction_notFound));
-				} catch (InvocationTargetException e) {
-				} catch (InterruptedException e) {
+				} catch (InvocationTargetException | InterruptedException e) {
 				} finally {
 					monitor.done();
 				}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/AddNewDependenciesOperation.java
位置:  -447,8 +447,7   public class AddNewDependenciesOperation extends WorkspaceModifyOperation {
 					added.add(pluginId);
 					if (entry != null &amp;&amp; entry.contains(pluginId))
 						entry.removeToken(pluginId);
-				} catch (BundleException e) {
-				} catch (CoreException e) {
+				} catch (BundleException | CoreException e) {
 				}
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/CalculateUsesAction.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/CalculateUsesAction.java
位置:  -52,8 +52,7   public class CalculateUsesAction extends Action {
 				CalculateUsesOperation op = getOperation();
 				try {
 					op.run(monitor);
-				} catch (InvocationTargetException e) {
-				} catch (InterruptedException e) {
+				} catch (InvocationTargetException | InterruptedException e) {
 				} finally {
 					monitor.done();
 				}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/DependencyExtentSearchResultPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/DependencyExtentSearchResultPage.java
位置:  -130,8 +130,7   public class DependencyExtentSearchResultPage extends AbstractSearchResultPage {
 		} else {
 			try {
 				JavaEditorOpener.open(match, currentOffset, currentLength, activate);
-			} catch (PartInitException e) {
-			} catch (JavaModelException e) {
+			} catch (PartInitException | JavaModelException e) {
 			}
 		}
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/UnusedDependenciesJob.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/UnusedDependenciesJob.java
位置:  -40,8 +40,7   public class UnusedDependenciesJob extends Job {
 			udo.run(monitor);
 			// List can contain IPluginImports or ImportPackageObjects
 			showResults(udo.getList().toArray());
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		} finally {
 			monitor.done();
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/PDEJavaHelperUI.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/PDEJavaHelperUI.java
位置:  -146,8 +146,6   public class PDEJavaHelperUI {
 					}
 				}
 			}
-		} catch (PartInitException e) {
-			PDEPlugin.logException(e);
 		} catch (JavaModelException e) {
 			// nothing
 			Display.getCurrent().beep();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/PDEModelUtility.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/PDEModelUtility.java
位置:  -359,11 +359,7   public class PDEModelUtility {
 					edits.add(change);
 				}
 			}
-		} catch (CoreException e) {
-			PDEPlugin.log(e);
-		} catch (MalformedTreeException e) {
-			PDEPlugin.log(e);
-		} catch (BadLocationException e) {
+		} catch (CoreException | MalformedTreeException | BadLocationException e) {
 			PDEPlugin.log(e);
 		} finally {
 			// don't want to over-disconnect in case we ran into an exception during connections

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/SharedLabelProvider.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/SharedLabelProvider.java
位置:  -233,7 +233,6   public class SharedLabelProvider extends LabelProvider implements ITableLabelPro
 				ImageDescriptor desc = ImageDescriptor.createFromImageData(new ImageData(stream));
 				return get(desc);
 			}
-		} catch (FileNotFoundException e) {
 		} catch (IOException e) {
 		} finally {
 			try {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TemplateFileGenerator.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/TemplateFileGenerator.java
位置:  -189,7 +189,6   public class TemplateFileGenerator implements IVariableProvider {
 			IPath path = new Path(templateDirectory);
 			try (ZipFile zipFile = new ZipFile(pluginJar)) {
 				generateFiles(zipFile, path, fProject, true, false, monitor);
-			} catch (ZipException ze) {
 			} catch (IOException ioe) {
 			}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/AbstractRepository.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/AbstractRepository.java
位置:  -113,8 +113,6   public abstract class AbstractRepository extends Job {
 					}
 				}
 			}
-		} catch (ZipException e) {
-			PDEPlugin.log(e);
 		} catch (IOException e) {
 			PDEPlugin.log(e);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/WorkspaceRepository.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/imagebrowser/repositories/WorkspaceRepository.java
位置:  -76,9 +76,7   public class WorkspaceRepository extends AbstractRepository {
 
 						return false;
 					}, IResource.DEPTH_INFINITE, IContainer.INCLUDE_TEAM_PRIVATE_MEMBERS | IContainer.INCLUDE_HIDDEN);
-				} catch (CoreException e) {
-					PDEPlugin.log(e);
-				} catch (IOException e) {
+				} catch (CoreException | IOException e) {
 					PDEPlugin.log(e);
 				}
 			}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/AddAllPluginsToJavaSearchHandler.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/AddAllPluginsToJavaSearchHandler.java
位置:  -29,9 +29,7   public class AddAllPluginsToJavaSearchHandler extends AbstractHandler {
 		IRunnableWithProgress op = new JavaSearchOperation(models, true);
 		try {
 			PlatformUI.getWorkbench().getProgressService().busyCursorWhile(op);
-		} catch (InterruptedException e) {
-			PDEPlugin.logException(e);
-		} catch (InvocationTargetException e) {
+		} catch (InterruptedException | InvocationTargetException e) {
 			PDEPlugin.logException(e);
 		}
 		return null;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/plugins/PluginsView.java
位置:  -683,8 +683,6   public class PluginsView extends ViewPart implements IPluginModelListener {
 			IEditorInput in = new FileStoreEditorInput(store);
 			page.openEditor(in, editorId);
 			adapter.setEditorId(editorId);
-		} catch (PartInitException e) {
-			PDEPlugin.logException(e);
 		} catch (CoreException e) {
 			PDEPlugin.logException(e);
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/FeatureExportWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/FeatureExportWizard.java
位置:  -155,9 +155,7   public class FeatureExportWizard extends AntGeneratingExportWizard {
 				export.setAttribute(
 			target.appendChild(export);
 			return doc;
-		} catch (DOMException e) {
-		} catch (FactoryConfigurationError e) {
-		} catch (ParserConfigurationException e) {
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e) {
 		}
 		return null;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/PluginExportWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/exports/PluginExportWizard.java
位置:  -125,9 +125,7   public class PluginExportWizard extends AntGeneratingExportWizard {
 				export.setAttribute(
 			target.appendChild(export);
 			return doc;
-		} catch (DOMException e) {
-		} catch (FactoryConfigurationError e) {
-		} catch (ParserConfigurationException e) {
+		} catch (DOMException | FactoryConfigurationError | ParserConfigurationException e) {
 		}
 		return null;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/NewSchemaFileMainPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/NewSchemaFileMainPage.java
位置:  -52,9 +52,7   public class NewSchemaFileMainPage extends BaseExtensionPointMainPage {
 		} catch (InvocationTargetException e) {
 			PDEPlugin.logException(e);
 			return false;
-		} catch (InterruptedException e) {
-			return false;
-		} catch (CoreException e) {
+		} catch (InterruptedException | CoreException e) {
 			return false;
 		}
 		return true;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/feature/PluginListPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/feature/PluginListPage.java
位置:  -57,8 +57,7   public class PluginListPage extends BasePluginListPage {
 							throw new InterruptedException();
 						}
 					});
-				} catch (InvocationTargetException e) {
-				} catch (InterruptedException e) {
+				} catch (InvocationTargetException | InterruptedException e) {
 				}
 			}
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/FeatureImportWizardPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/FeatureImportWizardPage.java
位置:  -455,8 +455,7   public class FeatureImportWizardPage extends WizardPage {
 		IProgressService pservice = PlatformUI.getWorkbench().getProgressService();
 		try {
 			pservice.busyCursorWhile(runnable);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		}
 		return fModels;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportOperation.java
位置:  -635,9 +635,6   public class PluginImportOperation extends WorkspaceJob {
 			}
 			subMonitor.worked(1);
 
-		} catch (ZipException e) {
-			IStatus status = new Status(IStatus.ERROR, PDEPlugin.getPluginId(), IStatus.ERROR, e.getMessage(), e);
-			throw new CoreException(status);
 		} catch (IOException e) {
 			IStatus status = new Status(IStatus.ERROR, PDEPlugin.getPluginId(), IStatus.ERROR, e.getMessage(), e);
 			throw new CoreException(status);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/FragmentContentPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/FragmentContentPage.java
位置:  -241,8 +241,7   public class FragmentContentPage extends ContentPage {
 							throw new InterruptedException();
 						}
 					});
-				} catch (InvocationTargetException ex) {
-				} catch (InterruptedException ex) {
+				} catch (InvocationTargetException | InterruptedException ex) {
 					// Model initialization cancelled, target platform will be empty
 				}
 			}
位置:  -322,8 +321,7   public class FragmentContentPage extends ContentPage {
 								throw new InterruptedException();
 							}
 						});
-					} catch (InvocationTargetException e) {
-					} catch (InterruptedException e) {
+					} catch (InvocationTargetException | InterruptedException e) {
 						// Model initialization cancelled, target platform will be empty
 					}
 				}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewLibraryPluginCreationOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewLibraryPluginCreationOperation.java
位置:  -172,8 +172,7   public class NewLibraryPluginCreationOperation extends NewProjectCreationOperati
 			javaProject.setRawClasspath(classpath.toArray(new IClasspathEntry[classpath.size()]),
 					subMonitor.split(1));
 //			ClasspathComputer.setClasspath(javaProject.getProject(), model);
-		} catch (IOException e) {
-		} catch (CoreException e) {
+		} catch (IOException | CoreException e) {
 		}
 	}
 
位置:  -547,8 +546,7   public class NewLibraryPluginCreationOperation extends NewProjectCreationOperati
 
 				}
 			}.run(monitor);
-		} catch (InvocationTargetException e) {
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 		}
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/product/UpdateSplashProgressOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/product/UpdateSplashProgressOperation.java
位置:  -286,9 +286,7   public class UpdateSplashProgressOperation implements IWorkspaceRunnable {
 			}
 			// Save plugin customization file changes
 			savePluginCustomFileChanges(pluginCustomModel, subMonitor.split(1));
-		} catch (MalformedTreeException e) {
-			throw createCoreException(PDEUIMessages.UpdateSplashProgressAction_msgErrorCustomFileSaveFailed, e);
-		} catch (BadLocationException e) {
+		} catch (MalformedTreeException | BadLocationException e) {
 			throw createCoreException(PDEUIMessages.UpdateSplashProgressAction_msgErrorCustomFileSaveFailed, e);
 		} finally {
 			// Disconnect from the text file buffer manager

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/templates/NewExtensionTemplateWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/templates/NewExtensionTemplateWizard.java
位置:  -92,10 +92,7   public class NewExtensionTemplateWizard extends Wizard implements IExtensionWiza
 		};
 		try {
 			getContainer().run(false, true, operation);
-		} catch (InvocationTargetException e) {
-			PDEPlugin.logException(e);
-			return false;
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			PDEPlugin.logException(e);
 			return false;
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/ConvertPreferencesWizard.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/ConvertPreferencesWizard.java
位置:  -226,15 +226,7   public class ConvertPreferencesWizard extends Wizard {
 						} else {
 							page.setMessage(PDEUIMessages.ConvertPreferencesWizard_errorNoPrefs, IMessageProvider.WARNING);
 						}
-					} catch (FileNotFoundException e1) {
-						page.setErrorMessage(NLS.bind(PDEUIMessages.ConvertPreferencesWizard_errorFile, errorFilePath));
-						PDEPlugin.logException(e1);
-						return;
-					} catch (CoreException e2) {
-						page.setErrorMessage(NLS.bind(PDEUIMessages.ConvertPreferencesWizard_errorFile, errorFilePath));
-						PDEPlugin.logException(e2);
-						return;
-					} catch (IOException e3) {
+					} catch (CoreException | IOException e3) {
 						page.setErrorMessage(NLS.bind(PDEUIMessages.ConvertPreferencesWizard_errorFile, errorFilePath));
 						PDEPlugin.logException(e3);
 						return;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/ConvertedProjectsPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/ConvertedProjectsPage.java
位置:  -148,10 +148,7   public class ConvertedProjectsPage extends WizardPage {
 			IRunnableWithProgress convertOperation;
 			convertOperation = new ConvertProjectToPluginOperation(projects, fApiAnalysisButton.getSelection());
 			getContainer().run(false, true, convertOperation);
-		} catch (InvocationTargetException e) {
-			PDEPlugin.logException(e);
-			return false;
-		} catch (InterruptedException e) {
+		} catch (InvocationTargetException | InterruptedException e) {
 			PDEPlugin.logException(e);
 			return false;
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/OrganizeManifestsProcessor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/OrganizeManifestsProcessor.java
位置:  -116,9 +116,7   public class OrganizeManifestsProcessor extends RefactoringProcessor implements
 					try {
 						SubMonitor subMonitor = SubMonitor.convert(monitor);
 						runCleanup(subMonitor, (IBundlePluginModelBase) model, result);
-					} catch (InvocationTargetException e) {
-						ee[0] = e;
-					} catch (InterruptedException e) {
+					} catch (InvocationTargetException | InterruptedException e) {
 						ee[0] = e;
 					}
 			}

原文件: ui/org.eclipse.pde.ui/src_samples/org/eclipse/pde/internal/ui/samples/SampleWizard.java 
新文件: ui/org.eclipse.pde.ui/src_samples/org/eclipse/pde/internal/ui/samples/SampleWizard.java
位置:  -120,16 +120,10   public class SampleWizard extends Wizard implements INewWizard, IExecutableExten
 				enableActivities();
 			if (sampleEditorNeeded &amp;&amp; sampleManifest != null)
 				IDE.openEditor(page, sampleManifest, true);
-		} catch (InvocationTargetException e) {
+		} catch (InvocationTargetException | CoreException e) {
 			PDEPlugin.logException(e);
 			return false;
-		} catch (InterruptedException e) {
-			//PDEPlugin.logException(e);
-			return false;
-		} catch (CoreException e) {
-			PDEPlugin.logException(e);
-			return false;
-		} catch (OperationCanceledException e) {
+		} catch (InterruptedException | OperationCanceledException e) {
 			return false;
 		}
 		return true;

---------------------------157---------------------------
需求名称: Bug 548139 - Remove BREE from non-Java bundles
创建时间: 2019-06-21	02:16:11
修改时间: 2019-06-27	05:38:46

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase16/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase16/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase17/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase17/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase18/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase18/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.jre11/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.jre11/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/.project 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/.project
位置:  -6,11 +6,6  
 	</projects>
 	<buildSpec>
 		<buildCommand>
-			<name>org.eclipse.jdt.core.javabuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>
位置:  -23,6 +18,5  
 	</buildSpec>
 	<natures>
 		<nature>org.eclipse.pde.PluginNature</nature>
-		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
 </projectDescription>

---------------------------158---------------------------
需求名称: Revert "Bug 548139: Re-added BREE for fragments"
创建时间: 2019-06-27	02:37:47
修改时间: 2019-06-27	02:37:47

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentcdcfoundation10
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.cdcfoundation10
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentcdcfoundation11
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.cdcfoundation11
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se12
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se12
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se13
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se13
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se14
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se14
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se15
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se15
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase16/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase16/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase16
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase16
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase17/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase17/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase17
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase17
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase18/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase18/META-INF/MANIFEST.MF
位置:  -8,5 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase18
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase18
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/META-INF/MANIFEST.MF
位置:  -6,4 +6,3   Bundle-Version: 1.0.200.qualifier
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase9
 Bundle-Vendor: %Bundle-Vendor
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.jre11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.jre11/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjre11
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.jre11
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum10
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.osgiminimum10
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum11
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.osgiminimum11
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/META-INF/MANIFEST.MF
位置:  -8,4 +8,3   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum12
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.osgiminimum12
-Bundle-RequiredExecutionEnvironment: JavaSE-1.8

---------------------------159---------------------------
需求名称: Bug 548139: Re-added BREE for fragments
创建时间: 2019-06-26	05:25:50
修改时间: 2019-06-26	05:25:50

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation10/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentcdcfoundation10
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.cdcfoundation10
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.cdcfoundation11/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentcdcfoundation11
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.cdcfoundation11
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se12/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se12
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se12
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se13/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se13
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se13
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se14/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se14
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se14
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.j2se15/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentj2se15
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.j2se15
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase16/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase16/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase16
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase16
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase17/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase17/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase17
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase17
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.javase18/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase18/META-INF/MANIFEST.MF
位置:  -8,4 +8,5   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjavase18
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase18
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8
 

原文件: apitools/org.eclipse.pde.api.tools.ee.javase9/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.javase9/META-INF/MANIFEST.MF
位置:  -6,3 +6,4   Bundle-Version: 1.0.200.qualifier
 Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.javase9
 Bundle-Vendor: %Bundle-Vendor
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.jre11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.jre11/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentjre11
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.jre11
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum10/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum10
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.osgiminimum10
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum11/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum11
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.osgiminimum11
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

原文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/META-INF/MANIFEST.MF 
新文件: apitools/org.eclipse.pde.api.tools.ee.osgiminimum12/META-INF/MANIFEST.MF
位置:  -8,3 +8,4   Fragment-Host: org.eclipse.pde.api.tools;bundle-version=
 Bundle-Localization: fragmentosgiminimum12
 Eclipse-BundleShape: dir
 Automatic-Module-Name: org.eclipse.pde.api.tools.ee.osgiminimum12
+Bundle-RequiredExecutionEnvironment: JavaSE-1.8

---------------------------160---------------------------
需求名称: Bug 548643: generate javax.inject package import for PDE templates
创建时间: 2019-06-26	05:04:52
修改时间: 2019-06-26	05:04:52

原文件: ui/org.eclipse.pde.core/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.core/META-INF/MANIFEST.MF
位置:  -32,7 +32,8   Export-Package:
   x-friends:=
    org.eclipse.pde.api.tools.ui,
    org.eclipse.pde.ds.ui,
-   org.eclipse.pde.ua.ui
+   org.eclipse.pde.ua.ui,
+   org.eclipse.pde.ui.templates
  org.eclipse.pde.internal.core.ifeature;x-friends:=
  org.eclipse.pde.internal.core.iproduct;x-friends:=
  org.eclipse.pde.internal.core.ischema;x-friends:=

原文件: ui/org.eclipse.pde.ui.templates/src/org/eclipse/pde/internal/ui/templates/ide/ViewTemplate.java 
新文件: ui/org.eclipse.pde.ui.templates/src/org/eclipse/pde/internal/ui/templates/ide/ViewTemplate.java
位置:  -22,9 +22,12   import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.jface.wizard.Wizard;
 import org.eclipse.jface.wizard.WizardPage;
 import org.eclipse.pde.core.plugin.*;
+import org.eclipse.pde.internal.core.ibundle.IBundle;
+import org.eclipse.pde.internal.core.ibundle.IBundlePluginModelBase;
 import org.eclipse.pde.internal.ui.templates.*;
 import org.eclipse.pde.ui.IFieldData;
 import org.eclipse.pde.ui.templates.*;
+import org.osgi.framework.Constants;
 
 public class ViewTemplate extends PDETemplateSection {
 	private BooleanOption addToPerspective;
位置:  -119,6 +122,10   public class ViewTemplate extends PDETemplateSection {
 
 	@Override
 	protected void updateModel(IProgressMonitor monitor) throws CoreException {
+
+		IBundle bundle = ((IBundlePluginModelBase) model).getBundleModel().getBundle();
+		bundle.setHeader(Constants.IMPORT_PACKAGE, 
+
 		IPluginBase plugin = model.getPluginBase();
 		IPluginExtension extension = createExtension(
 		IPluginModelFactory factory = model.getPluginFactory();

原文件: ui/org.eclipse.pde.ui.templates/src/org/eclipse/pde/internal/ui/templates/rcp/ViewRCPTemplate.java 
新文件: ui/org.eclipse.pde.ui.templates/src/org/eclipse/pde/internal/ui/templates/rcp/ViewRCPTemplate.java
位置:  -19,8 +19,11   import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.jface.wizard.Wizard;
 import org.eclipse.jface.wizard.WizardPage;
 import org.eclipse.pde.core.plugin.*;
+import org.eclipse.pde.internal.core.ibundle.IBundle;
+import org.eclipse.pde.internal.core.ibundle.IBundlePluginModelBase;
 import org.eclipse.pde.internal.ui.templates.*;
 import org.eclipse.pde.ui.IFieldData;
+import org.osgi.framework.Constants;
 
 public class ViewRCPTemplate extends PDETemplateSection {
 
位置:  -82,6 +85,9   public class ViewRCPTemplate extends PDETemplateSection {
 
 		if (getBooleanOption(KEY_PRODUCT_BRANDING))
 			createProductExtension();
+
+		IBundle bundle = ((IBundlePluginModelBase) model).getBundleModel().getBundle();
+		bundle.setHeader(Constants.IMPORT_PACKAGE, 
 	}
 
 	private void createApplicationExtension() throws CoreException {

---------------------------161---------------------------
需求名称: 4.13 update of org.eclipse.pde.ds.ui
创建时间: 2019-06-25	08:58:12
修改时间: 2019-06-25	11:51:20

原文件: ds/org.eclipse.pde.ds.ui/META-INF/MANIFEST.MF 
新文件: ds/org.eclipse.pde.ds.ui/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ds.ui;singleton:=true
-Bundle-Version: 1.1.600.qualifier
+Bundle-Version: 1.1.700.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ds.ui.Activator
 Require-Bundle: org.eclipse.core.runtime;bundle-version=
  org.eclipse.core.resources;bundle-version=

原文件: ds/org.eclipse.pde.ds.ui/pom.xml 
新文件: ds/org.eclipse.pde.ds.ui/pom.xml
位置:  -20,6 +20,6  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ds.ui</artifactId>
-  <version>1.1.600-SNAPSHOT</version>
+  <version>1.1.700-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 </project>

---------------------------162---------------------------
需求名称: Bug 331595: load tycho-compatible target platform
创建时间: 2019-06-25	09:07:43
修改时间: 2019-06-25	09:58:42

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/FeatureBasedLaunchTest.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/FeatureBasedLaunchTest.java
位置:  -24,13 +24,12   import java.nio.file.Paths;
 import java.util.*;
 import junit.framework.AssertionFailedError;
 import org.eclipse.core.resources.*;
-import org.eclipse.core.runtime.*;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.FileLocator;
 import org.eclipse.debug.core.*;
 import org.eclipse.pde.core.plugin.IPluginModelBase;
-import org.eclipse.pde.core.plugin.PluginRegistry;
-import org.eclipse.pde.core.target.*;
-import org.eclipse.pde.internal.core.PDECore;
 import org.eclipse.pde.internal.launching.launcher.BundleLauncherHelper;
+import org.eclipse.pde.ui.tests.util.TargetPlatformUtil;
 import org.junit.*;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.FrameworkUtil;
位置:  -39,29 +38,9   public class FeatureBasedLaunchTest {
 
 	private ILaunchConfiguration fFeatureBasedWithStartLevels;
 
-	@Before
-	public void setupTargetPlatform() throws Exception {
-		ITargetPlatformService tps = PDECore.getDefault().acquireService(ITargetPlatformService.class);
-		ITargetDefinition defaultTarget = tps.newDefaultTarget();
-		LoadTargetDefinitionJob job = new LoadTargetDefinitionJob(defaultTarget);
-		job.schedule();
-		job.join();
-
-		IStatus result = job.getResult();
-		if (!result.isOK()) {
-			throw new AssertionError(result.getMessage(), result.getException());
-		}
-
-		// FIXME: When run in tycho, the ${eclipse_home} installation doesn't
-		// use simpleconfigurator. PDE only picks up the
-		// simpleconfigurator/bundles.info from the configuration area when
-		// using the installation as target, not the osgi.bundles from
-		// config.ini
-		// --> target is missing almost all bundles and this test won't work
-
-		boolean functionalTargetPlatform = Arrays.stream(PluginRegistry.getActiveModels(false))
-				.anyMatch(p -> Platform.PI_RUNTIME.equals(p.getPluginBase().getId()));
-		Assume.assumeTrue(
+	@BeforeClass
+	public static void setupTargetPlatform() throws Exception {
+		TargetPlatformUtil.setRunningPlatformAsTarget();
 	}
 
 	@Before

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/util/TargetPlatformUtil.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/util/TargetPlatformUtil.java
位置:  -0,0 +1,69  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.ui.tests.util;
+
+import java.util.Arrays;
+import org.eclipse.core.runtime.*;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.osgi.internal.framework.EquinoxBundle;
+import org.eclipse.osgi.storage.BundleInfo.Generation;
+import org.eclipse.pde.core.target.*;
+import org.eclipse.pde.internal.core.PDECore;
+import org.osgi.framework.Bundle;
+import org.osgi.framework.FrameworkUtil;
+
+public class TargetPlatformUtil {
+
+	private static final String TARGET_NAME = TargetPlatformUtil.class + 
+
+	public static void setRunningPlatformAsTarget() throws CoreException, InterruptedException {
+		ITargetPlatformService tps = PDECore.getDefault().acquireService(ITargetPlatformService.class);
+		ITargetDefinition currentTarget = tps.getWorkspaceTargetDefinition();
+		if (TARGET_NAME.equals(currentTarget.getName())) {
+			return;
+		}
+
+		Job job = new LoadTargetDefinitionJob(createTarget(tps));
+		job.schedule();
+		job.join();
+
+		IStatus result = job.getResult();
+		if (!result.isOK()) {
+			throw new AssertionError(result.getMessage(), result.getException());
+		}
+	}
+
+	private static ITargetDefinition createTarget(ITargetPlatformService tps) throws CoreException {
+		ITargetDefinition targetDefinition = tps.newDefaultTarget();
+		targetDefinition.setName(TARGET_NAME);
+
+		Bundle[] installedBundles = FrameworkUtil.getBundle(TargetPlatformUtil.class).getBundleContext().getBundles();
+		ITargetLocation[] bundleContainers = Arrays.stream(installedBundles).map(bundle -> {
+			EquinoxBundle bundleImpl = (EquinoxBundle) bundle;
+			Generation generation = (Generation) bundleImpl.getModule().getCurrentRevision().getRevisionInfo();
+			return generation.getBundleFile();
+		}).map(f -> f.getBaseFile().getParentFile()).distinct()
+				.map(dir -> tps.newDirectoryLocation(dir.getAbsolutePath())).toArray(ITargetLocation[]::new);
+
+		targetDefinition.setTargetLocations(bundleContainers);
+		targetDefinition.setArch(Platform.getOSArch());
+		targetDefinition.setOS(Platform.getOS());
+		targetDefinition.setWS(Platform.getWS());
+		targetDefinition.setNL(Platform.getNL());
+
+		tps.saveTargetDefinition(targetDefinition);
+		return targetDefinition;
+	}
+
+}

---------------------------163---------------------------
需求名称: Remove redundant override of getText method in PDE template
创建时间: 2019-06-25	06:36:18
修改时间: 2019-06-25	09:47:37

原文件: ui/org.eclipse.pde.ui.templates/templates_3.3/viewRCP/java/View.java 
新文件: ui/org.eclipse.pde.ui.templates/templates_3.3/viewRCP/java/View.java
位置:  -23,10 +23,8   public class View extends ViewPart {
 	private TableViewer viewer;
 
 	private class StringLabelProvider extends ColumnLabelProvider {
-		@Override
-		public String getText(Object element) {
-			return super.getText(element);
-		}
+		
+		// getText method is used from super class ColumnLabelProvider
 
 		@Override
 		public Image getImage(Object obj) {

---------------------------164---------------------------
需求名称: Bug 544472 - [JUnit 5] add runtime dependencies to classpath container
创建时间: 2019-04-30	10:05:35
修改时间: 2019-06-25	04:58:55

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/RequiredPluginsClasspathContainer.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/RequiredPluginsClasspathContainer.java
位置:  -13,8 +13,12  
  *******************************************************************************/
 package org.eclipse.pde.internal.core;
 
+import static java.util.Collections.singletonMap;
+
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
位置:  -52,6 +56,11   import org.eclipse.pde.internal.core.ibundle.IBundlePluginModelBase;
 
 public class RequiredPluginsClasspathContainer extends PDEClasspathContainer implements IClasspathContainer {
 
+	@SuppressWarnings(
+	private static final Collection<String> JUNIT5_RUNTIME_PLUGINS = new HashSet<>(
+			Arrays.asList(
+					
+
 	private final IPluginModelBase fModel;
 	private IBuild fBuild;
 
位置:  -182,6 +191,8   public class RequiredPluginsClasspathContainer extends PDEClasspathContainer imp
 				addExtraClasspathEntries(added, entries);
 			}
 
+			addJunit5RuntimeDependencies(added, entries);
+
 		} catch (CoreException e) {
 		}
 		return entries.toArray(new IClasspathEntry[entries.size()]);
位置:  -456,6 +467,42   public class RequiredPluginsClasspathContainer extends PDEClasspathContainer imp
 		}
 	}
 
+	/**
+	 * Adds JUnit5 dependencies that are required at runtime in eclipse, but not
+	 * at compile-time or in tycho.
+	 */
+	private void addJunit5RuntimeDependencies(HashSet<BundleDescription> added, ArrayList<IClasspathEntry> entries)
+			throws CoreException {
+		if (!containsJunit5Dependency(added)) {
+			return;
+		}
+
+		if (JUNIT5_RUNTIME_PLUGINS.contains(fModel.getPluginBase().getId())) {
+			return; // never extend the classpath of a junit bundle
+		}
+
+		for (String pluginId : JUNIT5_RUNTIME_PLUGINS) {
+			IPluginModelBase model = PluginRegistry.findModel(pluginId);
+			if (model == null || !model.isEnabled()) {
+				continue;
+			}
+
+			BundleDescription desc = model.getBundleDescription();
+			if (added.contains(desc)) {
+				continue; // bundle has explicit dependency
+			}
+
+			// add dependency with exclude all rule
+			Map<BundleDescription, ArrayList<Rule>> rules = singletonMap(desc, new ArrayList<>());
+			addPlugin(desc, true, rules, entries);
+		}
+
+	}
+
+	private static boolean containsJunit5Dependency(Collection<BundleDescription> dependencies) {
+		return dependencies.stream().anyMatch(desc -> 
+	}
+
 	private void addSecondaryDependencies(BundleDescription desc, HashSet<BundleDescription> added, ArrayList<IClasspathEntry> entries) {
 		try {
 			IBuildEntry entry = fBuild.getEntry(IBuildEntry.SECONDARY_DEPENDENCIES);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/JavaResolutionFactory.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/JavaResolutionFactory.java
位置:  -183,9 +183,8   public class JavaResolutionFactory {
 						return;
 					IPluginModelBase base = (IPluginModelBase) model;
 					String[] pluginIdStrings = null;
-					String[] junit5PluginIDList = getJUnit5Bundles();
-					if (getChangeObject() instanceof String &amp;&amp; getChangeObject().equals(
-						pluginIdStrings = junit5PluginIDList;
+					if (
+						pluginIdStrings = getJUnit5Bundles();
 					}
 					if (getChangeObject() instanceof ExportPackageDescription) {
 						pluginIdStrings = new String[1];
位置:  -210,13 +209,7   public class JavaResolutionFactory {
 				}
 
 				private String[] getJUnit5Bundles() {
-					String[] junit5PluginIDList = { 
-							
-							
-							
-							 
-							
-					return junit5PluginIDList;
+					return new String[] { 
 				}
 			}, new NullProgressMonitor());
 

---------------------------165---------------------------
需求名称: Bug 331595: [launching] GUI for startlevels in feature launch config
创建时间: 2019-06-18	04:17:16
修改时间: 2019-06-25	03:47:21

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/AutoStartEditingSupport.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/AutoStartEditingSupport.java
位置:  -0,0 +1,67  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.launcher;
+
+import java.util.Arrays;
+import org.eclipse.jface.viewers.*;
+import org.eclipse.pde.internal.ui.shared.CachedCheckboxTreeViewer;
+import org.eclipse.swt.SWT;
+
+class AutoStartEditingSupport extends EditingSupport {
+
+	private final CachedCheckboxTreeViewer fViewer;
+	private final CellEditor fCellEditor;
+	private final String[] fItems;
+
+	public AutoStartEditingSupport(CachedCheckboxTreeViewer viewer) {
+		super(viewer);
+		fViewer = viewer;
+		fItems = new String[] { 
+		fCellEditor = new ComboBoxCellEditor(viewer.getTree(), fItems, SWT.BORDER | SWT.READ_ONLY);
+	}
+
+	@Override
+	protected CellEditor getCellEditor(Object element) {
+		return fCellEditor;
+	}
+
+	@Override
+	protected boolean canEdit(Object element) {
+		return fViewer.isCheckedLeafElement(element) &amp;&amp; element instanceof IHasAutoStart;
+	}
+
+	@Override
+	protected Object getValue(Object element) {
+		String autoStart = ((IHasAutoStart) element).getAutoStart();
+		int index = Arrays.asList(fItems).indexOf(autoStart);
+		return (index < 0) ? 0 : index;
+	}
+
+	@Override
+	protected void setValue(Object element, Object value) {
+		int index = (int) value;
+		if (index < 0) {
+			index = 0;
+		}
+		((IHasAutoStart) element).setAutoStart(fItems[index]);
+		fViewer.update(element, null);
+	}
+
+	public interface IHasAutoStart {
+		String getAutoStart();
+
+		void setAutoStart(String autoStart);
+	}
+
+}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/FeatureBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/FeatureBlock.java
位置:  -13,9 +13,12  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.launcher;
 
+import static java.util.Objects.requireNonNull;
+
 import java.util.*;
 import java.util.List;
 import java.util.Map.Entry;
+import java.util.function.Function;
 import org.eclipse.core.runtime.*;
 import org.eclipse.core.runtime.jobs.IJobChangeEvent;
 import org.eclipse.core.runtime.jobs.JobChangeAdapter;
位置:  -277,7 +280,7   public class FeatureBlock {
 				Object[] models = dialog.getResult();
 				ArrayList<PluginLaunchModel> modelList = new ArrayList<>(models.length);
 				for (Object model : models) {
-					PluginLaunchModel pluginLaunchModel = new PluginLaunchModel((IPluginModelBase) model, IPDELauncherConstants.LOCATION_DEFAULT);
+					PluginLaunchModel pluginLaunchModel = new PluginLaunchModel((IPluginModelBase) model);
 					modelList.add(pluginLaunchModel);
 				}
 
位置:  -620,13 +623,24   public class FeatureBlock {
 		}
 	}
 
-	class PluginLaunchModel {
+	class PluginLaunchModel implements StartLevelEditingSupport.IHasStartLevel, AutoStartEditingSupport.IHasAutoStart {
 		private IPluginModelBase fPluginModelBase;
 		private String fPluginResolution;
+		private String fStartLevel;
+		private String fAutoStart;
 
-		public PluginLaunchModel(IPluginModelBase pluginModelBase, String pluginResolution) {
+		public PluginLaunchModel(IPluginModelBase pluginModelBase) {
 			fPluginModelBase = pluginModelBase;
-			fPluginResolution = pluginResolution;
+			fPluginResolution = IPDELauncherConstants.LOCATION_DEFAULT;
+			fStartLevel = 
+			fAutoStart = 
+		}
+
+		public PluginLaunchModel(IPluginModelBase pluginModelBase, AdditionalPluginData data) {
+			fPluginModelBase = pluginModelBase;
+			fPluginResolution = data.fResolution;
+			fStartLevel = data.fStartLevel;
+			fAutoStart = data.fAutoStart;
 		}
 
 		public IPluginModelBase getPluginModelBase() {
位置:  -641,6 +655,34   public class FeatureBlock {
 			fPluginResolution = pluginResolution;
 		}
 
+		@Override
+		public String getStartLevel() {
+			return fStartLevel;
+		}
+
+		@Override
+		public void setStartLevel(String startLevel) {
+			requireNonNull(startLevel, 
+			if (!Objects.equals(fStartLevel, startLevel)) {
+				fStartLevel = startLevel;
+				fTab.updateLaunchConfigurationDialog();
+			}
+		}
+
+		@Override
+		public String getAutoStart() {
+			return fAutoStart;
+		}
+
+		@Override
+		public void setAutoStart(String autoStart) {
+			requireNonNull(autoStart, 
+			if (!Objects.equals(fAutoStart, autoStart)) {
+				fAutoStart = autoStart;
+				fTab.updateLaunchConfigurationDialog();
+			}
+		}
+
 		public String getPluginModelId() {
 			return fPluginModelBase.getPluginBase().getId();
 		}
位置:  -651,7 +693,8   public class FeatureBlock {
 
 		public String buildEntry(boolean isChecked) {
 			IPluginBase base = fPluginModelBase.getPluginBase();
-			return String.join(
+			return String.join(
+					fStartLevel, fAutoStart);
 		}
 
 	}
位置:  -745,6 +788,8   public class FeatureBlock {
 
 	private static final int COLUMN_FEATURE_NAME = 0;
 	private static final int COLUMN_PLUGIN_RESOLUTION = 1;
+	private static final int COLUMN_START_LEVEL = 2;
+	private static final int COLUMN_AUTO_START = 3;
 
 	private static final String COLUMN_ID = 
 	private static final String PROPERTY_RESOLUTION = 
位置:  -908,8 +953,21   public class FeatureBlock {
 		column2.addSelectionListener(fListener);
 		column2.setData(COLUMN_ID, Integer.valueOf(COLUMN_PLUGIN_RESOLUTION));
 
-		fTree.getTree().setHeaderVisible(true);
 		fTree.setLabelProvider(new FeatureTreeLabelProvider());
+
+		TreeViewerColumn startLevelColumn = new TreeViewerColumn(fTree, SWT.CENTER, COLUMN_START_LEVEL);
+		startLevelColumn.getColumn().setText(PDEUIMessages.EquinoxPluginBlock_levelColumn);
+		startLevelColumn.getColumn().setWidth(100);
+		startLevelColumn.setEditingSupport(new StartLevelEditingSupport(fTree));
+		startLevelColumn.setLabelProvider(additionPluginLabelProvider(PluginLaunchModel::getStartLevel));
+
+		TreeViewerColumn autoStartColumn = new TreeViewerColumn(fTree, SWT.CENTER, COLUMN_AUTO_START);
+		autoStartColumn.getColumn().setText(PDEUIMessages.EquinoxPluginBlock_autoColumn);
+		autoStartColumn.getColumn().setWidth(100);
+		autoStartColumn.setEditingSupport(new AutoStartEditingSupport(fTree));
+		autoStartColumn.setLabelProvider(additionPluginLabelProvider(PluginLaunchModel::getAutoStart));
+
+		fTree.getTree().setHeaderVisible(true);
 		fTree.setContentProvider(new PluginContentProvider());
 		fTree.addCheckStateListener(event -> {
 			updateCounter();
位置:  -921,15 +979,6   public class FeatureBlock {
 		fTree.setCellEditors(new CellEditor[] {null, cellEditor});
 		fTree.setColumnProperties(new String[] {null, PROPERTY_RESOLUTION});
 		fTree.setCellModifier(new LocationCellModifier());
-		fTree.addDoubleClickListener(event -> {
-			ISelection selection = event.getSelection();
-			if (selection == null || !(selection instanceof IStructuredSelection)) {
-				return;
-			}
-			Object element = ((IStructuredSelection) selection).getFirstElement();
-			fTree.setChecked(element, !fTree.getChecked(element));
-			fTab.updateLaunchConfigurationDialog();
-		});
 		fTree.addSelectionChangedListener(event -> {
 			IStructuredSelection selection = (IStructuredSelection) fTree.getSelection();
 			boolean allPlugins = true;
位置:  -941,6 +990,8   public class FeatureBlock {
 			}
 			fRemovePluginButton.setEnabled(allPlugins);
 		});
+		fTree.addCheckStateListener(e -> fTree.update(e.getElement(), null));
+		
 		fTree.getTree().addKeyListener(new KeyAdapter() {
 			@Override
 			public void keyReleased(KeyEvent e) {
位置:  -973,6 +1024,20   public class FeatureBlock {
 		});
 	}
 
+	private CellLabelProvider additionPluginLabelProvider(Function<PluginLaunchModel, String> labelProvider) {
+		return new CellLabelProvider() {
+			@Override
+			public void update(ViewerCell cell) {
+				Object element = cell.getElement();
+				if ((element instanceof PluginLaunchModel) &amp;&amp; fTree.isCheckedLeafElement(element)) {
+					cell.setText(labelProvider.apply((PluginLaunchModel) element));
+				} else {
+					cell.setText(null);
+				}
+			}
+		};
+	}
+
 	private void createButtonContainer(Composite parent, int vOffset) {
 		Composite buttonComp = SWTFactory.createComposite(parent, 1, 1, GridData.FILL_VERTICAL);
 		GridLayout layout = new GridLayout();
位置:  -1195,7 +1260,7   public class FeatureBlock {
 					.getAdditionalPlugins(config, false);
 			for (Entry<IPluginModelBase, AdditionalPluginData> additionalEntry : additionalMap.entrySet()) {
 				AdditionalPluginData data = additionalEntry.getValue();
-				PluginLaunchModel launchModel = new PluginLaunchModel(additionalEntry.getKey(), data.fResolution);
+				PluginLaunchModel launchModel = new PluginLaunchModel(additionalEntry.getKey(), data);
 				fAdditionalPlugins.add(launchModel);
 
 				if (data.fEnabled) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/StartLevelEditingSupport.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/StartLevelEditingSupport.java
位置:  -0,0 +1,114  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.internal.ui.launcher;
+
+import org.eclipse.jface.viewers.CellEditor;
+import org.eclipse.jface.viewers.EditingSupport;
+import org.eclipse.pde.internal.ui.shared.CachedCheckboxTreeViewer;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.events.KeyListener;
+import org.eclipse.swt.events.SelectionListener;
+import org.eclipse.swt.widgets.*;
+
+class StartLevelEditingSupport extends EditingSupport {
+
+	private final CachedCheckboxTreeViewer fViewer;
+	private final CellEditor fCellEditor;
+
+	public StartLevelEditingSupport(CachedCheckboxTreeViewer viewer) {
+		super(viewer);
+		fViewer = viewer;
+		fCellEditor = new StartLevelCellEditor(viewer.getTree());
+	}
+
+	@Override
+	protected CellEditor getCellEditor(Object element) {
+		return fCellEditor;
+	}
+
+	@Override
+	protected boolean canEdit(Object element) {
+		return fViewer.isCheckedLeafElement(element) &amp;&amp; element instanceof IHasStartLevel;
+	}
+
+	@Override
+	protected Object getValue(Object element) {
+		return ((IHasStartLevel) element).getStartLevel();
+	}
+
+	@Override
+	protected void setValue(Object element, Object value) {
+		((IHasStartLevel) element).setStartLevel((String) value);
+		fViewer.update(element, null);
+	}
+
+	public interface IHasStartLevel {
+		String getStartLevel();
+
+		void setStartLevel(String level);
+	}
+
+	private static class StartLevelCellEditor extends CellEditor {
+
+		private Spinner fSpinner;
+
+		public StartLevelCellEditor(Composite parent) {
+			create(parent);
+		}
+
+		@Override
+		protected Control createControl(Composite parent) {
+			fSpinner = new Spinner(parent, SWT.BORDER);
+			fSpinner.setMinimum(0);
+
+			fSpinner.addTraverseListener(e -> {
+				if (e.detail == SWT.TRAVERSE_ESCAPE || e.detail == SWT.TRAVERSE_RETURN) {
+					e.doit = false;
+				}
+			});
+			fSpinner.addSelectionListener(SelectionListener.widgetDefaultSelectedAdapter(e -> {
+				fireApplyEditorValue();
+				deactivate();
+			}));
+			fSpinner.addKeyListener(KeyListener.keyReleasedAdapter(e -> {
+				if (e.character == SWT.ESC) {
+					fireCancelEditor();
+				}
+			}));
+			return fSpinner;
+		}
+
+		@Override
+		protected Object doGetValue() {
+			int startLevel = fSpinner.getSelection();
+			return (startLevel > 0) ? String.valueOf(startLevel) : 
+		}
+
+		@Override
+		protected void doSetFocus() {
+			fSpinner.setFocus();
+		}
+
+		@Override
+		protected void doSetValue(Object value) {
+			if (value == null || 
+				fSpinner.setSelection(0);
+			} else {
+				fSpinner.setSelection(Integer.parseInt((String) value));
+			}
+		}
+
+	}
+
+}

---------------------------166---------------------------
需求名称: Bug 331595: use configured start levels for additional_plugins
创建时间: 2019-06-19	02:29:40
修改时间: 2019-06-25	03:44:37

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/BundleLauncherHelper.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/internal/launching/launcher/BundleLauncherHelper.java
位置:  -198,7 +198,9   public class BundleLauncherHelper {
 
 			// Create the start levels for the selected plugins and add them to the map
 			for (IPluginModelBase model : pluginSet) {
-				addBundleToMap(map, model, 
+				AdditionalPluginData additionalPluginData = additionalPlugins.get(model);
+				String startLevels = (additionalPluginData != null) ? additionalPluginData.startLevels() : 
+				addBundleToMap(map, model, startLevels);
 			}
 			return map;
 		}
位置:  -573,19 +575,6   public class BundleLauncherHelper {
 			wc.doSave();
 	}
 
-	public static String writeAdditionalPluginsEntry(IPluginModelBase model, String pluginResolution, boolean checked) {
-		IPluginBase base = model.getPluginBase();
-		String id = base.getId();
-		StringBuilder buffer = new StringBuilder(id);
-		buffer.append(':');
-		buffer.append(base.getVersion());
-		buffer.append(':');
-		buffer.append(pluginResolution);
-		buffer.append(':');
-		buffer.append(checked);
-		return buffer.toString();
-	}
-
 	/**
 	 * Returns a map of IPluginModelBase to their associated String resolution setting. Reads the
 	 * additional plug-ins attribute of the given launch config and returns a map of plug-in models
位置:  -620,7 +609,9   public class BundleLauncherHelper {
 						}
 						IPluginModelBase model = findModel(pluginModelEntry, version, pluginResolution);
 						if (model != null) {
-							AdditionalPluginData additionalPluginData = new AdditionalPluginData(pluginData[2], checked);
+							String startLevel = (pluginData.length >= 6) ? pluginData[4] : null;
+							String autoStart = (pluginData.length >= 6) ? pluginData[5] : null;
+							AdditionalPluginData additionalPluginData = new AdditionalPluginData(pluginData[2], checked, startLevel, autoStart);
 							resolvedAdditionalPlugins.put(model, additionalPluginData);
 						}
 					}
位置:  -633,10 +624,18   public class BundleLauncherHelper {
 	public static class AdditionalPluginData {
 		public final String fResolution;
 		public final boolean fEnabled;
+		public final String fStartLevel;
+		public final String fAutoStart;
 
-		public AdditionalPluginData(String resolution, boolean enabled) {
+		public AdditionalPluginData(String resolution, boolean enabled, String startLevel, String autoStart) {
 			fResolution = resolution;
 			fEnabled = enabled;
+			fStartLevel = (startLevel == null || startLevel.isEmpty()) ? 
+			fAutoStart = (autoStart == null || autoStart.isEmpty()) ? 
+		}
+
+		String startLevels() {
+			return fStartLevel + ':' + fAutoStart;
 		}
 	}
 }

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/AllLauncherTests.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/AllLauncherTests.java
位置:  -21,7 +21,7   import org.junit.runners.Suite.SuiteClasses;
  * @since 3.5
  */
 @RunWith(Suite.class)
-@SuiteClasses({ LaunchConfigurationHelperTestCase.class })
+@SuiteClasses({ FeatureBasedLaunchTest.class, LaunchConfigurationHelperTestCase.class })
 public class AllLauncherTests {
 
 }

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/FeatureBasedLaunchTest.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/launcher/FeatureBasedLaunchTest.java
位置:  -0,0 +1,117  
+/*******************************************************************************
+ *  Copyright (c) 2019 Julian Honnen
+ *
+ *  This program and the accompanying materials
+ *  are made available under the terms of the Eclipse Public License 2.0
+ *  which accompanies this distribution, and is available at
+ *  https://www.eclipse.org/legal/epl-2.0/
+ *
+ *  SPDX-License-Identifier: EPL-2.0
+ *
+ *  Contributors:
+ *     Julian Honnen <julian.honnen@vector.com> - initial API and implementation
+ *******************************************************************************/
+package org.eclipse.pde.ui.tests.launcher;
+
+import static org.hamcrest.MatcherAssert.assertThat;
+import static org.hamcrest.core.Is.is;
+import static org.hamcrest.core.IsEqual.equalTo;
+
+import java.io.InputStream;
+import java.net.URL;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.util.*;
+import junit.framework.AssertionFailedError;
+import org.eclipse.core.resources.*;
+import org.eclipse.core.runtime.*;
+import org.eclipse.debug.core.*;
+import org.eclipse.pde.core.plugin.IPluginModelBase;
+import org.eclipse.pde.core.plugin.PluginRegistry;
+import org.eclipse.pde.core.target.*;
+import org.eclipse.pde.internal.core.PDECore;
+import org.eclipse.pde.internal.launching.launcher.BundleLauncherHelper;
+import org.junit.*;
+import org.osgi.framework.Bundle;
+import org.osgi.framework.FrameworkUtil;
+
+public class FeatureBasedLaunchTest {
+
+	private ILaunchConfiguration fFeatureBasedWithStartLevels;
+
+	@Before
+	public void setupTargetPlatform() throws Exception {
+		ITargetPlatformService tps = PDECore.getDefault().acquireService(ITargetPlatformService.class);
+		ITargetDefinition defaultTarget = tps.newDefaultTarget();
+		LoadTargetDefinitionJob job = new LoadTargetDefinitionJob(defaultTarget);
+		job.schedule();
+		job.join();
+
+		IStatus result = job.getResult();
+		if (!result.isOK()) {
+			throw new AssertionError(result.getMessage(), result.getException());
+		}
+
+		// FIXME: When run in tycho, the ${eclipse_home} installation doesn't
+		// use simpleconfigurator. PDE only picks up the
+		// simpleconfigurator/bundles.info from the configuration area when
+		// using the installation as target, not the osgi.bundles from
+		// config.ini
+		// --> target is missing almost all bundles and this test won't work
+
+		boolean functionalTargetPlatform = Arrays.stream(PluginRegistry.getActiveModels(false))
+				.anyMatch(p -> Platform.PI_RUNTIME.equals(p.getPluginBase().getId()));
+		Assume.assumeTrue(
+	}
+
+	@Before
+	public void setupLaunchConfig() throws Exception {
+		IWorkspace workspace = ResourcesPlugin.getWorkspace();
+		IProject project = workspace.getRoot().getProject(getClass().getSimpleName());
+		if (project.exists()) {
+			project.delete(true, null);
+		}
+
+		project.create(null);
+		project.open(null);
+		Bundle bundle = FrameworkUtil.getBundle(getClass());
+		ArrayList<URL> resources = Collections.list(bundle.findEntries(
+		for (URL url : resources) {
+			Path path = Paths.get(FileLocator.toFileURL(url).toURI());
+			IFile file = project.getFile(path.getFileName().toString());
+			try (InputStream in = url.openStream()) {
+				file.create(in, true, null);
+			}
+		}
+
+		ILaunchManager launchManager = DebugPlugin.getDefault().getLaunchManager();
+		fFeatureBasedWithStartLevels = launchManager
+				.getLaunchConfiguration(project.getFile(
+	}
+
+	@Test
+	public void testOldEntryWithoutConfigurationHasDefaults() throws Exception {
+		checkStartLevels(
+	}
+
+	@Test
+	public void testUseConfiguredStartLevels() throws Exception {
+		checkStartLevels(
+	}
+
+	@Test
+	public void testIgnoreConfiguredStartLevelsOfUncheckedPlugin() throws Exception {
+		checkStartLevels(
+	}
+
+	private void checkStartLevels(String pluginId, String expectedStartLevels) throws CoreException {
+		Map<IPluginModelBase, String> bundleMap = BundleLauncherHelper.getMergedBundleMap(fFeatureBasedWithStartLevels,
+				false);
+		String actualLevels = bundleMap.entrySet().stream()
+				.filter(e -> pluginId.equals(e.getKey().getPluginBase().getId())).map(e -> e.getValue()).findFirst()
+				.orElseThrow(() -> new AssertionFailedError(
+
+		assertThat(
+
+	}
+}

原文件: ui/org.eclipse.pde.ui.tests/tests/launch/feature-based-with-startlevels.launch 
新文件: ui/org.eclipse.pde.ui.tests/tests/launch/feature-based-with-startlevels.launch
位置:  -0,0 +1,40  
+<?xml version=
+<launchConfiguration type=
+    <setAttribute key=
+        <setEntry value=
+        <setEntry value=
+        <setEntry value=
+    </setAttribute>
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+    <booleanAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <stringAttribute key=
+    <setAttribute key=
+        <setEntry value=
+    </setAttribute>
+    <booleanAttribute key=
+    <stringAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+    <booleanAttribute key=
+</launchConfiguration>

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/FeatureBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/FeatureBlock.java
位置:  -649,6 +649,11   public class FeatureBlock {
 			return fPluginModelBase.getPluginBase().getVersion();
 		}
 
+		public String buildEntry(boolean isChecked) {
+			IPluginBase base = fPluginModelBase.getPluginBase();
+			return String.join(
+		}
+
 	}
 
 	class FeatureLaunchModel {
位置:  -1098,8 +1103,7   public class FeatureBlock {
 				featuresEntry.add(buffer.toString());
 			} else if (model instanceof PluginLaunchModel) {
 				PluginLaunchModel pluginLaunchModel = (PluginLaunchModel) model;
-				String entry = BundleLauncherHelper.writeAdditionalPluginsEntry(pluginLaunchModel.getPluginModelBase(), pluginLaunchModel.getPluginResolution(), true);
-				pluginsEntry.add(entry);
+				pluginsEntry.add(pluginLaunchModel.buildEntry(true));
 				checkPluginLaunchModels.add(pluginLaunchModel);
 			}
 		}
位置:  -1107,8 +1111,7   public class FeatureBlock {
 		for (PluginLaunchModel uncheckedPluginLaunchModel : fAdditionalPlugins) {
 			if (checkPluginLaunchModels.contains(uncheckedPluginLaunchModel))
 				continue;
-			String entry = BundleLauncherHelper.writeAdditionalPluginsEntry(uncheckedPluginLaunchModel.getPluginModelBase(), uncheckedPluginLaunchModel.getPluginResolution(), false);
-			pluginsEntry.add(entry);
+			pluginsEntry.add(uncheckedPluginLaunchModel.buildEntry(false));
 		}
 		config.setAttribute(IPDELauncherConstants.SELECTED_FEATURES, featuresEntry);
 		config.setAttribute(IPDELauncherConstants.ADDITIONAL_PLUGINS, pluginsEntry);

---------------------------167---------------------------
需求名称: Bug 474156 - Run API Tools builder in the Gerrit verification build
创建时间: 2019-06-21	13:07:03
修改时间: 2019-06-21	13:07:03

原文件: apitools/.gitignore 
新文件: apitools/.gitignore
位置:  -0,0 +1  
+/target/

原文件: ds/.gitignore 
新文件: ds/.gitignore
位置:  -0,0 +1  
+/target/

原文件: u
原文件: .gitignore 
新文件: ua/.gitignore
位置:  -0,0 +1  
+/target/

原文件: ui/.gitignore 
新文件: ui/.gitignore
位置:  -0,0 +1  
+/target/

原文件: ui/org.eclipse.pde.launching/.settings/org.eclipse.pde.prefs 
新文件: ui/org.eclipse.pde.launching/.settings/org.eclipse.pde.prefs
位置:  -25,7 +25,7   compilers.p.unknown-class=1
 compilers.p.unknown-element=1
 compilers.p.unknown-identifier=1
 compilers.p.unknown-resource=1
-compilers.p.unresolved-ex-points=0
+compilers.p.unresolved-ex-points=1
 compilers.p.unresolved-import=0
 compilers.s.create-docs=false
 compilers.s.doc-folder=doc

原文件: ui/org.eclipse.pde.ui.tests.smartimport/pom.xml 
新文件: ui/org.eclipse.pde.ui.tests.smartimport/pom.xml
位置:  -25,6 +25,7  
 		<tycho.test.jvmArgs>-Xmx512m</tycho.test.jvmArgs>
 		<surefire.timeout>1200</surefire.timeout>
 		<platformSystemProperties></platformSystemProperties>
+		<skipAPIAnalysis>true</skipAPIAnalysis>
 	</properties>
 
 	<build>

---------------------------168---------------------------
需求名称: Bug 545051 - Common place in PDE to designate "latest supported" JDK 9+
创建时间: 2019-06-20	01:57:22
修改时间: 2019-06-21	03:00:42

原文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/ee/EnvironmentAnalyzerDelegate.java 
新文件: ui/org.eclipse.pde.ui.tests/src/org/eclipse/pde/ui/tests/ee/EnvironmentAnalyzerDelegate.java
位置:  -1,5 +1,5  
 /*******************************************************************************
- * Copyright (c) 2008, 2018 IBM Corporation and others.
+ * Copyright (c) 2008, 2019 IBM Corporation and others.
  *
  * This program and the accompanying materials
  * are made available under the terms of the Eclipse Public License 2.0
位置:  -13,9 +13,10  
  *******************************************************************************/
 package org.eclipse.pde.ui.tests.ee;
 
-import java.util.ArrayList;
+import java.util.*;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.jdt.core.JavaCore;
 import org.eclipse.jdt.launching.*;
 import org.eclipse.jdt.launching.environments.*;
 
位置:  -38,16 +39,14   public class EnvironmentAnalyzerDelegate implements IExecutionEnvironmentAnalyze
 		String javaVersion = vm2.getJavaVersion();
 		if (javaVersion != null) {
 			IExecutionEnvironment env = JavaRuntime.getExecutionEnvironmentsManager().getEnvironment(EE_NO_SOUND);
-			// TODO: use common place for Java versions in PDE, see bug 545051
-			String[] compatible = new String[] { 
-			for (String element : compatible) {
+			List<String> allVersions = JavaCore.getAllVersions();
+			List<String> compatibleList = allVersions.subList(3, allVersions.size());
+			Collections.reverse(compatibleList);
+			for (String element : compatibleList) {
 				if (javaVersion.startsWith(element)) {
 					result.add(new CompatibleEnvironment(env, false));
 				}
 			}
-			if (javaVersion.startsWith(
-				result.add(new CompatibleEnvironment(env, true));
-			}
 		}
 		return result.toArray(new CompatibleEnvironment[result.size()]);
 

---------------------------169---------------------------
需求名称: Use addAll, deleteAll instead of looping through a collection
创建时间: 2019-06-20	13:05:29
修改时间: 2019-06-20	16:38:04

原文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/refactoring/RefactoringUtils.java 
新文件: apitools/org.eclipse.pde.api.tools.ui/src/org/eclipse/pde/api/tools/ui/internal/refactoring/RefactoringUtils.java
位置:  -13,6 +13,7  
  *******************************************************************************/
 package org.eclipse.pde.api.tools.ui.internal.refactoring;
 
+import java.util.Collections;
 import java.util.HashSet;
 
 import org.eclipse.core.resources.IProject;
位置:  -114,9 +115,7   public class RefactoringUtils {
 					continue;
 				}
 				fs = store.getFilters(resource);
-				for (IApiProblemFilter element : fs) {
-					filters.add(element);
-				}
+				Collections.addAll(filters, fs);
 			} catch (JavaModelException jme) {
 				// do nothing
 			}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/FilterStore.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/FilterStore.java
位置:  -19,6 +19,7   import java.io.IOException;
 import java.io.InputStream;
 import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Set;
位置:  -95,9 +96,7   public class FilterStore implements IApiFilterStore {
 				globalFilters = new HashSet<>();
 				fFilterMap.put(GLOBAL, globalFilters);
 			}
-			for (IApiProblemFilter filter : filters) {
-				globalFilters.add(filter);
-			}
+			Collections.addAll(globalFilters, filters);
 		}
 	}
 

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ProjectApiDescription.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/ProjectApiDescription.java
位置:  -14,6 +14,7  
 package org.eclipse.pde.api.tools.internal;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
位置:  -649,9 +650,7   public class ProjectApiDescription extends ApiDescription {
 				IResource resource = root.getCorrespondingResource();
 				if (resource != null &amp;&amp; resource.getProject().equals(getJavaProject().getProject())) {
 					IJavaElement[] children = root.getChildren();
-					for (IJavaElement element : children) {
-						local.add(element);
-					}
+					Collections.addAll(local, children);
 				}
 			}
 		} catch (JavaModelException e) {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/builder/BaseApiAnalyzer.java
位置:  -23,6 +23,7   import java.io.StringWriter;
 import java.nio.charset.StandardCharsets;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
位置:  -648,9 +649,7   public class BaseApiAnalyzer implements IApiAnalyzer {
 					if (resource != null) {
 						filters = store.getUnusedFilters(resource, type, null);
 						if (autoremove) {
-							for (IApiProblemFilter filter : filters) {
-								toremove.add(filter);
-							}
+							Collections.addAll(toremove, filters);
 							continue;
 						}
 						createUnusedApiFilterProblems(filters);
位置:  -662,9 +661,7   public class BaseApiAnalyzer implements IApiAnalyzer {
 			} else {
 				filters = store.getUnusedFilters(null, null, null);
 				if (autoremove) {
-					for (IApiProblemFilter filter : filters) {
-						toremove.add(filter);
-					}
+					Collections.addAll(toremove, filters);
 					removeUnusedProblemFilters(store, toremove, monitor);
 				} else {
 					// full build, clean up all old markers

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/ClassFileComparator.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/comparator/ClassFileComparator.java
位置:  -14,6 +14,7  
 package org.eclipse.pde.api.tools.internal.comparator;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
位置:  -1768,17 +1769,13   public class ClassFileComparator {
 		List<String> list1 = null;
 		if (names1 != null) {
 			list1 = new ArrayList<>(names1.length);
-			for (int i = 0; i < names1.length; i++) {
-				list1.add(names1[i]);
-			}
+			Collections.addAll(list1, names1);
 		}
 		String[] names2 = method2.getExceptionNames();
 		List<String> list2 = null;
 		if (names2 != null) {
 			list2 = new ArrayList<>(names2.length);
-			for (int i = 0; i < names2.length; i++) {
-				list2.add(names2[i]);
-			}
+			Collections.addAll(list2, names2);
 		}
 		if (names1 != null) {
 			if (names2 == null) {

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/AbstractApiTypeContainer.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/AbstractApiTypeContainer.java
位置:  -15,6 +15,7   package org.eclipse.pde.api.tools.internal.model;
 
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 
位置:  -156,9 +157,7   public abstract class AbstractApiTypeContainer extends ApiElement implements IAp
 		IApiTypeContainer[] containers = getApiTypeContainers();
 		for (IApiTypeContainer container : containers) {
 			String[] packageNames = container.getPackageNames();
-			for (String packageName : packageNames) {
-				names.add(packageName);
-			}
+			Collections.addAll(names, packageNames);
 		}
 		String[] result = new String[names.size()];
 		names.toArray(result);
位置:  -227,9 +226,7   public abstract class AbstractApiTypeContainer extends ApiElement implements IAp
 		} else {
 			fApiTypeContainers = new ArrayList<>(containers.length);
 		}
-		for (IApiTypeContainer container : containers) {
-			fApiTypeContainers.add(container);
-		}
+		Collections.addAll(fApiTypeContainers, containers);
 	}
 
 	@Override

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/BundleComponent.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/model/BundleComponent.java
位置:  -25,6 +25,7   import java.net.URL;
 import java.nio.charset.StandardCharsets;
 import java.text.MessageFormat;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.Enumeration;
 import java.util.HashSet;
 import java.util.Hashtable;
位置:  -428,9 +429,7   public class BundleComponent extends Component {
 			comp = (IApiComponent) container.getAncestor(IApiElement.COMPONENT);
 			if (comp != null &amp;&amp; comp.getSymbolicName().equals(getSymbolicName())) {
 				String[] packageNames = container.getPackageNames();
-				for (String packageName : packageNames) {
-					names.add(packageName);
-				}
+				Collections.addAll(names, packageNames);
 			}
 		}
 		return names;

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/provisional/Factory.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/provisional/Factory.java
位置:  -14,6 +14,7  
 package org.eclipse.pde.api.tools.internal.provisional;
 
 import java.text.MessageFormat;
+import java.util.Collections;
 import java.util.LinkedList;
 
 import org.eclipse.core.runtime.CoreException;
位置:  -161,9 +162,7   public class Factory {
 	 */
 	public static IApiTypeContainer newScope(IApiComponent[] components) throws CoreException {
 		LinkedList<IApiTypeContainer> compList = new LinkedList<>();
-		for (IApiComponent component : components) {
-			compList.add(component);
-		}
+		Collections.addAll(compList, components);
 		CompositeApiTypeContainer scope = new CompositeApiTypeContainer(components[0].getBaseline(), compList);
 		return scope;
 	}

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/UseReportConverter.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/UseReportConverter.java
位置:  -1033,9 +1033,7   public class UseReportConverter extends HTMLConvertor {
 			if (file.exists()) {
 				String[] missingBundles = getMissingBundles(file);
 				hasMissing = missingBundles.length > 0;
-				for (String missingBundle : missingBundles) {
-					sorted.add(missingBundle);
-				}
+				Collections.addAll(sorted, missingBundles);
 			}
 			StringBuilder buffer = new StringBuilder();
 			buffer.append(HTML_HEADER);

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/UseScanParser.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/search/UseScanParser.java
位置:  -483,9 +483,7   public class UseScanParser {
 	 */
 	File[] sort(File[] files) {
 		List<File> sorted = new ArrayList<>(files.length + 2);
-		for (File file : files) {
-			sorted.add(file);
-		}
+		Collections.addAll(sorted, files);
 
 		Collections.sort(sorted, Util.filesorter);
 		return sorted.toArray(new File[sorted.size()]);

原文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/Util.java 
新文件: apitools/org.eclipse.pde.api.tools/src/org/eclipse/pde/api/tools/internal/util/Util.java
位置:  -42,6 +42,7   import java.nio.charset.UnsupportedCharsetException;
 import java.text.MessageFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.Comparator;
 import java.util.Enumeration;
 import java.util.HashMap;
位置:  -2395,9 +2396,7   public final class Util {
 	public static Set<String> convertAsSet(String[] values) {
 		Set<String> set = new HashSet<>();
 		if (values != null &amp;&amp; values.length != 0) {
-			for (String value : values) {
-				set.add(value);
-			}
+			Collections.addAll(set, values);
 		}
 		return set;
 	}

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationReportConversionTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIDeprecationReportConversionTask.java
位置:  -231,9 +231,7   public class APIDeprecationReportConversionTask extends Task {
 	private void dumpEntries(Map<String, List<Entry>> entries, StringBuilder buffer) {
 		dumpHeader(buffer);
 		List<Map.Entry<String, List<Entry>>> allEntries = new ArrayList<>();
-		for (Map.Entry<String, List<Entry>> entry : entries.entrySet()) {
-			allEntries.add(entry);
-		}
+		allEntries.addAll(entries.entrySet());
 		Collections.sort(allEntries, (o1, o2) -> {
 			return o1.getKey().compareTo(o2.getKey());
 		});

原文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeReportConversionTask.java 
新文件: apitools/org.eclipse.pde.api.tools/src_ant/org/eclipse/pde/api/tools/internal/tasks/APIFreezeReportConversionTask.java
位置:  -343,9 +343,7   public class APIFreezeReportConversionTask extends Task {
 	private void dumpEntries(Map<String, List<Entry>> entries, Map<String, List<String>> resolverErrors, StringBuilder buffer) {
 		dumpHeader(buffer);
 		List<Map.Entry<String, List<Entry>>> allEntries = new ArrayList<>();
-		for (Map.Entry<String, List<Entry>> entry : entries.entrySet()) {
-			allEntries.add(entry);
-		}
+		allEntries.addAll(entries.entrySet());
 		Collections.sort(allEntries, (o1, o2) -> {
 			return o1.getKey().compareTo(o2.getKey());
 		});

原文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/editor/toc/HelpEditorUtil.java 
新文件: ua/org.eclipse.pde.ua.ui/src/org/eclipse/pde/internal/ua/ui/editor/toc/HelpEditorUtil.java
位置:  -17,6 +17,7   import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
 import java.io.InputStream;
+import java.util.Collections;
 import java.util.HashSet;
 import java.util.Locale;
 
位置:  -42,9 +43,7   public class HelpEditorUtil {
 	private static HashSet<String> pageExtensionSet = new HashSet<>(pageExtensions.length);
 
 	private static void populateHashSet() {
-		for (String pageExtension : pageExtensions) {
-			pageExtensionSet.add(pageExtension);
-		}
+		Collections.addAll(pageExtensionSet, pageExtensions);
 	}
 
 	public static boolean hasValidPageExtension(IPath path) {

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/BundleManifestSourceLocationManager.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/BundleManifestSourceLocationManager.java
位置:  -15,6 +15,7   package org.eclipse.pde.internal.core;
 
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.HashSet;
 import java.util.LinkedHashMap;
 import java.util.Map;
位置:  -183,9 +184,7   public class BundleManifestSourceLocationManager {
 	private void addSourceRoots(String rootEntryDirective, Set<String> pluginSourceRoots) {
 		if (rootEntryDirective != null) {
 			String[] roots = rootEntryDirective.split(
-			for (String root : roots) {
-				pluginSourceRoots.add(root);
-			}
+			Collections.addAll(pluginSourceRoots, roots);
 		} else {
 			pluginSourceRoots.add(
 		}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/ClasspathHelper.java
位置:  -19,6 +19,7   import java.io.IOException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Dictionary;
 import java.util.HashMap;
 import java.util.Hashtable;
位置:  -151,9 +152,7   public class ClasspathHelper {
 				continue;
 			}
 			IPath[] paths = getDevPaths(model, checkExcluded, null);
-			for (IPath path : paths) {
-				list.add(path);
-			}
+			Collections.addAll(list, paths);
 		}
 		String entry = writeEntry(list.toArray(new IPath[list.size()]));
 		return entry.length() > 0 ? entry : 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/MinimalState.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/MinimalState.java
位置:  -16,6 +16,7   package org.eclipse.pde.internal.core;
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.Dictionary;
 import java.util.Hashtable;
 import java.util.List;
位置:  -156,9 +157,7   public class MinimalState {
 		List<BundleDescription> bundles = new ArrayList<>();
 		for (String symbolicName : symbolicNames) {
 			BundleDescription[] descriptions = fState.getBundles(symbolicName);
-			for (BundleDescription description : descriptions) {
-				bundles.add(description);
-			}
+			Collections.addAll(bundles, descriptions);
 		}
 		return fState.resolve(bundles.toArray(new BundleDescription[bundles.size()]));
 	}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/PluginLibrary.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/plugin/PluginLibrary.java
位置:  -15,6 +15,7   package org.eclipse.pde.internal.core.plugin;
 
 import java.io.PrintWriter;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.Locale;
 import java.util.Vector;
 import org.eclipse.core.runtime.CoreException;
位置:  -183,9 +184,7   public class PluginLibrary extends PluginObject implements IPluginLibrary {
 			return null;
 		}
 		ArrayList<String> list = new ArrayList<>();
-		for (String element : array) {
-			list.add(element);
-		}
+		Collections.addAll(list, array);
 		return list;
 	}
 

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectDescription.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/BundleProjectDescription.java
位置:  -16,6 +16,7   package org.eclipse.pde.internal.core.project;
 import java.io.IOException;
 import java.net.URI;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
位置:  -247,9 +248,7   public class BundleProjectDescription implements IBundleProjectDescription {
 					String libName = element.getValue();
 					IBundleClasspathEntry[] entries = getClasspathEntries(project, build, libName);
 					if (entries != null) {
-						for (IBundleClasspathEntry entry : entries) {
-							collect.add(entry);
-						}
+						Collections.addAll(collect, entries);
 					}
 				}
 				classpath = collect.toArray(new IBundleClasspathEntry[collect.size()]);
位置:  -340,9 +339,7   public class BundleProjectDescription implements IBundleProjectDescription {
 					String[] tokens = entry.getTokens();
 					if (tokens != null &amp;&amp; tokens.length > 0) {
 						List<String> strings = new ArrayList<>();
-						for (String token : tokens) {
-							strings.add(token);
-						}
+						Collections.addAll(strings, tokens);
 						// remove the default entries
 						strings.remove(
 						String[] names = ProjectModifyOperation.getLibraryNames(this);

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/ProjectModifyOperation.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/project/ProjectModifyOperation.java
位置:  -14,6 +14,7  
 package org.eclipse.pde.internal.core.project;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.LinkedHashSet;
位置:  -301,9 +302,7   public class ProjectModifyOperation {
 				}
 				if (!add.isEmpty()) {
 					List<IClasspathEntry> all = new ArrayList<>();
-					for (IClasspathEntry cpe : rawClasspath) {
-						all.add(cpe);
-					}
+					Collections.addAll(all, rawClasspath);
 					all.addAll(add);
 					javaProject.setRawClasspath(all.toArray(new IClasspathEntry[all.size()]), null);
 				}
位置:  -448,14 +447,10   public class ProjectModifyOperation {
 		IProjectDescription projectDescription = project.getDescription();
 		String[] curr = projectDescription.getNatureIds();
 		Set<String> before = new HashSet<>();
-		for (String element : curr) {
-			before.add(element);
-		}
+		Collections.addAll(before, curr);
 		String[] natureIds = description.getNatureIds();
 		Set<String> after = new HashSet<>();
-		for (String natureId : natureIds) {
-			after.add(natureId);
-		}
+		Collections.addAll(after, natureIds);
 		if (!before.equals(after)) {
 			projectDescription.setNatureIds(natureIds);
 			project.setDescription(projectDescription, null);

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/schema/Schema.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/schema/Schema.java
位置:  -328,9 +328,7   public class Schema extends PlatformObject implements ISchema {
 				continue;
 			}
 			ISchemaElement[] ielements = schema.getElements();
-			for (ISchemaElement element : ielements) {
-				result.add(element);
-			}
+			Collections.addAll(result, ielements);
 		}
 		return (ISchemaElement[]) result.toArray(new ISchemaElement[result.size()]);
 	}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetDefinition.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetDefinition.java
位置:  -545,9 +545,7   public class TargetDefinition implements ITargetDefinition {
 				for (ITargetLocation container : containers) {
 					TargetBundle[] bundles = container.getBundles();
 					if (bundles != null) {
-						for (TargetBundle rb : bundles) {
-							all.add(rb);
-						}
+						Collections.addAll(all, bundles);
 					}
 				}
 
位置:  -614,9 +612,7   public class TargetDefinition implements ITargetDefinition {
 				// Add the required plugins from the feature to the list of includes
 				if (bestMatch != null) {
 					NameVersionDescriptor[] plugins = bestMatch.getPlugins();
-					for (NameVersionDescriptor plugin : plugins) {
-						included.add(plugin);
-					}
+					Collections.addAll(included, plugins);
 				} else {
 					missingFeatures.add(element);
 				}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence36Helper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence36Helper.java
位置:  -16,6 +16,7   package org.eclipse.pde.internal.core.target;
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
位置:  -105,9 +106,7   public class TargetPersistence36Helper {
 						definition.setIncluded(included.toArray(new NameVersionDescriptor[included.size()]));
 					} else {
 						List<NameVersionDescriptor> allIncluded = new ArrayList<>();
-						for (NameVersionDescriptor nameVersionDescriptor : previousIncluded) {
-							allIncluded.add(nameVersionDescriptor);
-						}
+						Collections.addAll(allIncluded, previousIncluded);
 						allIncluded.addAll(included);
 						definition.setIncluded(allIncluded.toArray(new NameVersionDescriptor[included.size()]));
 					}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/target/TargetPersistence38Helper.java
位置:  -15,6 +15,7   package org.eclipse.pde.internal.core.target;
 
 import java.io.StringWriter;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import javax.xml.transform.OutputKeys;
 import javax.xml.transform.Transformer;
位置:  -136,9 +137,7   public class TargetPersistence38Helper {
 						definition.setIncluded(included.toArray(new NameVersionDescriptor[included.size()]));
 					} else {
 						List<NameVersionDescriptor> allIncluded = new ArrayList<>();
-						for (NameVersionDescriptor nameVersionDescriptor : previousIncluded) {
-							allIncluded.add(nameVersionDescriptor);
-						}
+						Collections.addAll(allIncluded, previousIncluded);
 						allIncluded.addAll(included);
 						definition.setIncluded(allIncluded.toArray(new NameVersionDescriptor[included.size()]));
 					}

原文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/VMUtil.java 
新文件: ui/org.eclipse.pde.core/src/org/eclipse/pde/internal/core/util/VMUtil.java
位置:  -15,6 +15,7  
 package org.eclipse.pde.internal.core.util;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.IStatus;
位置:  -34,9 +35,7   public class VMUtil {
 		IVMInstallType[] types = JavaRuntime.getVMInstallTypes();
 		for (IVMInstallType type : types) {
 			IVMInstall[] installs = type.getVMInstalls();
-			for (IVMInstall install : installs) {
-				res.add(install);
-			}
+			Collections.addAll(res, installs);
 		}
 		return res.toArray(new IVMInstall[res.size()]);
 	}

原文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/plugin/PluginParentNode.java 
新文件: ui/org.eclipse.pde.core/text/org/eclipse/pde/internal/core/text/plugin/PluginParentNode.java
位置:  -14,6 +14,7  
 package org.eclipse.pde.internal.core.text.plugin;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.pde.core.IModelChangedEvent;
 import org.eclipse.pde.core.plugin.IPluginObject;
位置:  -57,9 +58,7   public class PluginParentNode extends PluginObjectNode implements IPluginParent
 	public IPluginObject[] getChildren() {
 		ArrayList<IDocumentElementNode> result = new ArrayList<>();
 		IDocumentElementNode[] nodes = getChildNodes();
-		for (IDocumentElementNode childNode : nodes) {
-			result.add(childNode);
-		}
+		Collections.addAll(result, nodes);
 
 		return result.toArray(new IPluginObject[result.size()]);
 	}

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/EclipseApplicationLaunchConfiguration.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/EclipseApplicationLaunchConfiguration.java
位置:  -102,9 +102,7   public class EclipseApplicationLaunchConfiguration extends AbstractPDELaunchConf
 			programArgs.add(
 
 		String[] args = super.getProgramArguments(configuration);
-		for (String arg : args) {
-			programArgs.add(arg);
-		}
+		Collections.addAll(programArgs, args);
 
 		if (!programArgs.contains(
 			if (TargetPlatformHelper.getTargetVersion() >= 3.1) {

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/EquinoxLaunchConfiguration.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/EquinoxLaunchConfiguration.java
位置:  -62,9 +62,7   public class EquinoxLaunchConfiguration extends AbstractPDELaunchConfiguration {
 		programArgs.add(
 
 		String[] args = super.getProgramArguments(configuration);
-		for (String arg : args) {
-			programArgs.add(arg);
-		}
+		Collections.addAll(programArgs, args);
 		return programArgs.toArray(new String[programArgs.size()]);
 	}
 

原文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/PDESourcePathProvider.java 
新文件: ui/org.eclipse.pde.launching/src/org/eclipse/pde/launching/PDESourcePathProvider.java
位置:  -14,6 +14,7  
 package org.eclipse.pde.launching;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.resources.IResource;
位置:  -88,9 +89,7   public class PDESourcePathProvider extends StandardSourcePathProvider {
 				}
 			} else {
 				IRuntimeClasspathEntry[] resolved = JavaRuntime.resolveRuntimeClasspathEntry(entrie, configuration);
-				for (IRuntimeClasspathEntry element : resolved) {
-					all.add(element);
-				}
+				Collections.addAll(all, resolved);
 			}
 		}
 		return all.toArray(new IRuntimeClasspathEntry[all.size()]);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/FindClassResolutionsOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/correction/java/FindClassResolutionsOperation.java
位置:  -377,9 +377,7   public class FindClassResolutionsOperation implements IRunnableWithProgress {
 			ExportPackageDescription[] visiblePkgs = helper.getVisiblePackages(desc);
 
 			HashSet<ExportPackageDescription> set = new HashSet<>();
-			for (ExportPackageDescription visiblePackage : visiblePkgs) {
-				set.add(visiblePackage);
-			}
+			Collections.addAll(set, visiblePkgs);
 			return set;
 		}
 		return Collections.emptySet();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDEEditorLaunchManager.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDEEditorLaunchManager.java
位置:  -13,6 +13,7  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.editor;
 
+import java.util.Collections;
 import java.util.LinkedList;
 import java.util.List;
 import org.eclipse.jface.dialogs.IDialogSettings;
位置:  -90,9 +91,7   public class PDEEditorLaunchManager {
 		IDialogSettings settings = PDEPlugin.getDefault().getDialogSettingsSection(SETTINGS_SECTION);
 		String[] result = settings.getArray(SETTINGS_RECENT_LAUNCHES);
 		if (result != null) {
-			for (String resultString : result) {
-				recentLaunches.add(resultString);
-			}
+			Collections.addAll(recentLaunches, result);
 		}
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDELauncherFormEditor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/PDELauncherFormEditor.java
位置:  -145,9 +145,7   public abstract class PDELauncherFormEditor extends MultiSourceEditor {
 				String[] values = PDEProject.getLaunchShortcuts(project);
 				if (values != null) {
 					specificIds = new HashSet<>();
-					for (String value : values) {
-						specificIds.add(value);
-					}
+					Collections.addAll(specificIds, values);
 				}
 			}
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/ActionMenu.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/actions/ActionMenu.java
位置:  -26,9 +26,7   public class ActionMenu extends Action implements IMenuCreator {
 
 	public ActionMenu(LauncherAction[] actions) {
 		fActions = new LinkedList<>();
-		for (LauncherAction action : actions) {
-			fActions.add(action);
-		}
+		Collections.addAll(fActions, actions);
 		if (!fActions.isEmpty()) {
 			setToolTipText(fActions.get(0).getToolTipText());
 			setImageDescriptor(fActions.get(0).getImageDescriptor());

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/build/BuildContentsSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/build/BuildContentsSection.java
位置:  -246,10 +246,8   public abstract class BuildContentsSection extends TableSection implements IReso
 			if (excludes != null)
 				exclTokens = excludes.getTokens();
 			Set<String> temp = new TreeSet<>();
-			for (String inclToken : inclTokens)
-				temp.add(inclToken);
-			for (String exclToken : exclTokens)
-				temp.add(exclToken);
+			Collections.addAll(temp, inclTokens);
+			Collections.addAll(temp, exclTokens);
 			Iterator<String> iter = temp.iterator();
 			while (iter.hasNext()) {
 				String resource = iter.next().toString();

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/category/CategoryOutlinePage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/category/CategoryOutlinePage.java
位置:  -14,6 +14,7   t SPDX-License-Identifier: EPL-2.0
 package org.eclipse.pde.internal.ui.editor.category;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashSet;
 import org.eclipse.jface.viewers.ILabelProvider;
 import org.eclipse.jface.viewers.LabelProvider;
位置:  -41,9 +42,7   public class CategoryOutlinePage extends FormOutlinePage {
 				if (page.getId().equals(IUsPage.PAGE_ID)) {
 					ArrayList<IWritable> result = new ArrayList<>();
 					ISiteCategoryDefinition[] catDefs = site.getCategoryDefinitions();
-					for (ISiteCategoryDefinition catDef : catDefs) {
-						result.add(catDef);
-					}
+					Collections.addAll(result, catDefs);
 					ISiteFeature[] features = site.getFeatures();
 					for (ISiteFeature feature : features) {
 						if (feature.getCategories().length == 0)

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/contentassist/ManifestContentAssistProcessor.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/contentassist/ManifestContentAssistProcessor.java
位置:  -742,8 +742,7   public class ManifestContentAssistProcessor extends TypePackageCompletionProcess
 	// if you use java.util.Arrays.asList(), we get an UnsupportedOperation later in the code
 	protected final ArrayList<Object> initializeNewList(Object[] values) {
 		ArrayList<Object> list = new ArrayList<>(values.length);
-		for (Object value : values)
-			list.add(value);
+		Collections.addAll(list, values);
 		return list;
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/DependencyManagementSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/DependencyManagementSection.java
位置:  -557,9 +557,7   public class DependencyManagementSection extends TableSection implements IPlugin
 			return secondaryDepSet;
 		}
 		// Add all token values to the dependencies set
-		for (String token : tokens) {
-			secondaryDepSet.add(token);
-		}
+		Collections.addAll(secondaryDepSet, tokens);
 		return secondaryDepSet;
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/LibraryVisibilitySection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/plugin/LibraryVisibilitySection.java
位置:  -16,6 +16,7   package org.eclipse.pde.internal.ui.editor.plugin;
 
 import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
 
+import java.util.Collections;
 import java.util.Vector;
 import org.eclipse.core.resources.IProject;
 import org.eclipse.core.runtime.CoreException;
位置:  -219,9 +220,7   public class LibraryVisibilitySection extends TableSection implements IPartSelec
 				names = fCurrentLibrary.getContentFilters();
 				Vector<String> existing = new Vector<>();
 				if (names != null) {
-					for (String name : names) {
-						existing.add(name);
-					}
+					Collections.addAll(existing, names);
 				}
 				ILabelProvider labelProvider = new JavaElementLabelProvider();
 				PackageSelectionDialog dialog = new PackageSelectionDialog(fPackageExportViewer.getTable().getShell(), labelProvider, JavaCore.create(project), existing, true);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/PropertiesSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/product/PropertiesSection.java
位置:  -389,9 +389,7   public class PropertiesSection extends TableSection {
 	private Set<IConfigurationProperty> getExistingProperties() {
 		Set<IConfigurationProperty> result = new HashSet<>();
 		IConfigurationProperty[] properties = getProduct().getConfigurationProperties();
-		for (IConfigurationProperty property : properties) {
-			result.add(property);
-		}
+		Collections.addAll(result, properties);
 		return result;
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaIdentifierAttributeDetails.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaIdentifierAttributeDetails.java
位置:  -15,6 +15,7   package org.eclipse.pde.internal.ui.editor.schema;
 
 import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
 
+import java.util.Collections;
 import java.util.Vector;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.jface.window.Window;
位置:  -143,9 +144,7   public class SchemaIdentifierAttributeDetails extends SchemaAttributeDetails {
 				java.util.List<ISchemaEnumeration> vres = new Vector<>();
 				if (res != null) {
 					ISchemaEnumeration[] currRes = res.getChildren();
-					for (ISchemaEnumeration currRe : currRes) {
-						vres.add(currRe);
-					}
+					Collections.addAll(vres, currRes);
 				}
 				vres.add(new SchemaEnumeration(getAttribute().getSchema(), text));
 				if (res == null)

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaStringAttributeDetails.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/schema/SchemaStringAttributeDetails.java
位置:  -15,6 +15,7   package org.eclipse.pde.internal.ui.editor.schema;
 
 import static org.eclipse.swt.events.SelectionListener.widgetSelectedAdapter;
 
+import java.util.Collections;
 import java.util.Vector;
 import org.eclipse.jface.viewers.*;
 import org.eclipse.jface.window.Window;
位置:  -127,9 +128,7   public class SchemaStringAttributeDetails extends SchemaAttributeDetails {
 				java.util.List<ISchemaEnumeration> vres = new Vector<>();
 				if (res != null) {
 					ISchemaEnumeration[] currRes = res.getChildren();
-					for (ISchemaEnumeration currRe : currRes) {
-						vres.add(currRe);
-					}
+					Collections.addAll(vres, currRes);
 				}
 				vres.add(new SchemaEnumeration(getAttribute().getSchema(), text));
 				if (res == null)

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/site/CategorySection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/site/CategorySection.java
位置:  -75,9 +75,7   public class CategorySection extends TreeSection implements IFeatureModelListene
 			// model = (ISite) inputElement;
 			ArrayList<IWritable> result = new ArrayList<>();
 			ISiteCategoryDefinition[] catDefs = fModel.getSite().getCategoryDefinitions();
-			for (ISiteCategoryDefinition catDef : catDefs) {
-				result.add(catDef);
-			}
+			Collections.addAll(result, catDefs);
 			ISiteFeature[] features = fModel.getSite().getFeatures();
 			for (ISiteFeature feature : features) {
 				if (feature.getCategories().length == 0)

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/site/SiteOutlinePage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/site/SiteOutlinePage.java
位置:  -14,6 +14,7  
 package org.eclipse.pde.internal.ui.editor.site;
 
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashSet;
 import org.eclipse.jface.viewers.ILabelProvider;
 import org.eclipse.jface.viewers.LabelProvider;
位置:  -41,9 +42,7   public class SiteOutlinePage extends FormOutlinePage {
 				if (page.getId().equals(FeaturesPage.PAGE_ID)) {
 					ArrayList<IWritable> result = new ArrayList<>();
 					ISiteCategoryDefinition[] catDefs = site.getCategoryDefinitions();
-					for (ISiteCategoryDefinition catDef : catDefs) {
-						result.add(catDef);
-					}
+					Collections.addAll(result, catDefs);
 					ISiteFeature[] features = site.getFeatures();
 					for (ISiteFeature feature : features) {
 						if (feature.getCategories().length == 0)

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/targetdefinition/EnvironmentSection.java
位置:  -16,6 +16,7   package org.eclipse.pde.internal.ui.editor.targetdefinition;
 import org.eclipse.pde.core.target.ITargetDefinition;
 
 import java.lang.reflect.InvocationTargetException;
+import java.util.Collections;
 import java.util.TreeSet;
 import org.eclipse.core.runtime.Platform;
 import org.eclipse.pde.internal.ui.PDEPlugin;
位置:  -204,8 +205,7   public class EnvironmentSection extends SectionPart {
 		ITargetDefinition target = getTarget();
 		fOSChoices = new TreeSet<>();
 		String[] os = Platform.knownOSValues();
-		for (String osValue : os)
-			fOSChoices.add(osValue);
+		Collections.addAll(fOSChoices, os);
 		fOSChoices.add(
 		String fileValue = target.getOS();
 		if (fileValue != null)
位置:  -213,8 +213,7   public class EnvironmentSection extends SectionPart {
 
 		fWSChoices = new TreeSet<>();
 		String[] ws = Platform.knownWSValues();
-		for (String wsValue : ws)
-			fWSChoices.add(wsValue);
+		Collections.addAll(fWSChoices, ws);
 		fWSChoices.add(
 		fileValue = target.getWS();
 		if (fileValue != null)
位置:  -222,8 +221,7   public class EnvironmentSection extends SectionPart {
 
 		fArchChoices = new TreeSet<>();
 		String[] arch = Platform.knownOSArchValues();
-		for (String archValue : arch)
-			fArchChoices.add(archValue);
+		Collections.addAll(fArchChoices, arch);
 		fArchChoices.add(
 		fileValue = target.getArch();
 		if (fileValue != null)
位置:  -235,8 +233,7   public class EnvironmentSection extends SectionPart {
 
 	private void initializeAllLocales() {
 		String[] nl = LocaleUtil.getLocales();
-		for (String localeValue : nl)
-			fNLChoices.add(localeValue);
+		Collections.addAll(fNLChoices, nl);
 		String fileValue = getTarget().getNL();
 		if (fileValue != null)
 			fNLChoices.add(LocaleUtil.expandLocaleName(fileValue));

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/PDEQuickAssistAssistant.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/editor/text/PDEQuickAssistAssistant.java
位置:  -232,9 +232,7   public class PDEQuickAssistAssistant extends QuickAssistAssistant {
 						SpellingAnnotation annotation = (SpellingAnnotation) key;
 						if (amodel.getPosition(annotation).overlapsWith(offset, 1)) {
 							ICompletionProposal[] proposals = annotation.getSpellingProblem().getProposals();
-							for (ICompletionProposal proposal : proposals) {
-								proposalSet.add(proposal);
-							}
+							Collections.addAll(proposalSet, proposals);
 						}
 					}
 					continue;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/JUnitProgramBlock.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/launcher/JUnitProgramBlock.java
位置:  -14,7 +14,7  
 package org.eclipse.pde.internal.ui.launcher;
 
 import org.eclipse.pde.launching.IPDELauncherConstants;
-
+import java.util.Collections;
 import java.util.TreeSet;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.debug.core.ILaunchConfiguration;
位置:  -48,9 +48,7   public class JUnitProgramBlock extends ProgramBlock {
 		TreeSet<String> result = new TreeSet<>();
 		result.add(PDEUIMessages.JUnitProgramBlock_headless);
 		String[] appNames = super.getApplicationNames();
-		for (String appName : appNames) {
-			result.add(appName);
-		}
+		Collections.addAll(result, appNames);
 		return result.toArray(new String[result.size()]);
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/SearchResult.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/SearchResult.java
位置:  -16,6 +16,7   package org.eclipse.pde.internal.ui.search;
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Collections;
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.runtime.IPath;
位置:  -96,9 +97,7   public class SearchResult extends AbstractTextSearchResult implements IEditorMat
 			if (o instanceof IFeaturePlugin) {
 				IFeaturePlugin object = (IFeaturePlugin) o;
 				if (isMatchContained(editor, object)) {
-					for (Match match : getMatches(object)) {
-						list.add(match);
-					}
+					Collections.addAll(list, getMatches(object));
 				}
 			}
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/DependencyExtentSearchResult.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/DependencyExtentSearchResult.java
位置:  -14,6 +14,7  
  *******************************************************************************/
 package org.eclipse.pde.internal.ui.search.dependencies;
 
+import java.util.Collections;
 import java.util.HashSet;
 import java.util.Set;
 import org.eclipse.jdt.core.*;
位置:  -66,9 +67,7   public class DependencyExtentSearchResult extends SearchResult {
 	private void collectMatches(Set<Match> matches, IJavaElement element) {
 		Match[] m = getMatches(element);
 		if (m.length != 0) {
-			for (Match elementMatch : m) {
-				matches.add(elementMatch);
-			}
+			Collections.addAll(matches, m);
 		}
 		if (element instanceof IParent) {
 			IParent parent = (IParent) element;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/PackageFinder.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/search/dependencies/PackageFinder.java
位置:  -236,8 +236,7   public class PackageFinder {
 						if (child instanceof IPackageFragment) {
 							IPackageFragment frag = (IPackageFragment) child;
 							IClassFile[] files = frag.getClassFiles();
-							for (IClassFile file : files)
-								classFiles.add(file);
+							Collections.addAll(classFiles, files);
 						}
 					}
 				} catch (JavaModelException e) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/CachedCheckboxTreeViewer.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/shared/CachedCheckboxTreeViewer.java
位置:  -185,9 +185,7   public class CachedCheckboxTreeViewer extends ContainerCheckedTreeViewer {
 			}
 
 			if (contentProvider == null) {
-				for (Object visibleObject : visible) {
-					checkState.add(visibleObject);
-				}
+				Collections.addAll(checkState, visible);
 			} else {
 				Set<Object> toCheck = new HashSet<>();
 				for (Object visibleObject : visible) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/ExtensionsFilterUtil.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/util/ExtensionsFilterUtil.java
位置:  -264,9 +264,7   public class ExtensionsFilterUtil {
 		List<String> propertyTestAttributes = new ArrayList<>();
 		if (isElementNameMatch(pluginElement, ELEMENT_PROPERTYTESTER)) {
 			Set<String> attributes = handlePropertyTester(new HashSet<String>(), pluginElement);
-			for (String attribute : attributes) {
-				propertyTestAttributes.add(attribute);
-			}
+			propertyTestAttributes.addAll(attributes);
 		}
 		return propertyTestAttributes;
 	}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/dependencies/DependenciesView.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/views/dependencies/DependenciesView.java
位置:  -572,9 +572,7   public class DependenciesView extends PageBookView implements IPreferenceConstan
 	 */
 	public void setHistoryEntries(String[] elems) {
 		fInputHistory.clear();
-		for (String elem : elems) {
-			fInputHistory.add(elem);
-		}
+		Collections.addAll(fInputHistory, elems);
 		updateHistoryEntries();
 	}
 

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/extension/PointSelectionPage.java
位置:  -158,13 +158,11   public class PointSelectionPage extends BaseWizardSelectionPage {
 				String id = plugin.getPluginBase().getId();
 				if (id.equals(fModel.getPluginBase().getId()))
 					continue;
-				for (IPluginExtensionPoint point : points)
-					extPoints.add(point);
+				Collections.addAll(extPoints, points);
 			}
 
 			IPluginExtensionPoint[] points = fModel.getPluginBase().getExtensionPoints();
-			for (IPluginExtensionPoint point : points)
-				extPoints.add(point);
+			Collections.addAll(extPoints, points);
 
 			return extPoints.toArray();
 		}

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/imports/PluginImportWizardFirstPage.java
位置:  -807,9 +807,7   public class PluginImportWizardFirstPage extends WizardPage {
 	public void configureBundleImportPages(IPluginModelBase[] models) {
 		// make a set of the models to import for quick lookup
 		Set<IPluginModelBase> modelsSet = new HashSet<>();
-		for (IPluginModelBase model : models) {
-			modelsSet.add(model);
-		}
+		Collections.addAll(modelsSet, models);
 		Map<IBundleImporter, List<ScmUrlImportDescription>> importerToImportees = new HashMap<>();
 		Iterator<Entry<IBundleImporter, ScmUrlImportDescription[]>> iterator = importerToInstructions.entrySet().iterator();
 		while (iterator.hasNext()) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewProjectCreationOperation.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/plugin/NewProjectCreationOperation.java
位置:  -349,15 +349,11   public class NewProjectCreationOperation extends WorkspaceModifyOperation {
 		TreeSet<String> set = new TreeSet<>();
 		if (fGenerator != null) {
 			String[] packages = fGenerator.getImportPackages();
-			for (String pkg : packages) {
-				set.add(pkg);
-			}
+			Collections.addAll(set, packages);
 		}
 		if (fContentWizard instanceof IBundleContentWizard) {
 			String[] packages = ((IBundleContentWizard) fContentWizard).getImportPackages();
-			for (String pkg : packages) {
-				set.add(pkg);
-			}
+			Collections.addAll(set, packages);
 		}
 		return set;
 	}
位置:  -407,9 +403,7   public class NewProjectCreationOperation extends WorkspaceModifyOperation {
 		ArrayList<IPluginReference> result = new ArrayList<>();
 		if (fGenerator != null) {
 			IPluginReference[] refs = fGenerator.getDependencies();
-			for (IPluginReference ref : refs) {
-				result.add(ref);
-			}
+			Collections.addAll(result, refs);
 		}
 
 		if (fContentWizard != null) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionContentPage.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/target/TargetDefinitionContentPage.java
位置:  -389,9 +389,7   public class TargetDefinitionContentPage extends TargetDefinitionPage {
 
 		fOSChoices = new TreeSet<>();
 		String[] os = Platform.knownOSValues();
-		for (String osValue : os) {
-			fOSChoices.add(osValue);
-		}
+		Collections.addAll(fOSChoices, os);
 		String pref = node.get(ICoreConstants.OS_EXTRA, EMPTY_STRING);
 		if (!EMPTY_STRING.equals(pref)) {
 			addExtraChoices(fOSChoices, pref);
位置:  -399,9 +397,7   public class TargetDefinitionContentPage extends TargetDefinitionPage {
 
 		fWSChoices = new TreeSet<>();
 		String[] ws = Platform.knownWSValues();
-		for (String wsValue : ws) {
-			fWSChoices.add(wsValue);
-		}
+		Collections.addAll(fWSChoices, ws);
 		pref = node.get(ICoreConstants.WS_EXTRA, EMPTY_STRING);
 		if (!EMPTY_STRING.equals(pref)) {
 			addExtraChoices(fWSChoices, pref);
位置:  -409,9 +405,7   public class TargetDefinitionContentPage extends TargetDefinitionPage {
 
 		fArchChoices = new TreeSet<>();
 		String[] arch = Platform.knownOSArchValues();
-		for (String archValue : arch) {
-			fArchChoices.add(archValue);
-		}
+		Collections.addAll(fArchChoices, arch);
 		pref = node.get(ICoreConstants.ARCH_EXTRA, EMPTY_STRING);
 		if (!EMPTY_STRING.equals(pref)) {
 			addExtraChoices(fArchChoices, pref);
位置:  -419,9 +413,7   public class TargetDefinitionContentPage extends TargetDefinitionPage {
 
 		fNLChoices = new TreeSet<>();
 		String[] nl = LocaleUtil.getLocales();
-		for (String localeValue : nl) {
-			fNLChoices.add(localeValue);
-		}
+		Collections.addAll(fNLChoices, nl);
 		pref = node.get(ICoreConstants.NL_EXTRA, EMPTY_STRING);
 		if (!EMPTY_STRING.equals(pref)) {
 			addExtraChoices(fNLChoices, pref);

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/OrganizeManifest.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/internal/ui/wizards/tools/OrganizeManifest.java
位置:  -220,8 +220,7   public class OrganizeManifest implements IOrganizeManifestsSettings {
 				ArrayList<String> usedkeys = new ArrayList<>();
 				findTranslatedStrings(project, modelBase, bundle, usedkeys);
 
-				for (int i = 0; i < usedkeys.size(); i++)
-					allKeys.remove(usedkeys.get(i));
+				allKeys.removeAll(usedkeys);
 
 				if (allKeys.isEmpty())
 					return;

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/EclipseApplicationLaunchConfiguration.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/EclipseApplicationLaunchConfiguration.java
位置:  -120,9 +120,7   public class EclipseApplicationLaunchConfiguration extends AbstractPDELaunchConf
 			programArgs.add(
 
 		String[] args = super.getProgramArguments(configuration);
-		for (String arg : args) {
-			programArgs.add(arg);
-		}
+		Collections.addAll(programArgs, args);
 
 		if (!programArgs.contains(
 			if (TargetPlatformHelper.getTargetVersion() >= 3.1) {

原文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/EquinoxLaunchConfiguration.java 
新文件: ui/org.eclipse.pde.ui/src/org/eclipse/pde/ui/launcher/EquinoxLaunchConfiguration.java
位置:  -61,9 +61,7   public class EquinoxLaunchConfiguration extends AbstractPDELaunchConfiguration {
 		programArgs.add(
 
 		String[] args = super.getProgramArguments(configuration);
-		for (String arg : args) {
-			programArgs.add(arg);
-		}
+		Collections.addAll(programArgs, args);
 		return programArgs.toArray(new String[programArgs.size()]);
 	}
 

---------------------------170---------------------------
需求名称: 4.13 update of org.eclipse.pde.ua.ui
创建时间: 2019-06-20	15:46:01
修改时间: 2019-06-20	16:37:46

原文件: ui/org.eclipse.pde.ua.ui/META-INF/MANIFEST.MF 
新文件: ui/org.eclipse.pde.ua.ui/META-INF/MANIFEST.MF
位置:  -2,7 +2,7   Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: %pluginName
 Bundle-SymbolicName: org.eclipse.pde.ua.ui;singleton:=true
-Bundle-Version: 1.1.500.qualifier
+Bundle-Version: 1.1.600.qualifier
 Bundle-Activator: org.eclipse.pde.internal.ua.ui.PDEUserAssistanceUIPlugin
 Require-Bundle: org.eclipse.ui;bundle-version=
  org.eclipse.core.runtime;bundle-version=

原文件: ua/org.eclipse.pde.ua.ui/pom.xml 
新文件: ua/org.eclipse.pde.ua.ui/pom.xml
位置:  -20,7 +20,7  
   </parent>
   <groupId>org.eclipse.pde</groupId>
   <artifactId>org.eclipse.pde.ua.ui</artifactId>
-  <version>1.1.500-SNAPSHOT</version>
+  <version>1.1.600-SNAPSHOT</version>
   <packaging>eclipse-plugin</packaging>
 
   <properties>

